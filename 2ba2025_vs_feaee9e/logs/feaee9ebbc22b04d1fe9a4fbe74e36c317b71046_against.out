cset: moving following pidspec: 19663
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.967490798 seconds)
loading group "string"... done (took 0.572447487 seconds)
loading group "linalg"... done (took 9.355718052 seconds)
loading group "parallel"... done (took 0.17896543 seconds)
loading group "find"... done (took 1.4247126 seconds)
loading group "tuple"... done (took 2.247822651 seconds)
loading group "dates"... done (took 1.425298211 seconds)
loading group "micro"... done (took 0.23831558 seconds)
loading group "io"... done (took 0.656728735 seconds)
loading group "scalar"... done (took 45.216090451 seconds)
loading group "sparse"... done (took 13.793915525 seconds)
loading group "broadcast"... done (took 1.214587567 seconds)
loading group "union"... done (took 15.604807468 seconds)
loading group "simd"... done (took 5.223045716 seconds)
loading group "random"... done (took 10.742385938 seconds)
loading group "problem"... done (took 2.322407891 seconds)
loading group "array"... done (took 27.139690403 seconds)
loading group "misc"... done (took 1.267197516 seconds)
loading group "sort"... done (took 3.986133296 seconds)
loading group "collection"... done (took 24.181560597 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.738452349 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.155423029 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.175076842 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.223437773 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.237571575 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.159198936 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.18598308 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.62652915 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.124334254 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.261771204 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.169254993 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.689765416 seconds)
done (took 6.494926259 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.264532735 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088610132 seconds)
    (2/2) benchmarking "String"...
    done (took 0.155122406 seconds)
  done (took 0.906835665 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.090730788 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.219295386 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.121650562 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.136504073 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.137381793 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.121772468 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.136783132 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.137389258 seconds)
  done (took 1.676344846 seconds)
done (took 3.610013079 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.960343279 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.869894004 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.58459399 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.151671045 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.193364854 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.169936635 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.387967328 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.177714317 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.135840974 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.137732009 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.209316635 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.4024851 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.591225825 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.109512985 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.118741813 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.145648552 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.099930107 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.724341547 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.102540637 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.14304593 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.643280933 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.134775794 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.134261429 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.141706027 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.224671373 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138740356 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.205158949 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.134524998 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.689021686 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.120831881 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.20926482 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.116652972 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.182478076 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.300970491 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.098828475 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.12521796 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.690621617 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.213040987 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.136053893 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.112188992 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.690359196 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.098945391 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.228537287 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.136014247 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.135376175 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.211906125 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.122801403 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.114166288 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.122927985 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.107523344 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.188745069 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.547215632 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.123028544 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.165184554 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110666889 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.750161025 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.117553139 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.174740126 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.144470333 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.126964704 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.117024607 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.118279772 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.198281632 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.122214484 seconds)
  done (took 21.85668536 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145736194 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.169773907 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.110089915 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.163349659 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.172261694 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095975462 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.118961329 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09430335 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.152475161 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.22104327 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.167784643 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.172633605 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091628667 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.112005516 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.122488394 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.276655249 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.145484281 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.129150361 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.114386025 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.111612621 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.163966346 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115967611 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.130751024 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.133159735 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.192070409 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220593828 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.126215678 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.139790647 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.110653666 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.123218847 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.158975494 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.185623367 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091740794 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.110109359 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.216597382 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122001231 seconds)
  done (took 5.90774046 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.190937504 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.244975883 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.136304549 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.248222776 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.23353361 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.185308628 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.216810515 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.143161455 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.318178321 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.258753638 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.203839174 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14895257 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115762265 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112264579 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098003276 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093782069 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.296768188 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.208743274 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.191848327 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.152364798 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109335605 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.113979138 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.777723215 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105148711 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.116308646 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.122377102 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088627222 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.221879343 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123260426 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.590881044 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.137599744 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.115656564 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.151514603 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.232148837 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.138008149 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.17120373 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105942748 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.118692841 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.100086381 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.287614759 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.099342969 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.134050421 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.093032117 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.147837165 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148597162 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138897504 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.121244679 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139637778 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.277961824 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.119501595 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128157762 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.343282667 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.236190514 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.115800239 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.115670179 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.421629815 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.119744888 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.128122426 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.100995648 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.362997337 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.15061429 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.119541975 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.093995661 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.125242712 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094097681 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.810460028 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133920305 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.213104386 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.111965307 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.206335864 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118682585 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.115051813 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.118930266 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104897345 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.139010724 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100155041 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.114279147 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09531683 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096456608 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.112648636 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.103121516 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.1364282 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.118814767 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094651116 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.179849887 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.126314775 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.138554497 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140972345 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.104594827 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095721302 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.146400552 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113488608 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.102272502 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.175380651 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.12652242 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.119176935 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120946752 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.158348911 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098594534 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.217963754 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.113798129 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127204128 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.118394695 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144490755 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.146827185 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09532211 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.118889892 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09281623 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.115385006 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164555294 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.114451309 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.095944877 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.119218066 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.116574645 seconds)
  done (took 28.529977699 seconds)
done (took 56.958312086 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.460642792 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.141303044 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.141881868 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.140568412 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.141147414 seconds)
  done (took 1.77458703 seconds)
done (took 2.492370802 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.428897035 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.256985568 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.122119943 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.246009122 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109169451 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.255876056 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.216034966 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.124333885 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.276216451 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.102740523 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.24116607 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10389787 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.125844193 seconds)
  done (took 3.358041537 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.112721092 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.141818617 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097406645 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11020451 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.107861004 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110034434 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.126684392 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.133914392 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.126537983 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101941443 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.109290123 seconds)
  done (took 1.986767252 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.109716092 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115279142 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.113554293 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108155992 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.107571184 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10775302 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.124498312 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120135563 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.126875051 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103962866 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107777441 seconds)
  done (took 1.95739123 seconds)
done (took 8.007997805 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.248663764 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.178290685 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.12345787 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.197745732 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.408126578 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.232372329 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.663497455 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.139426362 seconds)
  done (took 13.144945649 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.133253249 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.115859085 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.116938415 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.114226658 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09995086 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.117173787 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.098245752 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.115732045 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098615774 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.111480306 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10081771 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09715226 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.114638994 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096148808 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.116649273 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099419338 seconds)
  done (took 2.526729779 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140127716 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.139166223 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.123872731 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.113404371 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.120693925 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102501402 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.125327634 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.106739905 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.118843535 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.118919374 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.113953589 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.129526907 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.111276746 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.117713868 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106603981 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.131858499 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.101200705 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.123757691 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107489781 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.124030095 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.129771488 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.104427466 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.129222332 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.112825188 seconds)
  done (took 3.689177206 seconds)
done (took 20.071913884 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.206954002 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104138194 seconds)
  done (took 1.026664253 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.120762339 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.139346548 seconds)
  done (took 0.982942981 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.13141862 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.111955502 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.162282144 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118448894 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.114171766 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096381362 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.154158373 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.114800437 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097137921 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.114490502 seconds)
  done (took 1.937295502 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.102821231 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103266991 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.124711593 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.139356606 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111778432 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.116704494 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.103089674 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.119923296 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103928262 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.112831143 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.107061674 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.139051037 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.12210778 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127025861 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.121423558 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.121546065 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110041003 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.119987845 seconds)
  done (took 2.827840733 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.095807471 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09810652 seconds)
  done (took 0.916673875 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.10069859 seconds)
    (2/7) benchmarking "second"...
    done (took 0.111028962 seconds)
    (3/7) benchmarking "month"...
    done (took 0.100311976 seconds)
    (4/7) benchmarking "year"...
    done (took 0.115733386 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095329828 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.11119278 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095747478 seconds)
  done (took 1.453867918 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.607070025 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.276692384 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.408104627 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.141851898 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.18263536 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.44330771 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.182678772 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.137975052 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.137958231 seconds)
  done (took 3.292806427 seconds)
done (took 13.160269108 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.10927746 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.159543991 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.624048106 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.133608016 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093724033 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.17606613 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.333263335 seconds)
done (took 2.356986258 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.407920854 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.14132997 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.100212545 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094050878 seconds)
  done (took 1.4673288 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.096527772 seconds)
    (2/2) benchmarking "read"...
    done (took 0.105364639 seconds)
  done (took 0.932776674 seconds)
done (took 3.129257264 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214541418 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.150462833 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.093721246 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.108953528 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.093910894 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.090156133 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.109191694 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090496111 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.111929105 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094406265 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.092785737 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.1103152 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092963202 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.107555292 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091435982 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091168337 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110136014 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.0904015 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10786674 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093432875 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091360451 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110716274 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090830748 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.107718787 seconds)
  done (took 3.317757155 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.12183153 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.113120986 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102044034 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.119112725 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100110353 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.119051121 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101498633 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.111848252 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.101685872 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.11440611 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099367471 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.116478692 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097382796 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.117239961 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097387397 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.117573323 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.118825725 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096144087 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096852935 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.117324189 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.11884876 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095866655 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.11684854 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102307594 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.11727631 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099839076 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.114116744 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.095866775 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118934737 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100170804 seconds)
  done (took 3.989683123 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.105594684 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090086369 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.109710874 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.106055122 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.108656192 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095884743 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.109626713 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092825935 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091974634 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.109146572 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.093437904 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.10853288 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.092093245 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110128843 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093958536 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099629563 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.137631885 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091827526 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.109153612 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09269742 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.116397815 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091096747 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.111787509 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.091576753 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091721643 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.109613515 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09243776 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108413749 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092678271 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091606464 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.11669019 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099824173 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.109065486 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.110287012 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.118269856 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091046233 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.120911145 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.09106379 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.109609729 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091600725 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.090848994 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.108891856 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.09199971 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.123935983 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095479306 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092808246 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.109899593 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094041078 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.110696152 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096766282 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.10811437 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.092487211 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094664885 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.111745039 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098926601 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.109000614 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093058603 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.108824758 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094028781 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.0913744 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.109249661 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090814272 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.118112662 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093088893 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.144318922 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.106647493 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.109010622 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.093591211 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.113667667 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.1047441 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.111915365 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.117968711 seconds)
  done (took 8.175435465 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099728702 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.122967762 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.095985168 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094066612 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109049819 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09242858 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118617915 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092216481 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112214785 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113591506 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110464544 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094217333 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112037299 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09862503 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109931964 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094938974 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122652987 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091035462 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092165188 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114670895 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093206403 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118330902 seconds)
  done (took 3.044185884 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.288099924 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.122115783 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.176756315 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115802066 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.139073162 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.133059548 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101787987 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.121709944 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102834319 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.126054828 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10821738 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120286631 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.139845859 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10797966 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125322256 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108854519 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119001341 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.12622517 seconds)
  done (took 3.122662439 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.113269294 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.114413826 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.124655446 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.114050044 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.096501898 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.116267909 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104783537 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.132481035 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.099290769 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.114640458 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.109550631 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116583584 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098755256 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113394096 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098932878 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113683625 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099349091 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114160115 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109410457 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122798077 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105043272 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127501681 seconds)
  done (took 3.20079772 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11708428 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115774468 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123113593 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123788413 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090833568 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.111742977 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106434467 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.114168878 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107094832 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.115522892 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09699421 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.110963444 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.106701217 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114035893 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105604565 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113553797 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098388644 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113784956 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100048913 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.109337586 seconds)
  done (took 2.940105244 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.149766106 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134862811 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.116712396 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.149138815 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134718767 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.117377911 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.148580292 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11696555 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134220817 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136617133 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.134388544 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.133857665 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131310999 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.143748903 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116323443 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.147563377 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.147796834 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13026821 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.134639963 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11659795 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15492475 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135066666 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131534604 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.133596399 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.116124647 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135073127 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115681832 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.143827482 seconds)
  done (took 4.484190404 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095765001 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094129134 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.110623422 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09232446 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.110266266 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092917449 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091595214 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110531593 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094113665 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109004821 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.09550977 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094172975 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112661568 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.094819795 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112463557 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095444737 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095065245 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110455124 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092284211 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110098797 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095013809 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112364422 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094862388 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092249198 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110069517 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095120216 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110376061 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092415707 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094368548 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110308687 seconds)
  done (took 3.769968094 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.108648063 seconds)
    (2/2) benchmarking "in"...
    done (took 0.122117299 seconds)
  done (took 0.977100291 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.094490315 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.13427609 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.093448774 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.098749301 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.122811991 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096563048 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.127936112 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121649692 seconds)
  done (took 1.638755955 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.126607196 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.138075584 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.103117154 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.13150636 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.118293098 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.136669891 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.204947476 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103775997 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.123609234 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098855265 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.138190606 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.097245212 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.126357802 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106083292 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.126559711 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118079868 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.111574841 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10900194 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.123161992 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100266413 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103456722 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.139219586 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1307873 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.108073465 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.118833373 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113436377 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.136353033 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.111012265 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.123216197 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.116257439 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.124204929 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.088851384 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.119705016 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102753546 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.111591486 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.117254578 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.140780202 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104599733 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.126989653 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103516351 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127597985 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09093546 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.130813121 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105498759 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.131811232 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103218349 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.121200054 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092362364 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097992368 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.120311104 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092307348 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.12017286 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090517141 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.12885373 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.112353325 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145171181 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.10022938 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.122067055 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.102989137 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.11964617 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.106578807 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.121869599 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11165811 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.118620473 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110333168 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.127736414 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108894202 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.111107583 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.089569001 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.11355206 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.11246819 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.147298082 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.115598245 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.12195849 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103780514 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.113346065 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105245539 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122425724 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109002638 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.13271167 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102390438 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124588333 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111588116 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.120581732 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.10216126 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.124292736 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099293861 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.11924903 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097931226 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.149554521 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099761914 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.112861801 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098653739 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.132765613 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102868442 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.118560307 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098445943 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.127525619 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090063944 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103001667 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.122801379 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106271273 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.1378867 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121759261 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104533667 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.128485036 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.110416904 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.122253356 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104096299 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09325764 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.12272695 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098549999 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.126451354 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090463215 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.122478236 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104467037 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.122100004 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.116047132 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.117072056 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102181179 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.130160312 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.115153734 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.117568985 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093026038 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.121557852 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102795277 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.126324068 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.115976315 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.11785805 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093202698 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.091334033 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.129376729 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10195955 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.127103973 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103650891 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.124562077 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090755041 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.113968929 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103525366 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.135097126 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102176493 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.125534368 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112386164 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.126097118 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099584853 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.130938743 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.100714977 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.116291295 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.112505524 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.123078023 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.091968564 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.127564664 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103048914 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.118427107 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103343155 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.12673432 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103775043 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.121708559 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100791603 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.121944494 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104513651 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.115235788 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105768367 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.0990963 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.136716224 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.122339723 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.092967593 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093268434 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.124558568 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098661428 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.119762909 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098197032 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.121959618 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104161075 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.122375527 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101055447 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.119152578 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119081253 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.130443574 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104289264 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.12585728 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11310222 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.11961329 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106586401 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.118932544 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105065728 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.121229851 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112104388 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.12420884 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104815006 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10238696 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.112335521 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106362205 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.128846352 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.09797378 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.114003323 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.098237803 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.120827474 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.115735465 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.120978756 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104386706 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117133298 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107566121 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126944638 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103922823 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.119495893 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097640827 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.102777713 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.128238436 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.104588551 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123385157 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114466049 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.124727302 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092136234 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126868223 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098787733 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.127177953 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.093087028 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.118421331 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098617951 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.122191739 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103046069 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.120343092 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.091149626 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110431288 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131201382 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10377702 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.117562679 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102315359 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.137133437 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101904362 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.127670849 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103242164 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.128949112 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.145913961 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099369173 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.121405666 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.119044602 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.120659629 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.091267025 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107466553 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.118774686 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097093303 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.11882045 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099844412 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.123722213 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106957492 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.125869185 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.092033713 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.121360816 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101108979 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098556941 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.112193182 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113972976 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.124652531 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104968088 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.138422942 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122829817 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104273408 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106326785 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.121724336 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104014163 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.122911391 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104943397 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.123435833 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.101075838 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.117905406 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105751218 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.117236522 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095577262 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.119983285 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.104166826 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.123356188 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107531409 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.119175326 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114381601 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.123079447 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104798326 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.164695495 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.099799093 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.117293611 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105953218 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.127242465 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104057302 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.122704635 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093773096 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.130214312 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103029554 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.131574117 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.10326295 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.112456501 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105610358 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.121804148 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105507905 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104418159 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.124825352 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101686361 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.121045594 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104808096 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.138236192 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099864962 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.135401675 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108948647 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.128063369 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104152853 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.124896521 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102458255 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.118178032 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105940955 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.124080662 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105822275 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.121145779 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108419213 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.124659997 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10345932 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.120086083 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104936396 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.124644001 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106901876 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.110574072 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100199806 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098916936 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.122989509 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112500985 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.124651473 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.101835746 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.120771964 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105424956 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.119982821 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094078259 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.129097592 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108461967 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.123051327 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119704731 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.11800253 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.107136306 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.140949164 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.092054037 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.119297897 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097234096 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099358185 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.132233858 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104981364 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.132666575 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106558182 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.119328511 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095398555 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.124044187 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101254645 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.110483417 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097122793 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.128458261 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.101405418 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100876645 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.123667658 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108126667 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.125618799 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111927124 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.121183771 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.106159467 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.124689628 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095323203 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.118706224 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099607435 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.123616458 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105174554 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.118394041 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09618612 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101724754 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.125682007 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105202824 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.121868901 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102785672 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.131989288 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102417542 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.124279447 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110024106 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.111415371 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105271005 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.121965184 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103471267 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.11786509 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107923701 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125066141 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106543966 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.131841294 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104033212 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.127492577 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10443974 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095920796 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.122808441 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103058688 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.123117123 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.099512616 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.125664359 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114482275 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.116079384 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107749477 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.126013744 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101930754 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.126550378 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10656424 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.126613062 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110191637 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.124536377 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105873562 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.128846652 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104002619 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.125369609 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106057958 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.122090266 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111820459 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.117789342 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.117036617 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.125055205 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105583661 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.121785928 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100630364 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102929443 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.122778778 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10133053 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.13414015 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104788248 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.119754589 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099452274 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.115263509 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10712077 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.128587874 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112290938 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.124492742 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107326261 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.112133412 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.095866614 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124333188 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100527086 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103011494 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.128118081 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110442144 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.125451087 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.100504607 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.121572888 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112658002 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.130564016 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109888717 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.120009403 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109046471 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.12563494 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105375337 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.121371001 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104742919 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125165569 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108907762 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.123148547 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100166085 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.138566135 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.113533962 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124781759 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102845891 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.127933665 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104448936 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.11335683 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105676603 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.124166155 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110790831 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.124250975 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103312124 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.141191156 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.09857218 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.122207462 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110583556 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121894988 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.116581025 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.112732897 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106031579 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124577844 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106771374 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.093191149 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.119833656 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100257689 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.125288946 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100097016 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.113464882 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12160725 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.132467899 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107654264 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121428693 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101705499 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.113435592 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095348023 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.119115174 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106780515 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102897714 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.13853547 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.117994791 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100503099 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.093680401 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123084474 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106767524 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.128817087 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095849733 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.113666395 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100309539 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.127605155 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.117970947 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120800045 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104638891 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.126473165 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106964288 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.097075756 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.13064793 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095264021 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.128256865 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.141803215 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10627576 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.127447015 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.112750561 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.13319839 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106592717 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.113407193 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106835515 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107408129 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.126324895 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105353391 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.12679509 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.151200175 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108458217 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.11906742 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103866945 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106773002 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.121240058 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.118468018 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.127291626 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105332965 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.128142475 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.103346184 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128047224 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114102734 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.129968225 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108580991 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.128488599 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101701582 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.126035659 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101905315 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.122989079 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107586384 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.126227709 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104124147 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.128139944 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101147649 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.142847983 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117718431 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.126228617 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096356577 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.119185662 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102265253 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.093959515 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.126185881 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.097888292 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.121854224 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101548416 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.121811303 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.110886485 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.127637431 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107821166 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.125642532 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105065788 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.092325252 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.131594514 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10567145 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.130434164 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.095590312 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.124035027 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10686807 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.133804762 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111647968 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.122601075 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106832789 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.124388506 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11007638 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.114929039 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109582146 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121974558 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105158782 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.120070456 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105960679 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.125461471 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10897501 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105541513 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.129090632 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106309972 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.131653365 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108270138 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.117313839 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.09653334 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.130158351 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098397523 seconds)
  done (took 68.795721969 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.187419982 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10270477 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094037337 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114304018 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.151184366 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096595161 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11305221 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097559823 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.096092893 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.136379297 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112508471 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095335465 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.144995746 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.155297521 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130861316 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.136286249 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093807545 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116894004 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094454959 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115919113 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.143111741 seconds)
  done (took 3.32778335 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.127439808 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.13818956 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.136658805 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123904108 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.129346925 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118032586 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.137384044 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137854042 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.143235687 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112251691 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.142991532 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.13718636 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.111639997 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.131348537 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110899229 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.133582993 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.143295878 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110079796 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.139028244 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.136143828 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114601543 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.136231016 seconds)
  done (took 3.645946111 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.109841031 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103007068 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.131161896 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.096284872 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.123073409 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096309262 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.129036853 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099874903 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.130133906 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.10634734 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.121152505 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.105455685 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110110032 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117151355 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.102776779 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.118935627 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111614092 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.122947521 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107084515 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.115703997 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.148712338 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.118105928 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098128057 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.121172151 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.114605811 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.124743456 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.104666589 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.122133761 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.101825833 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103253427 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.118743677 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.108669153 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.132062982 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.102414272 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.12205491 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103875649 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.122689459 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.098309227 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099984204 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.13256365 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.098604798 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.125839566 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.115975054 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.121911609 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.099412182 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.12815909 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104237349 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.116701587 seconds)
  done (took 6.265689386 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.134143905 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.170610143 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.125056654 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.166562359 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.143181281 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.116640056 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.12538117 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.165620809 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098582648 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.120104111 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125711449 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.143736603 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121234005 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108854745 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.128321788 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101147676 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.123721756 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100342957 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.13146952 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103443872 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.131181735 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.127773599 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.123348307 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.140900718 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128672481 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10089726 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.118802551 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108561683 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.138954711 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111856048 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.129591994 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128578838 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124887148 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.127629583 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102971894 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124494959 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.143833456 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103022297 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124888232 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098646449 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.123475277 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108502008 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.128770584 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.145184179 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106299357 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.127270731 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102564701 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.115724007 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122026628 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124829826 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116449236 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.143442233 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126233425 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102630143 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128939905 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.143891416 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102321146 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.117720637 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107013771 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.139372365 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098217642 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.13074563 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.142146776 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105110227 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.135579306 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.123605653 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.128398597 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.128726608 seconds)
  done (took 9.388571116 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125215453 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.15002667 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127422116 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.149617288 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132575848 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113014281 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.133347357 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.112455259 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.133642884 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.140386617 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113372402 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.196960879 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123359764 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121517406 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133710383 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112841713 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134661097 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112025135 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.134632387 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133118984 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113770236 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.147942593 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112868542 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.148039963 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.152012249 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103269695 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.133623676 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132228719 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127879293 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133010644 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152982167 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113474572 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.132853844 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.147135983 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.133160795 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.133072557 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101507903 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133385668 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.113312219 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.134418765 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103370076 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.148277646 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.132372954 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104348167 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.133201264 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112566212 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.147833572 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.152349558 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.140783427 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.122686226 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.132817431 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.147813739 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114575988 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.132669197 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127915526 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.158370046 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.148309697 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.148232996 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113114278 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.147494076 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.146914531 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.158454014 seconds)
  done (took 9.019618873 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10143996 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099957758 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118182759 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.098221841 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120893894 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099031839 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.101040514 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121211347 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100789998 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.11995294 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100886043 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097650426 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118400723 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100900125 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118161667 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099290787 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09678134 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119402907 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10271879 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.118440681 seconds)
  done (took 2.967522027 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111540629 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.147677483 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.102572996 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.132868542 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.105352336 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.13296086 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103748025 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126275151 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103587967 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125125644 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11922308 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.138858252 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121677498 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11411278 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.137533152 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112265206 seconds)
  done (took 2.749812658 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.128756978 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.141104653 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.152055667 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.109052516 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.098353653 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.133282265 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100672762 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.119854883 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.096150421 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.132926764 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.108679028 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.134693638 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101718527 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.120483694 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103022391 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.128707929 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098032586 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127951778 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102692173 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.152209949 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109351109 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.125657779 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104027052 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.126389857 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105158072 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129938504 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.11052366 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.119847993 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.101171851 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.123203802 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105619247 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.133334412 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.098622456 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.12918679 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100489523 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.119263983 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102200111 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.12353402 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10969127 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.121497158 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102565692 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125167404 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10291296 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.124154553 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.09873355 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.101576858 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.118911106 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.109681001 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.124426673 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106091264 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.122767561 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110956595 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.131658666 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116404426 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.136185175 seconds)
  done (took 7.241850881 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.120009923 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.126281077 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.110554318 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.118224855 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105874558 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.129913992 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107257793 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103654659 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.125334785 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097598604 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.125567233 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10624014 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125122135 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105939783 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.125257258 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106477081 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.115989773 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103674608 seconds)
  done (took 2.881438382 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109094746 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10101382 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.13164372 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.100708926 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.123462905 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10486078 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117828376 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.099767372 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119301821 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101904932 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121151948 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104687073 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099616959 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124386466 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101382724 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122135288 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.104767022 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120583918 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102999114 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116252125 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10502439 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098892804 seconds)
  done (took 3.256613903 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.127667819 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.165998295 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.122343359 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.177065352 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.131133595 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.109822338 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.141956425 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.111755142 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.151659329 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.108764389 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.127801157 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.108506936 seconds)
  done (took 2.40995639 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135997079 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172037206 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100285113 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125971122 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118012898 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131527315 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109342102 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132841934 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14486349 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.149714754 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111692378 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145591456 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124456298 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146404149 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139879561 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119403898 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13231666 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130170845 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104513841 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.158126199 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109950276 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146535007 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130213933 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11069735 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130579586 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14391024 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125423645 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150899032 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129646779 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126198641 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140259965 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109260309 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146667016 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.151753863 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105318437 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146048643 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130061053 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.159525472 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121011024 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145312872 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105192309 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140753145 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145026666 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120654541 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146315288 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130433297 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120094258 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131126291 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110721551 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169859538 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13971045 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144277446 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119823328 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145844028 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145215074 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169768981 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130556557 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145819066 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139741528 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.150745811 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125904733 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140464013 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145379711 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129935267 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140445984 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144958997 seconds)
  done (took 9.701668824 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156035994 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122120671 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110771957 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151964758 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146449421 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109930501 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131900199 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130121418 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1118685 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123801172 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190566999 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111612252 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145273431 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144518661 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111478723 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130698039 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112242312 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145024143 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104552397 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168776407 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131226266 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144719704 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126151883 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14669861 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.151553165 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13946369 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111231657 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130444284 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111626305 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131460798 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119852305 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131435171 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145452968 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100945869 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146161599 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110346183 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132343286 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139853042 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112020063 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139907951 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145580012 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138359895 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132076959 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109290402 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151033936 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131783813 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110201234 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125657484 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109715109 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126307278 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153159421 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13077274 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.152677596 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146455415 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131120494 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111188073 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131858934 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111461613 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130764128 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119408694 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146193881 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130947823 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170758751 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112113879 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131197136 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12465567 seconds)
  done (took 9.508727285 seconds)
done (took 180.552212772 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.125227559 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.167592503 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.119009322 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.188183937 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.102104044 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.15949176 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137964539 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.140231321 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.102534951 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.100801362 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.124562897 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.107571575 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.191296773 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101542645 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.122580085 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107821932 seconds)
  done (took 2.927504959 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.220558969 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.335935655 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.13013635 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.133085498 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.11130685 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.128529492 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.110846677 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.131435945 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.105538008 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.144195332 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107003523 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.128646261 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.122537864 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.127960827 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.104878386 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.128304885 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.122569796 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.127934737 seconds)
  done (took 3.358836837 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.144978981 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.177092962 seconds)
  done (took 1.156389503 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.148261641 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.228059053 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.356290934 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.176754362 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.161275116 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.160307962 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.198349282 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.126804728 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.233499557 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.157715642 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.157091586 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.111977869 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.166411024 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.140824973 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.118413329 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.132432663 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145241563 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.135883359 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112115454 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.135686421 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140306397 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.136184139 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.14036767 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115445208 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.222315147 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.157477294 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.113922505 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.136481957 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114363669 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.133924847 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.143148546 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138556714 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.157185256 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.219440426 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.141866588 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.216746455 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.145083595 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11263294 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.134876317 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111581905 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.139785379 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.138438274 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134351866 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.132705675 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114758501 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.145674263 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114368853 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.136173429 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.123807515 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.148843565 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.145649671 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.122832443 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.23804696 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126663105 seconds)
  done (took 9.028514749 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.971482792 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.186890334 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10950009 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.138006859 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.15208407 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152082097 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.209762689 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.1407817 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.317147063 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.953120585 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.15460035 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123268746 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.310565347 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.301357808 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.226122124 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.416644424 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.81644467 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.149039981 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.141868708 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.19281192 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142957076 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.168355697 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.136778593 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.492147612 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.134385399 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107572783 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.142109545 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.144222043 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.211317343 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108103873 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.135495163 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.236027775 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.314886172 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.269320087 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111070694 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.129343735 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106706937 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.217811008 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.34082749 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.28526165 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.213967681 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104408602 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.129625428 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125875544 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.160083981 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103522987 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.236895145 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.224392252 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.22534097 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.135545527 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122116067 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.14341416 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.145876889 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.212936545 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104306262 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.413785248 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.418243748 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106358839 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143898968 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.152854584 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.3120319 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.130090303 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.29959409 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143750358 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.280852167 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.105881921 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.875883618 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.216069849 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.129175776 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118815163 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.142142328 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115955665 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.147854554 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.207358559 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.464211544 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.150466291 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113845105 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129172339 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.266703822 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.128406144 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107658389 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.213634352 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134124373 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120777419 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.151338947 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.148230113 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.222793475 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.30092461 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.149083441 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121334477 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.137917632 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146687653 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.112345719 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.262950161 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.297459009 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.208092777 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.264850225 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.149688841 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.215416918 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.236690411 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12360307 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.220036022 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.142525119 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.15169759 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125877134 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.292234204 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.179942427 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.1075342 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.138181674 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140332523 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.182522681 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.11158942 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.145411909 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.218424232 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.537449108 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.21481644 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.126150975 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111332062 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144474596 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.213792986 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139359108 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.307938091 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145796592 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.218849357 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.142166053 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.105352754 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.142824326 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.216910413 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.148098917 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121974341 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.148816785 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11859634 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.32377225 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.266277757 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.150013827 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.305283514 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.194321023 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.142901986 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.224339687 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.145105108 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.220181702 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.143993921 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124727428 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135839204 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.870159326 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126599733 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.143780366 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115035828 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.230487444 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129989502 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108762888 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.129393569 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105002474 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.888163738 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.111050564 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.126562431 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.110739883 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.141572447 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120388151 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140936163 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115047598 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.211126551 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.31166315 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.146356763 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.141049198 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.1083203 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.211187115 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.134286213 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108882736 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.129036673 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108808937 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.143310462 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115248956 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.130349556 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.22465138 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.20968285 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.298926242 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.616514056 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.131466786 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107848978 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.309611329 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107043115 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.383305685 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143828868 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.303700793 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.220364736 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104945667 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.416038975 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.221110235 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.231365683 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.133451908 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.223980394 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.104508449 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.142504832 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.212407282 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.129464914 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120154456 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.208162042 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.154114348 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.150511324 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.209067026 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.130572156 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.281685181 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.126171523 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.221835763 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112742474 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147126323 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.384635327 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108657949 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.157487942 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.212867227 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136275787 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.109546721 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.077438382 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.13121792 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12303028 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.144594966 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.303097057 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.217123288 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.143647352 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120591276 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.147498674 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.214411585 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.262821636 seconds)
  done (took 53.260989553 seconds)
done (took 70.567785209 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.411293516 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.345166914 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.379141178 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.258894233 seconds)
  done (took 2.346225977 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.22614751 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.194224642 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.156680806 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.129556199 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.190919076 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.108205819 seconds)
  done (took 1.865022146 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.682323636 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.549205052 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.442481419 seconds)
  done (took 2.537445181 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.307939809 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.332544722 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.381869325 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.58016378 seconds)
  done (took 2.585122154 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.256006799 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.128140068 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.143995828 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.163586782 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.19017744 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.279268987 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.174470856 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.205588787 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.136270903 seconds)
  done (took 2.594755363 seconds)
done (took 12.792635376 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.244071649 seconds)
    (2/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.313362675 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.262710927 seconds)
    (4/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.132218034 seconds)
    (5/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.323821753 seconds)
    (6/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.218028396 seconds)
    (7/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.313407127 seconds)
    (8/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.262874705 seconds)
    (9/286) benchmarking ("sort", Float32, true)...
    done (took 0.272754794 seconds)
    (10/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.313405699 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.130544598 seconds)
    (12/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.148681289 seconds)
    (13/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.183438047 seconds)
    (14/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.133156057 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.171958835 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.125180283 seconds)
    (17/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.146291874 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115742372 seconds)
    (19/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.134758133 seconds)
    (20/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.152314094 seconds)
    (21/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.209647038 seconds)
    (22/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.154808911 seconds)
    (23/286) benchmarking ("sort", Int8, false)...
    done (took 0.257061853 seconds)
    (24/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.21160993 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.13983423 seconds)
    (26/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.247403558 seconds)
    (27/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.305005364 seconds)
    (28/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.230880997 seconds)
    (29/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.139873922 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.175450682 seconds)
    (31/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.286519076 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.117282612 seconds)
    (33/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.161791237 seconds)
    (34/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.157302799 seconds)
    (35/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.150691485 seconds)
    (36/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.219546173 seconds)
    (37/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.275150931 seconds)
    (38/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.199018197 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 0.263476536 seconds)
    (40/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.12709653 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.147316721 seconds)
    (42/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.186131859 seconds)
    (43/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.209288683 seconds)
    (44/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.195107985 seconds)
    (45/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.193245324 seconds)
    (46/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.182613999 seconds)
    (47/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.20155477 seconds)
    (48/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.286671059 seconds)
    (49/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.153736871 seconds)
    (50/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.146836358 seconds)
    (51/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.11879637 seconds)
    (52/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.134689593 seconds)
    (53/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.131258558 seconds)
    (54/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.148065007 seconds)
    (55/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.140424974 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.138660962 seconds)
    (57/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.235144524 seconds)
    (58/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.139067674 seconds)
    (59/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.171096585 seconds)
    (60/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114485281 seconds)
    (61/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.139556103 seconds)
    (62/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.17659666 seconds)
    (63/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.230263652 seconds)
    (64/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.111531071 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.134139515 seconds)
    (66/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.131701808 seconds)
    (67/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.118061614 seconds)
    (68/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.12837047 seconds)
    (69/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.091657384 seconds)
    (70/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.188428728 seconds)
    (71/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.159475395 seconds)
    (72/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113902773 seconds)
    (73/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.141099801 seconds)
    (74/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.121912718 seconds)
    (75/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.11303876 seconds)
    (76/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.20077141 seconds)
    (77/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.287369063 seconds)
    (78/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.113525454 seconds)
    (79/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091434353 seconds)
    (80/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.13959077 seconds)
    (81/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.091553975 seconds)
    (82/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.090001129 seconds)
    (83/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.235076626 seconds)
    (84/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.115989743 seconds)
    (85/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.10180754 seconds)
    (86/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.1146536 seconds)
    (87/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.149972531 seconds)
    (88/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.248446668 seconds)
    (89/286) benchmarking ("sort", Int64, false)...
    done (took 0.105310346 seconds)
    (90/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.13951953 seconds)
    (91/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.219207629 seconds)
    (92/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.10655469 seconds)
    (93/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.227667738 seconds)
    (94/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.130186868 seconds)
    (95/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.101427153 seconds)
    (96/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.159733533 seconds)
    (97/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114699269 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.137613811 seconds)
    (99/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107321876 seconds)
    (100/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.241243918 seconds)
    (101/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.089998983 seconds)
    (102/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.235826599 seconds)
    (103/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.089451705 seconds)
    (104/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.148425567 seconds)
    (105/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.091176917 seconds)
    (106/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.176014663 seconds)
    (107/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.163393447 seconds)
    (108/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.114507154 seconds)
    (109/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.137629219 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.150413193 seconds)
    (111/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.182809033 seconds)
    (112/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.235780064 seconds)
    (113/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.176215309 seconds)
    (114/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.092607013 seconds)
    (115/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.147692015 seconds)
    (116/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.151085541 seconds)
    (117/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.252618315 seconds)
    (118/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.147601853 seconds)
    (119/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.09912145 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.1725559 seconds)
    (121/286) benchmarking ("sort", Float64, false)...
    done (took 0.181183468 seconds)
    (122/286) benchmarking ("sort", Float64, true)...
    done (took 0.272295448 seconds)
    (123/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.174308678 seconds)
    (124/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.145032119 seconds)
    (125/286) benchmarking ("sort", BigInt, false)...
    done (took 0.283749921 seconds)
    (126/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.250765083 seconds)
    (127/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.219130736 seconds)
    (128/286) benchmarking ("sort", Int8, true)...
    done (took 0.263378777 seconds)
    (129/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.093904079 seconds)
    (130/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.145875132 seconds)
    (131/286) benchmarking ("sort", Bool, false)...
    done (took 0.247510666 seconds)
    (132/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.122101787 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.139270071 seconds)
    (134/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124273467 seconds)
    (135/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.119413777 seconds)
    (136/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117714347 seconds)
    (137/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.113339227 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114572358 seconds)
    (139/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.146162431 seconds)
    (140/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.129047225 seconds)
    (141/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.140067716 seconds)
    (142/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.134603759 seconds)
    (143/286) benchmarking ("sort", Float32, false)...
    done (took 0.206229669 seconds)
    (144/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.092722485 seconds)
    (145/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.219429677 seconds)
    (146/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.145571748 seconds)
    (147/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.12295595 seconds)
    (148/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.218415933 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.140104621 seconds)
    (150/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.142152417 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.140003685 seconds)
    (152/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.114451941 seconds)
    (153/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187500698 seconds)
    (154/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107267436 seconds)
    (155/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.140659403 seconds)
    (156/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.114731873 seconds)
    (157/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.116156466 seconds)
    (158/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107726719 seconds)
    (159/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.132098891 seconds)
    (160/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.103095139 seconds)
    (161/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.147271241 seconds)
    (162/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.12474809 seconds)
    (163/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.145260798 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.118029235 seconds)
    (165/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.213576901 seconds)
    (166/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128849648 seconds)
    (167/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.14283153 seconds)
    (168/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.22113444 seconds)
    (169/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.093865854 seconds)
    (170/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.135295741 seconds)
    (171/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092956241 seconds)
    (172/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091260192 seconds)
    (173/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.113234883 seconds)
    (174/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.106424119 seconds)
    (175/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.187433 seconds)
    (176/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.136789774 seconds)
    (177/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.150177018 seconds)
    (178/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.219830091 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.117318827 seconds)
    (180/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.114776755 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116514771 seconds)
    (182/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.114608087 seconds)
    (183/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.125606764 seconds)
    (184/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.091320041 seconds)
    (185/286) benchmarking ("sort", BigInt, true)...
    done (took 0.290985611 seconds)
    (186/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.153142619 seconds)
    (187/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.111643148 seconds)
    (188/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.171594801 seconds)
    (189/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.147719298 seconds)
    (190/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.114538893 seconds)
    (191/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.152041587 seconds)
    (192/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.125953521 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 0.264519531 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.13779409 seconds)
    (195/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.120301986 seconds)
    (196/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.178146457 seconds)
    (197/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.09470051 seconds)
    (198/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.141487017 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.126141948 seconds)
    (200/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.144829958 seconds)
    (201/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.108618062 seconds)
    (202/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.121642944 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.117634908 seconds)
    (204/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.114857393 seconds)
    (205/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.119419757 seconds)
    (206/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.134647185 seconds)
    (207/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.099067156 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.149385872 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125704925 seconds)
    (210/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.1403079 seconds)
    (211/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.149578631 seconds)
    (212/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.1210395 seconds)
    (213/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.116202782 seconds)
    (214/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.160007427 seconds)
    (215/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.137884266 seconds)
    (216/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.181611663 seconds)
    (217/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112153343 seconds)
    (218/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.129555228 seconds)
    (219/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092430919 seconds)
    (220/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.135438249 seconds)
    (221/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.131356026 seconds)
    (222/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.096884056 seconds)
    (223/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.13670858 seconds)
    (224/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.11489058 seconds)
    (225/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.216386197 seconds)
    (226/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.115294388 seconds)
    (227/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.112513114 seconds)
    (228/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.113274573 seconds)
    (229/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.091124585 seconds)
    (230/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.091621273 seconds)
    (231/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.138160556 seconds)
    (232/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.09390344 seconds)
    (233/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.149448096 seconds)
    (234/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.091925866 seconds)
    (235/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.114407621 seconds)
    (236/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115579037 seconds)
    (237/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.090505021 seconds)
    (238/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.140611078 seconds)
    (239/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.092231192 seconds)
    (240/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.135805349 seconds)
    (241/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.127308315 seconds)
    (242/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.116011568 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.108765345 seconds)
    (244/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.139536574 seconds)
    (245/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.092661113 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.140570334 seconds)
    (247/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.128039287 seconds)
    (248/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.116650742 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11678874 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.149206474 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.117475858 seconds)
    (252/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.097087472 seconds)
    (253/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.141504805 seconds)
    (254/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.099777663 seconds)
    (255/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.143911712 seconds)
    (256/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.092691894 seconds)
    (257/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.115589635 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.117686324 seconds)
    (259/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.137350762 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118729307 seconds)
    (261/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.139358973 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.10950016 seconds)
    (263/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.135594201 seconds)
    (264/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.092806796 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.13303305 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.126827995 seconds)
    (267/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.139493867 seconds)
    (268/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.116765421 seconds)
    (269/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.153726544 seconds)
    (270/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.094833399 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.136496453 seconds)
    (272/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.093765332 seconds)
    (273/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.10745834 seconds)
    (274/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.116202448 seconds)
    (275/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137719406 seconds)
    (276/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.117687935 seconds)
    (277/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.092568075 seconds)
    (278/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.139985435 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.111692344 seconds)
    (280/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.148801583 seconds)
    (281/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.094516859 seconds)
    (282/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.117438103 seconds)
    (283/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108801292 seconds)
    (284/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.114633555 seconds)
    (285/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.14138493 seconds)
    (286/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.103751874 seconds)
  done (took 44.182475178 seconds)
done (took 45.053614688 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.124460883 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.179952218 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.121509333 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.166517727 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125562111 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.151862716 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.143271811 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.123833225 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.148180124 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127621367 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.151035822 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.10267157 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.144904257 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122065135 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.14607103 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.144241185 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.149542894 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.118344828 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.136700361 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.1138325 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.135739041 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114541469 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.139575604 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.103192338 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.144590729 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120511702 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.140391686 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.122112113 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.137972539 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109530777 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.134863953 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116420768 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.133912323 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124048592 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.137010779 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.113060516 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.145068199 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118835226 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.115126067 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.139093991 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116650764 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.139026617 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115105814 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.14189347 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.113164047 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.136756966 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.113078929 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.150370096 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.166860641 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111737502 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.115817231 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.145129445 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.124686799 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.141068213 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.110905217 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.137164345 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.114422697 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.167598167 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.112170389 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.136356348 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116497074 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.141227712 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.112910232 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.136679129 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.113418164 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.144935096 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.121459243 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.137505011 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.12027777 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.157007736 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.10731599 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.136572107 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.111559596 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.13270402 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.120132395 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.142738438 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.106317815 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.112849634 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.13961862 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.11511109 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.137427405 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109408443 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.139575416 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.114470315 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.132241791 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.10284788 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.133994878 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.114593027 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.136990195 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.11344057 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.137984927 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.115171342 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.116233768 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.145393192 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.137004981 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115926299 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.137490011 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.116033087 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.139913393 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111573197 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105944313 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.133128528 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.116462337 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.133391503 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.113961395 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.148752036 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110658223 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.13943436 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.114677322 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.137052915 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.129313695 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.144122102 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.114877716 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135727573 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.109142883 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.141885745 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112337058 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.134622169 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111405113 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.13822065 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.115229551 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.137645527 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109462932 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.141204312 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125134203 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.107408265 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.136304441 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108591663 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.138871459 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.115722726 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.139480544 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.11030921 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.135334075 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.105881985 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.132439013 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.10996772 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.14145424 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109369226 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.11212814 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.13957336 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112294489 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.138908349 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113960184 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.140302005 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111437819 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.128947635 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111707333 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.132765848 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.117179189 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.138655206 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115143617 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.130734542 seconds)
done (took 20.344007863 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.124476957 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.223151173 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.177103174 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.157230406 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.192191817 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.167831768 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.151905667 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.159453717 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.14942834 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.180684689 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.156488818 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.167118446 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.18092395 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126860809 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.167647285 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.1451721 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.122041984 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.163966183 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.188651369 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.148416563 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.176177063 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.151055623 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149722572 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.179145965 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118852898 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.187735859 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.152407128 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.121927133 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.151488655 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.130856486 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.167439725 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.154309464 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.128078899 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.162353807 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127582949 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.143488185 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.16705365 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.115622272 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.148342666 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.125193842 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.161381853 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134192614 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.143490161 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.160473799 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.122211956 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.151772742 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.121022393 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.145205757 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.122201823 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.137843398 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130464817 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.173581891 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.146618003 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.127595937 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.152313891 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121178432 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.151997219 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.150665681 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128390953 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.151968966 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.124811722 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.151975218 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130827053 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.171540704 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.146238826 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.1273315 seconds)
  done (took 10.814785923 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.143113301 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.183280656 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.128905851 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.154314843 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.153180855 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.106926577 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.131229047 seconds)
  done (took 1.933290572 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.110111932 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.170235679 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.152332102 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.17577457 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.140401246 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.182085893 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.156888234 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.109250083 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164618528 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.124907873 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.168411747 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.20427501 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111032408 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.151399363 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.154324572 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.135692927 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.18118433 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.109333287 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.14431796 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.151810771 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.14214523 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136648255 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.155644681 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11052096 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.161827169 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.111669383 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.222636913 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.153320289 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108945284 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.143854491 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120652392 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.231554158 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.162011215 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124111137 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131475099 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.170516506 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.136523712 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.143581401 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.141676693 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.142770014 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.137084408 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.145597763 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120449196 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.144924765 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120509364 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.151933973 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.126838272 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.149364574 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118221304 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.168957434 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.152141521 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136789514 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.137401057 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115615048 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.150609451 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118400969 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.153917334 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.1189132 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.169161543 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12066326 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.169544781 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.16962521 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.136843205 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.170055385 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134113421 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.161969888 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.160964019 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118502123 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146285986 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122421827 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.170535931 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.117156966 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.150925778 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.127167143 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147569259 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.141404279 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.167210975 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115633755 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.151381464 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115764279 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.140943529 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.109526022 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.153634657 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114843256 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.138840379 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136251074 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.152162793 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.143596809 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.117400813 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.168005474 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117968187 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.15407118 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.128281614 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.142080775 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134574304 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.173236828 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.152325286 seconds)
  done (took 14.911039661 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.11450864 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.111653476 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.143481498 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.112535057 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.136055307 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.112517013 seconds)
  done (took 1.671671517 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.150611718 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.141159299 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.131065175 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.144902439 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.188398876 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.138077216 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.162817361 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124915126 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.161268775 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130033066 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.163488683 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.164512556 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.148964611 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.14566209 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.137477582 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.147374758 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.138363298 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140974605 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129861246 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140398293 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.131289017 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.147925007 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115126731 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.164137592 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.143390053 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122792987 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.144571612 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.131496475 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154997778 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125016128 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.146331694 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119216569 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.147025882 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125132745 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.164049596 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.145911182 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114065224 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.145647693 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122458714 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.143477734 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.140929213 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139996495 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.131150805 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.146133484 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125576127 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.147005831 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120946947 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.145125344 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.137836192 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.145873846 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120682693 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.147304444 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120049829 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.147153128 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121311831 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.149563983 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.14646253 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.139046115 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145488062 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121964603 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.142006888 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119640758 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.150882375 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119300715 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.144518015 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121317372 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.146625089 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115439456 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140255717 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120564282 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.1459117 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.116977712 seconds)
  done (took 10.954622435 seconds)
done (took 41.207375783 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.719815011 seconds)
  done (took 1.662159772 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.991985313 seconds)
  done (took 1.935826219 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.728303882 seconds)
  done (took 18.701760816 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.658591436 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.812436413 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.26165405 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.198234757 seconds)
  done (took 3.872057534 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.021569201 seconds)
  done (took 1.981406269 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.368226334 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.287084505 seconds)
  done (took 1.602344599 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.889229123 seconds)
  done (took 1.846944586 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.717772155 seconds)
  done (took 2.672137431 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.445690896 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.228350789 seconds)
  done (took 1.634347185 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.669123215 seconds)
  done (took 1.622599587 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.899021171 seconds)
  done (took 15.858133038 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.292211992 seconds)
  done (took 1.260652383 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.347849274 seconds)
  done (took 1.305394554 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.774352279 seconds)
  done (took 4.735524611 seconds)
done (took 61.646128986 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.123671475 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126057178 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.1527658 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123114023 seconds)
  done (took 1.480116919 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.132613369 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.14848736 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.128244214 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.147574533 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132425134 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.149167943 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119346843 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.154465463 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121311567 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.150356159 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123188043 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.148348081 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.12479468 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.144968028 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118223599 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.150408872 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127657525 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.149182631 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121522188 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.150512296 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119543513 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.150912802 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.151408219 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122747088 seconds)
  done (took 4.255280946 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.123320557 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.116453234 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.144507165 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.115433582 seconds)
  done (took 1.467505729 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.129748717 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.166469993 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139909578 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.155174071 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.140650535 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.164694758 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115020625 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.141836907 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118851515 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.155073176 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.118334793 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.16853491 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.165639934 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.112924213 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157360791 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.108620196 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.139378235 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.140694188 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.154943667 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.131183509 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.141053991 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128785239 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149783337 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.133561297 seconds)
  done (took 4.347984759 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.223688556 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.161026353 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.1715888 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.125284555 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.20745672 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.17378524 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.114656982 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.174974113 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.116466694 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.169160222 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.12018999 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.208002362 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.169850697 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121362154 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.14532097 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.154217398 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.142718276 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.173649202 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.118702911 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.159853338 seconds)
  done (took 4.123764798 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.127955647 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11503166 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.136777572 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115418753 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.150369438 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.117620914 seconds)
  done (took 1.734931107 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110926479 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.108057044 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.135394641 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.109113881 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.138433634 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.109718379 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.106796613 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.13424105 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.107852457 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.13427888 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.10876518 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.106673159 seconds)
  done (took 2.382760355 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.509210914 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.11434215 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.155151661 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.116582283 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.169193422 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.139122481 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133998599 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.139010577 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.208772437 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.128296049 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.160109871 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.206859811 seconds)
  done (took 3.156121473 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274891993 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121652405 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.348008819 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.493332019 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196116467 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212036989 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.375955153 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209969085 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.242966481 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170055642 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251393558 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196154157 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188605021 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224073936 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148379371 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.220403571 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225070357 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26788081 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186908054 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270206652 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217980009 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213492109 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.235832839 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188244985 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173936385 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208027968 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116036136 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157417916 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229241259 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220439573 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240763699 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193998272 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146658401 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.298125389 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297235195 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24458297 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.467782102 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169019455 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.226788666 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.236915558 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.310009512 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17630462 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.269681852 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1949801 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161389087 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236018722 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200474071 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.232633814 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136258836 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176154052 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259275842 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226620276 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.239470966 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173744924 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.41821918 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159341392 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.178361793 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239153712 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26096238 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249912646 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214488781 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.149303772 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.299237915 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235022853 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238350319 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.15146635 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.218761503 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155059008 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226964768 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.256123459 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236389032 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21414572 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.312171287 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140210093 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214160186 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216529796 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191679408 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228824461 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204139531 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.11816983 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186153819 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170730399 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128841653 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.220781271 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120575749 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.303248172 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141785472 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.324478797 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309526523 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199711717 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181757124 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212763016 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218833143 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181720465 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.144464539 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156675838 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.20495477 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196421254 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164493738 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171717976 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182463768 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.154179274 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18873252 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120905337 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202343727 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.163279725 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214642205 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181488353 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.158787127 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209760885 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185359422 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.1747383 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221548009 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269696601 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135803154 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162232074 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255947364 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200120108 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140400911 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225585975 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.242815996 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.210556915 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171904913 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227293305 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262232891 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178063157 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249708671 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181469578 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139740761 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.197765317 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20407669 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205055103 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.192735817 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129527912 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.195751455 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25319544 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.153751774 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138848671 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225429486 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154569262 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128495777 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181188696 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169854142 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.145831044 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.190195425 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.16955703 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200908948 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199895853 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165590684 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208722274 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189047763 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273743973 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164208901 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.201637593 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154193098 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.142447366 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.235544467 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242248638 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158027986 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239936978 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.217980781 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287897767 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210901554 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159558939 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.234765848 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130045338 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.144288615 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220014185 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207927127 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211301599 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.237431777 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.313865065 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.219104546 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.164610362 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185042474 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222222079 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.223783732 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214948403 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.180723226 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210491026 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221424008 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119755194 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14890435 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127247835 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1742656 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133702652 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162187299 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247600247 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212985082 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.304388184 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208783174 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145877849 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237349977 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.152267412 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212361168 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.226163552 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169162795 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.241064234 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234046294 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216583794 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149164299 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230829822 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.144408184 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123385889 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.163582175 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214270472 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13396133 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167552445 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188781873 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238912483 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227823751 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187130491 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.327347528 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217035431 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.249752583 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120464548 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.193865044 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217976221 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198608615 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.198029802 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164579502 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.2063873 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230282086 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156785642 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291123041 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179964579 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223831117 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.306203403 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.197139343 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132483351 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189317581 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214227716 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179316138 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176374475 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182389458 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168569933 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193962628 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.143715919 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154825245 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249714675 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176166076 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250916922 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.19645617 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242013375 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123293134 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18884597 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205135902 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17862871 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115000832 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219432365 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251940826 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185446158 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202585319 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225430408 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158539345 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.409592506 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252599456 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247531628 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172690337 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17991846 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204387904 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172706773 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21129485 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.236593702 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186104485 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237096748 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199794584 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.176704539 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141858542 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182255273 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187546668 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.170257052 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.167759079 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.195745371 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.173509186 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256662076 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179761359 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173017105 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216855328 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.177374032 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.191889747 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147111732 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265087159 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199993571 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23311808 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.195709332 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.210785655 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242368595 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149072099 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12866407 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.15285874 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236797277 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132859363 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205952683 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.296829334 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.300256722 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204283477 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215177824 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168563958 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122409975 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205953108 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187665448 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.318948924 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157801145 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.16606093 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248246344 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.184445003 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129851548 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208535011 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.399466435 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178433447 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225622046 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.11918945 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.386548688 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126850854 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159260014 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172830677 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219482549 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.162864844 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.220682667 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215567234 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156319142 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203846988 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171434004 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.276609893 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31291199 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229065537 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232358836 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.180945721 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17707204 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21186022 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226419222 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180786078 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.179035552 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201334637 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237270747 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.240976661 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.134267676 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209334698 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208358269 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205430361 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248079762 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162740101 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241122337 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131552058 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220157511 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179610216 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121648784 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19800835 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.292894325 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1649699 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22608892 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170484516 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162040031 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123991663 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197822189 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19999987 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182791723 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128073861 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273646991 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126323475 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212466947 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230571251 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129415263 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195134323 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180952089 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130412769 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180820367 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185220561 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138590716 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.203349245 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242236277 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.161330092 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229950189 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232586215 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213543541 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205941209 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149848425 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.696687278 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.124793293 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233487444 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182089573 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253218262 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184218794 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218389729 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207518606 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15510088 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222666601 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190513349 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.257362719 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220233391 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.203840136 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130501947 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184946112 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182856778 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.133013537 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189692127 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208791476 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172624772 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.138117919 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.199262036 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185668947 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.183454855 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139674057 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243268579 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181014031 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250526952 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237487799 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17493037 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217202559 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249773158 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128453715 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.211234607 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222468938 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178325742 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198348138 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.128791705 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.164184245 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231560818 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.120019768 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20702372 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205244683 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210488342 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210237837 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.139407455 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205462328 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182320751 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205501765 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122584229 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.196229366 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200751846 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159344774 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125835906 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197104378 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209414886 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.201286195 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124927243 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.205849222 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236764051 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122000475 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165566492 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.378187687 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194949859 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255598933 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.194623324 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166225135 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145924199 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20055055 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.193392402 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201906499 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127092996 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162946666 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.162438367 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.214918901 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.167179508 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200373725 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24473724 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205780053 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243120561 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.163373448 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.303316915 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141091439 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197252596 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.1349268 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.156735965 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174933889 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13790756 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186222186 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.304905608 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232059581 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.161182309 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.183437934 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156377224 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125036206 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161660703 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201396537 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167247219 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199469189 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185248964 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.114973664 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182884585 seconds)
  done (took 97.886236243 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.181069513 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.169399466 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.178090632 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223413819 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19939165 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27870081 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.235655434 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257731648 seconds)
  done (took 2.781780727 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.129749518 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.166649952 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.175359434 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.126275638 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.142050922 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.454874351 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.168614183 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.154140154 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.150533274 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.195278416 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.114747557 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.762447332 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.121087547 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.154272661 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.137472311 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137569605 seconds)
  done (took 4.343260948 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.817634775 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.606777751 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.277833645 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.306695666 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.291982225 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.212920156 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.816513577 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.249513798 seconds)
  done (took 13.633614992 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.150882454 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.164783991 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.172195232 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.195222923 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.151506793 seconds)
  done (took 1.89910635 seconds)
done (took 144.447089557 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.119927582 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123660879 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.149296472 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.123299151 seconds)
  done (took 1.567307787 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.131930469 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.100066683 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.131681426 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.099552101 seconds)
  done (took 1.528923609 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.533868452 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.130558955 seconds)
  done (took 1.76412253 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150219226 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.160664064 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.134962414 seconds)
  done (took 1.51153582 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.129817632 seconds)
  done (took 1.199197521 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.121896875 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124085314 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.16795611 seconds)
  done (took 1.482366674 seconds)
done (took 10.118549195 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.134924418 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.46775097 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.410050492 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.163631833 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723716261 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431185006 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.0909952 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.167335113 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200623574 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.14161827 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135836057 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.720266819 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.081732931 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.391174192 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.062834843 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.389316288 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.698105073 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143819345 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123242717 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.143090204 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.036150718 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139593207 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115912128 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143130373 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.693598411 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421511358 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.144335831 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.415016455 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113186704 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121968548 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.406735042 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113001183 seconds)
  done (took 17.77182628 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116402857 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.218267093 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.124222953 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143758247 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119698874 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.143378035 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127126743 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.163205493 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.219976984 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113106137 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.165009936 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111719324 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151089796 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.114334927 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167113025 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113542919 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.1444974 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118550992 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.150733671 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117044162 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136795316 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141236226 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11597602 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14553887 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112876829 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157812321 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114388456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.162562181 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112866457 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.150697685 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12124181 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143049914 seconds)
  done (took 5.533236733 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.169607963 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.231878195 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.152712432 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151921008 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.20947038 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114431039 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.246198384 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.19738698 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.222864725 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.14082522 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138055577 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112469718 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.187184425 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142174363 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140841943 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.142184239 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.118980304 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144606052 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124529835 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.143990141 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137933852 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139510665 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116672554 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116475069 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.143142453 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.1304768 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.14355483 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.162408472 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114849227 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121222808 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.14985353 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11359805 seconds)
  done (took 5.894285247 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.125212105 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.154703209 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.137292879 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163649464 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117117797 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.152376349 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.125514925 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.116306311 seconds)
  done (took 2.172569543 seconds)
done (took 32.442936518 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.134164073 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.120052393 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.158826875 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129228717 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.152762159 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.139635333 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.140737694 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.126452485 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.156382009 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.122704161 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.160832191 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.113404433 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.11521492 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.14034139 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.129286768 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.147205343 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131892325 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.152362627 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.140288756 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.160029997 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.114767892 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.154915162 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124751694 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.169208946 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.140073027 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.169921485 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.1327041 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.150258622 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.115312273 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.143531595 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.13314915 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.172301587 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116582462 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.161851911 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119078062 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.146038967 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.115445418 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.115174282 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.160614405 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.127083403 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.149733844 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.126307102 seconds)
  done (took 6.897331798 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.148289519 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.193874044 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.111693308 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.140612243 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.111769885 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.18968893 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.155481797 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.141119889 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.111564892 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.175501639 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.174779526 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.112446362 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.111789632 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.141348344 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.111384093 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.139947438 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.144133373 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.17330288 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.15140229 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.1768393 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.198031443 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.151488659 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.182001385 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.14352815 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.19256315 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.185627571 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.1402641 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.186029119 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.17527531 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.111183074 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.181753174 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.149361669 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.14030926 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.110543022 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.190114421 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.185399749 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.148450403 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.19042919 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.178030524 seconds)
  done (took 7.144199556 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126649194 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131132509 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.170751416 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.223695193 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162639339 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159515843 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.127691184 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.169160078 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.135471915 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.145582666 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125820277 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.185724759 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135046499 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.154032724 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.121674886 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.171474892 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.140655728 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.148094867 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121653016 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.168481992 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137064806 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.161631692 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.130184026 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.156458328 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115805965 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.162776401 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.120925551 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.161338393 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122272548 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.152880367 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122706802 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.150723036 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125055004 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.15763496 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.120974816 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.157623817 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143720945 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.155468286 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127753855 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.187133587 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130518039 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.153286726 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144314631 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.192671885 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.116944848 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.154796521 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121416068 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.155637297 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113477214 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.166569355 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128057805 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.144774523 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.143046311 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.14471527 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.113934734 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.160605705 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11627505 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118656362 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.154106987 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123043134 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.1723529 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12053396 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.161250084 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117935361 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.151991433 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.116212573 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.143386284 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.127881479 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.170877437 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121324495 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.192269545 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114950737 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.154405741 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.124394502 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.151576511 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126370613 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.14433417 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132583765 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125399637 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.151781877 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127379399 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.148543612 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119925582 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.16538632 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.140442694 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.159970999 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.152239281 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125088879 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.1198921 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.147136518 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132558264 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.14735357 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119489828 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.163668935 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116823692 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.148052867 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124591873 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.151438057 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.113921504 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.161719599 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.121683578 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.14326259 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.127427626 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116883993 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.150440047 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.127052201 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.15100659 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.11717371 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.151491824 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.12538525 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.143943342 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122132308 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.149322445 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120573689 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.162884908 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.125605801 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120211693 seconds)
  done (took 17.665833423 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.29571175 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.262513253 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.244771794 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.370189331 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.17593433 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.148916096 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.258837047 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.20896974 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115476717 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.201062051 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.220817608 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.228083712 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.212639364 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.22500979 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.220841382 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.114958072 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.175754404 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.210758484 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.261414375 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.33247848 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.175713927 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.165575455 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.201440043 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.171011696 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.169960655 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.168407085 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.145908321 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.175582086 seconds)
  done (took 6.961114009 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.139193737 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.19560673 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.124581217 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.184290758 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.178973105 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.116584724 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.151488074 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115944367 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.165274942 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136986563 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.148606165 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125276286 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.153542285 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.128112022 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.144950532 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.127036384 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.158597885 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.129949921 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.148236575 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.121246129 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.168882305 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.13617094 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.152857941 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.125607584 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.170726965 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.126028738 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.150249944 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.177234533 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.128506149 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.184165122 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.112123543 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.157212681 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133768013 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.145448022 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.126404113 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.149785393 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.118305975 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.147645511 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.118694003 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.112933405 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.146560404 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.103776026 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.156570467 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13550979 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.155476653 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.119770491 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.154845024 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.121049274 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.153024733 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.111976279 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.148249293 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118428338 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.151513224 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13968431 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.150392599 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.113269055 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.119905482 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.136744471 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.128422967 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.150730607 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109202324 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.155713402 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.108502374 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.15177871 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.128027523 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.139163159 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125247513 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.148318086 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.122637415 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.155083213 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.120575607 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.133566093 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.143977448 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.11721564 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.162399745 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.133974353 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.152143197 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124496502 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.157591358 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.115199488 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.131798196 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114697462 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.099898751 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.15316738 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.11497336 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.155981649 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.11905105 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.154041983 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.169153697 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131035465 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.154804116 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.117338769 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.125942414 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.151899395 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112312492 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.151950515 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.13794768 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.175377064 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.113670191 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.145071525 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.140192269 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.148807549 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.11340389 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.135879203 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129024244 seconds)
  done (took 15.661249804 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.176292128 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.219649416 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.147361926 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139759254 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.188643998 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.207870058 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.133942058 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.125409427 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.147890758 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.139722571 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.158087937 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.127974315 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.158165763 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134889932 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.206902132 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.158100413 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.117812503 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.16569935 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.123781652 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.223205108 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.139283118 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.204941833 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.211751419 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.162268452 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122989208 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.20190556 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.211010884 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.132835796 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.160292266 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.183288906 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.162760386 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.211051472 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.214486437 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.124156678 seconds)
  done (took 6.761116226 seconds)
done (took 62.168618939 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.239749202 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.408784017 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.181258088 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.179613634 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.247924345 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.205655996 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.183795202 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.375490946 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.935126715 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.171581859 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.179592455 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.179179545 seconds)
done (took 27.588861835 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.190228671 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.338533962 seconds)
    (2/2) benchmarking "String"...
    done (took 1.470560632 seconds)
  done (took 3.906460948 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.181599008 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.181429042 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.427817086 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.190372124 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.181995885 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.197910425 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.184307246 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.18404596 seconds)
  done (took 15.645721147 seconds)
done (took 25.022526994 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.27584073 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.372784803 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.435716549 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.201003451 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.199689372 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.19021469 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.186562121 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.210580705 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.189404423 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.183037588 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.183708373 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.441857528 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.203691326 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.551991989 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.182002205 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.208590361 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.201659513 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.4089109 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.183331194 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.237149553 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.166130908 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.169082885 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.204465126 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.199862248 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.192571248 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.193765994 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.21794513 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.185040036 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.371611368 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.199099651 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.223455637 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.184546952 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.208313329 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.201422652 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.2978604 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.206134899 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.366205025 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.192668686 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.174952666 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.190736705 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.370959959 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.596486815 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.185408516 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.189831955 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.186245107 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.250242914 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.178484914 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.912593603 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.190305486 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.186747969 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.205899835 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.547338235 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.193963839 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.194527496 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.188576068 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.407772249 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.209554118 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.208218487 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.207448055 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.187946359 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.186529771 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.197977954 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.20802352 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.186339867 seconds)
  done (took 142.27094388 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.186658961 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.191838343 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.18907852 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.19306276 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.189280285 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.193069703 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.189905673 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.18976211 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.190253003 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.216748567 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.1889142 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.187885947 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.193358803 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.203578629 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.188951668 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.202965974 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.193591992 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.190490552 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.207814225 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.189607142 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.211319135 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.190254724 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.207737021 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.190895393 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.236790252 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.255810053 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.188512297 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.193715838 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.190219822 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.189506797 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.189347329 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.237630957 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.829006304 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.043652427 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.206575311 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.224413312 seconds)
  done (took 79.764399178 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.188176165 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.188844092 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.190933389 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188846828 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.221988545 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.19193928 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.788115038 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.790925035 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.911867004 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.445512196 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.618015804 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.512529024 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.193478915 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285402637 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.205738228 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.195997879 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.207393662 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.217577341 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.190233248 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190217414 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788632218 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.207441369 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.205302599 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.368288285 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.209210207 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224181195 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.587895464 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193062847 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228246168 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.530498704 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.24393617 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191179288 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.588192511 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.096464422 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305141641 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195596627 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225050967 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.193256214 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.193119885 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.473993149 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.191116208 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190602592 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.194481488 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.196742168 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.901581288 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.196635978 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.790601054 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194577716 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.172415125 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.196767832 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.19205427 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.126686121 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.878294277 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.193948947 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.193748899 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.196965372 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.192260151 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.192884447 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.226031895 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.063707464 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.292068898 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.195324845 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.197664101 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.225554587 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.194549475 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.219770555 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.19247491 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.844681935 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.249755512 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.299780827 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.793478689 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196476787 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293023786 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314159048 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.193171468 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.195357102 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.193058123 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195592112 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.193780824 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.304519058 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.19310443 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.603976311 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.372731639 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.213611043 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.626075762 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.298217553 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.195738428 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.629900268 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.198130724 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.196795612 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.946960057 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293025938 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.194078294 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.194953429 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194221344 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.606808398 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.795137762 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.455202001 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.199470929 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.399831455 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.198826468 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.619347256 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.770591456 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.919313985 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.200650081 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310576514 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.37371882 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.214733993 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.194594881 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.628993398 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.200745508 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.255122306 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.197548798 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.59555043 seconds)
  done (took 367.236840275 seconds)
done (took 590.370523511 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.959870386 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.8586512 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.994782224 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.887735847 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.853904081 seconds)
  done (took 10.664631594 seconds)
done (took 11.774238663 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.389762013 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.39078167 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258441513 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.393548818 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230323413 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.419643583 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.383326797 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.220990706 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.303515136 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.282791067 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.302795525 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251702287 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233309361 seconds)
  done (took 18.171242652 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.47413137 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.198522722 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280455083 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.446213856 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237343885 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.466214496 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.51228547 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.198499935 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.343012689 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.210307419 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210835 seconds)
  done (took 17.689685576 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.474617604 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.19842115 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26495931 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.466396767 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238249668 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.464985387 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.538492212 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.199258185 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.347254069 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.212246388 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.211543339 seconds)
  done (took 17.727183518 seconds)
done (took 54.699557447 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.239768159 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.365526938 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.23592447 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.210934146 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.208403052 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.208304787 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.213507751 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.21715388 seconds)
  done (took 11.013259011 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.204746804 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.204629684 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.20582025 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.204042533 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.20692343 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.20622679 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.206714154 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.207190519 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.20423645 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.20328371 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.207299439 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.204090271 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.204515985 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.20354653 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.207547325 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.206304991 seconds)
  done (took 20.398719419 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.206190759 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.20396689 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.205789774 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.204480198 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.204261154 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.203420206 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.205926651 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.203946021 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.204916348 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.204255883 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.207307581 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.204171645 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.203371456 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.203175529 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.203288487 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.205838433 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.204315938 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.204538116 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.209304803 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.204294297 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.203967302 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.204598012 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.203891378 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.204548775 seconds)
  done (took 30.029879497 seconds)
done (took 62.554347718 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.213674646 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.210149408 seconds)
  done (took 5.537729354 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.265176284 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.267255077 seconds)
  done (took 3.64658366 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.208275479 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.207476869 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.207832272 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.208353989 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.207162865 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.208131934 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.209771197 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.207683317 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.207738382 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.208806822 seconds)
  done (took 13.196254011 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.20835136 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.20777561 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.205409363 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.206873272 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.207668175 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.204458986 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.207651313 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.210170817 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.20662866 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.203249478 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.207941413 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.205220906 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.206844762 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.205007426 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.206846245 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.204776479 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.204234546 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.204825461 seconds)
  done (took 22.82915452 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.219770864 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.227176951 seconds)
  done (took 3.561003853 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.334125889 seconds)
    (2/7) benchmarking "second"...
    done (took 1.245245773 seconds)
    (3/7) benchmarking "month"...
    done (took 1.313736354 seconds)
    (4/7) benchmarking "year"...
    done (took 1.302163428 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.246829828 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.22492569 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.246148581 seconds)
  done (took 10.025529084 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.208869021 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.395114042 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.500828502 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.791864022 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.21014256 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.211076859 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.055638662 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.210866857 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.213527156 seconds)
  done (took 13.91184471 seconds)
done (took 73.821637508 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.203194976 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.230630883 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.206397935 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.234168441 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.544218378 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.226886063 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.203552137 seconds)
done (took 15.962963861 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.193865973 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.190696308 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.185730548 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.205643571 seconds)
  done (took 9.890021107 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.198878914 seconds)
    (2/2) benchmarking "read"...
    done (took 1.548065672 seconds)
  done (took 4.85999727 seconds)
done (took 15.864119438 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207644516 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.206304945 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.208125109 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.204533171 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.208525817 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.20441639 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.203179684 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.203912348 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.207467567 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.207821065 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.209200707 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.20659918 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207598792 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.204586704 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204322411 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205030495 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208131049 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.204035194 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203897951 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.206254521 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.203343315 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207296762 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.205131141 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.205411146 seconds)
  done (took 30.05758573 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.207526504 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.204119635 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.20747559 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.206411307 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.205110812 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.207935525 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.207852735 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.204259057 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.208207415 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.206662026 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205124758 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.20426794 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.209381205 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.20626205 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209291491 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.205646425 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.208201042 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205366749 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208273227 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.205854643 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.208419669 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205372979 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.205587448 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209354475 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.206479786 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.204728436 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.209435038 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.204696621 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.207806964 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.206316308 seconds)
  done (took 37.31577301 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.212805891 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.217136168 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.20879721 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.208992033 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.20943581 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.209561525 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.210837707 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.210183204 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.209633311 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.209592873 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.209847186 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.209893385 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.210187552 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.209460489 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.210258062 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.210487692 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.209777664 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.210543558 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.209324682 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.210026578 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.209826412 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.210635306 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.209320286 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.209355291 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.210305206 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.209790261 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.210901712 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.210370063 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.210843846 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.2098075 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.211312296 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.211217885 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.210481845 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.21059687 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.211567446 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.212129948 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.216935264 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.219517543 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.211273341 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.211871739 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.21354626 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.212992957 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.212117892 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.212948657 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.210766286 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.211818837 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.2106932 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.211215547 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.211000375 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.210826017 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.212188902 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.211609962 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.213160976 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.213221278 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.213087607 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.213075823 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.211795286 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.213464965 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.212073335 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.212813612 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.21260802 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.212489165 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.212782148 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.212552825 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.213042636 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.213488444 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.213217892 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.211933255 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.211851288 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.213619101 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.212763844 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.213196912 seconds)
  done (took 88.351410259 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.214471984 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.210558424 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.210321162 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.211035751 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209858646 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.214196738 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.212522071 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212983948 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21165653 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.213218911 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213519846 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.212315847 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211061792 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.21411215 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213449558 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.210851734 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.214231297 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211747155 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.214289667 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.21369379 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214461921 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.21247943 seconds)
  done (took 27.796792234 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215008271 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.216172729 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.21131935 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.214978488 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213388296 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.215039554 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.214261329 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.216787799 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214689182 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211727264 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212635801 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214983192 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.214096102 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212243129 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212291138 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.214388984 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214930612 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.214122117 seconds)
  done (took 22.974551669 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.213947308 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.212609714 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.215335554 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.212657613 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.212804912 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.21601075 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213135973 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.21760875 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.215255417 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.213146087 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.216659338 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216303657 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.214897377 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212833731 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216164957 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.213680915 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.219644476 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213326923 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216237135 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214571684 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.213095377 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217176861 seconds)
  done (took 27.850250693 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217985103 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219052843 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.214272342 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.215397165 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.214695463 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.216988572 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.21605755 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.214337246 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.217617115 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.217302415 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214272892 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.216234288 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.215330797 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.215036772 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.215104771 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214671757 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.217157345 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.215055621 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217379587 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.214776219 seconds)
  done (took 25.440507086 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227963859 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.228434918 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.22911806 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.228166591 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229317628 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.230517983 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229428735 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.22770015 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.227327576 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.229764473 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.227743586 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.228928452 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228878368 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.229258706 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228509596 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228383746 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.227746775 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.227899022 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.229486743 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22974215 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.229308218 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230979776 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.227988582 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.228211841 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.228782101 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.228111609 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.227982569 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.229297577 seconds)
  done (took 35.529860334 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220370171 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.219674815 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.215280784 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.215519338 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.21659373 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.215036832 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.215664051 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.214641133 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220568802 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.214494873 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.218151632 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.219334665 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218180166 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.218520257 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.21891669 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.219243766 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220965754 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.217523475 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216599471 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217972098 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.217272605 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218334378 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.217966895 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.215398783 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215742777 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.220160403 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21629954 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.21477762 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218974612 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.217508527 seconds)
  done (took 37.649299199 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.263203166 seconds)
    (2/2) benchmarking "in"...
    done (took 1.26324847 seconds)
  done (took 3.650416033 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.215839996 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21906213 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.217758781 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.215431267 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.2164882 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.21952569 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.220709716 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217426652 seconds)
  done (took 10.867465907 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.219259365 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.219837052 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.219374128 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.715508451 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.219878725 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.217988321 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22692111 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.240635572 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.219280593 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.221549585 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.227097581 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.227753699 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.222517724 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.218785147 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.220412969 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.222922624 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.219214984 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.220221915 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.221111081 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.220716846 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.220933293 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.222324238 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.223083598 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.219565096 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.222412003 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.230157148 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.224377679 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.221582124 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.221069431 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.224234223 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.22109219 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.220774143 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.221026687 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.220732728 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.221386864 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.221738614 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.229496941 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242674963 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.226691208 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.223199815 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.221820224 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.218512564 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.22297101 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.223538371 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.222975676 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.222729592 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.222090397 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.217882265 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.221658161 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.225620089 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.226160528 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.221830595 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.219381395 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225795785 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.224465498 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230595628 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.242151857 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.225983747 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.231431104 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.232285037 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.235310934 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.246434917 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.223424757 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.22233419 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234186438 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.246707589 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228329324 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.238676632 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.220946461 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.223672939 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.231031293 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23626055 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.249412871 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.224281625 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225269947 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.224004334 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.223666554 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224949055 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229516709 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.245631479 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.223541028 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.224320716 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.235376115 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247744417 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.22427376 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.223927225 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.224813392 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.224290475 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.225693163 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235076081 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.245385398 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.223817189 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.225488858 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.225470382 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.225229777 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.225940269 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.225202019 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226236183 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.221460764 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.225181384 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224308265 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.229256875 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.234076855 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.225161895 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.225846753 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.231921162 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.22568814 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.22514061 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.230914741 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.226045161 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.22715748 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.228660633 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.233077671 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.221805998 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229737895 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.234211568 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.224845538 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.227213515 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.225805597 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.22714943 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236772521 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.252850539 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.226149209 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.226355257 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.232763753 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.23817737 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226773387 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.229273922 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.227703687 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.225208293 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.225030681 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.22832606 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.228281702 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.227948098 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.228323279 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228890829 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.22553253 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.228692073 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.228458709 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.229967156 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.22887497 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.228387853 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.229540869 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.230665428 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.229093849 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.230647714 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.234569634 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.226905164 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.229252925 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.229064436 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.225384504 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.228830604 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.229517704 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.228935145 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.228281794 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.22795774 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.228905127 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.230779976 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.228757223 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.230947674 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.228856838 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.230549852 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235029331 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.230514411 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.232251449 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.228378727 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.225270879 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.230160122 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.229762049 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.228499974 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.230580334 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.228724407 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.234526323 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.237890332 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.2304587 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.230357539 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.233054764 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230541199 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.23184464 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230521553 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.235025585 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.239360128 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.230396313 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.237565618 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.231969235 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.231736886 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.232077685 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.232232003 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.230423395 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232022255 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.235544656 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.24009178 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.244310404 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257347191 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.233312249 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.235080323 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.231904748 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.236623298 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.235864576 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.231043603 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.232652646 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.23186233 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231790316 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.232425294 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.233450766 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.231717871 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.233262531 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.233603456 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.23321639 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.231764423 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234608633 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.232887868 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.233967061 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.229261353 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.23351881 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233010614 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.233362612 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.230085031 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.232903013 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.232801442 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.235049583 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.2331579 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.238845997 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.230717381 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233519949 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2344471 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.233835147 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.232338794 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.23295615 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235857398 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.23371542 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240660163 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.255356973 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.23539656 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.239253062 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.254308082 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.233822853 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.236242223 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.234440558 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.232027456 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.238457809 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.243503207 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.235285229 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.234826655 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.2348516 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23417922 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234585509 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.240754131 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.232572845 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.23397 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.235095009 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.235448543 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.232291882 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.235137796 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.236151249 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.235462862 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237212296 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236093933 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.235363314 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.236360671 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.235613701 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.236933921 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.236184311 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238331283 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.243542424 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.240723265 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.235957326 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.237321856 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.237064122 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.239428103 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.236776006 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.236103353 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.236948377 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248487398 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.262093745 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243758344 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.237644727 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.237659874 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242742153 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.238377644 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.241547067 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237044217 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237935495 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.23690376 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.236907605 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.234368622 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.237386413 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.237444264 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238450945 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.239538668 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.242320017 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.237799392 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.238028658 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.238555076 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.239067635 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.240096433 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.237308833 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.238858753 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.240897424 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.239382559 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.2378351 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.238335022 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244385796 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259310564 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.23906617 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.239141999 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.238647717 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.238116832 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.239473787 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.239506575 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.243120265 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.247445532 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.242811789 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.248847819 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.241512946 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249358025 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.239627432 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.244128329 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.248127161 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.237782854 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.238959836 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.239525839 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.239497521 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2456007 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.260734174 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.242317311 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.243605006 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240724347 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.240760464 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.240449434 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.23990014 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24066049 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.239880304 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247871885 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.263260842 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.245193131 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242423563 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.237569901 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.241175257 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.240500859 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.239388168 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244791156 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.240477137 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.241540778 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.240772692 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.240832281 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.242214456 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.24152344 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.242281548 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.238304041 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.241763378 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247542803 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.264837228 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246191862 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.243016624 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.248397018 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242822927 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249625998 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.263329637 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.242669804 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.242000116 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.243018581 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.243957885 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.242095217 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.244059183 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.243235946 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.244064437 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.246201182 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.243235647 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.24438378 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.243910188 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.243810861 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.243990217 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253283442 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266944435 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.243893811 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249827074 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.242283859 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.245041217 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.24799573 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.243911405 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.242522076 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.246769865 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254155535 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252120508 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.244539388 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.243939004 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244613024 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244808385 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.244045807 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.245196249 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.24510394 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.244466272 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.244589044 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.244725763 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24729008 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.245196345 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.245558837 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244904594 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.24565446 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.254928832 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.24539801 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.246026775 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246524028 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.246031979 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.245651554 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.244681908 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.244724141 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246116944 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246177213 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.24736334 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252221474 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.253371589 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.247408799 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.244905454 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.245246447 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.246611008 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.246959942 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246357234 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.24611864 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246287213 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.246880685 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.247236973 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.247929984 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.245862388 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.24583469 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.248234201 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245956227 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249993749 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.254257249 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246741991 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.245344845 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.247768702 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248305606 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.246311971 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.24672414 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.253483717 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250801094 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.259313209 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.257554156 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.252242256 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.249162679 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250443842 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.25672608 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.248295696 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.248458394 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.247616919 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.249341095 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.24958896 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.251567612 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249295185 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.254867903 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.248074554 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.248982541 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256465933 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.271620229 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248809799 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.251270582 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.25391375 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.248432394 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.24582776 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.248032492 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.249209982 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255811801 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.269539102 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249983304 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250163141 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.250155228 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.252496463 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254129398 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249646385 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.250004054 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.247435229 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.249933975 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250450444 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248755708 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.247526897 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.249734152 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.249647779 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.253546346 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.257227915 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.248609528 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251452357 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.249586255 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.250832309 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251160846 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251551935 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.247454541 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.248397103 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.25096911 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251930614 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.249877962 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.253373309 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.251479668 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.253101563 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.251836862 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252906472 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254355643 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.262922334 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.259695771 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.248913423 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.252524729 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.251262578 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.25328518 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25147078 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.251176993 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251110976 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.2519667 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.252029381 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253249333 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.250895715 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.25542421 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268187396 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.274674045 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252641504 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.252000057 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255380835 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.25245383 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.24916137 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.253526548 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.253728327 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.256202784 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.261756185 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.252772035 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260070547 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273309138 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.254748787 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.25715959 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.257496255 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.262712391 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.257152421 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25342559 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.253805135 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.258964789 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.2708018 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254937844 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263726555 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285082289 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.276128456 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.254556223 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.255549632 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254592268 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.255660451 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.255349322 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.255583662 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.255281576 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255503885 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.255493328 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.255796802 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260907312 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.25618865 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.257242045 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.255985525 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.256097919 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.256290379 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.253416925 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.256298702 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.256172491 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.255364579 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.256512338 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.255713068 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.255809865 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268601217 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.283024881 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.256655827 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.258020626 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.253867251 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.258632624 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.259472774 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267259542 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.263621611 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.257189837 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.256211905 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.257564106 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257644147 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.255870725 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.258105909 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.257890966 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25739572 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.255014041 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.268584423 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282438587 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.260424497 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.258273408 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258110331 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.258929623 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259110688 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258225611 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258494451 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.258704494 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.261645126 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262449083 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.258907153 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.258773271 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.262508002 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.26712273 seconds)
  done (took 741.306927993 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256342849 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256473616 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.256396056 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.256901109 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256944396 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256689361 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256611365 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.256871449 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.257337158 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.257844111 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.256537298 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256394818 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.257592869 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.256730221 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258275024 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25698372 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257396312 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.258579865 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.256806428 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258672135 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.25789393 seconds)
  done (took 27.560497808 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.260771152 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.25767898 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.257936567 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.261275385 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257689461 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.261657009 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.25836142 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261284163 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.262124862 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257876769 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.262095493 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261374545 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.258846453 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.259444215 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258999336 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260907296 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.261306264 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.258226257 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.261990551 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.260041802 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.261658538 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.258721236 seconds)
  done (took 28.881329513 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.261652274 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.261378853 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.261300945 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.258326553 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.26158635 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.259935063 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.263360728 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.261757835 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.262007021 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.263447158 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.26195883 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.263549608 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.270992445 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.268244458 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.264337677 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.262529781 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.263293389 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.262956306 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.262378571 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.260764473 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.268621964 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.26082457 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.260793717 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.262500519 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.263705504 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.263533916 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.26323466 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.264112396 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.265246387 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.267887091 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.264907212 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.264597017 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.265368116 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.26233655 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.265934162 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.26864175 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.264202299 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.261377669 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.263259243 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.274513304 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.284712559 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.264568981 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.27128354 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.263997365 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.26479795 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.268223828 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.27226466 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.262477007 seconds)
  done (took 61.868094742 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.263911503 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.265050506 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.263042658 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.265624647 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.264879087 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.264598367 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.265374164 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.265642559 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.263289412 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.263440447 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.265830119 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.263294049 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.262850208 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.265638836 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.266772059 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.262725731 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.263165783 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.263179812 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.262820594 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.263989003 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.264477919 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.266240312 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.264825292 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.263656953 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.263905775 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.264435796 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.263484124 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.26669585 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.262899513 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.262899477 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.266876993 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.267228333 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.267396405 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.263957032 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.264625085 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.267118612 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.266976052 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.262855805 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.266258002 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.26373165 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.266186514 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.268361879 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.266522992 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.267617069 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.264526413 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.265101186 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.264561922 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.26703883 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.264199176 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.268021893 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.268061333 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.265074277 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.269770834 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.26526036 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.268684803 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.267326935 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.265456614 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.265426019 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.268435698 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.264958656 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.265496003 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.268576038 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.265229676 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.26900262 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.268878955 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.266884304 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.267589508 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.272914622 seconds)
  done (took 87.228085641 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270019407 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.268679708 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268563798 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269321065 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268653125 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.268895427 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269916786 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.270106027 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.269845095 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.269557647 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.268803691 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.269288421 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.269074955 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.269761391 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.269188154 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.268568057 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.270248605 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269336071 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269647533 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269540356 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.269069858 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.269670279 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.269291763 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.270230174 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.270436719 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.269527334 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269360991 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.270184164 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270210316 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.271770227 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.270596754 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.270351139 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.27067648 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.271593706 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.270794902 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.270536389 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.271093697 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27058313 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.271705575 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.270652419 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269975302 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.271755068 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.270723142 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.270733593 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.271898404 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.270402135 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.270827803 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.271726103 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.271394546 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.270712718 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.272191874 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.271208086 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27197485 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.272005332 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.271739003 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.272907502 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273323602 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.273499784 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272775387 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.272013562 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.271669011 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.272910914 seconds)
  done (took 79.948374738 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271707163 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.272985402 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.270831479 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.270894876 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.272154821 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.269677672 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.272222116 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.272277945 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.272831861 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.273785752 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274050514 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27109168 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272162643 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274221881 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.269745637 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2720853 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269848832 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.271141973 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273269772 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.271498977 seconds)
  done (took 26.6109015 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.271704108 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.274736472 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.271609798 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.270201011 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.274002202 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.272483621 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.273857067 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273923792 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272431479 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275936386 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.274682167 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.274459349 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272433537 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.271616198 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.274574762 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.272045904 seconds)
  done (took 21.544472405 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.27283064 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.275064429 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.275470632 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.274189203 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.27271492 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.272099192 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.274583153 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.271929169 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.272421864 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.275720262 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.275372703 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.275363739 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.275762064 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.275204661 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.273936222 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.276237404 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.271249775 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.27143477 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.276200705 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.274997918 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.273509626 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.27319449 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.276259728 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.276615893 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.272607006 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.274231564 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.273522669 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.272574563 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.273220789 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.276252232 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.274340572 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.274238308 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.274021025 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.274381918 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.275856026 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.274527598 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.276343571 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.277010478 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.276361146 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.276614918 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.277429408 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.273802731 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.277760097 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.277882968 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.274421254 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.277354486 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.274365775 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.27508861 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.273684436 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.274889675 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.277597393 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.277516352 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.278778926 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.278324191 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.278750562 seconds)
  done (took 71.301664419 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277967373 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.278101678 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.274015282 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.278012499 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.27740008 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.275343597 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.278301811 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279038597 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275374903 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.279056396 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.274982696 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.280233335 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2753261 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.277333291 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.276504399 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277706495 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.275637169 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.275764651 seconds)
  done (took 24.163244893 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.277728155 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276392792 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.278524992 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.275656589 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.276994935 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280001713 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277478003 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.279341987 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280162004 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.277843263 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276315958 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.280604432 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281191436 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.280540003 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.27658741 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277861734 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.281552774 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281054531 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.277749558 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276759831 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.280659075 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280747878 seconds)
  done (took 29.310690105 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.281621705 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.279339783 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.279197142 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.294375664 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.298952977 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.279081549 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.280680808 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.27974249 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.300977358 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.332431514 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.327268936 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.298779723 seconds)
  done (took 16.712328865 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279368185 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281119515 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278849894 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282719259 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281128969 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278160428 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278645282 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278676755 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282417957 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280072427 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279327007 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281363736 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282731381 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279478557 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282511564 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282952161 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279204331 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279329551 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279475848 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28153358 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27918694 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282975148 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280029358 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281862572 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279922533 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280106584 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282285775 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280765833 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28044975 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282858191 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283744902 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280721809 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283925087 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281418452 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284367626 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283871134 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281329165 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283977139 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28413041 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282155513 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.284236737 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284439207 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284243517 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282226401 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284289631 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282917064 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282798238 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283450864 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280900045 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285186875 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285757413 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281733444 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284801371 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283931433 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28537195 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28531989 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282620814 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283316731 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28480845 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283940922 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282438091 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285797931 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282614859 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282888767 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285484506 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282721004 seconds)
  done (took 85.809982038 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283383801 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282963159 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283218621 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283059251 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282786526 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283888542 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282677944 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282417694 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28304665 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282292193 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285324753 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284026168 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283463402 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285539955 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284230167 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284563077 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283688098 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283238998 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282677504 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288462781 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283879701 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28373328 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284263095 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284345431 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285246329 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28702172 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284458558 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284227581 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28470063 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284371006 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283926018 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284646831 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286188759 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.284487278 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28641064 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284793531 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284474238 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285061844 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285967394 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287709982 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284537985 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289109671 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285066478 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285922735 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285927988 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285090736 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285062658 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285701496 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285326217 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285532918 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287595692 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286246571 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286378487 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285958299 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286394037 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286421257 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286897748 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286558938 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286531957 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289175511 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286608916 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288470188 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291300089 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288012101 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287535467 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28786537 seconds)
  done (took 86.016937142 seconds)
done (took 1736.861455175 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.453773563 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.405370935 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.2893477 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.302002387 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.289104146 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.282124984 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.302182465 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.288690912 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.288685598 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.28819864 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.289085478 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.477957162 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.345620211 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.288782116 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.290023557 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.386688948 seconds)
  done (took 26.457324802 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.317436854 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.296654402 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.414899871 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.311457608 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.319392474 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.482980846 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.350839692 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.295092372 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.474721929 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.341522232 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.29601629 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.317516059 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.295812302 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.28745181 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.312862486 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.484092033 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.549089685 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.289739477 seconds)
  done (took 28.626525908 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.764280175 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.328749295 seconds)
  done (took 5.283082744 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.315539077 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.295045942 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.296284193 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.29421297 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.28540374 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.286777098 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.294069158 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.287594172 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.288103889 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.426571775 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.300385954 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.306610886 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.317596206 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.296078548 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.292049153 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.33592206 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.449461812 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.294199184 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.292123477 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.301687745 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.295085421 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.420653511 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.338270215 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.292163125 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.425760083 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.299668862 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.303213673 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.304180747 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.473395224 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.294475609 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.295434497 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.296494981 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.29871622 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.23463314 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.779329376 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.288956333 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.322150672 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.306133082 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.2946543 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.49009561 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.298024933 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.303056121 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.289633453 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.766732261 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.437053324 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.417188657 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.308450937 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.298273314 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.299837227 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.36105296 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.296167655 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.29921708 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.342295593 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.103654981 seconds)
  done (took 83.332676115 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.314084103 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.29067089 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.472694547 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.308888419 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.290274717 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.289984775 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.290958085 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.5905689 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.357276924 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.29046125 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.594860865 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.856527453 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.308210351 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.33835674 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.14213155 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.352563313 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.291082033 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.307664861 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.291144687 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.29151595 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.848067191 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.292806388 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.314976084 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.51850349 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.332598377 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.822767313 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.292426991 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.324727068 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.295796936 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.294128434 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.813197394 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.317275886 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.348180927 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.295224388 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.575444657 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.684714792 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.645593903 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.295765822 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.295928678 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.292380683 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.301506862 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.802556177 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.664829814 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.293790164 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.293023079 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.811887661 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.2950324 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.301952593 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.299392268 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541340987 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.292540191 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.294155737 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.309494316 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.310979763 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.293345537 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.365387628 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.379041501 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.825135807 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294391833 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.294030755 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.355810561 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.293854758 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.295887445 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.29672181 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.2961447 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.671499032 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.488194329 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.29679897 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.667882807 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.80970492 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.311888735 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.887734908 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.311621466 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.309930255 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.442122387 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.294447242 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.296896942 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.834140836 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.331268346 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.295380608 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.651565485 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.297785434 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.59721691 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.314692969 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.29596663 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861849016 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.303776979 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.30182076 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.29636934 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.295364142 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.314480952 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.309195114 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.58381343 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.351441675 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.296288883 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.295730352 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.314296675 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.297703295 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.29676441 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.305625127 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.886331436 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.31639077 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.296997 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.299336098 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.297599951 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.297489236 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.299430633 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.298449947 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.5631818 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.312692824 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.301005843 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.299419717 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.302921033 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.301681225 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.528141421 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.302510991 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.62243851 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.301808194 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.299049716 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.318755104 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.299184671 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.310583526 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.299191742 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.307674599 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.206161521 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.60004 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.318572681 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.316953543 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.29968935 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.311965298 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.300453873 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.29896102 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.333833251 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.299463725 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063899391 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.337312437 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.324476941 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.299759547 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.309261457 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.300339991 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.307759703 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.300163387 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.593780096 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.585451647 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.493241102 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.299976522 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.29946627 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.069607133 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.364370965 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.481083558 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.321450026 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.300954811 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.551394997 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.546861947 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.302916304 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.299344297 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.300793418 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.560373925 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.300696797 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.609651762 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.84899084 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.318522617 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.302031927 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.066223529 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.044881085 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.305016044 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.305589935 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.595214685 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.320457076 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.301710119 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.301592006 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.301119089 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.301476315 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.306120576 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.299655526 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.302045773 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.302659922 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.418987651 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.495860385 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.320621815 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.309705434 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.825616929 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.311043507 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.302133175 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.308139201 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.306716426 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.302200301 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.365922849 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.30476601 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.343321579 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.305578335 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.306413602 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.881364327 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.302900271 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.306605743 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.49576445 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002411265 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.320862305 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.302776814 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.320944898 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.200578762 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.855785871 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.31171714 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.629213348 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.310590451 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.343475867 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.304277012 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.347178646 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.851835958 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.309586812 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.321986527 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.969793955 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.320371211 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.159015088 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.305034593 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.305253074 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.919948233 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.321867735 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.305454362 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.308207161 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.304673455 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.601405914 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.306848637 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.350338769 seconds)
  done (took 491.728105693 seconds)
done (took 636.614414303 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.303130492 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.308693881 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.291531084 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.309333068 seconds)
  done (took 10.419821684 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.314367992 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.313220597 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.32210029 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.309761649 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.313845413 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.311419548 seconds)
  done (took 9.091995904 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.303887572 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.309875043 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.310160864 seconds)
  done (took 8.131800387 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.523760542 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.325200381 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.653467839 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.333379549 seconds)
  done (took 9.043580356 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.322623574 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.323676894 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.321165906 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.315376749 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.319751432 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.318382641 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.317691845 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.316572452 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.317797749 seconds)
  done (took 13.078378212 seconds)
done (took 50.972046422 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.30605204 seconds)
    (2/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.080637712 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.392964284 seconds)
    (4/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.388583971 seconds)
    (5/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.290303094 seconds)
    (6/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.301421787 seconds)
    (7/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.398075326 seconds)
    (8/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.420880514 seconds)
    (9/286) benchmarking ("sort", Float32, true)...
    done (took 1.861351367 seconds)
    (10/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.365740586 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.344312958 seconds)
    (12/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.315614517 seconds)
    (13/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.310567806 seconds)
    (14/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.392438236 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.358222724 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.315475243 seconds)
    (17/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.307329266 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.338174747 seconds)
    (19/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.311846235 seconds)
    (20/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.328774265 seconds)
    (21/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.961336516 seconds)
    (22/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.459141804 seconds)
    (23/286) benchmarking ("sort", Int8, false)...
    done (took 1.437224898 seconds)
    (24/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.324078904 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.377244531 seconds)
    (26/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.338057004 seconds)
    (27/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.41295793 seconds)
    (28/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.462304576 seconds)
    (29/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.316173481 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.478816059 seconds)
    (31/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.38428642 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.495419413 seconds)
    (33/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.317660121 seconds)
    (34/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.338957131 seconds)
    (35/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.325500687 seconds)
    (36/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.383178795 seconds)
    (37/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.18581605 seconds)
    (38/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.528658364 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 1.745166126 seconds)
    (40/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.349554772 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.324305532 seconds)
    (42/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.295349782 seconds)
    (43/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.403684847 seconds)
    (44/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.49579002 seconds)
    (45/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.445459663 seconds)
    (46/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.391754024 seconds)
    (47/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.438138824 seconds)
    (48/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.609878425 seconds)
    (49/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.429951834 seconds)
    (50/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.350400339 seconds)
    (51/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.308993367 seconds)
    (52/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.367308376 seconds)
    (53/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.32564868 seconds)
    (54/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.309645261 seconds)
    (55/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.401235211 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.337231012 seconds)
    (57/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.44237549 seconds)
    (58/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.35912867 seconds)
    (59/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.338755219 seconds)
    (60/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.324366829 seconds)
    (61/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.317428812 seconds)
    (62/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.338468872 seconds)
    (63/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.295415601 seconds)
    (64/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.336336256 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.321129303 seconds)
    (66/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.401222603 seconds)
    (67/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.95611368 seconds)
    (68/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.321220394 seconds)
    (69/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.302592729 seconds)
    (70/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.567808125 seconds)
    (71/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.328904862 seconds)
    (72/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.321441984 seconds)
    (73/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.316737898 seconds)
    (74/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.541962023 seconds)
    (75/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.334044402 seconds)
    (76/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.366971567 seconds)
    (77/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.310674047 seconds)
    (78/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.406911738 seconds)
    (79/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.416483461 seconds)
    (80/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.319554518 seconds)
    (81/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.061164847 seconds)
    (82/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.992927075 seconds)
    (83/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.964868758 seconds)
    (84/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.987450077 seconds)
    (85/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.372672206 seconds)
    (86/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.410686831 seconds)
    (87/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.322197846 seconds)
    (88/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.297575888 seconds)
    (89/286) benchmarking ("sort", Int64, false)...
    done (took 1.521724556 seconds)
    (90/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.317381347 seconds)
    (91/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.393395063 seconds)
    (92/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.40915496 seconds)
    (93/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.296837628 seconds)
    (94/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.36946705 seconds)
    (95/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.30253338 seconds)
    (96/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.33168884 seconds)
    (97/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.323202036 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.383276631 seconds)
    (99/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.458899334 seconds)
    (100/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.089204784 seconds)
    (101/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.454206405 seconds)
    (102/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.460348829 seconds)
    (103/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.338695841 seconds)
    (104/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.330956258 seconds)
    (105/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.296157889 seconds)
    (106/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.385178534 seconds)
    (107/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.543417908 seconds)
    (108/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.351926423 seconds)
    (109/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.323062413 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.419922225 seconds)
    (111/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.467518814 seconds)
    (112/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.062163741 seconds)
    (113/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.348982257 seconds)
    (114/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.389539813 seconds)
    (115/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.335821636 seconds)
    (116/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.369401359 seconds)
    (117/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.326053401 seconds)
    (118/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.326337574 seconds)
    (119/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.498906246 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.435685231 seconds)
    (121/286) benchmarking ("sort", Float64, false)...
    done (took 1.517272993 seconds)
    (122/286) benchmarking ("sort", Float64, true)...
    done (took 1.936974495 seconds)
    (123/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.35591745 seconds)
    (124/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.352358721 seconds)
    (125/286) benchmarking ("sort", BigInt, false)...
    done (took 2.318485837 seconds)
    (126/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.140983706 seconds)
    (127/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.348958815 seconds)
    (128/286) benchmarking ("sort", Int8, true)...
    done (took 1.72970188 seconds)
    (129/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.986669918 seconds)
    (130/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.328360502 seconds)
    (131/286) benchmarking ("sort", Bool, false)...
    done (took 1.346013329 seconds)
    (132/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.322745335 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.41593607 seconds)
    (134/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.346150912 seconds)
    (135/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.298319304 seconds)
    (136/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.36320023 seconds)
    (137/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.381490768 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.420583505 seconds)
    (139/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.342201364 seconds)
    (140/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.325558604 seconds)
    (141/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.333940438 seconds)
    (142/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.523739766 seconds)
    (143/286) benchmarking ("sort", Float32, false)...
    done (took 1.477921525 seconds)
    (144/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.468533161 seconds)
    (145/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.13048158 seconds)
    (146/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.326821139 seconds)
    (147/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.319812659 seconds)
    (148/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.050993485 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.495478538 seconds)
    (150/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.406349112 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.369091491 seconds)
    (152/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.369671668 seconds)
    (153/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.338847664 seconds)
    (154/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.401971272 seconds)
    (155/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.323679098 seconds)
    (156/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.327120045 seconds)
    (157/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.11221512 seconds)
    (158/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.404140721 seconds)
    (159/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.3475849 seconds)
    (160/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.340810569 seconds)
    (161/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.333950663 seconds)
    (162/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.336703578 seconds)
    (163/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.322745132 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.422050595 seconds)
    (165/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.428566679 seconds)
    (166/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.524606708 seconds)
    (167/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.401119537 seconds)
    (168/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.509889314 seconds)
    (169/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.196211327 seconds)
    (170/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.345496805 seconds)
    (171/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.300630732 seconds)
    (172/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.314697409 seconds)
    (173/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.363079452 seconds)
    (174/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.471974523 seconds)
    (175/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.362919994 seconds)
    (176/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.325813575 seconds)
    (177/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.532805499 seconds)
    (178/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.149001928 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.419453849 seconds)
    (180/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.433075229 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.327140251 seconds)
    (182/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.302605062 seconds)
    (183/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.524704811 seconds)
    (184/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.467957509 seconds)
    (185/286) benchmarking ("sort", BigInt, true)...
    done (took 2.319965625 seconds)
    (186/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.519396673 seconds)
    (187/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.343861532 seconds)
    (188/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.334669479 seconds)
    (189/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.328262602 seconds)
    (190/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.346544436 seconds)
    (191/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.333679444 seconds)
    (192/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.327749629 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 1.519670519 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.329540773 seconds)
    (195/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.33324141 seconds)
    (196/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.320119478 seconds)
    (197/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.968787551 seconds)
    (198/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.32848256 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.372908176 seconds)
    (200/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.335827206 seconds)
    (201/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.333933707 seconds)
    (202/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.451950391 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.387956049 seconds)
    (204/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.376016979 seconds)
    (205/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.51521581 seconds)
    (206/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.33929387 seconds)
    (207/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.404595248 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.414851593 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.341244123 seconds)
    (210/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.356895238 seconds)
    (211/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.328235722 seconds)
    (212/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.454847255 seconds)
    (213/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.354677293 seconds)
    (214/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.358164269 seconds)
    (215/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.336697068 seconds)
    (216/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.452607779 seconds)
    (217/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.35360291 seconds)
    (218/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.477829894 seconds)
    (219/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.380773758 seconds)
    (220/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.340373562 seconds)
    (221/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.651103936 seconds)
    (222/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.355925724 seconds)
    (223/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.32946374 seconds)
    (224/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.326999232 seconds)
    (225/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.446502562 seconds)
    (226/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.120707163 seconds)
    (227/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.349826691 seconds)
    (228/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.327172132 seconds)
    (229/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.39941323 seconds)
    (230/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.446002149 seconds)
    (231/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.355030725 seconds)
    (232/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.072501041 seconds)
    (233/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.359007776 seconds)
    (234/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.470654306 seconds)
    (235/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.634928083 seconds)
    (236/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.340745286 seconds)
    (237/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.378710887 seconds)
    (238/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.346774415 seconds)
    (239/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.033551467 seconds)
    (240/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.336632404 seconds)
    (241/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.403756487 seconds)
    (242/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.47975267 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.378609646 seconds)
    (244/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.333507591 seconds)
    (245/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.448511207 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.393613626 seconds)
    (247/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.3427317 seconds)
    (248/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.078877442 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.351278175 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.363347796 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.430240954 seconds)
    (252/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.354309693 seconds)
    (253/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.326152466 seconds)
    (254/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.392210649 seconds)
    (255/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.671971527 seconds)
    (256/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.486706437 seconds)
    (257/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.310415279 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.377998634 seconds)
    (259/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.321912399 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.350071123 seconds)
    (261/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.332721682 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.337466451 seconds)
    (263/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.337022764 seconds)
    (264/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.190723032 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.367494408 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.502034457 seconds)
    (267/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.330594341 seconds)
    (268/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.34712109 seconds)
    (269/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.330298507 seconds)
    (270/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.07557732 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.354248169 seconds)
    (272/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.471974028 seconds)
    (273/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.431694598 seconds)
    (274/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.343049425 seconds)
    (275/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.356900541 seconds)
    (276/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.978887599 seconds)
    (277/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.472455586 seconds)
    (278/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.359749318 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.331751948 seconds)
    (280/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.454181774 seconds)
    (281/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.333893765 seconds)
    (282/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.332193225 seconds)
    (283/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.377868729 seconds)
    (284/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.334023157 seconds)
    (285/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.332568712 seconds)
    (286/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.200214853 seconds)
  done (took 465.559145226 seconds)
done (took 466.767611871 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.371378293 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382848796 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.336037385 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.368519996 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.451382002 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.508779477 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.34660354 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.37542106 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.384259212 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.385542764 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.343488349 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.507646308 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.336396329 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.337314352 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.337892509 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379776804 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.327240704 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.336735771 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.354379491 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.371375134 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.352718123 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.343184604 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.387785681 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.509821865 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.341206285 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.338757922 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.341352899 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.360680965 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.452619782 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.341315574 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.342327185 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.349094646 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.326430509 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.342166537 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.333245203 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.362488725 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.350535397 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.346662168 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.374144004 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.454195725 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.330272607 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.345694844 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.340027248 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.339715807 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.33968001 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.380153156 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.340488955 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.395898235 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379953733 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382107467 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.337379848 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.352783357 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.347967443 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.340559287 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.350194718 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.340761681 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.397051806 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383645792 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.359612547 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385799022 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.337245045 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.343389502 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.377322164 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.355358895 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.351897952 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.339460873 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.337952191 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.380247372 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.332480022 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.345531983 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.341502166 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.351416468 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.341251991 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.354642369 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.375800844 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.330524999 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.334525499 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.340801076 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.351909732 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.338323517 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.387965561 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383552419 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.390604042 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.342402909 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382471479 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.51432128 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.350969105 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.342002673 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.379750501 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.360843658 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.354185274 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.353942895 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.376285709 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.343433301 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.391294111 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.399192182 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.352098929 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.351020247 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.394195776 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.353986931 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.335731532 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390591987 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.34094251 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.339890333 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.343243936 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.464993267 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.335863916 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.345224202 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.376585345 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.390813549 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.402361564 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.34410468 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.353427823 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.389340025 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.353251883 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.403558144 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.346265785 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.344095053 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.344740662 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.46567985 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.346617945 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.355298021 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389902652 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.403889915 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.344030522 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.33726306 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.344938936 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385338864 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.464471632 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.355052601 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.458942967 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.342723381 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.349542139 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.376225571 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389536008 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.379210949 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.404162948 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391345047 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.360208529 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.345195276 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.355611477 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.356724344 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.347996875 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.406202944 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.344334538 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.379459307 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387528322 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388640473 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.379096941 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.467298255 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.350489374 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.348843169 seconds)
done (took 225.208624912 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.404742585 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.34242912 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.444078137 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.343372645 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.445565855 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.445603949 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.3402395 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.340583234 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.339927249 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.720722708 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.341491062 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.340443097 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.342239968 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.340879083 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.424217145 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.343971388 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.341041313 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.683940487 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.342740954 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.414389942 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.344202205 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.341078874 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.3434452 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.724434796 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.342018964 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.338105921 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.414449324 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.344188978 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.689982267 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.337388928 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.341733861 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.690097231 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.437031777 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.361290145 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.356789275 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.355029845 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.447059875 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.363610454 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.431018786 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.429149355 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.448251348 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.383906971 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.338746086 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.343838415 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.346743391 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.346052841 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.343306389 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.372006259 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.344597097 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.343868101 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.685836255 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.35476017 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.343938691 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.343441217 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.343446999 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.374941153 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.343614 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.346562414 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.437148424 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.348167993 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.408325054 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.726672677 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.72568804 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.347481185 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.342128684 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.343428146 seconds)
  done (took 105.177657705 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.413304304 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.420957786 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.461817645 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.34752456 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.397361444 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.468888487 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.346903113 seconds)
  done (took 11.094031593 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.3538057 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.3492113 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.397998464 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.398223913 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.348024057 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.561308306 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.348808386 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.359093157 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.346441466 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.42734263 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.359612446 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.348433445 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.35493289 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.347709315 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.395829633 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.361728812 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.463908591 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.350728308 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.348890143 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.502529244 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.346205792 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.354103071 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.426961013 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.360075242 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.361296648 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.357660749 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.299735893 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.349358399 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347423064 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.349320811 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.346731242 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.457354693 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.350956434 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.347702393 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347564758 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.507855947 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.350428357 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.34622135 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.351989956 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.349564861 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.350208709 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.350018646 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.351118175 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.349341159 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.350158101 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.374285685 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.349890467 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.353559207 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.351636705 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.351754659 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.434091423 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.35098193 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.349572165 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.347073348 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.427554197 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.357167847 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.354580686 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.349188249 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.352517156 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348121672 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.50582104 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.399430988 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.352723994 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.399428582 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352679065 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.353648484 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.352196099 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.354069975 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.444616519 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.351694749 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.399489143 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.350422397 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.575252245 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.374652069 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.354697086 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.355291445 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.354357191 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354123007 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.353309624 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.361532573 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.350189097 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.354284127 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.359689434 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.350408277 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350530855 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.538545703 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.511273546 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.350483919 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.36672803 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.360201378 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.350586724 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.432429085 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.353713461 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.348922283 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.403546838 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.466899768 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.432491719 seconds)
  done (took 139.857374006 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.357820147 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.361917489 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.357507516 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.375947339 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.356475005 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.352864199 seconds)
  done (took 9.406716988 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.356047961 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.355525886 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.353897874 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.353856341 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.354966245 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.365653132 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.36543062 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355597026 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.35921925 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.353681282 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.366677134 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.356355033 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.358845343 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.354756628 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.36611832 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.355977276 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.367705821 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.352246097 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.353916099 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356456655 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.353738133 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.355961925 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355291081 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.357548939 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.371606395 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.35603788 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.363196545 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.358572324 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.355756157 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.361883369 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.377166882 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.367338784 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.358354883 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.362682468 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.370001924 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.359420122 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362344336 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.357046645 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355351071 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.368671369 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.359376312 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35787736 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.35711757 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.358942181 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.359150193 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.362637911 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.362943652 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.365506407 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.370025219 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.360827863 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.360116516 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.359483946 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.368867459 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.362345604 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.360528434 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.381902278 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.363433579 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.369334833 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.360245562 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.36102097 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.360370591 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.369464119 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.361154108 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.374012012 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.356476308 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.361331181 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.361423758 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.363851305 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360570397 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.35948938 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.360878366 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.357798128 seconds)
  done (took 100.247002866 seconds)
done (took 367.014384681 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.353231251 seconds)
  done (took 3.60237585 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.475618151 seconds)
  done (took 3.72823409 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.484212174 seconds)
  done (took 23.744312153 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.409202957 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.454489298 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.377403834 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.354792565 seconds)
  done (took 10.846307085 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.704969796 seconds)
  done (took 3.955898558 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.352178512 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.375512689 seconds)
  done (took 5.97902532 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.661697236 seconds)
  done (took 3.91232435 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.807285551 seconds)
  done (took 4.066576752 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.358784246 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.369335943 seconds)
  done (took 5.989116938 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.35008245 seconds)
  done (took 3.599682684 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.715274058 seconds)
  done (took 16.967649376 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.357260565 seconds)
  done (took 3.610387576 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.382180176 seconds)
  done (took 3.632953788 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.144103232 seconds)
  done (took 6.393569777 seconds)
done (took 101.279291098 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.356089562 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.359234054 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.357769214 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.359083679 seconds)
  done (took 10.682544013 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.394424762 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.393804054 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.397026251 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.405018978 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.398519714 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.395091468 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.387588481 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.405326967 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.407026225 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.396578505 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.396141711 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.398351331 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.394665772 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.387873996 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.397968372 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.397771669 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.406775944 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.397329632 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.386850875 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.397746442 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.362638499 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.407810547 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.399808356 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.363684271 seconds)
  done (took 34.728407579 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.856419983 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.434121758 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.516998327 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.415978822 seconds)
  done (took 7.475065727 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.441185608 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.432118155 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.441224102 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.495273374 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.505514363 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.442217593 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.391303414 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.385264686 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.371597221 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.431985237 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.493070047 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.428505755 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.522250969 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.363217009 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.642623522 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.362877015 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.363650873 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.441583137 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.480417068 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.493572174 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.364003868 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.441638026 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.443487342 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.429318652 seconds)
  done (took 35.861397798 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.363525888 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.382665045 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.363591026 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.364771655 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.372353049 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.362752397 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.365028665 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.364908892 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.363668997 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.904608181 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.366126151 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.376390205 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.884162388 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.368634032 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.369795831 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.364793428 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.890006986 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.889787819 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.37082198 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.370629797 seconds)
  done (took 30.714375325 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.359238595 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.358844123 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.710233864 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.614798381 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.358924771 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.35843631 seconds)
  done (took 14.016341371 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.446134256 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.590922377 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.369444684 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.76691377 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.858371807 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.372911673 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.370106321 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.637428753 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.996348998 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.969969541 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.436265181 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.446454437 seconds)
  done (took 20.519168844 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.36064926 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.363447298 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.375348852 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.38247942 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.425258345 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.371284107 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.37765085 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.360833298 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.431751091 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.437208903 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.37400215 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.433166721 seconds)
  done (took 21.952313854 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458314119 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362983579 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.373936754 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444514995 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363999 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.20547766 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.453444736 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.094072182 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.386026806 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636318591 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360450263 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46275134 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617588695 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378599493 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365520429 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.344883725 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.597074241 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90260049 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366840385 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362635069 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421260053 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363903238 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379493474 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.600502518 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366796094 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361684501 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.627019272 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363529501 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680478131 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382263817 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37404723 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363824717 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638001152 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052782776 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490825496 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.596630561 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366155767 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369886712 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.383014987 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.378607959 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387401629 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371731119 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376794896 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365781632 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364759685 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365033805 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102768779 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.390835601 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.361968 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365115922 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656273929 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470805577 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.368720787 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36442103 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504506903 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370186563 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.368685352 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.366324124 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951606429 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363703575 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370275878 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.369651598 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406548368 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370117268 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031757319 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.370814168 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.370419193 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370634907 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366788779 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366158574 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384173539 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365959134 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.393233656 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36676108 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15122076 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37226777 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372223587 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950718071 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383557083 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.371688581 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599146159 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366012192 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366751926 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.366100314 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367554597 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120378093 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377573949 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.349130956 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.367517176 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.102172393 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623780855 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39069962 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401067137 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.591802362 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.351738381 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36867794 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.36719109 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37297608 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390337951 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.100415105 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388527993 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.37453902 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627855288 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.58167905 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373463508 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.364919301 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868229446 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389350485 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.390272439 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38399686 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605356615 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.016038464 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389654516 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38242233 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392386151 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369947044 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155317687 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371896201 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.474659581 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.370695711 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660845127 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.200328074 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371315963 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438983663 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37534982 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.369931038 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369812874 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372953344 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369405536 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.591282456 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395292248 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.384787196 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.382440593 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370603481 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.380291374 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381042713 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.374564359 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595527067 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371269997 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651981652 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371941488 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372205125 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370903918 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.595202522 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.380235782 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.712402205 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636490082 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375670504 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378767827 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387144457 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389601428 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481176093 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393019439 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.388421723 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.631046452 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.374639928 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.376831539 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371081633 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375318664 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37916832 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.378414548 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387266202 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033471553 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356944371 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382830858 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.261095245 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.387153628 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442173611 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378913075 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608620028 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.38920252 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42659094 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.382687294 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.377742674 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601515014 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384571383 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.37423274 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449796517 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.871675134 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032053532 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390556396 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.373207088 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.371234865 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.370803498 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373228309 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374484089 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375005965 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.608043698 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393369604 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417172729 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.027620367 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380644048 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375130234 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.381568368 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386354556 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.381153859 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376490058 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.388637129 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380277819 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392331091 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.391193175 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5211922 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.391602095 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376570191 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.892919843 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381583335 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376623257 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376435531 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410649634 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.378060973 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205468445 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639740866 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419734259 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671778277 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380915731 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.39687132 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.37627147 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381214627 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390278293 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.38272818 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389140852 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.389351162 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378489147 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383911794 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956109509 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19292617 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98225478 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399727687 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.387437106 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381728566 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.116369014 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397837631 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379049871 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637692186 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.120503808 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399170372 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880464409 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.395080479 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227056648 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675751445 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616881762 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389440427 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.381839346 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678280726 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596996529 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414134147 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385603805 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383228079 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.363078571 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959815656 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398834068 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465249544 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118239456 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408743306 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385127785 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.466567405 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.40272502 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824235183 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404679898 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379305102 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39063678 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39748243 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21318572 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387805115 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381543872 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052246249 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383947455 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.884018027 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401286874 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616007548 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.397049891 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.383658731 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.378120818 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.394813928 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.639264775 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.674927591 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386810118 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382172542 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979304249 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.258686482 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.387221431 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382697021 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175014645 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393922999 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.704557902 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.40300077 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.383026438 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38895956 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384174567 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383048412 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.380289461 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389127756 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36099975 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909744785 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.423852325 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440384792 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40361453 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386470341 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.639227793 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.396931263 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.026081156 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617334457 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426407989 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409919836 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.385941887 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393432224 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.371410141 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383497956 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38400455 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516777932 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.611815988 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39393361 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.368776456 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.439739243 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600799797 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383478265 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394992867 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650781272 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.387096281 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.393547197 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136078224 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417546055 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395176407 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39128073 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.420239497 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.387924839 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458704169 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622397702 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.400515091 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.396382847 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822761033 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416885247 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39178529 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.400363617 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48609813 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385582978 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.389003589 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.163542419 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031915522 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209107881 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.035879755 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682619508 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393103945 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390009924 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386018081 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549222523 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386752562 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659454227 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385901913 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.43961475 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412678584 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400286049 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40133154 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601694135 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661907736 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386638473 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388960986 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390937996 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.387793562 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398066183 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.597731641 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916709375 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977295364 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38961831 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398028764 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.131537651 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68108063 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388710151 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388975162 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387700045 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.398415614 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.41231648 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.393923332 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388520106 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554194031 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679292035 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082466343 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.422173889 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.415512589 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.163333439 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390009482 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.645037383 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386182644 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.625822459 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041515615 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.172640545 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660401634 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459654419 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627417612 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.394382641 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553037831 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.388106674 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394525652 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389633251 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389592643 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.386826199 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.399884648 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038374146 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658854014 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.394293643 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.388450571 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425244684 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.401450692 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.613657866 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1528171 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614568244 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400507286 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397151782 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391068677 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039066784 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.690797112 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395521257 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.395099984 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.654708798 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395695995 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42107263 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.844641442 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.388562825 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988034202 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.364599446 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414084022 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407844197 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.175607456 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048788714 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.401439636 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947161174 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398571354 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401157772 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66936997 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.396874191 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394274388 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673470618 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.397697606 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397990779 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635102208 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.034637424 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24478364 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.407866341 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397663645 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.399722617 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394114067 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503416279 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397891134 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403762601 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.837127281 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41481508 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395096817 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40537792 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.392479519 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412893917 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.395086337 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395053148 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.400226465 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.38307896 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.413512954 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399853907 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.414617523 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983625758 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421535303 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.065173783 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.7191309 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.651019361 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402913821 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.381036343 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.399017824 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395230701 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395138975 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396262641 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.429707808 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992613526 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.405192202 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.409643598 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399987891 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.613657072 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606989248 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.413033263 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638307009 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405408577 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414837768 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.379929458 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395423622 seconds)
  done (took 986.485621124 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.437013095 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.423455087 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.431888525 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.440956808 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.455004853 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.450166562 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.484170388 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.424624477 seconds)
  done (took 20.836253572 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.408161114 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.409788955 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.40224956 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.409069088 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.397143576 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.917639009 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.434436008 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.408999473 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.40778005 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.413030581 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.400781767 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.185034752 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.410765687 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.399784498 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.385941539 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.406076055 seconds)
  done (took 33.094961967 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.606027716 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.614739046 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.75152128 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.436160572 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.414511029 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.414420557 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.72607486 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.430509922 seconds)
  done (took 27.684623169 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.409752332 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.41189067 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.410452729 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.411821938 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.409941743 seconds)
  done (took 8.346150556 seconds)
done (took 1253.649219763 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.402360425 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.40538982 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.40297616 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.405861592 seconds)
  done (took 6.908509264 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.382740439 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.385917509 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.389076904 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.40332898 seconds)
  done (took 9.8525631 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.180757072 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.083899329 seconds)
  done (took 5.555646368 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.399726944 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.15084623 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.147059108 seconds)
  done (took 7.989340964 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.711040689 seconds)
  done (took 3.003098183 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.810876099 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.776020664 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.591736114 seconds)
  done (took 6.4717235 seconds)
done (took 41.072846735 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.402550536 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.650362007 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.558524013 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.399039497 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.559976051 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.557094016 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.13688823 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.414173629 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.405378068 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.416337655 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.399419453 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.562727872 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.189689647 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.651539139 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.189098055 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.656119232 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.558956407 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.412858512 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.403203021 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.401708345 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.137626712 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.411409106 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.403949213 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.400163154 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.562824952 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.550137037 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.402820852 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.650756857 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412244811 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.407215354 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.566462639 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.406587208 seconds)
  done (took 83.531770943 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.418939492 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.400291267 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.404766356 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.418392225 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.401641983 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.424250468 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.424208041 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.402462242 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.410479955 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.407474898 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.401751853 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.414658451 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.405102379 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.405998039 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.40900527 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.402483724 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.401709696 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.405935672 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.405252531 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.402679535 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.424504601 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.403272878 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.402697419 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.403767452 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.402403039 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.423986655 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.422921262 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.402099961 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.403296983 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.42553467 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.40639399 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.420626038 seconds)
  done (took 78.403444024 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.4119472 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.413573575 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.407653923 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.403283246 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.403308354 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.406327328 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.406494673 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.404595955 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.432714593 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.422979031 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.403135675 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.403762221 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.405624604 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.404848321 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.405735799 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.420096035 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.404437863 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.420368109 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.408129932 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.403352323 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.42546096 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.404915608 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.418436821 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.41330862 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.405572215 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.41054081 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.420309712 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.411427857 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.405974273 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.427201091 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.415337782 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.405610329 seconds)
  done (took 78.45439085 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.687193786 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.412272967 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.413939126 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.397865677 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.412678706 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.412847276 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.406362293 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.688111104 seconds)
  done (took 15.129084316 seconds)
done (took 256.810558272 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.405775318 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.416360325 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.626856166 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.436896249 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.412322714 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.437248246 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.433537401 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.644700239 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.427668291 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.647467397 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.427153777 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.431038008 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.404674954 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.432458578 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.703781074 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.564815173 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.381763998 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.407593144 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.791270522 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.430125484 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.714348748 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.413742352 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.698712924 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.411600526 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.412946986 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.408944558 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.421148328 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.364057815 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.450096306 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.778822219 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.416772812 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.406172458 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.500301839 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.524571773 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.632845534 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.577173461 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.407044557 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.524293301 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.638436727 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.42230074 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.408279829 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.243135488 seconds)
  done (took 84.939613723 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.414268193 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.532748174 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.413848649 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.415717929 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.41691387 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.534123629 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.508884821 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.416560858 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.41764463 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.414166584 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.415966225 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.41674115 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.415229023 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.417294803 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.416662762 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.417524082 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.417267768 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.429228301 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.429513363 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.460337112 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.540880102 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.444453505 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.408237905 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.415983847 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.519188282 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.556539721 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.416634361 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.408311505 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.460490421 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.418163136 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.421587343 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.463876446 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.417742226 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.419123266 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.534088324 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.517830677 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.430811027 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.413809919 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.532184528 seconds)
  done (took 57.762993114 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.421150408 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.680898179 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.877912533 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.429074019 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.419441755 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.423695878 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.504141319 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.421496309 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.42360413 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.423684351 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.597263825 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.424606664 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.45633239 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.905334345 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.427568867 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.429639982 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.420770181 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.420823894 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.693294964 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.431674238 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.527607053 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.423527707 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.506605567 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.432467271 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.443766404 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.422551533 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.425774703 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.995746065 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.427739947 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.598609264 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.301003379 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.506005402 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.945642134 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.89469771 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.301176264 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.426013444 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.422925478 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.604351831 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.427504235 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.42189252 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.507037348 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.425454262 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.890003873 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.100967348 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.445740788 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.42134243 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.023498745 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.605579969 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.701866478 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.435586712 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.92172511 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.430213456 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.424653463 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.426078973 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.697314899 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.434317205 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.422793597 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.021491402 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.450570013 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.509899967 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.427408042 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.425226513 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.70509716 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.423849042 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.690876729 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.425320475 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.431823675 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.446555684 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.890574055 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.430722096 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.117985837 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.447362531 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.423575391 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.602065404 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.689047161 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.063619308 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.431869954 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.719871625 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.957196717 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.511505068 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.43192255 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.990668606 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.516739919 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.433509942 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.426769449 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.426621515 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.425200071 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.477847858 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.507887113 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.057106229 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.117321934 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.053299516 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.536189397 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.441426282 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.426486354 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.025192303 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.447845513 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.425386077 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.890342785 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.123530245 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.449971086 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.432733509 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.122167055 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.451603822 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.513717632 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.435478779 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.901336608 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.431668703 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.479365231 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.426134719 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.432749736 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.452171746 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.511983086 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.431908496 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.427697758 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.126782889 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.630776171 seconds)
  done (took 188.39404928 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.419509856 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.442697518 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.434572639 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.421497778 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.42112461 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.430036611 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.421107405 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.422501657 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.426460609 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.42113927 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.421401238 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.4212419 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.42073634 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.427971856 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.433482535 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.428950617 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.422464344 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.422907341 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.433463156 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.422046689 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.422529045 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.443183106 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.4329279 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.422396458 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.422024827 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.424733601 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.42889686 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.42577742 seconds)
  done (took 65.250919763 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.428890507 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.038739797 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.430277918 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.574285397 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.455246312 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.42874883 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.571224278 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.494510332 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.433054152 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.427856244 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.428138834 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.755938569 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.429863298 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.005111755 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.645819497 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.578466646 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.989482777 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.449885362 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.427281919 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.428001052 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.57795017 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.445798357 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.757439709 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.074973814 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.435522364 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.073380855 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.423141344 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.433289142 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.431688147 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.074974227 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.432289168 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.769563697 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.526241666 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.49984517 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.070384314 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.017869046 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.037458233 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.600653791 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.436169963 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.430513377 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.431445723 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.421342393 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.043923628 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.434346887 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.433815386 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.036011804 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.452109297 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.434998345 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.424743244 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.431137942 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.498205522 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.503425952 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.768829493 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.130869783 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.517729971 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.435669299 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.578286807 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.754001587 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.440024975 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.017653725 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.4254536 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.048471703 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.441300831 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.420250774 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.434755582 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.425467611 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.597256029 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.579427854 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.012453137 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.458347301 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.017738371 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.621027769 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.435916772 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.434002821 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.436352661 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.051677915 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.01385396 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.621278923 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.586131749 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.650925524 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.426946584 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.433873695 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.424472978 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.518222938 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.4334716 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.049364529 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.042413591 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.460041735 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.435982849 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.437691417 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.438004218 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.634738602 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.056526237 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.520872635 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.014709035 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.789145653 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.766427787 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.437827735 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.500819904 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.457996563 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.835000984 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.43851456 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.500078888 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.810187991 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.77339215 seconds)
  done (took 171.823895144 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.699764217 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.46142354 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.533779467 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.59797144 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.073023641 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.067846422 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.433970009 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.568019871 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.551784747 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.712025653 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.439697536 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.526192195 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.665483938 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.523880459 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.201758184 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.517126266 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.540291367 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.606021874 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.587672355 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.446379337 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.119242686 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.758740108 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.635399389 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.460092439 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.570616811 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.24927313 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.050042417 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.027642903 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.623526357 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.440627467 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.981644908 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.436903905 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.447256235 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.172132677 seconds)
  done (took 67.048531831 seconds)
done (took 636.517958699 seconds)
SAVING RESULT...
DONE!
