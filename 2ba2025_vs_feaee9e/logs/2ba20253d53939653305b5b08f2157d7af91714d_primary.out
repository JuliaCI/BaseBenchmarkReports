cset: moving following pidspec: 26472
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.955416174 seconds)
loading group "string"... done (took 0.565865864 seconds)
loading group "linalg"... done (took 9.309567908 seconds)
loading group "parallel"... done (took 0.1745979 seconds)
loading group "find"... done (took 1.399757574 seconds)
loading group "tuple"... done (took 2.20826308 seconds)
loading group "dates"... done (took 1.39703327 seconds)
loading group "micro"... done (took 0.23463904 seconds)
loading group "io"... done (took 0.646594569 seconds)
loading group "scalar"... done (took 44.686930793 seconds)
loading group "sparse"... done (took 13.811386693 seconds)
loading group "broadcast"... done (took 1.199988409 seconds)
loading group "union"... done (took 15.643288284 seconds)
loading group "simd"... done (took 5.196938414 seconds)
loading group "random"... done (took 10.70504728 seconds)
loading group "problem"... done (took 2.327884385 seconds)
loading group "array"... done (took 26.817184238 seconds)
loading group "misc"... done (took 1.249237404 seconds)
loading group "sort"... done (took 3.935706985 seconds)
loading group "collection"... done (took 23.865591256 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.737385371 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.154734485 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.173788391 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.22228482 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.236281141 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158635626 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.185950383 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.626525016 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.11525408 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.257820363 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.168075565 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.683747016 seconds)
done (took 6.458663777 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.264705308 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086945847 seconds)
    (2/2) benchmarking "String"...
    done (took 0.151109512 seconds)
  done (took 0.893755074 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.088068309 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.215205942 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.118213497 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.133337491 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.134164887 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.117284648 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.132777195 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.133795968 seconds)
  done (took 1.644307557 seconds)
done (took 3.557809561 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.939017122 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.87082463 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.568334459 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.148858693 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.18799169 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.164331794 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.382869556 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.175988039 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.125278334 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.133420343 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.204198468 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.372558085 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.573945588 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.052859803 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.115664537 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.142716102 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.097713861 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.746393241 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.095938329 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.125225922 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.63922285 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.130911652 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.131947173 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.139416342 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.221763064 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13546438 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.199577967 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.131386565 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.681065848 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115364415 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.203626702 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.114207093 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.1773722 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.29167885 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.096101723 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.121634746 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683429608 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.211224544 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.130043526 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.108331185 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.711506414 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.098306398 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.22785605 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.132001597 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.131798351 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.210753711 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.119590551 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.110720909 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.118590238 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.104270334 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.178754309 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.539931672 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.121831223 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.163251453 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108236488 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.745651708 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.115117639 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.173679729 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.139102207 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.122787941 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.114244623 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.113868288 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.188553477 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.118901457 seconds)
  done (took 21.498252932 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.142642779 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.164941796 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.107087344 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.160638563 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.167940321 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.093715282 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.1157298 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.092639131 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.151495188 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.217854589 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.163329096 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.168227232 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088981011 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.109746201 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119574412 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.275828583 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.142880049 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.127774605 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.113344227 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.109171889 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.163263773 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112423292 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.128131323 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.130082604 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.188076052 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.218211765 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.123955828 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.136162891 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.107816147 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.119951965 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.157306074 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.182688584 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.089203622 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.107366455 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.212063933 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119038036 seconds)
  done (took 5.798163154 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.236749947 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.114589559 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.258171969 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.226196503 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.179660803 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.208460525 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13897879 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.30881458 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.351690056 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.20332106 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143254065 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112387258 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106972323 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.09696727 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.187067679 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.090094934 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.246394039 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.205098218 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.186047973 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.149710025 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12072766 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096198274 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.444908993 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.116356157 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097879495 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.117998709 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085819507 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.213958743 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.119553576 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.558190977 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.134520048 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.112671307 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148511199 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.228359367 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.098911338 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.149028333 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.147969316 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.121938046 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097008372 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.281001327 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11265013 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.10882227 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.125612379 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.149414065 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.150198998 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.115634535 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.120550262 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.286637021 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099353604 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143326315 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.29866113 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.226830944 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.115273299 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.114080522 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.411240117 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115523747 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.12671419 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.114194346 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.349638375 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.158188093 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.11292696 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.091546269 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.120853622 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.091667248 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.467718183 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.131261633 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.253994071 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096481663 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.203532403 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118709814 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.127489397 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099667483 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.11593031 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.120871912 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.111928789 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.092285066 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.110597672 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.092761193 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.09937593 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.132880384 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116295689 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.091670928 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.178051694 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.12320745 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.134672159 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.138173001 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101264076 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.092690048 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.144000911 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.110842321 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099277722 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.115155835 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.151917841 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.124663283 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.132168411 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116109286 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.139946042 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.112473679 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.225600448 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.097475648 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093313542 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.143052512 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.115865125 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142738727 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.144315792 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094124648 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.115194479 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.091880163 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.111536396 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162439067 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096340332 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.110581946 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098946328 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.130825847 seconds)
  done (took 27.492222471 seconds)
done (took 55.439268085 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.449351324 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.136796819 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.138302399 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.137466294 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.138868875 seconds)
  done (took 1.734265509 seconds)
done (took 2.436398031 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.418593419 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.251228355 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.119243168 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.241004406 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.106204683 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.249990814 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.210462527 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.120887123 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.269856355 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.099600581 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.235408848 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100777087 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.123101024 seconds)
  done (took 3.280765904 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.110351311 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.138407148 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095244749 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107265756 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.105187568 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107146265 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123498713 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.130373603 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.124081735 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099498517 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107888185 seconds)
  done (took 1.950117136 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106449969 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113078753 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.110974849 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105037809 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.10572351 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105103389 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121758365 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117573681 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.122814017 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101362132 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104764853 seconds)
  done (took 1.912239102 seconds)
done (took 7.838048951 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.22608107 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.865249875 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120347241 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.194810458 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.411764944 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.230013187 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.649719982 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.138718535 seconds)
  done (took 12.779681603 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.151212451 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.112284273 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096245122 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.115789002 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.09547387 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.11523462 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.094088973 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.11284407 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095397708 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.113083199 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096336273 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094133903 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.116842364 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.093653704 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.115991864 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099276534 seconds)
  done (took 2.496878457 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.137412534 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.136714287 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.122458315 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110845828 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.119373424 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100367389 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.122184427 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.103145763 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.116180334 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.116258726 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.111303208 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.127443462 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.110600907 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.117579317 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105811595 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.132983356 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.100933561 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.123586167 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106706695 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.124421033 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.128410383 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.103956647 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.128044629 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.112640474 seconds)
  done (took 3.651141759 seconds)
done (took 19.628092854 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.202021564 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101282328 seconds)
  done (took 1.017533259 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.118439235 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.13637086 seconds)
  done (took 0.973248271 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.128494862 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.111223638 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.160176983 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.116189996 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.111854443 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.093831222 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.15139179 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.113819023 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096811936 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.113701194 seconds)
  done (took 1.91963664 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.100490327 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100681419 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.122791203 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.137661718 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109447871 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.116895017 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.103503267 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.120359989 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.104700386 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.112772567 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10515515 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.137755575 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.120974393 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12287029 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.119119106 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.119843345 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.108871674 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.118937064 seconds)
  done (took 2.801695667 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.094495113 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096607207 seconds)
  done (took 0.911341768 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.09927706 seconds)
    (2/7) benchmarking "second"...
    done (took 0.109578871 seconds)
    (3/7) benchmarking "month"...
    done (took 0.099076655 seconds)
    (4/7) benchmarking "year"...
    done (took 0.114414204 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093737957 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.109998191 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095076497 seconds)
  done (took 1.438728141 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.598643791 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.275631533 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.404586198 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.142714834 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.18085463 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.443894371 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.181365567 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.138376508 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.137195291 seconds)
  done (took 3.275928289 seconds)
done (took 13.059929882 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.106735359 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.156949397 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.625685756 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.134504517 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093683496 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.177645399 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.329749264 seconds)
done (took 2.348680594 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.401676599 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141552874 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.100205135 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094878783 seconds)
  done (took 1.460113108 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.094583115 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102675048 seconds)
  done (took 0.922471656 seconds)
done (took 3.110687488 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.212638774 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.144998901 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091122523 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.11013874 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.088698529 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.091219489 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.108120764 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088864456 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.108833957 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.091729283 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090791626 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.10834677 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.091593583 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110395777 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090846371 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090210758 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111288638 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090055538 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108101119 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090631956 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090365487 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111490023 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090554213 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.108622915 seconds)
  done (took 3.284375072 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.119486094 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.11129809 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.099832964 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.117677175 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.097277917 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.117126788 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099169962 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.110357951 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.099645998 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.112491047 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097669464 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.114573006 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094468154 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.114858864 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095246412 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.115953594 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.115991394 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094004851 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095483605 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.115565755 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.115803611 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094302329 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.114604479 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099161867 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.115170332 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097993154 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.114190949 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.095666301 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117954214 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100168073 seconds)
  done (took 3.929700308 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.104099268 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088375873 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.107710205 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104068355 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.107687129 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09387169 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.108352453 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092103214 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092196649 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.110182902 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.093370459 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.110158944 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091623385 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110967178 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093659414 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100147644 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.137915333 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091171863 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.110560774 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092717008 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.116682318 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092114333 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.112373803 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.092560956 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090904159 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.108587453 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092012666 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109410152 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09337143 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090862016 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.117216975 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.10001101 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.108739588 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.108685027 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.117144036 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089319985 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.118351912 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089600739 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.10910414 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090950982 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.088850361 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.10877453 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091296101 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.123458611 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.096385455 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092052615 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.10947073 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.091714124 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.109014994 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094163007 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.106364892 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090037451 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092530143 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.109506887 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097223735 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.106823703 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090767104 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.106494425 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092152248 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08955596 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.107288668 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089577727 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.118141529 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092011459 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.142904579 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.107643184 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.109711847 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.0948807 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.111402899 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.102948318 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.110296071 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.115450946 seconds)
  done (took 8.111429585 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09801438 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121073735 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.093495513 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092650862 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107121264 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090741943 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116785398 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09072141 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110230906 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111620291 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108468184 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093378825 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110887884 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095259311 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108527803 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094072046 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120739508 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088825316 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090486221 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113451358 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092209309 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116932161 seconds)
  done (took 2.995703477 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.282557077 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.120602074 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.174765869 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113870946 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.137462651 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.130969696 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100010334 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119855209 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100358767 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.123514709 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106258185 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118002074 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.137009354 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10553823 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123179228 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106489259 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117511362 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.124903363 seconds)
  done (took 3.074204358 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.11134007 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.112064634 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.122736797 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.111571336 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094646308 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.115475925 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102671044 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.130850688 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.09696864 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.111982025 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.107127891 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113899164 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.097439789 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112017201 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096912094 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111594201 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.096788977 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111859944 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107047652 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.120388717 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102834318 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1245997 seconds)
  done (took 3.14770687 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114235155 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.1136586 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.121415417 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.119144121 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092332692 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109774071 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103586667 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.111909642 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.104706839 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.114706633 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094327265 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.109597908 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105168798 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112090765 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103351987 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111931486 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09679078 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112865567 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096656744 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.107042433 seconds)
  done (took 2.889957276 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.14607575 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131774494 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113467053 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.145426352 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131827538 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113960077 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.145268858 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113482812 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132084213 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132306847 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.131641761 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.131688847 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128911964 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.140696854 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113354174 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.145572546 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.146220252 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127250829 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.132500605 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114117121 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150831274 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.133516927 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128096344 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.13212661 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113178065 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132659142 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114016304 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.140776945 seconds)
  done (took 4.396773765 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093519025 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092502936 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.109073289 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.090341432 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.107936384 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091497614 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090411362 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108810469 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093190276 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110178004 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.096005993 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094895196 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11265388 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.096135185 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112520823 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095549596 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094773692 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.112600756 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092744177 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111337225 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095448714 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113009824 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.096783879 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092656374 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1104532 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095476018 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109421181 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09337294 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093199872 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109258833 seconds)
  done (took 3.754820402 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.1061452 seconds)
    (2/2) benchmarking "in"...
    done (took 0.12044132 seconds)
  done (took 0.967596074 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.092984174 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.131751557 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.09129028 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096344266 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.12007632 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094902417 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.126443073 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119327709 seconds)
  done (took 1.614253181 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.124396845 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.13467029 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.100589279 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.128286926 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.115389717 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.134955451 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.202423183 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102786401 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.122657813 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098935407 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.137661192 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.097780132 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.125569693 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102214831 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.123839914 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115076419 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.111283092 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10910782 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.123964022 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.10009216 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103354328 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.140693634 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.13160604 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107544538 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.119631327 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114307443 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.136557272 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.111625579 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.124402705 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.116118877 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.122928415 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087178207 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.118169512 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100780108 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.110966935 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.116587618 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.141462095 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104424499 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.127892502 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104557117 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.128496231 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092267263 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.132529523 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106121139 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.132645973 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103365955 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.123487135 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092133938 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.117308653 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.102856886 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.091613422 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.123466918 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090446951 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.130365748 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.11168894 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145171202 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.117810217 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104620705 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.103702799 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.121490306 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107119397 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.122738018 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11265232 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.120961525 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110963903 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.129738925 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109846221 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.111080963 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09049826 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.114291892 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111700211 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.148847779 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.116134429 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.123202058 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105130043 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.114849231 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104858341 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123484485 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110032111 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.133917361 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102800005 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.127383859 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111343587 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.122508192 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.10297664 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.125961657 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099990599 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.119626964 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099081303 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.149448557 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100021992 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.114118545 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099377165 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.134304718 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102933339 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.120995767 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.099402016 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.128663378 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090687074 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.122372611 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104680148 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.125260091 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.119624896 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123101489 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106128203 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.129262182 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.111651155 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.124173597 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103444098 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092888511 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.12422818 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099591999 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.127600104 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090938813 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.124549574 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.105192532 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.123296385 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.116026239 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.118932054 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103152436 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.131292035 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.115130456 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.11987272 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094408265 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.122359702 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103669614 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.126041965 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.117074004 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.119633464 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092922573 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.111508427 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.112347195 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.121409695 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.109043042 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123232158 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106168786 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090706795 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.116069643 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104299246 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.135669896 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102964528 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.126772296 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.11338558 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.127848446 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100871098 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.133997395 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101216754 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.119720942 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.112990484 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.125637664 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.092834731 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.128407295 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103624793 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.120285581 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104019797 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.128208184 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105058053 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.1233202 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100925592 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.122888728 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105641157 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.114660764 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104817876 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.115751914 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.118643747 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.122779704 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093429331 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094397659 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.125665654 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099315202 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.121574198 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098453663 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.123629321 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.105968018 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.124640502 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102749815 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.121587124 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120945763 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.132794265 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105473569 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.127917547 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113904322 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.121735298 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.108050811 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.121995181 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106250621 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.123590975 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112801965 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.126721614 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106018385 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.123150178 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09541425 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108093989 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.132614864 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099676338 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.115950808 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.098797377 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.122350322 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.116820799 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.121490124 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105494463 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119293276 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110178009 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.129121888 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10564473 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.121953524 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099460469 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.123428607 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.110919606 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.105706695 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.12718644 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.134134538 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107853571 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092873669 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.129310062 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100348497 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.12961384 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094455677 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.120723636 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100672228 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.125329087 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.105649502 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.122164506 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092863394 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.131024283 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114438438 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.125852582 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.10055106 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102848973 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.140677319 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.121394794 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110628712 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104328116 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.130682115 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.14603357 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100339092 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.122809653 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.117946782 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.12049501 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089911039 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.124182929 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099300777 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.094368045 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.118135202 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097597254 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.121903419 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10471974 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.123312312 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.089012793 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.120556084 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100594978 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.11519784 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094424992 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.130775023 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107747762 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105541824 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.140020536 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124846824 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10645785 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.126530474 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.104846584 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104515671 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.124742995 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102671361 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.12183873 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.098806237 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.11693924 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103481719 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.116278387 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096907088 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.122998494 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105707747 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.125604306 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108665362 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.121636723 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115570831 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.125903365 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106139314 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.16585806 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100027531 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.118192562 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103922127 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.125752592 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101114741 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.121931175 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094570114 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.130106024 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103861628 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.133144676 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104303796 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.114640475 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107463119 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.123963402 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104698032 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.120811141 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102443288 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.09989462 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.12005868 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.101253448 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.135321435 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097305024 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.133672592 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.12399188 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106487082 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.120584018 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104730169 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.099747358 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.117134796 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102848719 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.12331008 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.104358458 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.121745062 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108089051 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.123702291 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100930896 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.117768147 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102571744 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.122995163 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104281134 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.107876372 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.097184382 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.096572083 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.120731125 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.127140221 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103088148 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.098863456 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.117273607 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102797705 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.118448836 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.091756388 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.125376287 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105435009 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.12094242 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116460951 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.117087626 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103369965 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.138157708 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.089366342 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.11729429 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09717657 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.118761969 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114470998 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.120501239 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110392753 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.121406038 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.09764082 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09283831 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.122181441 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098812891 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.109291805 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095338538 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.12593857 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09944389 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.1174349 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102972619 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.124899301 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103683276 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.127828871 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099945642 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10363654 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.121034262 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.092763848 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.117128708 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.097481966 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.123032147 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103978861 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.119472592 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097859924 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.123242694 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.108857221 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.126636801 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.105291471 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104206038 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.133275508 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104914481 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.126564413 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112196052 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.115036225 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107246008 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.124565047 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105523384 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.121141507 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109028826 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128423273 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108099801 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.131189771 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105859659 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.126833442 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105903836 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.116901856 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102920681 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101141538 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.122236618 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.097085481 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.122472167 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111909343 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.113813503 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104686695 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.124144998 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.099415755 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.125319553 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104957367 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.128870677 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111383739 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.126911484 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107978406 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.131447658 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106150133 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.128365153 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107990832 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.120490583 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11179153 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.116169709 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.114512562 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.12340788 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104286555 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.119432751 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099178236 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10091571 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.122635925 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10014657 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.132133907 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103215858 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.119061401 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.097625446 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.114326336 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.104913216 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.127957728 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112212157 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.125084482 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107626096 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.114807039 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098204096 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.127480823 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.103572428 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105448558 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.130587302 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.128601678 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107305474 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101402112 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.124386189 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114517814 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.133227925 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111803705 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.123933119 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.111560575 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.129162036 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107820463 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.120639259 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105914975 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.128508258 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111252208 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.122502192 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101511001 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.140475116 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.114796004 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.127175866 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104888116 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.130693683 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106384488 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.115877458 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.107685534 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.128443785 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113181622 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.128230699 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106478961 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.143512715 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100790875 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.125361302 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113574247 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.125135699 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.118345691 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.116489532 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.109053365 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.128405134 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109572335 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.115469406 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103004609 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.103377441 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.128222701 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101565223 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.115618657 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123007575 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.133284465 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107044748 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123403009 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104025289 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.117055191 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097305955 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.122656414 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109810987 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.12620596 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.121380521 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.120672758 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10281326 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095942159 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125545902 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107720069 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.128999653 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097774476 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.116777138 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103048066 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.130588769 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119914237 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.123022683 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.106590955 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.128846816 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108728154 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.117665686 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113771928 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.09527382 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.128684506 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.140857005 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108750566 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.127082137 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.114930036 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.134885975 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.108582429 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.114063134 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.108765708 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.128532623 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.110048452 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.127342975 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.109991004 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.152702777 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108716259 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.117564128 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.105072365 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.125536286 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103398161 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.137888692 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109255734 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.107230575 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.131821117 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.104878916 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.132973618 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11666504 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.133280484 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.129299875 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.11127294 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104608797 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.129701566 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103196324 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.126340631 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.109908789 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.128777667 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106988952 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.131001633 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.103336872 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.145098948 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.120156152 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.130117445 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097812042 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.122914679 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104304205 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.095133085 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.128804789 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.096885273 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.123004553 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.1044027 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.125296097 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.112665711 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.131964344 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.110045053 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.128648894 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.108100107 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.114713966 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.114045008 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.128462397 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112529707 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097290031 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.12979584 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108577417 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.137500399 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113144179 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.126869444 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.109342811 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.127388053 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109195322 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.115166293 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111873367 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124766448 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.106481139 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.119308848 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105678083 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.123654822 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106803847 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123925165 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107193886 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.12402461 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.109985756 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.126434609 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.097818131 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095250762 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.127444225 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.0957888 seconds)
  done (took 69.153905144 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.184816332 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101195881 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.091906772 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113025639 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.148270399 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09523748 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111832185 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095473529 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.094223458 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.133933909 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110766398 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09334989 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.142561187 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.152746183 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127074932 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.132921561 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091417963 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115175165 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092759519 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11448095 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.141299857 seconds)
  done (took 3.278467557 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.124546955 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.137578547 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.135813829 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124383601 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.13008196 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119667367 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.140586561 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140786448 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.145828392 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114735967 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.146649228 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.141604916 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.115061273 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.133073248 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110854397 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.133158301 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.141056508 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10761497 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.137260407 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.135676818 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114865972 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.137535101 seconds)
  done (took 3.661511696 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.107871651 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10143856 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.129592593 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.095037444 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.120960679 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.095462524 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.128738493 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.103044702 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.13431191 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.108613914 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.123835075 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.10840101 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.133409872 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.100484221 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.105416892 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.122885802 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112886559 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.124440606 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108743965 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.116820963 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.149418964 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.121287997 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.096879636 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.121391709 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.112623101 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.123992541 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.101765912 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.120901487 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.100515531 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10068892 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.117910065 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106781162 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.130301159 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.100186176 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.119832247 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101694252 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.121524101 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.095930003 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.117000387 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.10976169 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.114952483 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104330383 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.133204559 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099840973 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.097328064 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.125814935 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101969778 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.11565739 seconds)
  done (took 6.241536201 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130809601 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.166610096 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.122732469 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.164975204 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.141273082 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113313863 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.123531052 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.162756567 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.097021274 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.118337937 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123103854 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.140583555 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120225684 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107288978 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.126522832 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.100341952 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.12262403 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098841697 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130881923 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103295548 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.132253798 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.127322693 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121978592 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.141765578 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.133107299 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10419484 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121673967 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111788944 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.143346764 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.116123749 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.13410027 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.133176363 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12709745 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.126797336 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.1069696 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.128472709 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.149246753 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106267905 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.128277335 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102314255 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.128086948 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113283131 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.132944878 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.128772047 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.130383378 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.130696892 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106280907 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.120432475 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124226423 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.128145615 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.12045755 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.147412175 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.131378532 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106536583 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.132134519 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.147209884 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.106230579 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.12278836 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111115835 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.143432952 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101053729 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.134590727 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.145734335 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108285697 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.137296237 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.125347345 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.132134605 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.133385585 seconds)
  done (took 9.501588025 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12172934 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.147425815 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124077026 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1461474 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131462549 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111927219 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.132573757 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113410592 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.135675248 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.143232103 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117612534 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.199473828 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.127263577 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.124566295 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.136733833 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115473171 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.136932817 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115843568 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.139248659 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135979334 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.117356595 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.150062988 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.11589355 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.151744196 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.155521384 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107161145 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.14004761 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.136023384 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131435049 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.1378521 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.156183219 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.117272238 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.136806689 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.150259123 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13664107 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.133962184 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101002508 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136149081 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.11592339 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.135010987 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107414287 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.153387822 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.136712714 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108403003 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136978271 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116255819 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.152059643 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.156248426 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.143075847 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125373568 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.137718946 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.149893911 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118287242 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.136829358 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.131187284 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.160793449 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.151474511 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.151714315 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117000375 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.149158205 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.151313988 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.161492087 seconds)
  done (took 9.175259414 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10026628 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097704795 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118110006 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.096144274 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118855236 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097322319 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098152518 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121733926 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101702979 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.121802755 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105461932 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101109731 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118530059 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100798946 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118713347 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10034902 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096086928 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.122521634 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106161669 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.120062201 seconds)
  done (took 2.969765409 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109808155 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.145998608 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.105283813 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.135482873 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108935808 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.135068796 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107891161 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127851693 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105146438 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127434989 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.12125218 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.140852277 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120431137 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113609982 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.13715765 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114621089 seconds)
  done (took 2.769003013 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.126146263 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.13911982 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.149848017 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106181107 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.096650348 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.133827169 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.098348051 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.118222478 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.095327171 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.132475865 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.107505468 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.132141518 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.099906919 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.118680756 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101066672 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.12687604 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095661254 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125221447 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.100124861 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.149764919 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106672478 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.125629408 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.100954191 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.125073643 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102807783 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129214306 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108945162 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.119690444 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098595692 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.123605489 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.107644794 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.138012988 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101954215 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.132120125 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103470908 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.125060697 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106583471 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.127865318 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113843134 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.126692185 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104809344 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.128589995 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.106980245 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.127442762 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101571758 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.099696197 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.118941255 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107540795 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.123420321 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103275632 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.121619263 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109108422 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.129763048 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11367325 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.133968038 seconds)
  done (took 7.225007171 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.118484522 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.124500348 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.108126735 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.116973113 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104471724 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.127864749 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105522283 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.101462861 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.129782957 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.101021564 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.13048367 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108961396 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.130089346 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110174742 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.128432368 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109743273 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.12160701 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109172286 seconds)
  done (took 2.90383108 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107731102 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098673683 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.130988798 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.099545087 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.120840872 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101979409 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116038 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.098264354 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118145659 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100975615 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119463085 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102894749 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096747059 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123566367 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099686138 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120635755 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.102244469 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118254084 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100818087 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114825888 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102969083 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096970915 seconds)
  done (took 3.212982055 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.124854322 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.162821789 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.119455957 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.174637644 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.127959058 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.10800269 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.139708958 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.108874542 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.149756021 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.106640684 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.125923754 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.107013244 seconds)
  done (took 2.374895897 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13307176 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169009695 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098751086 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124439125 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116734447 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129918611 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107221317 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130378083 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143723935 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.148461073 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109769026 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143123394 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121767639 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145136138 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136725868 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116696967 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130056722 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128161852 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102246201 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156819737 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109747024 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146428131 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128256525 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108342648 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128527419 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141685937 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123448663 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.149906769 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128419182 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123657159 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139395717 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107328758 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144496668 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148809881 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102383539 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143763563 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129231418 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.155620359 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119501227 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144426442 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10565507 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140377963 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145443029 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122935962 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14340982 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128210326 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118827043 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128821548 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107868055 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167217987 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138495553 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14363714 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117099981 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143344116 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142988144 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167416213 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127470013 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144188074 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137182217 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.148958889 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122238185 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138590636 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144534495 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127401458 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138748524 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142994148 seconds)
  done (took 9.572025851 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153284011 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120844871 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108371534 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14921046 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14318093 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107827284 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130364343 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128258389 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109309609 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122464529 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188613648 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109311361 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143074983 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143729791 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110184339 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128547369 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108831856 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14431239 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101695207 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168193019 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137042412 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150927674 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129018113 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.151108991 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.155913473 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143016957 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115185269 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130822382 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114025905 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134697811 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123902318 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133385114 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14401476 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101287157 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143685181 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108022944 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13063778 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137948904 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109592799 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138680671 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143183298 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135782907 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130173205 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107706819 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1496945 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129829977 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108097843 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123908726 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107963093 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123990675 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148581927 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128008011 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.150538645 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144123355 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128805873 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110358384 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12862739 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10959463 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130015516 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117296344 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144039773 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129127196 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167510974 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109473636 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129807574 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122426431 seconds)
  done (took 9.43680682 seconds)
done (took 180.366977167 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.123674311 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.166575288 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.11697956 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.187567483 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.100587769 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.15790889 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136946453 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.138457695 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10001572 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.09924968 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.123754246 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.10481147 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.190243265 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.100599743 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.121233669 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10624521 seconds)
  done (took 2.899376096 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.217857221 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.333040272 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.127914789 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.130138413 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.110454021 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.126698221 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.108240399 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.130351381 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.103261083 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.141734115 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.104918215 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.127058371 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.120294062 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.127012339 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.103201331 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.126597435 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.121181039 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.126711433 seconds)
  done (took 3.320030339 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.142796121 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.175051771 seconds)
  done (took 1.145526996 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.146299149 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.223942847 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.352830421 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172292393 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.158957358 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.157631935 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.194956061 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.126273765 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.229262406 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.156263299 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.154367866 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.110083152 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.162867232 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.139388854 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115863518 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.130557734 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142092866 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134298399 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.110626417 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.13359048 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138213313 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.134298228 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.138144559 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113416588 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.217533257 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.153884393 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.112428584 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.134213379 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11176355 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.132300767 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.140981627 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.135317788 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.153637963 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.216335834 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.138547325 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.212912079 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.144046666 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110528777 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.132271255 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.109766065 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.137360385 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.135746504 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.13170059 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.13125765 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.112009821 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.142986707 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.111698627 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.133624918 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.122291173 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.146621587 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.143108306 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.119978826 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.233341177 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128968139 seconds)
  done (took 8.894557028 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.969098728 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.186128765 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107599686 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.12109463 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150266393 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.15385717 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.22181047 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14168723 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.318672146 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.967301152 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.159915917 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127252971 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.306499048 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.301765154 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.230104559 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.412217727 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.816878154 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.155905023 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.142126541 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.188285571 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140393037 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166380759 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134026079 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.491868062 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.132636974 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10530555 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138841477 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.142015207 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.205996314 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.105882776 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.133714265 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.231509835 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.311237408 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.264146712 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112367948 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.127908691 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104743735 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.239151908 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.31770673 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.281702024 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.209309364 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101231297 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.12804379 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12386171 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.157339109 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123238224 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.210879405 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.219580357 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.220242455 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.134442389 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120661136 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.144512742 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144014472 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.209563064 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10245183 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.411759011 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.416342962 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105010144 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143838941 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.150651883 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.304458277 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128425743 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.297094509 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142377617 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.277535445 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.10428978 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.85477807 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.212434606 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.128056824 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117218583 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.14002584 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.135192329 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123791503 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.202088747 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.434061 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.148223008 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.1115725 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128126723 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.280300609 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.127149833 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106509182 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.209939588 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132206823 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118637946 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.149578374 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.145978832 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.217430011 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.295660902 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.147103147 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118594462 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.136347099 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14486807 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.110652261 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.261716478 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.292208647 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.205502582 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.2830403 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124470267 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.210408657 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.234857168 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121443244 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.239028556 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11829713 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.15030709 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12264677 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.286840842 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.176350911 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.127158654 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114354283 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139634752 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.177964213 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110494915 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139027272 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.215177748 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.522166844 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.210712721 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.125160342 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109261121 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141588541 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.208358895 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137728937 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.301392324 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143811318 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.214647712 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.139644031 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.102682899 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.140178854 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.212008498 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.14569226 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120645437 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.147647643 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116465546 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.320340899 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.260537507 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.147104115 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.298869046 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.190004696 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.141044567 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.219902263 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.142803038 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.215839329 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.141784551 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122253136 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133697983 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.847191554 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123628353 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.14094006 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112771575 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.231626796 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12778384 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106951363 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126843891 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104305094 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.880824485 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109304102 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.124082421 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.108399972 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.139867406 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118378556 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139163538 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11320834 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.207167699 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.305875551 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.143941088 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.137927938 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.106693203 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.205927672 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.131676732 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106539304 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126903545 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106976972 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.140968974 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112669453 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128254363 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.220129014 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.204166524 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.291394739 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.597116221 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.129528623 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.105785774 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.302548499 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105103016 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.377967545 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141108576 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.294123406 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.215199949 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.103206957 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.409876876 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.215705025 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.235316752 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.131424391 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.219375732 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102384227 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139285482 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.208194251 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.127406563 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117533802 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.204103012 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.15115097 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.147667794 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.208306798 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.129046802 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.276495707 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.124456145 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.216234196 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110500802 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144870803 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.378775259 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10626087 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.153779613 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.208048927 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134423815 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107949446 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.845028654 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.129698577 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120636098 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.140852959 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.296463894 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.212373867 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.140560409 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118206102 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.143883959 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.208867028 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.260620152 seconds)
  done (took 52.372337905 seconds)
done (took 69.46336721 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.400816359 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.338202715 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.372661409 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.254162953 seconds)
  done (took 2.308790829 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.222087619 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.190407915 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.153194598 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.127902919 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.18737907 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.106252861 seconds)
  done (took 1.84245348 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.667640797 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.534625965 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.429603965 seconds)
  done (took 2.493947554 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.302415258 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.328425964 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.376472452 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.567369608 seconds)
  done (took 2.546758734 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.2502395 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.125842659 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.14190912 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.160280539 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.186330165 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.27287211 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.170345738 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201242814 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.133819166 seconds)
  done (took 2.557606827 seconds)
done (took 12.61001767 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.165452415 seconds)
    (2/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.148595579 seconds)
    (3/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.383829337 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.208513882 seconds)
    (5/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.32798149 seconds)
    (6/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.138513385 seconds)
    (7/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.278937374 seconds)
    (8/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.304975655 seconds)
    (9/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.138161725 seconds)
    (10/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.222300761 seconds)
    (11/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.279343758 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.111548993 seconds)
    (13/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.259849405 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.147134984 seconds)
    (15/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.180612801 seconds)
    (16/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111707821 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112982517 seconds)
    (18/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.261078846 seconds)
    (19/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.152863456 seconds)
    (20/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.211702719 seconds)
    (21/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.10027827 seconds)
    (22/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.269159163 seconds)
    (23/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.233147398 seconds)
    (24/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.264420415 seconds)
    (25/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.231768283 seconds)
    (26/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.147184972 seconds)
    (27/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.307473628 seconds)
    (28/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.16269339 seconds)
    (29/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.158378969 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.200825448 seconds)
    (31/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.11627971 seconds)
    (32/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.245068264 seconds)
    (33/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.147646815 seconds)
    (34/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.105744132 seconds)
    (35/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.2215241 seconds)
    (36/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.210813616 seconds)
    (37/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.212576404 seconds)
    (38/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.255836166 seconds)
    (39/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.176062194 seconds)
    (40/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.148308522 seconds)
    (41/286) benchmarking ("sort", Int64, true)...
    done (took 0.260081673 seconds)
    (42/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118940296 seconds)
    (43/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.143176382 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.170914292 seconds)
    (45/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.113126222 seconds)
    (46/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.134990972 seconds)
    (47/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162553814 seconds)
    (48/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.212036038 seconds)
    (49/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.212513123 seconds)
    (50/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.234794598 seconds)
    (51/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.154706982 seconds)
    (52/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.171618802 seconds)
    (53/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.220272463 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.170235828 seconds)
    (55/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.249897369 seconds)
    (56/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.146986829 seconds)
    (57/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.19714261 seconds)
    (58/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.112206876 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.138228442 seconds)
    (60/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.143611354 seconds)
    (61/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.113102716 seconds)
    (62/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.156179317 seconds)
    (63/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.121203793 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.132260797 seconds)
    (65/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.090012478 seconds)
    (66/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.295845826 seconds)
    (67/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.137280712 seconds)
    (68/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.124143588 seconds)
    (69/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.225602418 seconds)
    (70/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.117833147 seconds)
    (71/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.127120446 seconds)
    (72/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.177063517 seconds)
    (73/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127409957 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.138866575 seconds)
    (75/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.150626465 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.17197014 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.126870387 seconds)
    (78/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.103569645 seconds)
    (79/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11867364 seconds)
    (80/286) benchmarking ("sort", Float64, true)...
    done (took 0.266486993 seconds)
    (81/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.114159992 seconds)
    (82/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.127235641 seconds)
    (83/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.147274481 seconds)
    (84/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.155193985 seconds)
    (85/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.165643149 seconds)
    (86/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.234633069 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.137238447 seconds)
    (88/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.125475282 seconds)
    (89/286) benchmarking ("sort", Int8, true)...
    done (took 0.258007664 seconds)
    (90/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.179827852 seconds)
    (91/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.111841194 seconds)
    (92/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.113122898 seconds)
    (93/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.092601152 seconds)
    (94/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.14360379 seconds)
    (95/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.111220238 seconds)
    (96/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.160309452 seconds)
    (97/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.168752588 seconds)
    (98/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.095617506 seconds)
    (99/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.216556422 seconds)
    (100/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.088427079 seconds)
    (101/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.212613427 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.121849101 seconds)
    (103/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.211589337 seconds)
    (104/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.140405517 seconds)
    (105/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.119377268 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.138081965 seconds)
    (107/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.128018039 seconds)
    (108/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.114361423 seconds)
    (109/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.089470969 seconds)
    (110/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.179720433 seconds)
    (111/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.109082187 seconds)
    (112/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.230536486 seconds)
    (113/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.088986259 seconds)
    (114/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.174953224 seconds)
    (115/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.136402848 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.227381974 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119746417 seconds)
    (118/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.112686968 seconds)
    (119/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.155851798 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.168897141 seconds)
    (121/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.134141697 seconds)
    (122/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.090733249 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.111041263 seconds)
    (124/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.144655568 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.167493229 seconds)
    (126/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.112033277 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.136359178 seconds)
    (128/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.124002991 seconds)
    (129/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.142446592 seconds)
    (130/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.122251931 seconds)
    (131/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.181080503 seconds)
    (132/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.134623649 seconds)
    (133/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.146763799 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.119060596 seconds)
    (135/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.136568788 seconds)
    (136/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.178355386 seconds)
    (137/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.089998503 seconds)
    (138/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.134125365 seconds)
    (139/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.112575456 seconds)
    (140/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.115776578 seconds)
    (141/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.115949072 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.104619557 seconds)
    (143/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.210886236 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.137417945 seconds)
    (145/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.090020276 seconds)
    (146/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.090382247 seconds)
    (147/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.139055857 seconds)
    (148/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.17082614 seconds)
    (149/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.088976994 seconds)
    (150/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.119436527 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.144116863 seconds)
    (152/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.139226634 seconds)
    (153/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.095296866 seconds)
    (154/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.141478487 seconds)
    (155/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.193500138 seconds)
    (156/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.158491403 seconds)
    (157/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.091362556 seconds)
    (158/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.118840394 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.123450787 seconds)
    (160/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.142770763 seconds)
    (161/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.105571276 seconds)
    (162/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.114450765 seconds)
    (163/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.089441986 seconds)
    (164/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.161587829 seconds)
    (165/286) benchmarking ("sort", Float32, true)...
    done (took 0.269484682 seconds)
    (166/286) benchmarking ("sort", BigInt, true)...
    done (took 0.289557817 seconds)
    (167/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.104930059 seconds)
    (168/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.132568178 seconds)
    (169/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.125131788 seconds)
    (170/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.148926732 seconds)
    (171/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110660201 seconds)
    (172/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.145917352 seconds)
    (173/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.152338196 seconds)
    (174/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.129110866 seconds)
    (175/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.135184462 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.138755271 seconds)
    (177/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.179078108 seconds)
    (178/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.135228192 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.136238587 seconds)
    (180/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.11358044 seconds)
    (181/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.089296233 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.144758753 seconds)
    (183/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.138334354 seconds)
    (184/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.112478589 seconds)
    (185/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.164593795 seconds)
    (186/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.090761392 seconds)
    (187/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.089315331 seconds)
    (188/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.113247176 seconds)
    (189/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.090806909 seconds)
    (190/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.132500604 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 0.260525571 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111191063 seconds)
    (193/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.137873452 seconds)
    (194/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.231346245 seconds)
    (195/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.113935647 seconds)
    (196/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.170279578 seconds)
    (197/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.232100359 seconds)
    (198/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.091513239 seconds)
    (199/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.111521509 seconds)
    (200/286) benchmarking ("sort", Float32, false)...
    done (took 0.204793304 seconds)
    (201/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.138421666 seconds)
    (202/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114759487 seconds)
    (203/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.145631037 seconds)
    (204/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.123279996 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.147784191 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123310088 seconds)
    (207/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.135837349 seconds)
    (208/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.113969059 seconds)
    (209/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.111368147 seconds)
    (210/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.102737525 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.147254303 seconds)
    (212/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.096795035 seconds)
    (213/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.089201255 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.132966649 seconds)
    (215/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.208429462 seconds)
    (216/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.092355058 seconds)
    (217/286) benchmarking ("sort", BigInt, false)...
    done (took 0.27658923 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.138773757 seconds)
    (219/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.109735048 seconds)
    (220/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.130228982 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109770128 seconds)
    (222/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.133502185 seconds)
    (223/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.090126212 seconds)
    (224/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.135976706 seconds)
    (225/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.10977521 seconds)
    (226/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.284004869 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.13814679 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.115712869 seconds)
    (229/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.114245302 seconds)
    (230/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.128679839 seconds)
    (231/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.111645207 seconds)
    (232/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10678896 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.137264168 seconds)
    (234/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.090915573 seconds)
    (235/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.10517162 seconds)
    (236/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.113684918 seconds)
    (237/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.113484762 seconds)
    (238/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.132983776 seconds)
    (239/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.091904598 seconds)
    (240/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.140225073 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.115434117 seconds)
    (242/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.167499044 seconds)
    (243/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.107651412 seconds)
    (244/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.111339145 seconds)
    (245/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.106919098 seconds)
    (246/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.113301178 seconds)
    (247/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.117036772 seconds)
    (248/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.113314085 seconds)
    (249/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.137817312 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123254066 seconds)
    (251/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.112746408 seconds)
    (252/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.092225581 seconds)
    (253/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.120657155 seconds)
    (254/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.089241969 seconds)
    (255/286) benchmarking ("sort", Float64, false)...
    done (took 0.201510954 seconds)
    (256/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.092556833 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.138810695 seconds)
    (258/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.097120013 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.106184002 seconds)
    (260/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.13687574 seconds)
    (261/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.122506339 seconds)
    (262/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.113840578 seconds)
    (263/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.116501821 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.131085889 seconds)
    (265/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.090405022 seconds)
    (266/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.113205506 seconds)
    (267/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.117910431 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.146764763 seconds)
    (269/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.100461482 seconds)
    (270/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.089370302 seconds)
    (271/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.135441314 seconds)
    (272/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.091336188 seconds)
    (273/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.138368434 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.111336402 seconds)
    (275/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.120020681 seconds)
    (276/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.089358826 seconds)
    (277/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.134777986 seconds)
    (278/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.092534458 seconds)
    (279/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.105645248 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.13514209 seconds)
    (281/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.089901686 seconds)
    (282/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.114389074 seconds)
    (283/286) benchmarking ("sort", Int8, false)...
    done (took 0.23984761 seconds)
    (284/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.092126616 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.138764557 seconds)
    (286/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.108442165 seconds)
  done (took 43.417220472 seconds)
done (took 44.284405208 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.12369666 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.177147282 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.119137711 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.164993397 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122479598 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.149393057 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.140406613 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.121555034 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.145355388 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125205755 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.148901441 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.100825111 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.142933143 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119423673 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.144284673 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141052735 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.146457965 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.115940614 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.134060305 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.111102863 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.134808892 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11218807 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.136227373 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.100710723 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.141169889 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118682157 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.13743908 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119257119 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.136002903 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.107289264 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.132022347 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.114569647 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.131454045 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121968269 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.134275132 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.111128145 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.143160409 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.117217179 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112761183 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.136185438 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.113942736 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.136981618 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.112612622 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.138986567 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.111275467 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.134447535 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.110177561 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.147421764 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.164794605 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109652887 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.114141766 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.142289708 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.121290373 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.139756835 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.108179359 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.134496436 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.112605611 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.16524807 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.108740226 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.133229035 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.114301162 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.139363583 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.110473463 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.134650542 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110379938 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.141971344 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.118226362 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.134901535 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.118227684 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.154622365 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.105345583 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.134384473 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.109155533 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.130017349 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.117686011 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.140170445 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.103712205 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.111451739 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.138069725 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.112066513 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.135604947 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.106536196 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.137568843 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111844854 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130588724 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.100923072 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.131983586 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.113063601 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.134924536 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.110831965 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.135177024 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.113460102 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.137827476 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.120616938 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.13485251 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.11393553 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.135473364 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.112650701 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.136824567 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.109170517 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.103904331 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.132531537 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.114206825 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.130642408 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.11164597 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.146214053 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.108629622 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.13727862 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.111606464 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.135446778 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126677569 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.142156121 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.112402522 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.133386426 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.10657297 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.139535695 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109677747 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.131955953 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.108773956 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.135584419 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11228978 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.135592432 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.107762544 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.138097077 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122693352 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.105401675 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.13290355 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10640519 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.136882701 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.112930137 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.137251096 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.107134982 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.132911394 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.103287988 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.131077717 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.107523136 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.13940006 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10727568 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.13324594 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11249242 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.109936841 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.136195655 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111177299 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.137655165 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108297471 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.124089778 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.109803643 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.130242171 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113639917 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.136910667 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111748172 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.128208971 seconds)
done (took 19.971573407 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.124394962 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.220437111 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.173823251 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.1544637 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.188885009 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.164811191 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.149510509 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.15591569 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.147171287 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.177227967 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.152880798 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.165182254 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.178761932 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.124919854 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.164182259 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.143339655 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.119302888 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.161086074 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.185141115 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.145744715 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.173603061 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.147709893 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147355453 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.175536062 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.117138416 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.18532486 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.149604285 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.119640952 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.149413649 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.127896161 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.16410465 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.152635632 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.125166968 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.159614957 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.125381995 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.141017943 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.163623231 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112626634 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.145176709 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.121692799 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.1599847 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131234049 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.141932702 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.157885225 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.120026414 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.149467816 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.119497804 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142002264 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.119079639 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.135846447 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128374086 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.170142946 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.143927918 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125422894 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.148678668 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118843942 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.149289078 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.148044739 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.124983136 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.149197226 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.122189264 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.149460048 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128715953 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.168731933 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.143950051 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.125435812 seconds)
  done (took 10.63641251 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.142750429 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.180209491 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.125339605 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.151017309 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.150814639 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.104902918 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.128489623 seconds)
  done (took 1.911031555 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.108071036 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.167270819 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.149293044 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.172889128 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.137123395 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.178823588 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.154208624 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.106965359 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.162189052 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.121465052 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.165002003 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.200711381 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.108306002 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.149088475 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.150903924 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.133158121 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.177339141 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.107564867 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.141796202 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.148023704 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.140082616 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13439811 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.153242786 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.108029377 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.159468049 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.109483992 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.218225514 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.150689146 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106585431 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.140826889 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117049719 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.227221042 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.158940928 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12129587 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.129942723 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.168194478 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.13327178 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.141109214 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.139179148 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.141197246 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.133870116 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.142178167 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118112795 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.142711403 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117411501 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.148635558 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.125023943 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.148345802 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11498603 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.166448585 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.148580811 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134609083 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.13550708 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.113230414 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.148176716 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116507458 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.151582393 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115793734 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.166173327 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119209578 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.166756752 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.166754415 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.133884304 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.166742379 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130470827 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.159443401 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.15839547 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116055291 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.143663216 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119169311 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.166911994 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114894542 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.148808934 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.124685108 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14591393 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.138807158 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.164814372 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113188454 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.147906509 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113593466 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.140235673 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.107840893 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.151781488 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112269878 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.137672973 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.133039028 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.149808695 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.1407341 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.11442871 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.16460786 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115354147 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.150684563 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.125676759 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.13927377 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131665916 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.171623589 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.149980264 seconds)
  done (took 14.650225771 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.118816339 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.108796524 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.141541684 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.110850095 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.134661936 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.109527638 seconds)
  done (took 1.661980957 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.15207823 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.140204641 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.129283382 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.143352283 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.185092934 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135667276 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.160291125 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122248296 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.15876117 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127640186 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.160810451 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.161658573 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.145645283 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.143572643 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.134814271 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.14498251 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.13583683 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.138515503 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127309862 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138225446 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.127904253 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.144330942 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111919679 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.160882668 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.140995872 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120191969 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.141545953 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128642724 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.15217331 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122640426 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.144482328 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117447129 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.143701013 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122302847 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.16100377 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.143637049 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11218296 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.142715185 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119950363 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.14187443 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.137550833 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.136960134 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127639366 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.143825159 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123239502 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.145217029 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.119697303 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.141487158 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135144322 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.143813384 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118879934 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.144747277 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.116492774 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.145133332 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.118855603 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.147085448 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.142733528 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.136636983 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.143421172 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120022906 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.139405988 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.117524203 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.148115844 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117207204 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.142575384 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118872566 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.144457198 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112495501 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138145759 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118428794 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.143786441 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.115580412 seconds)
  done (took 10.773063647 seconds)
done (took 40.550384642 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.724448532 seconds)
  done (took 1.658284663 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.984353115 seconds)
  done (took 1.920590171 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.940190808 seconds)
  done (took 18.915571028 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.666977655 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.794456465 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.237942117 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.194412196 seconds)
  done (took 3.831297758 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.019097753 seconds)
  done (took 1.97593839 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.344672402 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261776461 seconds)
  done (took 1.549533241 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.897632851 seconds)
  done (took 1.852797542 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.701562844 seconds)
  done (took 2.655267091 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.440363071 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.225127845 seconds)
  done (took 1.62543442 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.66235206 seconds)
  done (took 1.614016019 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.658570467 seconds)
  done (took 16.616262524 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.289046038 seconds)
  done (took 1.257929024 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.348002049 seconds)
  done (took 1.304487312 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.772087625 seconds)
  done (took 4.727649969 seconds)
done (took 62.451580872 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.125231532 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.123561226 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.150761382 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.120912374 seconds)
  done (took 1.469885763 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.133033631 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.146002797 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.126134736 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.144841582 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.129990109 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.147281116 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.117399807 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.152616306 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119286718 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148097346 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120972791 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.145262321 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.122791635 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.142395165 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.11563635 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.148462467 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123661913 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.146281078 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.119286053 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.147388875 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118028173 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148275713 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.148914837 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120400456 seconds)
  done (took 4.193663778 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.12514844 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.113857346 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.142440846 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.113549962 seconds)
  done (took 1.46079447 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.131363372 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.163206703 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.136869695 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.152926867 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.138410291 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.162349105 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.113454134 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.139446278 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.11630657 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.152542454 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115906722 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.16615946 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.162245919 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.109528238 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155365808 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.106730866 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.137212649 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138021461 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.15188922 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128314486 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.138797908 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125696215 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.14795326 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13096418 seconds)
  done (took 4.286917949 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.223566172 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.157448086 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.169062629 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.122621369 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.204645917 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.171162051 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.113428448 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.171340089 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.11377253 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.165986896 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117339911 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.204139289 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.166320433 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.11879534 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.142802978 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.150752325 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.138174357 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.171646805 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.116053876 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.155732942 seconds)
  done (took 4.061988415 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.128695142 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.113501047 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.133735966 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.112994095 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.148260838 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.116251365 seconds)
  done (took 1.722538843 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.112138261 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.106226622 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.133430718 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.106226102 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.137249138 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.107725096 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.104971701 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.132293982 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.106208658 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.132716654 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.107239563 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.105266338 seconds)
  done (took 2.363716499 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.507045722 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.113262978 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.15209912 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.114799727 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.166626369 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.137180293 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.131860429 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.136861308 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.205604686 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.126014635 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.157540955 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.203795836 seconds)
  done (took 3.126009775 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274072079 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119904267 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.342639646 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.487659212 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194454544 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208650589 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.373933407 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205865154 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.238715433 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167682295 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247640551 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193410038 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185524372 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22076579 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146214969 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.216610606 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221787986 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.263710986 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184197159 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267412303 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214251731 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209674919 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.23299268 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18542158 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169201621 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203434908 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.113989276 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153849612 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224358649 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215315507 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234885701 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188434301 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143960799 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29011528 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292229031 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240845049 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.460195268 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138884591 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.249527798 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.235513428 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.308132478 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173879852 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.264888955 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189996808 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131606205 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231515995 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198800485 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.227814421 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.159349857 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172131546 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253715678 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222033039 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.23515976 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170645736 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.391064024 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178747214 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.174616796 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23276494 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255654045 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2446923 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210702716 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.146541861 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.267692899 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230403118 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232900092 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.175665874 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.215572854 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152277415 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222732356 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250668421 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231351871 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210447832 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.302123598 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137003003 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20934848 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212925941 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18752714 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225150554 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199248494 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.116234216 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183002233 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167370758 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12653043 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.219250677 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118360144 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.297825807 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140002186 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.321255365 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.303902878 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169475514 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206380668 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208487848 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215109865 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177803485 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.141371519 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153531664 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.201545913 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193239781 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161194874 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168498433 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179640114 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.151304907 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184227493 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119026385 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198065032 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.134292225 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210571855 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204616675 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.156499336 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206857159 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181784283 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.17204582 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217233991 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236480995 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161120169 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159178386 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250431491 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194681849 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137642859 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222008729 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239860273 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.207919665 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16910312 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221638211 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254579158 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173735045 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245509763 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17714149 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136790195 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.193392891 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199833439 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200901541 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161708387 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155088116 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.192116 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247332019 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.151523242 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136929389 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221252947 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151296465 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126426604 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177971898 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166692619 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.14290658 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.187292906 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.166486975 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195742464 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168935549 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189099791 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20599226 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182143003 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265879614 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160213955 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.196930603 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149940654 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.139664086 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.229932126 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237236453 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126466807 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262188364 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.212192445 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282742286 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207615514 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15698242 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.230375819 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127245942 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.142129669 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216475022 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203507517 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205627413 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.232270378 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283228763 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.213113682 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.189478147 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181099493 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216983483 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.219699275 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209590324 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.176321588 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178659502 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245090752 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.117755674 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.146245426 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125062714 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17098661 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130391747 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158596919 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242009416 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208593798 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.300782662 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202938866 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14265982 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.232946086 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.14996539 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207845019 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.220749304 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138655936 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.26272123 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228781745 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210100367 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146321003 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224820677 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.141646278 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121565378 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.160241894 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210047842 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131683953 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163984516 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184212474 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.232832978 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223176817 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183388069 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298686749 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210578441 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272430612 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118542175 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.192180066 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212677659 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167102195 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.220264993 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161919067 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.201709177 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225360319 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152034108 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257279684 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205040051 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218789688 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299109849 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.191641327 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129712639 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185100319 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209826652 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175244819 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172558303 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179049876 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164877004 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189457748 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.14029881 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151252635 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243474147 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172490703 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244024352 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.19208449 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236133934 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119948666 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18478884 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201276944 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175725304 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.112383729 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213699152 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245982668 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181957148 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197954204 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22136615 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154483821 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.403112365 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246312167 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242158122 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168915218 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175924196 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17307043 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197519531 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208025771 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.231102733 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181838277 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232070322 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19701938 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.145145594 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165921545 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179234067 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183874132 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.16576029 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.165229314 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.192626963 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.170333515 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251077584 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148793927 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198366899 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212080654 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.174835773 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.188310324 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14430461 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259793936 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196840812 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227895446 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.191406892 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.206242857 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236154637 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11794486 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153747726 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.149946656 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.231114246 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130100562 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201871489 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.29283813 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.295916897 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200111634 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211706038 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165315596 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118578699 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202130744 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182801223 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.314181666 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153441744 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.16247852 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244399162 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.181625444 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127144926 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205819095 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.393184327 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174222343 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221776715 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.116316644 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.380939459 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124241075 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156966764 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169726533 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215589007 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.160098448 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.217484991 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211510718 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15243751 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199357937 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167332647 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.271793318 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305374167 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223189007 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228284829 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.177443361 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172565855 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207432991 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223267538 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176799711 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.174999244 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169683097 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260745926 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.234825948 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131249266 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204828506 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204818062 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201776256 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242121728 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159212888 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236383826 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128779657 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215354433 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17583467 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119766327 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19198428 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.288455221 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135506265 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220154234 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194991789 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157598779 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121242633 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192151883 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196028501 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178811206 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.124782296 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239701427 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.151314455 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208014162 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225761814 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126091681 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191456017 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176797194 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127977298 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177657071 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180855476 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135305958 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.201110932 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236494735 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.157933614 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224132206 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226434188 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207653565 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200517052 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146892741 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694905725 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.121706169 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228510374 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178397631 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246240985 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180466002 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213119182 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203035247 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152020423 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217371125 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185826839 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.257184196 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215750275 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.198853447 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127860423 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180860923 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178989168 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129060699 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188129154 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203449766 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168368408 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134552214 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.195216153 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181216568 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.178396318 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137405757 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23823205 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178230168 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244139633 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233264901 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170107249 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212394574 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242840973 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125574026 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.204705522 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217982205 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175591886 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194323097 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.125462471 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.161487979 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226976563 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.116955493 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202069875 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201901021 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205626516 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2059972 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.136203854 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20307891 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178352815 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201273352 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120404862 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.190856468 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196937844 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156872055 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.123087926 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192586025 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205145583 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.196575614 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122398255 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.201773395 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232105686 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.11947386 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16252152 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.37341527 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191423286 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250263459 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.190840703 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163728787 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143565907 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196978251 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.189628108 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198357459 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.124981483 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161210251 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.158303237 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.21145341 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.164923893 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196860202 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240176788 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202226874 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237135626 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.159439893 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.30462275 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139240615 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192514543 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.132048595 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.155066532 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171057468 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134134234 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181706344 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.301610187 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22774235 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.158517024 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.179616151 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152886443 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.121630169 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159281946 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170382667 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191282441 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195394079 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181513168 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.112416224 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178621695 seconds)
  done (took 95.992144503 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.181664953 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.181324417 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.190247187 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.235921836 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212848593 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.295064431 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.247822454 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271800042 seconds)
  done (took 2.874981694 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.131382762 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.164031542 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.172374673 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.123845125 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.140384291 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.443054805 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.167235845 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.151409707 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.147962809 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.193100885 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.113773 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.750848813 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118861466 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.151415889 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.136410024 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.135898954 seconds)
  done (took 4.293576454 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.853564369 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.60353389 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.295807924 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.302266845 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.286600985 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.207970409 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.812967617 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.243845448 seconds)
  done (took 13.656161145 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.153130084 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.162728857 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.169056113 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.193256328 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.148772613 seconds)
  done (took 1.889607657 seconds)
done (took 142.343097681 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.122105635 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.121365402 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.146115212 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.121302325 seconds)
  done (took 1.558016726 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.134203613 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.098646634 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.129849947 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.096890233 seconds)
  done (took 1.520754552 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.525813032 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.127546916 seconds)
  done (took 1.752023905 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150615037 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.158644716 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.131896636 seconds)
  done (took 1.50275804 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.132448004 seconds)
  done (took 1.197302536 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.123664799 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.121217535 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.166195682 seconds)
  done (took 1.476614433 seconds)
done (took 10.072735956 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.137485199 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.46799448 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.408292216 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.161463034 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72393056 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.428858017 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.076063299 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165540437 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.197566241 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138534596 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13314323 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.720424641 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.030548328 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.393384724 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.012402446 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.392440315 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696872881 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14223932 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120625946 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140578198 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.021506243 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.137938172 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114455545 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140420375 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.693515647 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418448014 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141345929 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.41279387 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111586702 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118819124 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.403793667 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110470895 seconds)
  done (took 17.589406733 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11976902 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.214738918 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.121785621 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142578525 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117932305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.14091455 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124828752 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.161063958 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.217784459 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110725887 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.163008831 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110781727 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.145315232 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112359805 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164832849 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111528183 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141941713 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115934305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.148149416 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115047462 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.133823368 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138785214 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112964055 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143585268 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110635813 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.155570437 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111763403 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.160239602 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110827385 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14874732 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118521998 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140618602 seconds)
  done (took 5.45538377 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.171454137 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.228027228 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150258299 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150423059 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.205573791 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113510856 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.24247896 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.194750547 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.21936004 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138164085 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135298407 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110581857 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.183796858 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140363082 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138489148 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.139086721 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116089769 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142189577 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12228351 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.141934429 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136480071 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.137656405 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115207297 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114173498 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.14194376 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.128295041 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141084131 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.159260062 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112494449 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.119543637 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.14794452 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111948048 seconds)
  done (took 5.814389634 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127063955 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.151969196 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134231036 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.161483993 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.115590604 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.149326633 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.123662437 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.114001787 seconds)
  done (took 2.151578038 seconds)
done (took 32.072395846 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.136367794 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.117883289 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.156281334 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.126591722 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.151696546 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.138034276 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.138733236 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.123998551 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.153638726 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.120947565 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.157885026 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111207198 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.112762719 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.139046395 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.126588023 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.145717915 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.128952668 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.149931444 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.137596698 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.157701319 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.113082502 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.153175207 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.122304791 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.166133552 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.137503084 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.167218265 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.130063162 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.148774613 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.112794112 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.141578999 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.130754214 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.16981104 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.114514547 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.159845305 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.116544781 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.144377473 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.112790891 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.113196756 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.158033707 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.124309233 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.147373089 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.124475781 seconds)
  done (took 6.799664433 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.151316698 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.190298248 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.109378126 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.138467766 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.110410205 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.187306703 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.152253541 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.139572893 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.109567881 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.172586785 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.172393765 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.110530457 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.108544252 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.138378461 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.109272409 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.13840059 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.141323402 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.170967028 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.148862832 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.174790753 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.194614066 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.149688124 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.179697201 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.141081351 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.189315956 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.183277909 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.138690311 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.183153949 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.171469375 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.108605584 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.179054853 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.146695693 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.138455475 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.109410374 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.187757078 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.18230425 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.146335955 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.1883921 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.175532673 seconds)
  done (took 7.048160823 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.130406319 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.128917409 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.16889175 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.221272448 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160905035 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.156740262 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.124547769 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.166178569 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.132730245 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.142732417 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.123003141 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.182152927 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132912263 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.151822125 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.119753041 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.160687094 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137447469 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.146021952 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.118836205 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.165539006 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.133432797 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.159661711 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.127679543 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.153440385 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.11411134 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1588549 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.118516145 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.159051702 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12053468 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.150201206 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.121328081 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.147734643 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122349985 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.126359729 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.147752601 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125727472 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.170652606 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152347113 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.125226317 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.18331149 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.12883829 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.149699739 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.14173301 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.190816363 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.114509968 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.152060034 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.119872677 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.152474525 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112180476 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.162923385 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126237553 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113818725 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.169186028 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.142824236 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.112218033 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.129800454 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.144710119 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.11607788 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.15194748 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.120508112 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.169706488 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119279108 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.159938022 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115628667 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.149341215 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.114008321 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.140446065 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.125297393 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.169769393 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.119236368 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.190438176 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112598645 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.152252089 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.121918116 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.149486406 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12426479 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112337905 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.160868114 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123324427 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.149771419 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.124676647 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.147501398 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117278856 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.163260771 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.137866394 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.156469073 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121162512 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.152208295 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117937906 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.1436774 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13027791 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.144713979 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118637119 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.161462905 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115518256 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.144934959 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.123509243 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.148986034 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112269233 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.157432113 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.120836535 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111979341 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.154810397 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.115182384 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.147886256 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.124534427 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.148857774 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114356233 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.149261169 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.122628101 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.141523413 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120187321 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.117663158 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.148339273 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130964312 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.152822411 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.117965814 seconds)
  done (took 17.384227458 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.296270061 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.260079493 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.24114608 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.370612657 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.172518665 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.145465288 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.254313024 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.205122442 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113501562 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.197913422 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.217167151 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.224179999 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.209734356 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.220616649 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.217347248 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.11282257 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.174156719 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.207852821 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.259296382 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.359238699 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142586264 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.163247224 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.199988736 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.167984521 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.169192086 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.164721792 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142639881 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.173231834 seconds)
  done (took 6.877925581 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.142353337 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.193375838 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.121885679 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.180804156 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.176273465 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.114706486 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.148591885 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114639139 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161971562 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135649239 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.145583782 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123165596 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.150381073 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.125350338 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.142789791 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.124909975 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.155601165 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.127209239 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.146084723 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.118955242 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.166120269 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.133479129 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.150191381 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122863873 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.16669282 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122201368 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.147298187 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.174348958 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125705546 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.18046629 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.109829767 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.154322259 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.131213614 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.142897521 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123889661 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.146334428 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.115239044 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.145503156 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.116684789 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.109952579 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.143192884 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.101732917 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.153215574 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132804179 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.153231579 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.116832708 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.151125288 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.118514117 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.149398419 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.109301267 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.145514802 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116433459 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149369559 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.136041697 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.148023883 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.109732615 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.116900631 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.134859119 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.126107718 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.146673619 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.107880543 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.152581054 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.106565102 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.148826348 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.125348903 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.137612519 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.122646269 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.14626463 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.120059564 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.152686562 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.117495637 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130303271 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.14174512 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.115154683 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.158912189 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130628513 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.148607768 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122394648 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.15539984 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.111970783 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.129663409 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111900269 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.097156693 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.150507205 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.112320308 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.152713901 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.116658183 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.151391235 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.165745448 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128027842 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.152470886 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114228226 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123138258 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.150220027 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.110490089 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.14909948 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.135623058 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.172413382 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.111388547 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.142680008 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.137337303 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.145793957 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.110897872 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.133801429 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.125995361 seconds)
  done (took 15.379290726 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.178301978 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.215860222 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.144799865 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.137361175 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.185899853 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.203511578 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131030226 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.12288324 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.145013972 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.137927353 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.15591801 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.124609178 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.155527458 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.131923038 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.202968093 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.155340701 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.115307253 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.162356357 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12134216 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.218730534 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.136352589 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.201361464 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.20854227 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.158406104 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.120307189 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.198028052 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.206551974 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.130089355 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.157164328 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.180648076 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.159952162 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.206851844 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.209782987 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.121628203 seconds)
  done (took 6.65247633 seconds)
done (took 61.214986078 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.203596374 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.415190462 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.178833696 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.18117641 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.180142411 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.209443583 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.18475711 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.376747494 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.948111968 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.16604525 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.181756913 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.182055079 seconds)
done (took 27.501595988 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.298872765 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.338439365 seconds)
    (2/2) benchmarking "String"...
    done (took 1.474684844 seconds)
  done (took 3.916040533 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.179707085 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.18140545 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.42848913 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.193088941 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.176087105 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.194838067 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.198674546 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.18224473 seconds)
  done (took 15.647886277 seconds)
done (took 25.135797274 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.225811915 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.497061199 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.467053529 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.193219916 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.177338631 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.18881515 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.177070962 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.232990292 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.196272317 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.18332573 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.175406203 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.478016641 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.209899845 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.606812887 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.176882749 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.181239226 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.200424972 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.509156627 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.176816865 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.216707288 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.160794748 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.167571293 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.186825702 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.211204613 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.19202538 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.192857325 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.200555247 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.181356267 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.499180861 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.208395322 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.168503629 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.201642491 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.202979015 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.183873228 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.310446444 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.216093493 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.468113606 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.192347822 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.172430353 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.184097657 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.469427244 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.613676192 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.183204691 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.191852245 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.200064462 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.20837645 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.166108604 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.914442047 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.189197519 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.183376361 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.204778589 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.607751252 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.183122399 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.20031612 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.19223821 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.512714638 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.210751239 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.234110232 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.238464085 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.184939959 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.18095287 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.180077013 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.209723191 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.194874187 seconds)
  done (took 142.920581123 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.187435399 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.184218995 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.184325229 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.189178004 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.185369486 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.184685042 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.190367407 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.190675503 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.18233024 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.207146699 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.184698976 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.183264944 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.188577166 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.159003438 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.192042629 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.201923008 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.191423235 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.184867056 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.199638747 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.190394386 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.213242175 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.185294814 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.18503629 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.184128637 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.223947538 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.259743833 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.196510111 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.213876266 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.182137818 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.190340918 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.186125587 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.190828609 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.834280247 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.040357546 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.20976392 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.214871975 seconds)
  done (took 79.56840854 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.192076155 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.191598419 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.191399132 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.225355237 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.192610823 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.801488514 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797829501 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.982461124 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.543113265 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.661155318 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.517382686 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.193118767 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288879354 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.201899768 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.190367621 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.193936784 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.209466856 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.215493689 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.189954735 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.193264699 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800758781 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.206689104 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.326881882 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.365408199 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.204008739 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227536724 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.588933171 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.184016388 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229101648 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.529350969 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.240385328 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.18523469 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.603760452 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.09112583 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.184958827 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309990878 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.1887259 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226268035 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.193559031 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.48290188 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186184818 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.197681036 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.198365644 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.914881473 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.196359198 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.802956759 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192614194 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.173638366 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.188185893 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.194065275 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.311218387 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.848033095 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.186635679 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.197283998 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.197993671 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.194168005 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.194727812 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.226834817 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.638244792 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.296536387 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.19355472 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.20084988 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229332309 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.1972078 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.693881513 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.189291408 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.515881252 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.255084652 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.449174451 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.805680291 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193729376 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298958346 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314724914 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.188635495 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.193735449 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198049307 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.195948988 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.307449733 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.188748208 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.622828458 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.369023165 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.204871221 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.662067917 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.297523 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.189981128 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.629933665 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.199057114 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.197333016 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.965449065 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288573259 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.189344657 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.198333088 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.197224198 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195418615 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.62497369 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.798186807 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.474755081 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.199210716 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.886057043 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.20319419 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.195784599 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.639737297 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.772653968 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.912438753 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.200355515 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315859761 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.370725587 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.209883319 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.197088714 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.667141797 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.197746973 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.258583657 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.198469178 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.601395658 seconds)
  done (took 367.324563095 seconds)
done (took 590.907235576 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.956109802 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.851264987 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.997652443 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.894481831 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.848387332 seconds)
  done (took 10.651385074 seconds)
done (took 11.755400146 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.401970326 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.398752822 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261767744 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.402068748 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231930583 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.421488343 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.382699561 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.218220903 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.311746235 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.295675045 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.310680836 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256959347 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.237981537 seconds)
  done (took 18.236593776 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.478726446 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.195520033 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276115521 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.454029364 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237948839 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.482416808 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.517661156 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.195998215 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.35033185 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213628884 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213955165 seconds)
  done (took 17.7230586 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.481585255 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.19771383 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265357697 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.459364604 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237774522 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.476816106 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.532767253 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.197669366 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.337483822 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.216750119 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215188382 seconds)
  done (took 17.724834418 seconds)
done (took 54.789799473 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.245905637 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.37069911 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.239612637 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.216867149 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.209606318 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.21248273 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.215247123 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.218369977 seconds)
  done (took 11.03708299 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.210869587 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.205192619 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.208812154 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.210525957 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.206294787 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.208552527 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.206790765 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.207376331 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.208463376 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.211890899 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.20774672 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.205090362 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.210739273 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.208579609 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.209201238 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.211919868 seconds)
  done (took 20.449079288 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.210488073 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.209280157 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.208151071 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.206496744 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.208369101 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.207952731 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.20930338 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.206704518 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.209955507 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.208733762 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.210244182 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.205104824 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.207980627 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.207363997 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.207613195 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.211029555 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.207974328 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.208576204 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.212634308 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.209808891 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.209006441 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.210211552 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.208983929 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.211021385 seconds)
  done (took 30.124315581 seconds)
done (took 62.717872636 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.203752668 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.242238577 seconds)
  done (took 5.554985735 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.269867461 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.274800002 seconds)
  done (took 3.657014091 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.212938501 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.211728309 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.213336428 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.213424981 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.212631705 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.21173617 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.212919697 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.212218317 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.210551047 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.211604685 seconds)
  done (took 13.232042725 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.214303389 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.213449794 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.209564749 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.211635375 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.212549176 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.208681025 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.21355572 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.213028429 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.212961726 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.211149276 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.213003704 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.210527807 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.213573756 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.209121368 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.211987743 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.208876486 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.212761311 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.211607253 seconds)
  done (took 22.922751769 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.225620964 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.234216691 seconds)
  done (took 3.572311069 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.340794768 seconds)
    (2/7) benchmarking "second"...
    done (took 1.253148618 seconds)
    (3/7) benchmarking "month"...
    done (took 1.320508743 seconds)
    (4/7) benchmarking "year"...
    done (took 1.308408865 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.252312745 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.232409641 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.251368549 seconds)
  done (took 10.072118549 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.216126229 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.40932476 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.526296052 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.795043692 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.215701348 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.21747228 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.062286782 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.217956613 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.220662785 seconds)
  done (took 13.994923114 seconds)
done (took 74.115978783 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.21046949 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.21774984 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.230568139 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.221861789 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.557118705 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.245982081 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.208762622 seconds)
done (took 16.006012668 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.201759839 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.190128214 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.199666828 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.209435254 seconds)
  done (took 9.912016806 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.213329135 seconds)
    (2/2) benchmarking "read"...
    done (took 1.557844395 seconds)
  done (took 4.884206254 seconds)
done (took 15.910249975 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216849831 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.214224197 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.215145305 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.214777028 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.212081734 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.216564352 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.213814149 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.212106778 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.215062549 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.217286803 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.217203596 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.21809917 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.218801693 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217372952 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214179353 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215145196 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218815509 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.217012397 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214232803 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.214917498 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216117297 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218145638 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.213398908 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.212670205 seconds)
  done (took 30.28890315 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.218388432 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.214409056 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.218630828 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.220246459 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.216409565 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.219295234 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.218606466 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.213103328 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.21770419 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.217412064 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216161767 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.215424417 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.222100962 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.215671722 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218139077 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.217342776 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.220001259 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217174219 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219826238 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.218360192 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.219973199 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216223388 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.21616386 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221553003 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.216046329 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215649132 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.21862811 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.218016746 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217761123 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.218054508 seconds)
  done (took 37.647434046 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.225134731 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.228543508 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.21848679 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.220678309 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.221500935 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.21846691 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.220848499 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.219377352 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.2196016 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.219221438 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.217923212 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.219617609 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.220834496 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.218969286 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.220832224 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.217178774 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.219065284 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.220100543 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.218978513 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.220021256 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.222924098 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.219939622 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.220593538 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.220168342 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.220648345 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.218824497 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.219865866 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.220187566 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.220892247 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.221976125 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.221397274 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.220592289 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.219447974 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.222508888 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.218479927 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.220021266 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.22613432 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.232092033 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.22251031 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.221912255 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.222682273 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.223726395 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.221663238 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.222381802 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.222936153 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.220975893 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.221703934 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.221150102 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.220786437 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.221786126 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.223207423 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.221134528 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.223816362 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.225002122 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.224327519 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.222071885 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.223571164 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.22341218 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.224130496 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.222280127 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.222382588 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.22462057 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.224247554 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.223170497 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.222674828 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.224009041 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.222854386 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.224396371 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.225512611 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.224614643 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.22348138 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.224954246 seconds)
  done (took 89.095799763 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.226362368 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.220925296 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.2223042 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.222417126 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222837809 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.224390328 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.223079524 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22483952 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222189211 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22493434 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224361465 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.222003675 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223105948 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.226361491 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226317573 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.223861254 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.226452773 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223042372 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.225623157 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.224564781 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224676412 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.223312124 seconds)
  done (took 28.051495842 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226966985 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228359338 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.223258614 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22825121 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.226463464 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.229043655 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.225379473 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.227351549 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226764858 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224087183 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224328529 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225698198 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221516258 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221641555 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221179981 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223414083 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224424706 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225619913 seconds)
  done (took 23.177235268 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.221741508 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.224855948 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.222936903 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.222817949 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.224234198 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.225998421 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223546896 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.226033716 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.226038741 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.22511431 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.226220118 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225592887 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.226874961 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224902124 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22679366 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.22379166 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.228652681 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223781492 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226827887 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225886027 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224415404 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227490268 seconds)
  done (took 28.079617477 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228036342 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228272024 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.225066332 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.225798651 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.225431738 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.227793213 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.228982518 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.225330822 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.228561903 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.227643858 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225634954 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.227924051 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.225585406 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.223891792 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.223905848 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222871119 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.223041267 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.222386707 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227103435 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.221490343 seconds)
  done (took 25.639246596 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239460902 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239322781 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237135219 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238917882 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237546797 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.239526025 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236622809 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.237558975 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23994058 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.240746898 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.239275956 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240488684 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238700394 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.238263824 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.238841662 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24150669 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.238983608 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239263294 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.239928897 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237496517 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.239228291 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239601492 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241621459 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.238275815 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.239844316 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240850411 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240623893 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.237605813 seconds)
  done (took 35.826799905 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23218182 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.227950306 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.225685658 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.223726814 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.226850921 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.225415221 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.22560849 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.22618199 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.229118175 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.225429514 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.227972086 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.229751317 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.229867435 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.231185212 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232547714 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.231869243 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232889071 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.233185029 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229690111 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229687013 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.228311356 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229093245 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.229444437 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223380727 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227784833 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.229103695 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22576686 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.228450492 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23057352 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.229958111 seconds)
  done (took 37.988178389 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.26960551 seconds)
    (2/2) benchmarking "in"...
    done (took 1.274907013 seconds)
  done (took 3.673290258 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.229562934 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229163556 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.230816897 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231458314 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.227731184 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.231717223 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.232577448 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229610411 seconds)
  done (took 10.97203148 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.232371792 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.232793026 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.23215792 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.760449996 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.23562427 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.230986664 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238683172 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.252737447 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.233790856 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.234961185 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.244099914 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.244215928 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.235579657 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.231531416 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.235882606 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235780768 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.233786808 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.234166535 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.233131361 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.233164764 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233597786 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.236534978 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233408435 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.228681445 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.233890224 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.247566342 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.23587803 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.234954447 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.232066953 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.237307021 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.230420433 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.228900538 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.236416879 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.235274695 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.234794208 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.233466779 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241611222 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259362809 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.242589412 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.233640152 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234167275 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.232849736 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.235698582 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.235443395 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23641446 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.237149552 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.233645736 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.233617915 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.236150852 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.239865624 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.246475342 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233562283 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.234237747 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239282524 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.241073983 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245683788 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.251720212 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.239542461 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.251815521 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.249198213 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.247298347 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.257499299 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239247137 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.239366716 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246625014 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.269112476 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.244907533 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.249858819 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.237194534 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.239245064 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.242339527 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247700044 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.260842295 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.239711184 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235594547 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.239734266 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238067617 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240201915 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248836589 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.258911857 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.240420072 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241994928 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251754031 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26793116 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.239822348 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.240041804 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.237487859 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.236747028 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.237356562 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253153689 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.256490299 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.237351563 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.242013441 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.239757264 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.243968144 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.238660916 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.23864457 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241191087 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.236485145 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.242773498 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239051101 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244337908 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.253206894 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23750289 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239379803 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.2464791 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.239066738 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238179716 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.246819227 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.239178419 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24185857 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.244259291 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.248734266 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.235295775 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242864111 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.252683852 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.240448973 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.242441448 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.243826853 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.242256123 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254490455 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.272589054 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.238448648 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.243734633 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.249278772 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.256644701 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239859735 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.2467449 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.240046069 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.238950613 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.24005136 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.24235719 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.240187487 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.240757097 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241968106 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240606462 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.237003231 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.243913045 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.244329429 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.241773052 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.242925613 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.241656091 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.244182441 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.247330244 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.242160843 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.242930095 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.247233215 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.241208357 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.240709876 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.244802243 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.243468182 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241179464 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.243514368 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.241609586 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.241308766 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241522668 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.241936979 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.243025873 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243664166 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.242248287 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245183792 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.248563422 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246995886 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.241841607 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.248121912 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.241516399 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.240784843 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.241969785 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.243673623 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.244071648 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.244643893 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.242689864 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.248681865 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.255522244 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.244877299 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.245994071 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.244867177 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243082818 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243643716 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245724826 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.250209618 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.257340673 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.249078935 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.249994716 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.244657944 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245505496 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.245075449 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.248765509 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.245053025 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244998939 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.247396979 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.256418318 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25751537 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270435583 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.2482693 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.252989816 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.2439179 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.252931016 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.247470951 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.245005546 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.249031673 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246051742 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244472284 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246666643 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.246627181 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.245569508 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.246354355 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.245911433 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.249817827 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.24790368 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246760708 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.24416939 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245770801 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.243143936 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247742047 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246591859 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.245381592 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.242263092 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.248213428 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.245957916 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.246862968 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.249574318 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.255659973 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.242560809 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248124337 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24469874 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.246270253 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.248696325 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.246381277 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252286589 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.246300495 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252665227 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.266115251 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.247162237 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257185582 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.265042467 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.247278081 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.253463224 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.249405059 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.249126128 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.254385767 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.263558654 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.247873622 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.2520715 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.249323599 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250487159 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249922626 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.256112229 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.245262511 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.247098889 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.248973676 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.254108877 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.245623675 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.254812636 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.250412924 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.249765119 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251297109 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249287044 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.249462114 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251464886 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.248047155 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.249406393 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.250447262 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255000488 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.264897626 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.257080191 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.252729342 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.251302535 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.255603051 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.258323808 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.254580422 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.252123177 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.252794496 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265481536 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.276908487 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261216579 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.250271619 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.253514143 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259631281 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.2515167 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.257924511 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249705701 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249503383 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.250450786 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.251085311 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.250963954 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256182498 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.252342173 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252694152 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.253740469 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.260884345 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.254590146 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.253535649 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.252271679 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.254760011 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.251069072 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.251330533 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.251567255 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.256495626 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254561873 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.249772615 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.250633724 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262215492 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270758444 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.251861946 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.25106758 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.251105813 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.250625783 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.251153379 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.256849615 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.255730117 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.266864829 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.256404036 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.264218763 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.257296834 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263448943 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.251983482 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.260885919 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.266574309 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.252707427 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.25171219 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.253503635 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.254651837 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2637261 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.274043648 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.255587592 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.258742385 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253577544 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.257017452 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.255433572 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.253148762 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253865888 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.254105474 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261312983 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.278128277 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.260205453 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258772278 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.251857555 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.254972567 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.256165275 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.25520926 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257846726 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.254511418 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.253933617 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.254510262 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.256924068 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.255009024 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.254179342 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.255108876 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.25285979 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.254784361 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26625091 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.277385927 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264572825 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.256535134 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.266653208 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254049088 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263167837 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.277171296 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.256604996 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.254814862 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.254134687 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.258214504 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.256449371 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.258354399 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.25437486 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.254496283 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.26458344 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.254639846 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.258604926 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.258404835 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.256662961 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.254895157 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270026057 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286657758 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.259620049 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265282593 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.257829182 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.259029396 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.263082053 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.258535432 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.256337637 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.261452749 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270763804 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268944669 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.257127107 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.257822157 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257319835 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258262745 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.258484325 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.257806872 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.258199978 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.259874813 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.262131801 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.25992288 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259848674 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.257521186 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.256627621 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258582464 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.260025343 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.269718967 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.257850313 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.261082131 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26199475 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.262370077 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.259764533 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.260511783 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.259491638 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260928266 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259457278 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.261212474 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267891375 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.270817876 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.260870395 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.258724123 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.258859123 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.260532554 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.260761386 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258755837 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.258846389 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260917556 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.260501157 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.260257978 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.259300124 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.260716789 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.261298525 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.260630379 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259804769 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263089793 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.270508968 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257516608 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.25797541 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.261371272 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261150802 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.25921205 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.260545184 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.267180105 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261969689 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.274781392 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.27145765 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.266502204 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.262179706 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26333508 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.272513923 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.260817371 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.262599311 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.260880577 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.260807308 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.262947051 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.266119584 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26353556 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.268267355 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.260854331 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.259981464 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271071916 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.284259786 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263072216 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.264459325 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.267306064 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.262363168 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.258839237 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.264446647 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.260686407 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267962508 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.284225353 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263934506 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264207232 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.262372679 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.266026997 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269713198 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263376083 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.263497708 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.262076893 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.262391058 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264302644 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264836716 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.260723677 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.264049584 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.264533314 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.267123415 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.273281184 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.259167023 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266914948 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.265781237 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.264947071 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264287457 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264443538 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.261182707 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.261088891 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.263126806 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264441662 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.262148755 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.267667755 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.264176355 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.272617251 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.271101595 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264570827 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268072431 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.28013382 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.275574735 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.261923337 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.265839628 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.266907447 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.272846265 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264868054 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.266384953 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.264139221 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.267109988 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.266534776 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264893917 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.267284848 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.26885727 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284701939 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.287203334 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270163568 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.26529539 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.2715739 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.266359151 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.263335947 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.267668117 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.2684469 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.268787899 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.277924143 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.267301757 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272310104 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.286176609 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.269002502 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.275926789 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.271505665 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.278945553 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.26892502 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26880032 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.266322347 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.271717026 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.287385153 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267877757 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279266147 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.308524581 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.289417319 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.268259995 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.269343369 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268010317 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.269087423 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.270842677 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.268712747 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.266742363 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26846896 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.269533552 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.270636275 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274902175 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.269908955 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.270369397 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.269048689 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.268708138 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.270939909 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.267931809 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.269384099 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.269744908 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.269952529 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.270167832 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.269693408 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.27078478 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283225127 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.297872157 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.272063171 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.270773003 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.268188894 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.273551079 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.274088773 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284330073 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.283668666 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.270028542 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.269477345 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.270422417 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269173274 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.268276836 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.271246188 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.270273204 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270967276 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.266328737 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.284108314 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.29752716 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.275474176 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.270764151 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270492709 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.271014434 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272008839 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270825483 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269751601 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.271303918 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.273281712 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277857333 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.271563106 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.270978778 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.276038555 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.282270859 seconds)
  done (took 749.827560269 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.269249353 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268470781 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270287109 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.270116057 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268652394 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270778936 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268204737 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269326912 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.272283111 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.268722036 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.268776649 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269918354 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.269981779 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27029735 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270802712 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.270316004 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271734229 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269755704 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.271070161 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269937694 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.270443182 seconds)
  done (took 27.836545756 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.273119784 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.270631071 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.270034277 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.274117865 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.271489895 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.275089303 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.272755537 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274790147 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273775115 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272510237 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.276507863 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27546458 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.272795982 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.271783436 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272109376 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275236638 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.27392513 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272440935 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.274941498 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.270615189 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275901092 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.272639525 seconds)
  done (took 29.182927175 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.27568163 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.275787286 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.275282903 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.273093171 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.277179895 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.270974535 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.274863899 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.273435895 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.275125517 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.278308869 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.275002151 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.276169686 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.285187745 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.283848481 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.277286337 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.274591803 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.276636902 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.276930591 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.273938563 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.274648794 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.281467995 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.273038345 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.274418904 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.275223313 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.276665638 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.277574351 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.277533927 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.276679549 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.277670528 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.282728017 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.277223069 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.276313107 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.278653333 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.276878542 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.279542086 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.282888636 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.279697671 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.273486093 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.278451783 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.288723591 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.304785034 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.279181844 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.284572811 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.275578466 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.278862301 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.279945919 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.289213521 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.273589594 seconds)
  done (took 62.525910581 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.277130922 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.278245642 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.273698853 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.276361725 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.276656554 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.277568831 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.279066876 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.279552415 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.277003571 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.27732825 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.279500996 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.275512927 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.276389967 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.278779088 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.278509445 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.277424191 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.276275266 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.276541961 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.275958655 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.276728345 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.276799038 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.27882981 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.279629177 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.278943406 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.278954357 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.277244416 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280110132 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.279286392 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.276231013 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.273606587 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.279233137 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.281410565 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.279733303 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.277031376 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.278036659 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.279394877 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.280477895 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.276509264 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.277509743 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.27683315 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.279404955 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.28226191 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.278785971 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.280903665 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.27668425 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.27815499 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.277181717 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.278814515 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.278790264 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.282266729 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.280949211 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.279014677 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.28093454 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.278242743 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.282823632 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.284098353 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.278776607 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.279073749 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.282245608 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.279860086 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.279294906 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.281378353 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.278853841 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.282312081 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.281782705 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.279660437 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.278537679 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.281840268 seconds)
  done (took 88.127544452 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284439054 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.280530756 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282431806 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281564834 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283584388 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.282008422 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.282637071 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.281795554 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.281675441 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281971158 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282375632 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.282076049 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.283543788 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.281881531 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280906305 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284335028 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.283747546 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282960437 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.286358622 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284195678 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.283229609 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.284192681 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.286988292 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.283910708 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.284785804 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.282451879 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282934112 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.282932395 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283634217 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.284321928 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.284645263 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.285747408 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.284052314 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.285095829 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.285557741 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.28411034 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.284115001 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283977242 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.285338972 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.286402731 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.285975019 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285773005 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.2857412 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.286886056 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285737367 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.282434249 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.285985623 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.286754277 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.283361773 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.286042924 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.283868191 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287023766 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286044067 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.285068564 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.284970741 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.284978525 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284952773 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284095996 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284449234 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.286139275 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28704358 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.284910823 seconds)
  done (took 80.801984078 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284397649 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.2864839 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.283367213 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.283609352 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.287150086 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.285363954 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.28717591 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.285407284 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.287101208 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.288559636 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288366625 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285343645 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28409658 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288596952 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.285389709 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285477783 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284679692 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.285833876 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289394216 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.285828573 seconds)
  done (took 26.902410344 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.285157997 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.287662328 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.283814314 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286541227 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.287959374 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.284700615 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.288908893 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286854948 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285195238 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288860309 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29039557 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.290558812 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286170634 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.285907938 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.289404375 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.284792531 seconds)
  done (took 21.774901371 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.286138597 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.28866694 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.288086215 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.288671404 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.285777272 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.287798117 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.288779348 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.285922486 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.285420042 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.289226866 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.290865749 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.290242591 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.289884721 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.289296955 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.287249164 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.290748499 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.289043037 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.285754924 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.291622163 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.291977814 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.287698715 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.287186573 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.289854674 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.291219658 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.289089251 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.289232644 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.288475192 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.288380694 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.288864491 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.291317977 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.290465247 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.287996883 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.288230608 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.289867921 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.295242167 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.291097368 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.292180281 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.290594173 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.292702955 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.292634405 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.292518737 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.290253088 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.291098879 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.295563238 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.291147696 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.291145281 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.290556842 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.291024275 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.290731688 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.289512637 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.293007944 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.292976347 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.291875954 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.294024922 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.291049861 seconds)
  done (took 72.134850384 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292829641 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292233176 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.28751994 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.294102109 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.294621499 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.291130472 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.291843671 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.292458375 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29111153 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.293557174 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291868318 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.295836941 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291351162 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293627399 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291951467 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294723442 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.291721873 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.291299169 seconds)
  done (took 24.449279014 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.291735661 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.295005641 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.293067213 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.292198944 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.29114362 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295983645 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293209854 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.295142096 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293826968 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.291420162 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292695149 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.295248465 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294692454 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.29461439 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294572697 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291881768 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.295338949 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295364334 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.293472346 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293320252 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296560419 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295108724 seconds)
  done (took 29.653027229 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.295175971 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.29541873 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.294186165 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.313053178 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.319359116 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.295169238 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.298043503 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.293184037 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.32036004 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.353940206 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.350004393 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.319471408 seconds)
  done (took 16.936529213 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293410251 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29616011 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292073771 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295066841 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296212494 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292460855 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291690204 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294012072 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29668455 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294367858 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293723592 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297756009 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297601765 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297362764 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297379509 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296986844 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295846018 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294942215 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2930785 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299155029 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292431655 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296715904 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293632915 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293577933 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293668075 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293643337 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295251401 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295301806 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294495391 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298932304 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296396663 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294880465 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298281548 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29603598 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298489649 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297768506 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294857119 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297526979 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298594293 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297921439 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296710223 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299186433 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299874143 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296710092 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299890084 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296910794 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295668733 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297122648 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297457594 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300126329 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298708694 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297400067 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298979591 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300928871 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299129061 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300114384 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296119628 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297154845 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30043661 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298787507 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298204744 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300072244 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296063703 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297623784 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301392912 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29590125 seconds)
  done (took 86.770598323 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297692915 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298820851 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297249896 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296806844 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297958981 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298932267 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298492398 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29678099 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298898414 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296714299 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302655862 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298622148 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2989725 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298955372 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298281153 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300455881 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299076751 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298336098 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30012843 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301610508 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299679616 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300641758 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300596739 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299117905 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302148001 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300901262 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300085741 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300574329 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302255094 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299514326 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300411467 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30067376 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299355986 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299096171 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301868567 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298767014 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299515836 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299420635 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299992368 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303544816 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300616474 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303045368 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300948679 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301030799 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301818748 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300765197 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298635581 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300956189 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300891196 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301829012 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301199654 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304031529 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300773403 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302553687 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300785094 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300095063 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300087086 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30073658 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300816523 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305053754 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302406063 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303443194 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304281662 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303250853 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303535345 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304061198 seconds)
  done (took 87.026278906 seconds)
done (took 1755.504275314 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.471244583 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.427801703 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.304831148 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.324230361 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.299702575 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.327428488 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.310496994 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.298384069 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.304632714 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.304489091 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.301437093 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.548588643 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.299647924 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.300406878 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.304671561 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.39879912 seconds)
  done (took 26.724032145 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.334069047 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.30944792 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.439280547 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.326933419 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.336772833 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.515399632 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.363394455 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.310225835 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.509279758 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.354269627 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.301189889 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.330429321 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.309510527 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.301936124 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.325250493 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.512943254 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.588233206 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.304228247 seconds)
  done (took 28.971031768 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.831435286 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.313888707 seconds)
  done (took 5.346201602 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.331161313 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.311752896 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.311559733 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.308031526 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.302467034 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.314940879 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.307932522 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.305250288 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.310651837 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.455640915 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.311540962 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.320336908 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.331461608 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.310549127 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.309984272 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.353043196 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.471975986 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.306715198 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.305603782 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.315069252 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.310864426 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.44655212 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.355347264 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.307431944 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.454548085 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.315396559 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.313439577 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.318779541 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.489934381 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.307026151 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.31122259 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.309664618 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.312749872 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.290029789 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.82297614 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.302662761 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.351509188 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.319798675 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.307921262 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.51591086 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.311595049 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.316702603 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.303587799 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.7971968 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.459581151 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.443605396 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.322179474 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.313709714 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.312355356 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.37975985 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.312150508 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.31441026 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.359172792 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.169406335 seconds)
  done (took 84.383675188 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.321784602 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.30250738 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.488573933 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.33231314 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.301811108 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.322102117 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.304617998 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.644408602 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.351777189 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.301990827 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.621104855 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.918895199 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.325427558 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.363352329 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.187561622 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.371293206 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.304351688 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.32663731 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.30845108 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.306923697 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898022267 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307972206 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.322466327 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.544403492 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.344894197 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.899563607 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.321820615 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.304808015 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.328776955 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.298685854 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.876075635 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.324080832 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.374859788 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.302977645 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.612580514 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.755037907 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.715261268 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.314970027 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.346347534 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.302406623 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.304456302 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.885619691 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.735372052 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.308393832 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.302692845 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.88673447 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.308417858 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.312214052 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.317851998 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.570983204 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.304365156 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.307257184 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.34036756 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.307190049 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.307051174 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.41621707 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.390761983 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.897755155 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.308666361 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.304170503 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.32417792 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.307220975 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.312775292 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.308277234 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.310466272 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.732601881 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.469632147 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.305693216 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.738049661 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.874264108 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.326645541 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.949935901 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.328216511 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.315719793 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.351332262 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.307331975 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.303808226 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.893681677 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.337004881 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.306118819 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.717885834 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.312459019 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.63190357 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.345724005 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.306905457 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.90724102 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.32236063 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.322618594 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.305147409 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.31049103 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.306461904 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.313008346 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.636061937 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.367102758 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.310224024 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.311461404 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.344587698 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.313797707 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.309636689 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.315760503 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.948442468 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.337294918 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.310470487 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.309069077 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.323177786 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.310298526 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.313135914 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.308521501 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.589756772 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.307045092 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.333625164 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.311516641 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.307618538 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.317274945 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.484918033 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.316540406 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.686977421 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.31384699 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314142473 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.33454321 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.319768433 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.323458902 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310266527 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.307923158 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.243659785 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.595966508 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.336085418 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.307859017 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.313626145 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.311215155 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.313439562 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.308753703 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.358090104 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.312854446 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.120058511 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.361703753 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.32305132 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.311033749 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.321027533 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.312099485 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.325996369 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.312650647 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628231868 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.619041416 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.480182886 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.327401884 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.312734659 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.128690375 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.383385987 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.496511988 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.340363583 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.311270296 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.580586159 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.563836156 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.314171437 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.313973121 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.318177881 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.583462229 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.315386171 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.636145198 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.908091889 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.333180473 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.314327212 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.135063745 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.087498984 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.315648808 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.317102054 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.629261949 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.333404894 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.315612924 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.316210144 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.317985332 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.313646288 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.315167918 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.320400363 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.315551442 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.313665602 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.388808718 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.516566851 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.340101393 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.323861002 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.902831877 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.335941585 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321529114 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.311923613 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.314050715 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.315271763 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.390219784 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.31915898 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.322805746 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.315878192 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.317616822 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.928550478 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.317138695 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.317719746 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.510926507 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063133534 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.336193528 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.319308417 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.335850488 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.214603357 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.924308679 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.378509752 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.69317888 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.323888913 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.361723618 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.317822966 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.33095884 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.961632746 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.319669773 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.33801647 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.033540743 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.337401352 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.938945581 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.313771057 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.321049042 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.98963231 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.336839065 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.317061156 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.311316605 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.32288764 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.621607602 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.319405482 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.36826253 seconds)
  done (took 496.288197251 seconds)
done (took 642.910544611 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.318122277 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.321137914 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.304215116 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.319155211 seconds)
  done (took 10.47847333 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.327167123 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.324795519 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.338568389 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.324646389 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.329251187 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.325218949 seconds)
  done (took 9.188039965 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.319806702 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.322217042 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.323420721 seconds)
  done (took 8.183787963 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.564959619 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.352728207 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.692859082 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.352548386 seconds)
  done (took 9.183487259 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.341264988 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.337961214 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.337256287 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.330284586 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.331954619 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.331677761 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.331169336 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.329897359 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.332367624 seconds)
  done (took 13.219647855 seconds)
done (took 51.467329289 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.358213191 seconds)
    (2/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.330496343 seconds)
    (3/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.333349185 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.343206595 seconds)
    (5/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.008829546 seconds)
    (6/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.330411388 seconds)
    (7/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.41931405 seconds)
    (8/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.315568689 seconds)
    (9/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.330243429 seconds)
    (10/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.33024956 seconds)
    (11/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.088269627 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.377350122 seconds)
    (13/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.044359563 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.32919644 seconds)
    (15/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.332613802 seconds)
    (16/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.333229053 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.330756598 seconds)
    (18/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.475962414 seconds)
    (19/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.501147729 seconds)
    (20/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.457089531 seconds)
    (21/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.496320372 seconds)
    (22/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.330852676 seconds)
    (23/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.35642168 seconds)
    (24/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.410613641 seconds)
    (25/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.464595267 seconds)
    (26/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.332329331 seconds)
    (27/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.572250446 seconds)
    (28/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.307170908 seconds)
    (29/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.366209205 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.370636435 seconds)
    (31/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.34105981 seconds)
    (32/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.121883284 seconds)
    (33/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.383228666 seconds)
    (34/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.982977364 seconds)
    (35/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.38691421 seconds)
    (36/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.460459026 seconds)
    (37/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.49344297 seconds)
    (38/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.99214555 seconds)
    (39/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.52140427 seconds)
    (40/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.351261347 seconds)
    (41/286) benchmarking ("sort", Int64, true)...
    done (took 1.811395401 seconds)
    (42/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.339216659 seconds)
    (43/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.332915185 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.515040091 seconds)
    (45/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.416022524 seconds)
    (46/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.413495822 seconds)
    (47/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.32356303 seconds)
    (48/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.426755601 seconds)
    (49/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.979906672 seconds)
    (50/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.373492249 seconds)
    (51/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.345235188 seconds)
    (52/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.326009419 seconds)
    (53/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.389187769 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.395346199 seconds)
    (55/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.330735771 seconds)
    (56/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.342289005 seconds)
    (57/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.330996637 seconds)
    (58/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.340586581 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.40111341 seconds)
    (60/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.353370341 seconds)
    (61/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.332400249 seconds)
    (62/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.331921097 seconds)
    (63/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.325149452 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.361093794 seconds)
    (65/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.344609439 seconds)
    (66/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.650682591 seconds)
    (67/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.340974756 seconds)
    (68/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.331949274 seconds)
    (69/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.311267511 seconds)
    (70/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.462130891 seconds)
    (71/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.495757633 seconds)
    (72/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.564758697 seconds)
    (73/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.45297483 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.537834103 seconds)
    (75/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.465315546 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.437044105 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 1.523874082 seconds)
    (78/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.498089129 seconds)
    (79/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.361477406 seconds)
    (80/286) benchmarking ("sort", Float64, true)...
    done (took 1.961848577 seconds)
    (81/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.108771525 seconds)
    (82/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.358383419 seconds)
    (83/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.343022546 seconds)
    (84/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.338086253 seconds)
    (85/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.523517232 seconds)
    (86/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.514013295 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.39956124 seconds)
    (88/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.417360563 seconds)
    (89/286) benchmarking ("sort", Int8, true)...
    done (took 1.698792151 seconds)
    (90/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.310408867 seconds)
    (91/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.335794754 seconds)
    (92/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.384941149 seconds)
    (93/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.438880791 seconds)
    (94/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.339118541 seconds)
    (95/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.394975327 seconds)
    (96/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.335506811 seconds)
    (97/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.34330712 seconds)
    (98/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.357396264 seconds)
    (99/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.547031247 seconds)
    (100/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.413863322 seconds)
    (101/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.096156044 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.367306035 seconds)
    (103/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.072967232 seconds)
    (104/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.409308246 seconds)
    (105/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.340112964 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.382328297 seconds)
    (107/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.333944933 seconds)
    (108/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.314044801 seconds)
    (109/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.392558807 seconds)
    (110/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.503902282 seconds)
    (111/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.340962683 seconds)
    (112/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.440661446 seconds)
    (113/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.647850299 seconds)
    (114/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.344830978 seconds)
    (115/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.345525203 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.360270156 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.336511478 seconds)
    (118/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.465274639 seconds)
    (119/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.343016559 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.357830042 seconds)
    (121/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.340262903 seconds)
    (122/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.314652016 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.521291992 seconds)
    (124/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.348749164 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.357068075 seconds)
    (126/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.386752907 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.444019041 seconds)
    (128/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.344642466 seconds)
    (129/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.682581997 seconds)
    (130/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.345326953 seconds)
    (131/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.475331678 seconds)
    (132/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.438802689 seconds)
    (133/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.546196301 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.345324986 seconds)
    (135/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.345493704 seconds)
    (136/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.473708896 seconds)
    (137/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.131152884 seconds)
    (138/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.357808111 seconds)
    (139/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.329615103 seconds)
    (140/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.545119506 seconds)
    (141/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.321209725 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.427676274 seconds)
    (143/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.314385362 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.336877639 seconds)
    (145/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.40691486 seconds)
    (146/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.109019568 seconds)
    (147/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.35568929 seconds)
    (148/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.34799223 seconds)
    (149/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.394337194 seconds)
    (150/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.573183339 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.333178863 seconds)
    (152/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.341217646 seconds)
    (153/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.246355668 seconds)
    (154/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.35252855 seconds)
    (155/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.186074688 seconds)
    (156/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.332773632 seconds)
    (157/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.110918046 seconds)
    (158/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.437723572 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.380796191 seconds)
    (160/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.329558647 seconds)
    (161/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.397328681 seconds)
    (162/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.327203214 seconds)
    (163/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.421267848 seconds)
    (164/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.699520588 seconds)
    (165/286) benchmarking ("sort", Float32, true)...
    done (took 1.877368947 seconds)
    (166/286) benchmarking ("sort", BigInt, true)...
    done (took 2.331768336 seconds)
    (167/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.314257882 seconds)
    (168/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.341189815 seconds)
    (169/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.349988951 seconds)
    (170/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.333656174 seconds)
    (171/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.341974213 seconds)
    (172/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.344300143 seconds)
    (173/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.348817924 seconds)
    (174/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.424749681 seconds)
    (175/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.568746556 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.450061793 seconds)
    (177/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.422902288 seconds)
    (178/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.349470072 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.340387913 seconds)
    (180/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.343287559 seconds)
    (181/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.400253126 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.340374167 seconds)
    (183/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.334165044 seconds)
    (184/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.458212825 seconds)
    (185/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.333469524 seconds)
    (186/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.523262916 seconds)
    (187/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.451844262 seconds)
    (188/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.464570519 seconds)
    (189/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.522591876 seconds)
    (190/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.363575253 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 1.549359156 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.346062894 seconds)
    (193/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.332803937 seconds)
    (194/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.027726272 seconds)
    (195/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.347291812 seconds)
    (196/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.400167192 seconds)
    (197/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.058531194 seconds)
    (198/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.316374184 seconds)
    (199/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.382916299 seconds)
    (200/286) benchmarking ("sort", Float32, false)...
    done (took 1.487875378 seconds)
    (201/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.364761458 seconds)
    (202/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.349213332 seconds)
    (203/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.567836422 seconds)
    (204/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.55607289 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.427834224 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.355704658 seconds)
    (207/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.344008203 seconds)
    (208/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.350546888 seconds)
    (209/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.463365012 seconds)
    (210/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.225891508 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.468137968 seconds)
    (212/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.480057871 seconds)
    (213/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.44977548 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.343814686 seconds)
    (215/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.01183022 seconds)
    (216/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.056698659 seconds)
    (217/286) benchmarking ("sort", BigInt, false)...
    done (took 2.336052901 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.444970944 seconds)
    (219/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.347977522 seconds)
    (220/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.426238083 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.34381152 seconds)
    (222/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.337037388 seconds)
    (223/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.49462051 seconds)
    (224/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.35625781 seconds)
    (225/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.346828265 seconds)
    (226/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.337213715 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.407563117 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.530998809 seconds)
    (229/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.325683714 seconds)
    (230/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.352764012 seconds)
    (231/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.385238346 seconds)
    (232/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.432511861 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.392925496 seconds)
    (234/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.182202799 seconds)
    (235/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.369821123 seconds)
    (236/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.505907629 seconds)
    (237/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.373015905 seconds)
    (238/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.350756573 seconds)
    (239/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.421108825 seconds)
    (240/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.420041906 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.454431576 seconds)
    (242/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.354736929 seconds)
    (243/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.350198372 seconds)
    (244/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.400200683 seconds)
    (245/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.391014706 seconds)
    (246/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.343632283 seconds)
    (247/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.990753963 seconds)
    (248/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.344211199 seconds)
    (249/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.344963978 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.377205169 seconds)
    (251/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.401971794 seconds)
    (252/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.107206432 seconds)
    (253/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.642117441 seconds)
    (254/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.345004214 seconds)
    (255/286) benchmarking ("sort", Float64, false)...
    done (took 1.547532486 seconds)
    (256/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.332086633 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.352002293 seconds)
    (258/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.371666432 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.35308855 seconds)
    (260/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.353008686 seconds)
    (261/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.475653757 seconds)
    (262/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.341784704 seconds)
    (263/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.339589316 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.358116903 seconds)
    (265/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.361633075 seconds)
    (266/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.414234637 seconds)
    (267/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.552976068 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.519267427 seconds)
    (269/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.327122378 seconds)
    (270/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.459397753 seconds)
    (271/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.354759658 seconds)
    (272/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.999509004 seconds)
    (273/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.352283769 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.347557626 seconds)
    (275/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.374131267 seconds)
    (276/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.414269843 seconds)
    (277/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.357894463 seconds)
    (278/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.497093438 seconds)
    (279/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.501318294 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.345952876 seconds)
    (281/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.241690456 seconds)
    (282/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.381087972 seconds)
    (283/286) benchmarking ("sort", Int8, false)...
    done (took 1.472976237 seconds)
    (284/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.2684703 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.409897064 seconds)
    (286/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.352039926 seconds)
  done (took 470.829161774 seconds)
done (took 472.047200374 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.386437055 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396962248 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.350847069 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.384147851 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.464998235 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.527325326 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.363282368 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.392264543 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.401503151 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.400853564 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.357473236 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.523857326 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.352916441 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.350905303 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.351431572 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393957215 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.354906265 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.34730239 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.369785141 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.389897651 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.368673124 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.359042672 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.402321598 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.523864582 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.357424 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.35607685 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.357523836 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.374338067 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.468623204 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.355324359 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.358010753 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.365197319 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.352765669 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.359148943 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.348797213 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.376771931 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.365047773 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.364057307 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.389095693 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.468187488 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.350173552 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.354093017 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.356379551 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.357348492 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.354201121 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.393395593 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.355488452 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.412642829 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396950189 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39773522 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.344563139 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.364263594 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.36162622 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.355551153 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.366185876 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.355351461 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.412842055 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.401046714 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.374704589 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40115086 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.345079492 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.377229481 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.396634368 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.372687774 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.366893683 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.342147674 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.348408998 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.395599525 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.352402703 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.358644847 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.3467072 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.363723204 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.35672148 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.370207614 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.390519598 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.358673805 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.349513735 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.356518957 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.366199295 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.354373144 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.401460905 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397560172 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.406284285 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.35777171 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.399221522 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.530919169 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.367568729 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.359320664 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.395375476 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.377972226 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.369239756 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.367312524 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.393198375 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.359825386 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.404195342 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.414336367 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.364971368 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.365273318 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.406685523 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.36854942 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.366294729 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397271958 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.355194558 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.355734706 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.358654898 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.481529223 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.35626952 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.354916175 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.394695746 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.407241085 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.418669544 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.353563243 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.368228514 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40718469 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.367844516 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.421032152 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.361623555 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.352600755 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.35170587 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.47593412 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.36117626 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.364623275 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.403009261 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.418585033 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.360062963 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.366913204 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.357021372 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.402387854 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.479892384 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.37134202 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.474730998 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.357477626 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.36464048 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.38943125 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.404270428 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.395287542 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.421713229 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.405622405 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.377340859 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.362522895 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.371574595 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.372292637 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.360320581 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.416982036 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.357168503 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.390436085 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.403096367 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.402961707 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.395423516 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.482351114 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.36557017 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.359125638 seconds)
done (took 227.536429542 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.420093886 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.356628668 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.462952831 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.360603461 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.462921071 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.457840642 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.355464108 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.354346548 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.355210447 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.735394733 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.356934109 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.354568674 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.357060759 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.358002249 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.440003182 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.357773719 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.354620854 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.697950361 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.360280455 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.42743082 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.360851057 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.355101948 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.359226628 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.740091733 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.358345278 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.352658497 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.429081935 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.358197377 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.706790511 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.352161662 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.355968897 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.706032702 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.450106685 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.375767207 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.371315997 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.365076104 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.464383812 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.376518062 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.44084323 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.441651735 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.463591636 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.400907659 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.354289379 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.3581981 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.36333257 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.360126205 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.357260907 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.386065465 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.360625803 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.35998728 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.69890638 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.370781554 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.367369182 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.360015201 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.357061797 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.381050231 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.358065783 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.361323822 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.450019712 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.361633547 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.421715293 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.743655822 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.736518949 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.360820638 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.358206865 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.358629591 seconds)
  done (took 106.160757854 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.42945713 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.436445575 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.487946036 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.358769926 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.415864227 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.495208335 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.361460269 seconds)
  done (took 11.232902612 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.36999933 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.364449874 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.414708101 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.414963919 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.364565607 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.575423231 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.364584769 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.375019993 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.358618666 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.440303798 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.376718192 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.36403275 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.369599854 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.362231925 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.410545563 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.37346299 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.478402689 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.363846094 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.363508989 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.517830265 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361589583 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.372094845 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.445739366 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.375011917 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.376665214 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.372821276 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.343686094 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366461293 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359221542 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.365669889 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.360291472 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.474476749 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.366392127 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.364721666 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.361237499 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.524604143 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.362815175 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.36529127 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.366024284 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.36437655 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.364343142 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.366329169 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.362881987 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.364079454 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.365005395 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.389763824 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.364954666 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.366606436 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.367293175 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.367732676 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.449404761 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.367145065 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.364309616 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.363494659 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.446173055 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373239959 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.365158485 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.36377894 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.366295608 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.364392854 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.519623471 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.414581312 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.367405847 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.413333326 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.368157932 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.368121755 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.366898404 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.366104572 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459466675 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.367653908 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.415519224 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.365156036 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.589287614 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.390972282 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.371485933 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.371711437 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.371962366 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.369412571 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.366296544 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.376968873 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.364357956 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.367962698 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.375476135 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366887219 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.364332829 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.552215282 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.524083677 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.364089561 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.381404192 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.37764343 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.367676237 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.448794725 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.36899389 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.365116321 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.421031837 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.483538506 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.447634728 seconds)
  done (took 141.368037634 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.372725882 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.375707779 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.370985355 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.390163942 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.367694461 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.366983163 seconds)
  done (took 9.499210581 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.373106408 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.369189234 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.370221454 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.370382909 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.371286182 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.381160132 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.382795986 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37069276 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.3748301 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.3688938 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.383168969 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.372950459 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.371753455 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.369964072 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.381333192 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.370394175 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.381203811 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.368713221 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.371236093 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372069301 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.369956546 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.372092808 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.372417441 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.371436965 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.390128353 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.37302373 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.380886624 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.372798227 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.373537111 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.380832473 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.391352056 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.385126995 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.374831513 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.380457531 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.390103775 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.374391865 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3783537 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.373300065 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.367752226 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.385697397 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.375500161 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37163205 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.372551099 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.373428317 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.37359009 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.379143288 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.378967944 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.379202486 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.383698893 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.373579659 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.373771149 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.372959875 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.384456144 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.374338814 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.375552201 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39548519 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.379410374 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.384777633 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.371764047 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.376328779 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.377497963 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.386350987 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.376293544 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.389323706 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.370160757 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.375052815 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.375484674 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.379516361 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373566834 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.373807939 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.374930352 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.372073365 seconds)
  done (took 101.367069774 seconds)
done (took 370.868907958 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.40411306 seconds)
  done (took 3.662092445 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.596912224 seconds)
  done (took 3.86047503 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.423500193 seconds)
  done (took 26.697558784 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.401989374 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.428641131 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.387992132 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.366979328 seconds)
  done (took 10.849595729 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.740556991 seconds)
  done (took 4.002554265 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.368135434 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.386591088 seconds)
  done (took 6.017879263 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.726984083 seconds)
  done (took 3.986631365 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.779076158 seconds)
  done (took 4.052136394 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.370401639 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.381950011 seconds)
  done (took 6.023753737 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.35282943 seconds)
  done (took 3.613967037 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.287646651 seconds)
  done (took 17.550907036 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.370856134 seconds)
  done (took 3.637520578 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.404861222 seconds)
  done (took 3.665908624 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.637072944 seconds)
  done (took 6.897971074 seconds)
done (took 105.780126768 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.371338654 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.369552131 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.368493222 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.367640192 seconds)
  done (took 10.737932423 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.410163573 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.409869774 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.410144864 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.420928555 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.415456293 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.410925812 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.40500717 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.402593168 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.421385496 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.414607871 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.412996333 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.410956126 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.409883456 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.401613449 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.411404715 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.414490099 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.419548835 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.411942629 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.400675654 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.41331829 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.376643034 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.421110123 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.412184905 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.377065515 seconds)
  done (took 35.077004104 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.87776257 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.481617429 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.532268973 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.444336634 seconds)
  done (took 7.599692104 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.447797115 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.445892925 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.461105519 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.49711441 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.518384453 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.455203645 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.403510706 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.401340237 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.38793212 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.451027199 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.510027622 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.443576442 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.527861357 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.378189524 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.573850208 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.379105119 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.379590881 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.457143712 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.49503207 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.514969781 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.378179625 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.456661317 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.458952627 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.444536555 seconds)
  done (took 36.130955819 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.379343891 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.39616846 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.377828813 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.375825734 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.385849065 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.377107683 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.378961835 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.378541251 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.378254295 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.944567032 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.374837133 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.392157203 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.915263891 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.376652165 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.38300497 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.37954986 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.920169011 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.9136749 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.376763309 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.384187647 seconds)
  done (took 31.054397953 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.377149458 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.373356161 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.723648417 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.629197627 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.374406215 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.373839735 seconds)
  done (took 14.119325138 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.466054427 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.634945662 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.383110963 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.802210085 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.893815396 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.385396522 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.381712677 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.676560456 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.062545146 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.012352602 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.452897813 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.467048492 seconds)
  done (took 20.88753331 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.384485469 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.373087743 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.375929834 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.392749091 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.448856899 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.385205433 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.39279163 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.375178183 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.448320254 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.456342958 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.384642814 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.452800258 seconds)
  done (took 22.140173818 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479004008 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37605104 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37640291 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511518246 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376144175 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.221238701 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.506312242 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.188058884 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.401025286 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654882237 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379544329 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476752598 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.635800928 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379830402 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378245737 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.376291036 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611276484 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940794913 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375962503 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375259296 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425375447 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389946187 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393272468 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.628871418 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378784296 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377011021 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.640347149 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376701529 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.717940713 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.392826511 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387153079 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37901612 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653287709 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126932131 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504046188 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.629686279 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413571436 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37566895 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.381013061 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.396179534 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384513865 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376620021 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388942211 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379698405 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379480987 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381389186 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203695172 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.40559038 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.377563432 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377746018 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.693367866 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473824894 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.382572513 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379278766 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390267211 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37779408 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.378866398 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.375449178 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988111229 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377280266 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397781116 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.377710975 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401317863 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373452154 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112316299 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.379170868 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.382726388 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382352701 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377222857 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375419026 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412082323 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381062254 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.400065099 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37865004 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.210224732 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38287359 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37743937 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00757005 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380516848 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.379167957 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611972768 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377761221 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378293199 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.377838673 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378450894 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.222658176 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388039678 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.360922071 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.389676831 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.201625207 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.656720306 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403980294 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411815431 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609224969 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.3635359 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38051365 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.392035121 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378474678 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397381668 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.201178473 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40073158 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.381073969 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641391901 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.591012026 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387998948 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.380448072 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952159431 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407753579 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.399266227 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381337128 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.654637619 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.049760144 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39432412 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393720648 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39493613 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381141391 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.258786048 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390555599 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.481190131 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385956113 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690705668 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.327949923 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382536905 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451677446 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384194249 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384487435 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382191896 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399519742 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381743096 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.624295398 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410899079 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.3943541 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.391258277 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383703318 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.378195486 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390602933 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.382303208 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606950074 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391733947 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662327321 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383409035 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382921086 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380629568 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.60723182 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.381922824 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.716062878 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648811213 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390094034 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390400612 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396796806 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405014222 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489538665 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406946951 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.402731445 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.643460928 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.388834536 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.389955304 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38525709 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383275846 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392562027 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.389665861 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403510261 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053922349 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355086183 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388925644 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.280054733 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.399359103 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453483196 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391945119 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.639737006 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.397762841 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40473719 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.387031098 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.383239441 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610911702 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396552769 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.396362574 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463996827 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.951729826 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078118214 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395538996 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.385659353 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.382382978 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.381756877 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38525931 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382430176 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384709809 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.638134238 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40370625 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409745366 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.052973742 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385536007 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384696112 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.388132254 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400075444 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.392112894 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388054398 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.386686318 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404705315 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39874718 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.399734592 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534106493 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.402710993 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388600926 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.905298144 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39477188 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38758836 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386723178 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422638945 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387546349 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371897503 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655802687 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415735315 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696204994 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386137208 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.420053509 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.387295781 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401034904 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396820536 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.411818723 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393667711 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.645844487 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390926312 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386045118 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961817726 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249674197 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014155811 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387946308 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.42683679 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385928213 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.218657294 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411565267 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390865891 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667142649 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.215836072 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411472051 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958323612 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.427873809 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253780349 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.708939857 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622877285 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388176131 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.429678569 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.706280786 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603055246 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42492272 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402136518 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39056986 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.373050686 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059193627 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429949213 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472100253 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226385638 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429555472 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39195329 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.391108354 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.392176791 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875568147 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41446899 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392158045 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399147182 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403577295 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376842288 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39969837 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391540531 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107267146 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391486069 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.962409522 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414394652 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.64757862 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.405730923 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.393945328 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.40525646 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.394220805 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.650609719 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.706199817 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389468239 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393156434 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026702125 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.247691001 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.399346811 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392384915 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278515976 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408346653 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726542057 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.404254726 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.402154948 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396029038 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392518513 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390266765 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.390319013 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398121902 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365090232 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958298085 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.418683418 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425290241 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413461136 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417068408 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.651349586 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.404886393 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.060759641 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621210223 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418839454 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416315388 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.40160962 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40633608 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.376358633 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392566622 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392122467 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41104622 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.620226556 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.395196949 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.377483333 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.497572519 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608728163 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396021946 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.410648843 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679178938 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.392746482 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.397544271 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262793802 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42710042 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407106998 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393845939 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41344578 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390776645 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485283247 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652201295 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.410586685 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.405879976 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874325489 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433584306 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392910822 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.40817569 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491857063 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39453032 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.400444808 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.170966101 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073962113 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25783143 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.073833578 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.707833451 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395242944 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397031633 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395272188 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556903727 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393731564 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671605471 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395509706 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.409243229 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41880207 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407730331 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410621601 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611572486 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674244012 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396672028 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4104815 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39547002 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.397507579 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.410816697 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.610128605 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969964321 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029026853 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397766496 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3950772 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.249090341 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696199267 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397456773 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397141319 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397794305 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.39721664 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.41603389 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.403952224 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397067386 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56131679 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.71102595 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140281732 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.434841207 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.426378224 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.170725963 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398012508 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.655236406 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40707661 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.658258437 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.075734678 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.201594414 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665612133 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468282887 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657765055 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.399098675 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564486087 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.406924654 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402600919 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397118878 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397769282 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.395657128 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.407405126 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0788342 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665483962 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.400236331 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.40784624 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433195899 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.6576389 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.627752202 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.26011897 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624242479 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414008743 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406421593 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401716803 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.083008314 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.714452983 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39984628 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.405157104 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686292321 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401939238 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424834751 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.851131871 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.399110472 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033288984 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.374351225 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423017428 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403293756 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232307054 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079390021 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.404211872 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974797278 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400482452 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416869626 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67492997 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.405553883 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401853848 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702206682 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.405466703 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.41143944 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660149827 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.078427 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.269051951 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.407727705 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437312884 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.399963555 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402496847 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52292916 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404296538 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408350909 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.897062944 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426374916 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402576809 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410721614 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.411012698 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403811039 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.423515625 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402347878 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.40594008 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.419360732 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.387113582 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399928156 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.40546538 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057118652 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42857033 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.069223242 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.736453122 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.660966288 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413255725 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.386496147 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.405731646 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403807044 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40386639 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403098356 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.423584312 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035437883 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.41233783 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.417504015 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408492818 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.62031147 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619341885 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408761115 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665425819 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41638796 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418491592 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.38633222 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405184899 seconds)
  done (took 995.530853087 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.447011631 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.418519619 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.462577788 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.426195704 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.465659775 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.485716293 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.460385622 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.457912237 seconds)
  done (took 20.922014423 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.424519841 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.413992325 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.412046702 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.41759228 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.410723999 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.942800437 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.44136209 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.416366804 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.419162916 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.40500866 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.421823486 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.208837835 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.412135897 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.420914478 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.400247644 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.418483766 seconds)
  done (took 33.296325978 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.886719154 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.71625606 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.394927868 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.42475104 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.4500363 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.40392234 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.93276734 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.421307756 seconds)
  done (took 28.932611828 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.418987097 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.419025145 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.414748291 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.416427176 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.418964052 seconds)
  done (took 8.389529063 seconds)
done (took 1266.080269782 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.411637637 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.413549585 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.410510885 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.415403705 seconds)
  done (took 6.949723576 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.3922012 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.389213815 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.394234166 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.40819926 seconds)
  done (took 9.88275176 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.24836365 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.152169174 seconds)
  done (took 5.703730039 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.408408966 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.159842696 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.15379842 seconds)
  done (took 8.025504344 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.72393161 seconds)
  done (took 3.028138967 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.827797837 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.795722955 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.597705725 seconds)
  done (took 6.527667127 seconds)
done (took 41.417912071 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.417033206 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.652701568 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.583513013 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.411650905 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.583622862 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.58526538 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.153714844 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.413067969 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.408371526 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.408456314 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.404837074 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.584355976 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.139244463 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.662019254 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.141958289 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.660611785 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.59062648 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.428078552 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.417483329 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.404744643 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.155023386 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.412968303 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.416205434 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.41750935 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.58956921 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.566227881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.427063423 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.658199207 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.426866952 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.41046166 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.567037882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.41222125 seconds)
  done (took 83.816377162 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.424465329 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.423378033 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.411012112 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.427528256 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.440816477 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.414155835 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.445238383 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.407094189 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.431392804 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.406803425 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.409399818 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.435718657 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.408006829 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.430395402 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.408748542 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.431488724 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.417731393 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.426604987 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.410195124 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.407725212 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.426042355 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.409514203 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.416202123 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.406982593 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.40999576 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.412180321 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.432295785 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.409458387 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.408734471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.412213245 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.414338593 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.437212342 seconds)
  done (took 78.717844866 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.423770053 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.409287442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.453194293 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.410476238 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.444421609 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.427528063 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.412049794 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.430067537 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.408646722 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.407947534 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.408948885 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.41806317 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.409544034 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.411606936 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.412029877 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.410274177 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.411018127 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.425915754 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.409378809 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.419261274 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.415961763 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.411273421 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.419001864 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.416226279 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.410933311 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.416982748 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.43798885 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.413783378 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.416527439 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.41340417 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.417802077 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.434152278 seconds)
  done (took 78.694898306 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.693010527 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.418820111 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.420954565 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.414069038 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.423483323 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.424107938 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.418234566 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.699812448 seconds)
  done (took 15.219710623 seconds)
done (took 257.752184299 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.427074535 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.427423633 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.634070132 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.438477498 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.432756458 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.441477863 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.445784211 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.675158888 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.452473539 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.668065586 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.442040701 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.437214556 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.417083043 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.436143863 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.728677196 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.575042425 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.38576556 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.425610575 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.788138978 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.432964946 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.70924762 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.417333781 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.717328494 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.413464225 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.415982277 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.414236741 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.412755092 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.384403604 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.463095854 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.807759699 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.422738916 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.395109932 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.542322184 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.546771585 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.658426185 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.597655554 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.431943981 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.513927626 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.668814132 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.424857561 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.418609685 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.268210122 seconds)
  done (took 85.465886421 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.425791139 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.5424763 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.429848002 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.425051698 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.425731082 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.54592325 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.519571143 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.428168201 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.427469397 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.428845542 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.428133407 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.429036163 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.428864746 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.426553135 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.427726601 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.426081454 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.426399288 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.437223449 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.438532125 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.470233841 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.548811017 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.454253981 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.416157317 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.424979308 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.526112329 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.565146389 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.425816729 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.414428946 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.463052806 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.423108463 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.429597913 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.468024795 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.42539423 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.431391148 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.546895173 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.523828678 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.436887601 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.423045627 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.540505427 seconds)
  done (took 58.138209089 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.429776171 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.714886513 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.919205803 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.435457891 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.427017479 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.434539637 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.526071953 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.428435558 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.433635647 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.434662092 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.592201087 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.42941158 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.46540865 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.951522763 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.435101019 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.431614532 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.427100068 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.431281807 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.721552867 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.437609987 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.554134673 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.429748708 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.528346857 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.436102755 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.457678868 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.432797023 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.438037458 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.008371643 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.432823411 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.597187816 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.380033149 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.52484185 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.96670814 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.931495093 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.388374183 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.433717826 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.435675613 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.60389301 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.43358831 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.432387067 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.526265904 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.432585511 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.935169551 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.128526617 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.456131319 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.433894976 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.033319046 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.597179836 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.71892115 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.441447857 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.945020815 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.433294871 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.434438389 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.434610177 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.724122372 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.436727729 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.43073444 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.041523759 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.456406368 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.521747263 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.43107552 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.435223092 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.715399339 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.431043326 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.702571851 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.432418603 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.441777257 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.455107332 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.920024642 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.434408314 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.139180707 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.456510432 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.432349357 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.600272406 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.700234527 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.071009854 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.437528326 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.720209869 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.967667926 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.521327259 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.434612071 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.002222214 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.524381729 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.438373366 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.439515968 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.441882909 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.439156128 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.482697406 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.525552828 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.069523675 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.125385883 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.071495457 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.545727232 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.447792289 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.437081728 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.046463618 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.453418515 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.43445269 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.914251202 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.13644086 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.452778785 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.446291149 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.146878217 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.459221114 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.531917298 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.439921851 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.931214299 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.434649898 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.484468555 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.474942354 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.442005079 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.464397876 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.532774565 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.438238587 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.437295883 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.110912069 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.628730657 seconds)
  done (took 189.949068316 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.433225077 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.447040386 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.445074508 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.437674858 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.43051025 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.440178995 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.429993232 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.430377037 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.438349835 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.43100473 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.428999088 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.43653308 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.435523235 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.436687124 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.441509575 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.440767839 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.430501619 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.428288676 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.447730802 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.42927362 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.430601178 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.45523554 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.444681846 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.430441927 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.431330689 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.434197388 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.442213023 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.43142601 seconds)
  done (took 65.540860038 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.438679618 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.136215784 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.444381737 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.596866887 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.468131501 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.435642471 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.591497949 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.50604191 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.441265841 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.438373335 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.43804455 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.817689478 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.441362053 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.067911571 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.675638716 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.596444888 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.070063634 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.463240309 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.43815449 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.438970107 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.601374903 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.454185503 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.810649749 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.127500244 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.443181689 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.114792182 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.43071939 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.443037051 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.437675344 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.122008496 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.438296976 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.805703826 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.534674443 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.513477885 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.13579568 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.048783848 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.077188454 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.624058788 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.442174342 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.439230053 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.439406852 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.428720924 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.120958942 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.445362317 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.443545462 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.114173888 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.467043556 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.445184442 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.435873582 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.442892969 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.513735591 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.516816265 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.810744313 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.195968713 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.537547493 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.443799796 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.603376875 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.754660695 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.446442814 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.050391506 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.431414087 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.129038582 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.455297124 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.432979 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.44706035 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.433290926 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.623573167 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.604625898 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.057124935 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.467891422 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.065179101 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.647697287 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.446452903 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.444880133 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.4476353 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.130557591 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.065259765 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.647474963 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.605743197 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.680389657 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.428907339 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.443394633 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.432786917 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.539151722 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.443793847 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.129533605 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.074887699 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.468979835 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.443565998 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.44646744 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.447133768 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.664325648 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.127797251 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.539251044 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.042294559 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.837649804 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.815310321 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.450027327 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.518574337 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.463684694 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.886708271 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.449529072 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.519149209 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.79645276 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.81604527 seconds)
  done (took 174.460598163 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.726530644 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.465715347 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.575917419 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.619207288 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.126374479 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.106085416 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.440453796 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.583199416 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.575397162 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.744622683 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.442764253 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.561569315 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.698333676 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.547440651 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.243304762 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.529267806 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.550680635 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.606410541 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.598914101 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.442172145 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.171833587 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.789691207 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.660642702 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.494398601 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.56077141 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.344340637 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.08317753 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.028013819 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.650668672 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.44442818 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.015853966 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.440184494 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.46134173 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.249008657 seconds)
  done (took 67.910315081 seconds)
done (took 642.773099406 seconds)
SAVING RESULT...
DONE!
