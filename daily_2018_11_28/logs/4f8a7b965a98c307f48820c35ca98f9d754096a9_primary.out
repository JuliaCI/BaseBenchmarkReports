cset: moving following pidspec: 4402
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.230612522 seconds)
loading group "string"... done (took 0.552119507 seconds)
loading group "linalg"... done (took 7.660826117 seconds)
loading group "parallel"... done (took 0.170604073 seconds)
loading group "find"... done (took 1.160806876 seconds)
loading group "tuple"... done (took 1.832100864 seconds)
loading group "dates"... done (took 1.245566187 seconds)
loading group "micro"... done (took 0.231575941 seconds)
loading group "io"... done (took 0.762664909 seconds)
loading group "scalar"... done (took 40.739088812 seconds)
loading group "sparse"... done (took 12.881387464 seconds)
loading group "broadcast"... done (took 1.144776033 seconds)
loading group "union"... done (took 13.4107594 seconds)
loading group "simd"... done (took 4.77492698 seconds)
loading group "random"... done (took 9.677496208 seconds)
loading group "problem"... done (took 2.141142051 seconds)
loading group "array"... done (took 22.582673747 seconds)
loading group "misc"... done (took 2.102759902 seconds)
loading group "sort"... done (took 3.448280022 seconds)
loading group "collection"... done (took 19.420936945 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.576994041 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141104194 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148452846 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147134047 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188375604 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.155819592 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157593732 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098081277 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.970885421 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.17439993 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153261707 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.516791371 seconds)
done (took 5.210116088 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217017158 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09396067 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10293377 seconds)
  done (took 0.924521471 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076124581 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143020924 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094483653 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077387813 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094587931 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076572484 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094351983 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079622508 seconds)
  done (took 1.394826316 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087250822 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097237551 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081332327 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095657966 seconds)
  done (took 1.095907261 seconds)
done (took 4.448771616 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.734286769 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271960439 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204688023 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.459884144 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19893122 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.218244618 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681484684 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.360707791 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252454218 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099815991 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.141728507 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.384119916 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136319789 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.690420922 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089569415 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123512476 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177899006 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.461544704 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081943453 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109279554 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116649633 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141573409 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128146474 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09256087 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183659149 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08076479 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192882763 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107267224 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.07980841 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.286042349 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200307752 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.7038258 seconds)
  done (took 10.964886083 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110080251 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132270919 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09774326 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138358091 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134247056 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099419301 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084231136 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095812655 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120676674 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17479538 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114143996 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135934454 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094029569 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082151167 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115398608 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245069571 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120800122 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102952045 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100570679 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103329377 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121053463 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111991469 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108406514 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092872051 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166077728 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221449368 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11133293 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125855403 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095625041 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111605813 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143636062 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142915154 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093976647 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079253494 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172347934 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123438267 seconds)
  done (took 5.167667455 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.073025314 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187915665 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120803264 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.155481008 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16837368 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079669809 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140989511 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095906291 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112471216 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255564434 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.109880938 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077163729 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17938433 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141309567 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114964706 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081279975 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097444947 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079816012 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.619157221 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156089154 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135225205 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113264445 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105622486 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083067286 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.382970796 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10493828 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078822016 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097190052 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064601652 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158203342 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098021927 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.134016968 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119903004 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081403108 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134496414 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.214253804 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109638333 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13470094 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094614682 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078124829 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176029617 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103587759 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078776482 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119878368 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133266464 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134584724 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096395457 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07959974 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203512095 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096736549 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113037688 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.922805787 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.178702077 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078392547 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.103369374 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.079145741 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323544506 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115019609 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079019476 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094191472 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.262529693 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.206942621 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096830584 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080236598 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095851518 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081043897 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.379333686 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096829319 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.859975382 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084155983 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.103913678 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082486762 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096777725 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10240856 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086414513 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114966463 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077817248 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097259102 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077341784 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095568041 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079905831 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107718945 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104508597 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078418855 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163875313 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080949063 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115413822 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125984248 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083270556 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094305749 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12879871 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082236987 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.095951401 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.130681756 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.076686943 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097601969 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106494096 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082632767 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143015785 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095816521 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.152136012 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095482426 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124836576 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099409032 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113019646 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111143668 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099092878 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082999627 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095395789 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.075968534 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164309386 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080208765 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097935282 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080057294 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109443372 seconds)
  done (took 22.523866684 seconds)
done (took 40.461877998 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.315730299 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102600624 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103588102 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102529812 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100428812 seconds)
  done (took 1.532081545 seconds)
done (took 2.313606372 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287613975 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171036259 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095730806 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166826058 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093727136 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172107229 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158514303 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110621463 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199520172 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094847839 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162705227 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094719079 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076973142 seconds)
  done (took 2.694364622 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094755418 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114388722 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0818902 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11100188 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07548009 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111347423 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091280797 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117346883 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109170927 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08678996 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092942763 seconds)
  done (took 1.864529694 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09414955 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111927139 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082098078 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109736466 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076133611 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109578448 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092030335 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115711114 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10820596 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086144118 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092947149 seconds)
  done (took 1.855439929 seconds)
done (took 7.186405084 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08995538 seconds)
  done (took 0.862632139 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.925459276 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.013433172 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111975091 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150053263 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.297929225 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192432638 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.483710419 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123721198 seconds)
  done (took 11.276457246 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.147269376 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087758368 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104613316 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08374701 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102911059 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.081107198 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099462948 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10204507 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085551397 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101981443 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08532943 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.1000627 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101111602 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083714334 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099836031 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083191279 seconds)
  done (took 2.383940308 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118198887 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117592025 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107073005 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108904062 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085150534 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105634049 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106444517 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.086398166 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102011729 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103227978 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090184303 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105495865 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104489225 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07823521 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106507981 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107842327 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084921316 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106686888 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106935016 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089969242 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107051068 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095319792 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087575269 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106843409 seconds)
  done (took 3.302019368 seconds)
done (took 18.601948765 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161637207 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107528818 seconds)
  done (took 1.050325778 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094770722 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112611698 seconds)
  done (took 0.993026923 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098072376 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096176209 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120572841 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109329226 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079807804 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097594304 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118914789 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079212842 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096524438 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079404308 seconds)
  done (took 1.764309037 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082674018 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109123186 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10125379 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09456151 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105071592 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094854031 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087364209 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098905388 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109181938 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077594757 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102092659 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114067227 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084698506 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116422606 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105455631 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082539016 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104097583 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098506477 seconds)
  done (took 2.55585193 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079545327 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096616626 seconds)
  done (took 0.962713868 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082926464 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093575382 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080630228 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099245985 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09282151 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077044623 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092652257 seconds)
  done (took 1.404487149 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.492499353 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134857516 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.261068614 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10157353 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.1200803 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300880587 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098435335 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083318692 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103186182 seconds)
  done (took 2.522425671 seconds)
done (took 12.038792338 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094469879 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11752256 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11140546 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.466273239 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107764798 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098301208 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14589109 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.25006094 seconds)
done (took 2.183918646 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.143663673 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326116437 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.116606752 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067553911 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098830014 seconds)
  done (took 1.401548523 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080995638 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099985893 seconds)
  done (took 0.971361108 seconds)
done (took 3.314847855 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081976439 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.129544173 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.078803623 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.100058822 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.076550778 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099791606 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.076362129 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09686489 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079157343 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.09843311 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095602517 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.082354639 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093283877 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.080601224 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096118512 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077943345 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093803233 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080173574 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093931083 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078855631 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094045329 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080634066 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094048675 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078245606 seconds)
  done (took 2.963090266 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099933885 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09908012 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102613136 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088270168 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101196569 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085448715 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105004642 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097057132 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085947109 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099648611 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099509641 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084134519 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099111682 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083547251 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100093356 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100639023 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086795761 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097808982 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082769608 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102017978 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102427359 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081183324 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102793344 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101463471 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085138443 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101191996 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082893694 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099311189 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102103762 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084949521 seconds)
  done (took 3.639870776 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086419568 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093763416 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07875082 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101005189 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078096597 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097794965 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077755856 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096167253 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078038323 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095576819 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079322103 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095813637 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077230888 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096977765 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078747606 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099566721 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.10708496 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077869369 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095635443 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079605836 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097941635 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077860096 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096053498 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078499404 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094758645 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077285385 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095663766 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077701628 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096892422 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076740259 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099206377 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081434633 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095550475 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084544948 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099316118 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077139927 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099975389 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076663315 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09749277 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093345358 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078459789 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094101695 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079021764 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100370826 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079528624 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095918658 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078761987 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096694762 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078753455 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099545656 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077007648 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094673114 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078290203 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095873885 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081072075 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096066278 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09514818 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078379611 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095583957 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07821915 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093632353 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077924554 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095961443 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079596611 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111160737 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.083974786 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095691285 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078962359 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096813239 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.078885446 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097587202 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109379888 seconds)
  done (took 7.195845295 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084503666 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104901379 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079595631 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097406242 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075569934 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097028871 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098345597 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079160863 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096529332 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.0845856 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095735065 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07885651 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09816546 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106280161 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080456309 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096342066 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084480221 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094169503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078207934 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099718107 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077649086 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100107766 seconds)
  done (took 2.792126306 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209866739 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105029702 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141599999 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106745959 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083011631 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10631541 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101867841 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087012405 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102231026 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08209734 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102015106 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102217801 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082994591 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101853719 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100258762 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085714458 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101869118 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084692426 seconds)
  done (took 2.694870208 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093899558 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098521606 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10222187 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100257612 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099189488 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083727641 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104397548 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106813869 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084704779 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097978773 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089283362 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102109718 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100372259 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081528572 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100390556 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080494762 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101416546 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079273874 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108772452 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103960128 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103787632 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090957826 seconds)
  done (took 2.923261943 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098973848 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100618271 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117833176 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.0850552 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094692105 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079511466 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105714241 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080014555 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107536482 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100374871 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081149565 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096797547 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087446202 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10012166 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104501483 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080889595 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101086503 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081160879 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100498912 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075896438 seconds)
  done (took 2.691149972 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.209024877 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100603179 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09913848 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092705166 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100867982 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081047704 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110378334 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100585732 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082417992 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125816345 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101050473 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082939213 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110892318 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106911313 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099084302 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092510882 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110013382 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108575561 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082018245 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100904672 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125397188 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081733783 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109475296 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09980325 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08220409 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100057904 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099397015 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088740445 seconds)
  done (took 3.697444782 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082364091 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097987825 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080066399 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095055074 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07837681 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096140129 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079700857 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095008829 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081508688 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095952451 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08082933 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098002335 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084019484 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098788814 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081214045 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098767334 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081901017 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096831441 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077853837 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096995808 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080541248 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098836789 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080902053 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097174082 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077795175 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099266108 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077448593 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096716978 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08011883 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097005487 seconds)
  done (took 3.478140921 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092183505 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106520356 seconds)
  done (took 1.01237446 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080100586 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115392195 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07820991 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103154475 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084475853 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100562198 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107412266 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086130759 seconds)
  done (took 1.569611418 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097051595 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109063239 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082509643 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113231027 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109249955 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.09735408 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169426345 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101239971 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.085866523 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098606884 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112132667 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.0813243 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105273073 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080912028 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105981884 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086652329 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098243569 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104146814 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084487206 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097949518 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083265149 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109519885 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083137286 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096817789 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100606072 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091056289 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111957698 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082107145 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103591678 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106728787 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087516849 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093386886 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081069589 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100917463 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078610862 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109387727 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115123796 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083817666 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109576744 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.080584937 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111035473 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094923787 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086576219 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105432353 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108201138 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083826552 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100152576 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076338454 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097807506 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083771259 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095525662 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081287703 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094410331 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088651136 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105385952 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110914986 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080789397 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101149466 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083349366 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103743865 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088332245 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102187697 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100754172 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082200056 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106088731 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.084699776 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109371998 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.075627974 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094865729 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099101075 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092041822 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123377923 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.086728644 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102002778 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100419553 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080394282 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102995904 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082124203 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106086663 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105742724 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083680469 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10637807 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088184766 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10085715 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083206993 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109128479 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098460581 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084024712 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098669434 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118051554 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081210184 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097958254 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079431011 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111467231 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084550407 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101114247 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078228226 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108518014 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092946054 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08397494 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100985766 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082116089 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11147159 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105685208 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088307659 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109376158 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088007904 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100301957 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102590987 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079006452 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100818435 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084323273 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107212795 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075134468 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103943529 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082485143 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101959637 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108788495 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080359289 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099769164 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089633044 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106296921 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079726344 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097264823 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101147791 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082681266 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103792623 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089485737 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099455694 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076782639 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095400769 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102180587 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081872506 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10470235 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087548158 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105255498 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075153618 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099637213 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104665833 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09115767 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101539663 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081708558 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10720741 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10102152 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083184397 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107943809 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085287776 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100318421 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087076122 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10242545 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077053588 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105343666 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101760997 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080701689 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104685944 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086480594 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103444602 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082374885 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099218737 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105107376 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082837267 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.09917993 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080896432 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09901941 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092279709 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103420525 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094512745 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079119556 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108453255 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080082566 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100152016 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081349408 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10354715 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.081190888 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099856937 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099700679 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084551378 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114509946 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085010417 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103263012 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105498374 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09321269 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10054871 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084083174 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101692515 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101872563 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083304241 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109105333 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.086735973 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106421699 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102000716 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079455828 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106447823 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089567677 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099946103 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080293024 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100068251 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08390142 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107419317 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104646826 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083270788 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099644199 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082350515 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105712894 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102289605 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083728939 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098413634 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087205941 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100382541 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.087878613 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103907821 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110709082 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08621141 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096827959 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086560707 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099627129 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.104682944 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078345085 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097638628 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081537962 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101434807 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081343356 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104553918 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.075069961 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107994155 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089708589 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102484154 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.098475102 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083922604 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107960187 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083698266 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105721383 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084994232 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108189092 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110077141 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081437622 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104653079 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.091488242 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101765206 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.074478869 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107161969 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097753947 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083218036 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099428625 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080465503 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103554536 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091935526 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.10914284 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095022293 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084847649 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099355177 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081660587 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096568218 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086631871 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104927611 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083102133 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109290252 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101188197 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08389287 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105708711 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081571983 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104356655 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100439475 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086590701 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101564383 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085626922 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101252845 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085200623 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101189737 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081776873 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103909423 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100403919 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083468127 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10557175 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082572792 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101616728 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084930481 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103144948 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081464436 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101636203 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.098994905 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087386798 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101258919 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083078784 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103752414 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078107961 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109561588 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082112471 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109586916 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100956265 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080629996 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10549788 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084111852 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10774277 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.082169942 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102779349 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102212246 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082276183 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104314508 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090080679 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099798992 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091625297 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110452041 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102578536 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085369449 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101096218 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084504178 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101641447 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083533313 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102963621 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100446487 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083546426 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105862147 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085824449 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102432435 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084047401 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103303016 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082020039 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103748831 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094300884 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082643883 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100871744 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08470661 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112576078 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083427862 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10563062 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099752602 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084826569 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099810814 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079743996 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110309402 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110911422 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084004903 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109643109 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081115005 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103815859 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110266612 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077779368 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098256676 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08180941 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098723399 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09066842 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103053467 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.090849416 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102009115 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081390918 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099149274 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101765267 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082481475 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094511966 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081215783 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104217253 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085762163 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100519898 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.081918965 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105592808 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082770691 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.120827152 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100507274 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083013333 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102834554 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079323476 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100859741 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080428002 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104985021 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.1020122 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081531367 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098090862 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082252415 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102162938 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083975885 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101149889 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083475253 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109660825 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080554404 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104401062 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104404925 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077647477 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104969383 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082055208 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102258958 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081101078 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106537722 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104664317 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084341543 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111144362 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082431234 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10262209 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081788612 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100618044 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100549844 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083493643 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101927479 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081979708 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10248626 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090322217 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100772606 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.084700397 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10129267 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101336375 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090516294 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102948309 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085091607 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110122087 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104087046 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084462898 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109390299 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.08697888 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106168409 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101372734 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085119043 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107775665 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08098751 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109305846 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082597633 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104077268 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083330967 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100693812 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081133676 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103319765 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100789179 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089642513 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104306652 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08193108 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102135683 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080270311 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102870246 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104726323 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092109332 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104317386 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085882389 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098327242 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.078699314 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103705641 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.07975582 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105348843 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103259169 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089840077 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104263011 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083197176 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102243002 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091685173 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108792637 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105049775 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08098272 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105190598 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083973032 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105772257 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083451238 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102833173 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101743392 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087573241 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104606309 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083007988 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10887423 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085650649 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104290674 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.082501967 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102442374 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101034564 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079481918 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102544222 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085745817 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107620412 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084992305 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102828324 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111691062 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083058625 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10206605 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087783426 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101636624 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.086596593 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098406122 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083918463 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105476828 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102383193 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078834388 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102640196 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080308865 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104734553 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081806339 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098040256 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111440149 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093469582 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105470619 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081288707 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101322401 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077612072 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099116029 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081490142 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104056959 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102495969 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094508095 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101069373 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.081741153 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098482231 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08217678 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105723558 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.085398016 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100563734 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096063907 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083325975 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104536028 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.08902147 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100989776 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083470307 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106119411 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.083765002 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101165615 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10549171 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081665776 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106245904 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096143079 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103504683 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100937243 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090386154 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109945609 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08334176 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098666449 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083306489 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107327456 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10114656 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085409288 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102864586 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097804999 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106475022 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100941361 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083683962 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105176296 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083047482 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110423395 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084788809 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104253906 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.105866026 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08646193 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112383092 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085960135 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11178314 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104450755 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087459 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100609368 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082919055 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100614298 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081548012 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104030313 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.083477594 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109252962 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110274992 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081935946 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113682437 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110509808 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089978253 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099760869 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084267339 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101263737 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078601409 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105124255 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081808876 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101032793 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080023635 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102299402 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.08362432 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108704317 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103529764 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084391239 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.1022936 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077217066 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107756036 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085117858 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104594725 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079977326 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104685599 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102683316 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088614424 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106686279 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084029226 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105661915 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085046721 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104430117 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077834442 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110687904 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100104349 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087508213 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102171749 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085224322 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104558485 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086924465 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110565612 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104748456 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086966398 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115678895 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086161843 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101242221 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.080325282 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.109696937 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099746749 seconds)
  done (took 57.672130384 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147983213 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081453737 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098838167 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079087756 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112692543 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09901378 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079779292 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099669118 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079903894 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10262186 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077661366 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098557546 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108306551 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1241516 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093195765 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104416415 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077869766 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100618005 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098211982 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081475801 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109856281 seconds)
  done (took 2.918860504 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105595961 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118699376 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115616773 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11856132 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089679038 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115193207 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115472297 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114241627 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099098004 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111975418 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118637716 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113963561 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091166412 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110531084 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110620338 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093857288 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120177392 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109154694 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114274729 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093219502 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113966446 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11346812 seconds)
  done (took 3.270733868 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084326183 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102050879 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084880049 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.096925801 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083228368 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098361138 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087060138 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102448405 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085687564 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103324219 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080769305 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102133618 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103554159 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079495728 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102127308 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082100296 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150748514 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107409648 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082346579 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105773566 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.076955395 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106513703 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097683612 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.07991599 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102053497 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088013427 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104351342 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081544137 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103877697 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082521304 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103701832 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080141072 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104877652 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103352872 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083815173 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101466522 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083724223 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103310301 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079654208 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101290465 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084151462 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099217928 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083873794 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106703585 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080563463 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102560381 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083717415 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103677334 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096322537 seconds)
  done (took 5.500556037 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104659611 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161470426 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085798809 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143913282 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12190783 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113080119 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08784204 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142355884 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103800422 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081839253 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122293462 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120268102 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104286144 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088630729 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107719618 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103447537 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085625569 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102610618 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088890742 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.1039185 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108965843 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089050057 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119600282 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117390236 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.1081404 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082978856 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104867034 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.088644236 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.115968003 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110059425 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109543793 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089811257 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120085425 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105443328 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083132075 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107522089 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122280012 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083558737 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108438868 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101128472 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08690515 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109826032 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10956791 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103234289 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105266175 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10760483 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084235374 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101292839 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11782364 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087157052 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113000557 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119873119 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087720003 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104956398 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110237262 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099664741 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105420099 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101999494 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087833087 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.11601002 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100157209 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087224351 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117522017 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105940666 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092779064 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120035091 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108836402 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108166891 seconds)
  done (took 8.15944216 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093532679 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112246014 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12033046 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119867915 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09010447 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11226396 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111552123 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090213824 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111626422 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116366663 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110545182 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133575552 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087370941 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115840804 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110928908 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091710648 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111324061 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110912873 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089971399 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111056548 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111719305 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119752757 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089860548 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121503474 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142099891 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106043802 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089825646 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112869406 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120873612 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110544911 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124239919 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091254868 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.1114188 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121922564 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12408626 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090982321 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103997459 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110666688 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091466043 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111877831 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104984166 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100926411 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111367867 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105738802 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089761535 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112163653 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12203061 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124457251 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114622918 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096093519 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111972574 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1204385 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110295164 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091055422 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121443958 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148343865 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120073669 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121516081 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110875254 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100624598 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121625669 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129866777 seconds)
  done (took 7.724201906 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10806348 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115190354 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118426179 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099300741 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083150386 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108912325 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082291116 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102792857 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113146649 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094945177 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117991164 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108934764 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090545031 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11762495 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110022041 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111918834 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088467658 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10998129 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114531962 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109372494 seconds)
  done (took 2.985262946 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094371138 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124680189 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083788398 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113289355 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108869462 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090374161 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10681858 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106345011 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086091145 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107972325 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09641428 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11713179 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106606877 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091462782 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116524155 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111562495 seconds)
  done (took 2.542706439 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096101736 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117583705 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120746483 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084758175 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104471566 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079205131 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10566327 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099839627 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081217596 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121156808 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084691534 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112030535 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105196029 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082989488 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101395029 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088579572 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102439322 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081081798 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106085575 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119335294 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095422661 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104767674 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105426913 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087292216 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104890648 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088775499 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105948198 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102413564 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083726339 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105886781 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084338823 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11413552 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100742992 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083757515 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103349194 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082274283 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105167753 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084351153 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109379991 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104105086 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083955972 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105380864 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08400828 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106524604 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079696843 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106244122 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.079751509 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.112533048 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102062538 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084987025 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105340426 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085854102 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107598119 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116710634 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088879532 seconds)
  done (took 6.283720739 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100685993 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10936851 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080083146 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10409566 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087281457 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107845682 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107959452 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088704603 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107165594 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083133615 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108291523 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088538317 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107284611 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107547807 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087263911 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108858488 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080331424 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107012876 seconds)
  done (took 2.661758747 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090809544 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104703502 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092490501 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105886238 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084565535 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109179491 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080258111 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104866783 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103441396 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086274977 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104748213 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087239759 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104428788 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086523814 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10619874 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084153311 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109662944 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103405158 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085861526 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101108668 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087925044 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103696562 seconds)
  done (took 3.016332177 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118198013 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125974241 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092302221 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.23107704 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103647303 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132492309 seconds)
  done (took 1.693617407 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109328445 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120846719 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105167612 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10716859 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115288817 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085354243 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108804605 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108248165 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117379799 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100478217 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109160424 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118748826 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116620021 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09574479 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116218459 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114692637 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106914961 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087548671 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106635345 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127939708 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087021611 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117745862 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107273784 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086224543 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109681517 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117072117 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118610593 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1215048 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087734948 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117679062 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113532921 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087997107 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119682137 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123352655 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108183062 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098677431 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108529103 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128016661 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11480576 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095953814 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109043374 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114633215 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097454558 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114953406 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119018435 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107948017 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093084669 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108553597 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108455097 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136456159 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093603818 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118324384 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115418416 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118505495 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095964663 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156497308 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101993865 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117680203 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11501354 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123314573 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117434582 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093777402 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1170793 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122810929 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115080588 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116815808 seconds)
  done (took 8.189663295 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101981737 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125611177 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108766098 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122262779 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097576744 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109029096 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107446213 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087335044 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108578683 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105570109 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152286265 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089416565 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118796579 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118162486 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087343828 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109131587 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108259772 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11738056 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087723472 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137443277 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107704714 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117883432 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116410866 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097445569 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121988106 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115377535 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107151241 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087823685 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108955969 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106870049 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092512985 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108810862 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11853932 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085648587 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119090303 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108700295 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086808632 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114514644 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108573268 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113959591 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097022952 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129454951 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10987686 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107708579 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102914884 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109359331 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108298399 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087383485 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107940839 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106540184 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101187069 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122631257 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122593958 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117369647 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108447174 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086712247 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10920651 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107724865 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088157562 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115219303 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118860007 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087295687 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136525277 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110098837 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108422254 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117408605 seconds)
  done (took 8.065513413 seconds)
done (took 156.132267113 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.27899416 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.236859126 seconds)
  done (took 1.409127105 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097972729 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136325095 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094380114 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169463211 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104979745 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119715509 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138358712 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097128735 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106775112 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084573387 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107257528 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.0858582 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171602204 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084091768 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107276315 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107237719 seconds)
  done (took 2.714442134 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200128518 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256842757 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100832766 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106559919 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087622354 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111330939 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.103267316 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091677389 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109239792 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084524893 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109520576 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086318439 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105576072 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.084979815 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.11106801 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087359821 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106264798 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086567745 seconds)
  done (took 2.930990376 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113643 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147924525 seconds)
  done (took 1.167584874 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118622337 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179974162 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31577578 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154726088 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106752913 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127884482 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15693485 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129775449 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196502575 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122278687 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120924552 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097086818 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139848717 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115415142 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093064226 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118251246 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141820759 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092444911 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116368237 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115293651 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116399254 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107289261 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114461129 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093727123 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18076973 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120058645 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084869131 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107116992 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115000232 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094055663 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113692862 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123905073 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098206807 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177924596 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101125905 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177320258 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09652455 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112822434 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114722571 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.0905623 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119083825 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117296678 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105195975 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117963022 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084048802 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119112043 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104621431 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085430444 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11555081 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096936901 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115332761 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112729604 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15512118 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118502712 seconds)
  done (took 7.568471408 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.797516906 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.160421659 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089866755 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.888723571 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134528454 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103385495 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.776270555 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113944378 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2539726 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.755913918 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132631533 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118770355 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.203893659 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258434558 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.922464282 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.285389376 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.664818106 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123730323 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149516209 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152488098 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116759143 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135011734 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.107552906 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428243759 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116643832 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110867583 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.094981385 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119365638 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158338347 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.123877641 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112939933 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176306099 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.244713998 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204620536 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092882521 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111120135 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10927667 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167880786 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261096797 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190127436 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179074998 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108867145 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109137973 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101343956 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132394979 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107127257 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160262476 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.171801092 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169568261 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115025046 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11767691 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097715219 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120042781 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.162126107 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120220549 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.305709094 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316432419 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087297999 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12096289 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125259323 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256221872 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100887849 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222515318 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138409626 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209860069 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08941019 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776384202 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166813486 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110983506 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094929978 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119781182 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115620341 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.097017757 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166577171 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406506186 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123485136 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114162158 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0883172 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226399532 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123534456 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090534531 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160041578 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115737862 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119929674 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101070087 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12166796 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167460121 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250944131 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100058434 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119157747 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115890456 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101649703 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116702001 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208831693 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216947925 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160337927 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.229071613 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099171502 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.183957686 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16689792 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117939511 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171329752 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118555672 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100963347 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12160332 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214617419 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.143663684 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121569873 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092819991 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118347328 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148626903 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127092708 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.094830632 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190367999 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459354425 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.164330916 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108473202 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126030398 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097233822 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182663266 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094198987 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259620475 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120623281 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.167315695 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11866557 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08637341 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120639172 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16180166 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12160411 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119046565 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099721472 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11838768 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.232973554 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214637417 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121040189 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218754809 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182217215 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11818606 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169569966 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121738093 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166486245 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119395364 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120664744 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094926045 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768084596 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123087555 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097102421 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115554838 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186835387 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109178304 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103094251 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124577794 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086184908 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778187382 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126909994 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120083599 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102319352 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117209768 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118900283 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095771195 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116416644 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160084056 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226996566 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119099856 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118563596 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103292636 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158919472 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116726789 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.12429779 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123656285 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103039549 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120440221 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114379881 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101781591 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188604377 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161268669 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.216938234 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.573494596 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112693021 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123728158 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224550956 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090081059 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28790002 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118002829 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.200162647 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185204633 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098532192 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.315351068 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184649942 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186271045 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105471026 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191648987 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087737912 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118481652 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16392854 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110629885 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095182812 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.180539878 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10176078 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122329255 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.962701111 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088438709 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245571412 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087380806 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169694701 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116404274 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119760032 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28423606 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089753361 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127798667 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162941774 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114757699 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123412544 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.84525847 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12431459 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099736297 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11749887 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219965701 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16157687 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119881827 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117938898 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096199354 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181994068 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206021971 seconds)
  done (took 43.803464537 seconds)
done (took 60.492528914 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27372556 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216268572 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262215689 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169695732 seconds)
  done (took 1.924140526 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170933825 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149505683 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121817543 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108121698 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152271343 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083062564 seconds)
  done (took 1.71458287 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.358121287 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277941069 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239145434 seconds)
  done (took 1.808671637 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.315156346 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.245339531 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472375186 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325276276 seconds)
  done (took 2.382715298 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208781857 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13286901 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111562701 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103291207 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197894743 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246302027 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142488103 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200960214 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098217986 seconds)
  done (took 2.415063734 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196311624 seconds)
done (took 11.370348375 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.128843121 seconds)
    (2/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.16843266 seconds)
    (3/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.098747644 seconds)
    (4/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.279572178 seconds)
    (5/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.122516309 seconds)
    (6/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.252345352 seconds)
    (7/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.185289032 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.191242407 seconds)
    (9/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.267477396 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.132016581 seconds)
    (11/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.15879853 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.097884997 seconds)
    (13/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120068025 seconds)
    (14/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.124907967 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097511262 seconds)
    (16/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.124229018 seconds)
    (17/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.09357524 seconds)
    (18/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.180881968 seconds)
    (19/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.236045639 seconds)
    (20/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.149892107 seconds)
    (21/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.129389295 seconds)
    (22/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.109398776 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.141235573 seconds)
    (24/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.248111043 seconds)
    (25/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.202749132 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.107795368 seconds)
    (27/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111580317 seconds)
    (28/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116132452 seconds)
    (29/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.133775098 seconds)
    (30/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.215097099 seconds)
    (31/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.099964818 seconds)
    (32/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.18863303 seconds)
    (33/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.203319483 seconds)
    (34/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093510158 seconds)
    (35/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.200021143 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 0.221310849 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117004856 seconds)
    (38/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.103497718 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.138513362 seconds)
    (40/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.169999161 seconds)
    (41/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.199554374 seconds)
    (42/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.159699136 seconds)
    (43/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.11389782 seconds)
    (44/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.092734104 seconds)
    (45/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13710107 seconds)
    (46/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.172216491 seconds)
    (47/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.089033592 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.120521046 seconds)
    (49/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.184970321 seconds)
    (50/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092625779 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.13377491 seconds)
    (52/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.14324965 seconds)
    (53/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.155249444 seconds)
    (54/286) benchmarking ("sort", BigInt, false)...
    done (took 0.243100503 seconds)
    (55/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107786723 seconds)
    (56/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.119053969 seconds)
    (57/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.095122657 seconds)
    (58/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.164780746 seconds)
    (59/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.086125814 seconds)
    (60/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.121286654 seconds)
    (61/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065466073 seconds)
    (62/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.208015026 seconds)
    (63/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.120311597 seconds)
    (64/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.118802977 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111694358 seconds)
    (66/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089641481 seconds)
    (67/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.151828604 seconds)
    (68/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.168354267 seconds)
    (69/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.097143163 seconds)
    (70/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.11789683 seconds)
    (71/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103761003 seconds)
    (72/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108150346 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.085749593 seconds)
    (74/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.183807166 seconds)
    (75/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163879544 seconds)
    (76/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.209505238 seconds)
    (77/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.118142999 seconds)
    (78/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.171842862 seconds)
    (79/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.219810248 seconds)
    (80/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117394004 seconds)
    (81/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094469374 seconds)
    (82/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.150356113 seconds)
    (83/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094358665 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.140240439 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.140024 seconds)
    (86/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.097351525 seconds)
    (87/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.192245344 seconds)
    (88/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.142757655 seconds)
    (89/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.122020317 seconds)
    (90/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.099524992 seconds)
    (91/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.096880577 seconds)
    (92/286) benchmarking ("sort", Int64, false)...
    done (took 0.109867149 seconds)
    (93/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.108512525 seconds)
    (94/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.182211846 seconds)
    (95/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.120943378 seconds)
    (96/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.076705504 seconds)
    (97/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.187055553 seconds)
    (98/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089570083 seconds)
    (99/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.094969537 seconds)
    (100/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.100235056 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109847071 seconds)
    (102/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.076449641 seconds)
    (103/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.22873678 seconds)
    (104/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115117147 seconds)
    (105/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.128864904 seconds)
    (106/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.089783708 seconds)
    (107/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086722455 seconds)
    (108/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.139364441 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.085558672 seconds)
    (110/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110182301 seconds)
    (111/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.167648163 seconds)
    (112/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.159424109 seconds)
    (113/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.150266057 seconds)
    (114/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.117901561 seconds)
    (115/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.110020879 seconds)
    (116/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.198238943 seconds)
    (117/286) benchmarking ("sort", Float32, false)...
    done (took 0.174014952 seconds)
    (118/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066703478 seconds)
    (119/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.100618462 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09759531 seconds)
    (121/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.141404376 seconds)
    (122/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.166239015 seconds)
    (123/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.068012736 seconds)
    (124/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066721877 seconds)
    (125/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.093226991 seconds)
    (126/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.09345281 seconds)
    (127/286) benchmarking ("sort", Bool, false)...
    done (took 0.17986431 seconds)
    (128/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.11687206 seconds)
    (129/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.123666721 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.1099653 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.092759458 seconds)
    (132/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.090816234 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091701053 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116627145 seconds)
    (135/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077179183 seconds)
    (136/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.120439691 seconds)
    (137/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.069495381 seconds)
    (138/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116559427 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.092278157 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.108552551 seconds)
    (141/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.183198875 seconds)
    (142/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.09312664 seconds)
    (143/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.120109396 seconds)
    (144/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.095996471 seconds)
    (145/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.091558947 seconds)
    (146/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068547101 seconds)
    (147/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.165383947 seconds)
    (148/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.077331071 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107437724 seconds)
    (150/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.082690705 seconds)
    (151/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093022235 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123647135 seconds)
    (153/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.115734752 seconds)
    (154/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068470358 seconds)
    (155/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.133578674 seconds)
    (156/286) benchmarking ("sort", Float64, true)...
    done (took 0.227674398 seconds)
    (157/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.150632499 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.11044811 seconds)
    (159/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.112185536 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119618898 seconds)
    (161/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.065851464 seconds)
    (162/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.186994098 seconds)
    (163/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065709811 seconds)
    (164/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.113422278 seconds)
    (165/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067188673 seconds)
    (166/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.180349659 seconds)
    (167/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.117842117 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.095937496 seconds)
    (169/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110684105 seconds)
    (170/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09917856 seconds)
    (171/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.115784491 seconds)
    (172/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068363816 seconds)
    (173/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.172973431 seconds)
    (174/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.075810884 seconds)
    (175/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.109373947 seconds)
    (176/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066952092 seconds)
    (177/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110206885 seconds)
    (178/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087827166 seconds)
    (179/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.123029327 seconds)
    (180/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066404612 seconds)
    (181/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.293159646 seconds)
    (182/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121621431 seconds)
    (183/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.091603756 seconds)
    (184/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.089668467 seconds)
    (185/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091025447 seconds)
    (186/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.171805007 seconds)
    (187/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065973406 seconds)
    (188/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120359918 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.084708684 seconds)
    (190/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.089658173 seconds)
    (191/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.091979795 seconds)
    (192/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111759114 seconds)
    (193/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066683798 seconds)
    (194/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.16615629 seconds)
    (195/286) benchmarking ("sort", Bool, true)...
    done (took 0.217835022 seconds)
    (196/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.10729979 seconds)
    (197/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067033716 seconds)
    (198/286) benchmarking ("sort", Float64, false)...
    done (took 0.170575865 seconds)
    (199/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101050682 seconds)
    (200/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.10954769 seconds)
    (201/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.183361546 seconds)
    (202/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.161717865 seconds)
    (203/286) benchmarking ("sort", Int8, true)...
    done (took 0.218588122 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120473907 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093301258 seconds)
    (206/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124895215 seconds)
    (207/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065951623 seconds)
    (208/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112445389 seconds)
    (209/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.066492858 seconds)
    (210/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.202763417 seconds)
    (211/286) benchmarking ("sort", Int8, false)...
    done (took 0.187214091 seconds)
    (212/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111284341 seconds)
    (213/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094229418 seconds)
    (214/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.110711473 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091259912 seconds)
    (216/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.09993141 seconds)
    (217/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068648079 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.106621661 seconds)
    (219/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.069335763 seconds)
    (220/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090548837 seconds)
    (221/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.090193115 seconds)
    (222/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.066695317 seconds)
    (223/286) benchmarking ("sort", BigInt, true)...
    done (took 0.22971247 seconds)
    (224/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.076671177 seconds)
    (225/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.092711462 seconds)
    (226/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066072844 seconds)
    (227/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.089273244 seconds)
    (228/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.160587983 seconds)
    (229/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.109241867 seconds)
    (230/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.08743845 seconds)
    (231/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110398733 seconds)
    (232/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067494859 seconds)
    (233/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123661387 seconds)
    (234/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094128729 seconds)
    (235/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133768716 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085251177 seconds)
    (237/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.099270896 seconds)
    (238/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085042914 seconds)
    (239/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.089370895 seconds)
    (240/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067491849 seconds)
    (241/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134013759 seconds)
    (242/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066693833 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.114848959 seconds)
    (244/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067779143 seconds)
    (245/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.06676675 seconds)
    (246/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.135566416 seconds)
    (247/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.160934179 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095262583 seconds)
    (249/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066609657 seconds)
    (250/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.091223041 seconds)
    (251/286) benchmarking ("sort", Float32, true)...
    done (took 0.227483442 seconds)
    (252/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092436728 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.110685863 seconds)
    (254/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067144458 seconds)
    (255/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.11569822 seconds)
    (256/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066499594 seconds)
    (257/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11504849 seconds)
    (258/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068431443 seconds)
    (259/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.092966755 seconds)
    (260/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111066515 seconds)
    (261/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.139497746 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094173059 seconds)
    (263/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110480275 seconds)
    (264/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067963349 seconds)
    (265/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109981032 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085857513 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.106662348 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095295006 seconds)
    (269/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066261762 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.110466472 seconds)
    (271/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066759905 seconds)
    (272/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.090218308 seconds)
    (273/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066829142 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.112733602 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087524039 seconds)
    (276/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.110015564 seconds)
    (277/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.089305602 seconds)
    (278/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.134363633 seconds)
    (279/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.087275656 seconds)
    (280/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.12816011 seconds)
    (281/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066767029 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115618327 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.085287874 seconds)
    (284/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133112047 seconds)
    (285/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.085106574 seconds)
    (286/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.109149311 seconds)
  done (took 36.059748762 seconds)
done (took 36.993685252 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099928236 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146981577 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094514322 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134993774 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122910932 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091229924 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119263712 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096470869 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123850545 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.122864706 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098237261 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092861496 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096308639 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.1204845 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097293177 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.13886668 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123152746 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093011938 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119745445 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08420086 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118774251 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.084536162 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112466297 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068833654 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122420703 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.09301672 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116191154 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.122724938 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.0928223 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110872803 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09142428 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116158595 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087458729 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124099977 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09230121 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117934247 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096362858 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.12073763 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08716691 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110444045 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11528322 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087348953 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11533907 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094518894 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115043203 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092882464 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118869774 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098400453 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139076036 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113435852 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09522798 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118474723 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09593575 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116995971 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089198071 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119392207 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090536498 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139332359 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118661718 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092364044 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117330083 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093591832 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115111944 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09404715 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120045142 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120113221 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099239436 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114583851 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096474625 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114743499 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085808398 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118697273 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089915078 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110919431 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095773976 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122272124 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084596595 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116991801 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092218843 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115698876 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108521607 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090262268 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.110778893 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094033475 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111666003 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070332071 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089005318 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117446365 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.084847233 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.120211329 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115254048 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094082133 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111287857 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098052396 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.10973996 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091157596 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111122897 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086546907 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112367144 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090124578 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109746128 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088944585 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120457668 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088053817 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.11722135 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098203678 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.111045836 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.114459034 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087132743 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.108312014 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10188328 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.119974695 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086647016 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115886559 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085197734 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.116962541 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085237341 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110246847 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085941749 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111539546 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091342031 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111028931 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088775267 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118446849 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123357823 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087524504 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113420468 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090554493 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.108884606 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09287955 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.109293095 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08748457 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111151469 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078608057 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111670222 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088215412 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117045098 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089480368 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.117570375 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088984951 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119275068 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.090799248 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116784715 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091255496 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110754112 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073907177 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115291958 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088993491 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112440093 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086767487 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112763779 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086933762 seconds)
done (took 16.884747578 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088684828 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182856653 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149299939 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14093613 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10544511 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112003944 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120255085 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118392274 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113081463 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140848229 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.10956661 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132538418 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146246189 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086052936 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111954852 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091021143 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112371967 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102433524 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145391815 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132181065 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163671246 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.084407312 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146334348 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135512421 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119243716 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113241801 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111980682 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090516075 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114740034 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101607639 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131640539 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.112809084 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089495417 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13237311 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104066627 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119282334 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.085568352 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118918124 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.085873808 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111697484 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141202978 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131203331 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093235929 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11667483 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091433124 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113240714 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088320945 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120861346 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097593125 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115414753 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124086853 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154027244 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090584798 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120826513 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085411523 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122329328 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120502542 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090037672 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110536856 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089756666 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110198157 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090856986 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126206258 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140198467 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090756016 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121409483 seconds)
  done (took 8.589790086 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104878439 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138128463 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104262245 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130623646 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110679357 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088053752 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11603678 seconds)
  done (took 1.785938424 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089446635 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132646107 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110000769 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.139602418 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.138598358 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.116114658 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130560602 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.093808934 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.139918517 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.091981005 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.139830286 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.155138418 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089748198 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121394598 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13633127 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.0892754 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137644142 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092932931 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124129739 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11809435 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124532479 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.141446865 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.096684029 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.119796402 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10961126 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.121003987 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.168350091 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101253246 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121462982 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.097180033 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118814153 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.173393034 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.108441394 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.132830356 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092764435 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132319262 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.147677458 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08625375 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129655128 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093619147 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128150326 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090065101 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114818128 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085078737 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117273878 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.122938837 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091344262 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.112061705 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093037511 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133450633 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089173464 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126590759 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087097906 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117380306 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.088526747 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120303234 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121237675 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091769798 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13178432 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090325738 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129775839 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104347342 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128281524 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129684523 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090694752 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129049955 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.108225136 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.124534178 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096345436 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.124882889 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.137638771 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.09412894 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.121879674 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106824296 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121953296 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119075324 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.145583167 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095245036 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.132222283 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.116766167 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.095065207 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.1135205 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.115279395 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121699712 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089328062 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1234001 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096869311 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.119477566 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.092248313 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.124828474 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.092748033 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.122771019 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096833473 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.121973674 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12237187 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.113169039 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.124296019 seconds)
  done (took 12.199581122 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091272566 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.112665895 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091543781 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113266618 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090611945 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.113992782 seconds)
  done (took 1.619689477 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114866294 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117105807 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.101874865 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120423773 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154514174 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.101761215 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.12895287 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123574091 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106283557 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127834137 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127437631 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104911754 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137485091 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123947486 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105000268 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.126608645 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.108272593 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.133251228 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129833509 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097956777 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136773448 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120039147 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096232126 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131294757 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116304364 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096460179 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12545439 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101016073 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126965028 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121360351 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096013878 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117630013 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097852402 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.130761874 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.137171474 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.101861897 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128397318 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12577555 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.107727223 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.125744028 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.111751706 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129709757 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.133517267 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.100089399 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.131657792 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.126590069 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.101945338 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.132853827 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.110223528 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.128041915 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.126053098 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.10076239 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.123767862 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.099747285 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.129398018 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130133827 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.100956741 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.133313211 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.100545901 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12773911 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117612549 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093854306 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123581496 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11563511 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105074081 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119988313 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097964079 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125555237 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122254222 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095803926 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118149669 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09281275 seconds)
  done (took 9.446515124 seconds)
done (took 34.631451363 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.683734664 seconds)
  done (took 1.686893722 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.843602383 seconds)
  done (took 1.847297858 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.591781537 seconds)
  done (took 17.628406615 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.501640155 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.588978289 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.998040329 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179480596 seconds)
  done (took 3.276745262 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.952132376 seconds)
  done (took 1.978061954 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.282762379 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230663261 seconds)
  done (took 1.525124863 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.794177713 seconds)
  done (took 1.818723209 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.362440939 seconds)
  done (took 2.374956307 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331538371 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18336439 seconds)
  done (took 1.536415719 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.547551408 seconds)
  done (took 1.568560744 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.838517704 seconds)
  done (took 7.866737768 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26891376 seconds)
  done (took 1.302720015 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301205507 seconds)
  done (took 1.325877494 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.423556087 seconds)
  done (took 4.446183604 seconds)
done (took 51.197231855 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10003886 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125741646 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102352332 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122948435 seconds)
  done (took 1.468221225 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101107421 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119821182 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100039679 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119969994 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124336975 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096162055 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122096121 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101847817 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120649578 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096349485 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120970228 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117936483 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100114413 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121085029 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092213374 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124354209 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104808406 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.129097891 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.131240801 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.10191482 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.125988827 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.101612201 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123784241 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.092707736 seconds)
  done (took 3.716366356 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100544882 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117552348 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096382492 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.116343717 seconds)
  done (took 1.463240665 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101009025 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141985519 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.136786366 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.10088772 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.140742411 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.139493868 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.096381244 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.119217898 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.099664884 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.131564417 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.08993229 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149735457 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139660188 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100006804 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.133529875 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.093192389 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118398399 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.134979001 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099268534 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125975416 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.091957977 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126389492 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095575554 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.14729097 seconds)
  done (took 3.881339003 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170544898 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126506519 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137291775 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094348403 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159789586 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139025913 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087369419 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139604173 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086989175 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130941864 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.115284993 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133833754 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128634322 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.086894056 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113372169 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086138853 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128118534 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127605502 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090815845 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126284263 seconds)
  done (took 3.446337417 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098074593 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115935348 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08828913 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.114856379 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.09991149 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120342655 seconds)
  done (took 1.670637377 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091544752 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.112447667 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091236703 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.112802228 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095569174 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.112828245 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087878445 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113352877 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090555774 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113444543 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089579698 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114465831 seconds)
  done (took 2.26059616 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.49741048 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120723392 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118528399 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089855176 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.120027806 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089175216 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128760752 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092231771 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140070675 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08719782 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115309411 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090144224 seconds)
  done (took 2.723225135 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23119965 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124970664 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282753581 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.36495992 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156721029 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175180853 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278880291 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163870545 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.222732333 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168757422 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208673455 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222366785 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149884744 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18882836 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136554701 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.116786251 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228806982 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244589057 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152356835 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205609231 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228438855 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17569256 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187616994 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160235766 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145230189 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178992684 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.100657161 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136566211 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233351111 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173446332 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212657165 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160389164 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144815826 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207542255 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250453647 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21849356 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27827948 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136642675 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.147384094 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.175863911 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263111078 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138051441 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201500094 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153812184 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12973817 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214326889 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166622855 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175489485 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150700058 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136981726 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19357523 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236698898 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191391662 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13727611 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30234303 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150667474 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.198102052 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191843543 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247983331 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198464788 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18566247 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119713512 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187309789 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223743021 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189315205 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.172917348 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.204698215 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120550791 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224094121 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186836692 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163863729 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218167107 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184326759 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139816572 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169892668 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169902892 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17090576 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253976102 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207655836 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095690297 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16773623 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147887794 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132452289 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192191452 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098929007 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23762964 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141964564 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.136097718 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239310654 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159998646 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160301501 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199985559 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228201826 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146093281 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08337443 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153245097 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154466391 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19056062 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139273169 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156341621 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160769343 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.12899678 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183699643 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123161106 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183091374 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.116381029 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173816847 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180255334 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125382559 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158618766 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149619636 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124148341 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198141264 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197366471 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139791093 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10421068 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234130739 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176141252 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150676453 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175569338 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224833397 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117705845 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14898959 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225744743 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21285726 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138151619 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224488796 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155278325 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108153483 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132043091 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179908925 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153404774 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160223216 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132501477 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182715841 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229827191 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098415618 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138064846 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191352316 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132204085 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131537121 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162644205 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146835926 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111796607 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149992915 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152222186 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205614153 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17710757 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151952447 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163282196 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150632801 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251369414 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112274292 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.149457124 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147221565 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118769011 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191191448 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195265817 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129378373 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227432905 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170993936 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201476736 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167666172 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133122588 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175060708 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12761026 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093181184 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219005165 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167029927 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15991613 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194566736 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222699508 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179921093 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.180889601 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170809006 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198154944 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163527898 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15556593 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.11226796 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160499525 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168335455 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122766437 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143348084 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.130916497 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121086484 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142359708 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131963877 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193513352 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194120456 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188328263 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159753107 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150244332 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179619591 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.126920124 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173678904 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176084271 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147086241 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.195750584 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218967951 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185401285 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142450308 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199380169 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121075084 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096550374 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141533718 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168386414 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133152182 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133437381 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160290701 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179274898 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179302706 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175859114 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23593515 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171009561 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215025925 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095994338 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167443544 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183052403 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176139575 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.190179519 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142389841 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.148582279 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17895463 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156497715 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250675992 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167440734 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175064627 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230436185 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123189949 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131572627 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150409313 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193835288 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151555151 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173614677 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146538564 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141007016 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160788262 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132698923 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158578651 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181282091 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16201899 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213578104 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.147483283 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185574274 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125290871 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162800075 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157288451 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16352555 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081640225 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172855689 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229407949 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147562055 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167338007 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188027653 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130011262 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307378511 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241267667 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19614695 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136042171 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154528517 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159887421 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16212126 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171413064 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178225247 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158199493 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187005419 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157287636 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135199408 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112616096 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148286338 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149726721 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.130276076 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147179175 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175421515 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137805064 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184580591 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161822489 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158191561 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171276944 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148436736 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.141668089 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121602141 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243360254 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182049721 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23805599 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.148807883 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179307561 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203853227 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126371526 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130744002 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105289095 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176921545 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1367731 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217266992 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186242732 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206091325 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20876744 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192094984 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138067516 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.091783464 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156364356 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172082046 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233474518 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152022046 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.157553455 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227337696 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.11985564 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13142418 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17589521 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291101888 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146696755 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221510853 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080867245 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28065479 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126590189 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104274009 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163597432 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234472196 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134312297 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.162431334 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194726054 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170382664 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163319486 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147396401 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190044952 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215286597 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226826295 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178236443 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132775804 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154974612 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174326466 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191867543 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156938819 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139942667 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228508757 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195508717 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196463585 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142596241 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168075917 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166968902 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158298677 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211741563 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107180666 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233493494 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105771959 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22018917 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152108615 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143820214 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175588497 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.187525932 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142715408 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185424126 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210161991 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106602367 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132796495 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167265445 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20552788 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155440458 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102014814 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18009359 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124800402 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192066866 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256869818 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135723397 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154050317 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146016396 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106805336 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154448658 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157423603 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139637131 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.162359839 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203799387 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134558093 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190187086 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228695038 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170896444 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172926001 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144193982 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.69196119 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130295516 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193098666 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159940085 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230371987 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120950462 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198606973 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130618303 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192633105 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196017196 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161059962 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.228694103 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191440143 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.204140005 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104846711 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158338297 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162150012 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144071365 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151210993 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166849156 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158625193 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153248239 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.175642017 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198021259 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107503147 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139928039 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196495359 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158328328 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208127725 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178461662 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110901357 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171271547 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216341338 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131575433 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179612167 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232892343 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113900556 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150889578 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133003062 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155752614 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259911709 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096404657 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230633482 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183691339 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158320142 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168027636 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146526791 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219049957 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157484311 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18649042 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146568913 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158875559 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154209159 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109498752 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131943537 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156241006 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168218517 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148896281 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159249035 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138282182 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217926315 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094498891 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144078863 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288764786 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21784308 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213047458 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135884821 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135601639 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161758926 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150290836 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177584646 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177707796 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13508829 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108097535 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135276386 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156517577 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114744306 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155962658 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195621116 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164614329 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235038083 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135161827 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.2512266 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139356922 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15560186 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087440011 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132404497 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150253511 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145798994 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158033549 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191504517 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26305995 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147044814 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.10559789 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149419775 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126630761 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135118845 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163123203 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164730288 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177680467 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144669448 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081228184 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156397103 seconds)
  done (took 82.831123363 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178715955 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.140366512 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147558244 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202904154 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176805833 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268154064 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209581359 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253509291 seconds)
  done (took 2.696881359 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09357861 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14628964 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156130568 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131655174 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092225914 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.117571394 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.34497719 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132444389 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116471629 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120906954 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.171770645 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093356541 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.550812178 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091104007 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117729545 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107805579 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093764722 seconds)
  done (took 3.792167317 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.473133973 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.692631077 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.512303419 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097579956 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.064237025 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112422827 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.534497497 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195078912 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.115199941 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.470066119 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.771811672 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158133672 seconds)
  done (took 18.319653182 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115932153 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134218637 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122409294 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.150925964 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.138703389 seconds)
  done (took 1.787735924 seconds)
done (took 131.075328947 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105016587 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401375692 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070812242 seconds)
  done (took 1.628261541 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107544586 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135392859 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107726454 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135255023 seconds)
  done (took 1.618969619 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099199105 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124666689 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108827255 seconds)
  done (took 1.458980593 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.322381984 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.188762688 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.169680321 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106052177 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127814847 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102852819 seconds)
  done (took 1.467769041 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098148303 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126206175 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097664482 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129431857 seconds)
  done (took 1.583257678 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094639232 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.0752269 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098887173 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074647891 seconds)
  done (took 1.470578011 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115015915 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.1306484 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103643314 seconds)
  done (took 1.482214618 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129232946 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.137645672 seconds)
  done (took 1.40081828 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105427931 seconds)
  done (took 1.233663499 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.11841903 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.167397356 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.187774017 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.163823327 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.232530649 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.163437374 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.139982391 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114625957 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131758897 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143883935 seconds)
  done (took 2.697925066 seconds)
done (took 17.952301827 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103270181 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.412143723 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.409803807 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116936727 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.720483398 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380100624 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.021517423 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143956221 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163065635 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093036615 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137925131 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672435387 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.011704276 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.371198341 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963488244 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370885017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676529835 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11958268 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116561793 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093635556 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.006284722 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091892674 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120735193 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090947374 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703123762 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423923448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095674016 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.370398051 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091866444 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124957157 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382975628 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120804137 seconds)
  done (took 16.844908445 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095807743 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171393956 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096596961 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136613229 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122484972 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093800663 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122705196 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09327646 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177590011 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12114382 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109906415 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119519555 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123229523 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094867222 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140739081 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092049588 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123769925 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093164811 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120079915 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119308186 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112556531 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118425269 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094412419 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120779815 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094433842 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133401533 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092839767 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119722387 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118019715 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098580921 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126295356 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094394869 seconds)
  done (took 4.824708791 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141241887 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181281918 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127607808 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126262833 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166521297 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.121993439 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196307099 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117689991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181843256 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121962415 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137718482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092732052 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157747507 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.099770825 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142375983 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118423548 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096353151 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120821883 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091959031 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121766325 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136496799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09413641 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120565251 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093707829 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121888873 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107429531 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123272148 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.117751528 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093853809 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124420331 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098857546 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122841629 seconds)
  done (took 5.158128649 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09726948 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123432095 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108748977 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137059537 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095141284 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124542751 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096975835 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124392362 seconds)
  done (took 2.044851865 seconds)
done (took 30.003167807 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110551614 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125073806 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107495039 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132503067 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102192891 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130415652 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090535601 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.13297103 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.131456609 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102347735 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134905064 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091658618 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.120889605 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091660221 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132397334 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096163068 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131172933 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102293762 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132083707 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.12978512 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094466562 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.130473779 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102368906 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.130974726 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103466442 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132152292 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.134060732 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098944198 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120292691 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09576017 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.130903023 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.112828358 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.131882859 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.112842093 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.133726789 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097263935 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122098229 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092551977 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131266328 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.130684465 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100135083 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.129821128 seconds)
  done (took 6.027866722 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10803955 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.143632254 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104481041 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.087058752 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117630225 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079951813 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.135909692 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.086496071 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.115177046 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108224749 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.081078427 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.110698024 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078083672 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.099251611 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078115164 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075213307 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.106716633 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07663304 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075779929 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.103414431 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.07966173 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07199074 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107404067 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077926808 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073635551 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.108448242 seconds)
  done (took 3.630718418 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099526317 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132359238 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11230955 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181402347 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158742737 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098693527 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.129864538 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.108853978 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.137128824 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117648289 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096235515 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.145890069 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109856989 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128254409 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09106446 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135585186 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133021837 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094150998 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.1259669 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111807029 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137499326 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101646093 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139737885 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.129968759 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092293763 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120673361 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096743414 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134124915 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097123747 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129790601 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095578272 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126824515 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120915305 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104561009 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.123839415 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094371024 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139990238 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101080097 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.128751619 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091613017 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.128997939 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.119804635 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114768477 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.158836905 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090071896 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127005684 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094188666 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131079668 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.126900251 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110138355 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129364026 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091049761 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124143018 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090951665 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120092708 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105303129 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.121217437 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093646312 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129355608 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124654548 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105585136 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124167924 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107847731 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120430881 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099033243 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119766776 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092166041 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118715295 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14162663 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093984291 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160297987 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09184684 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123031605 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100325684 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127844434 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12573654 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094181175 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13553559 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101556403 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124127415 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100645268 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.123732657 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.093801071 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139239987 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.121283072 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095161325 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.119667726 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099995072 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123177464 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093827006 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134645688 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091586527 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123631294 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109309796 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120101518 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120180723 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099896115 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124418346 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092390052 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135295237 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.096505995 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121583238 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129036297 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093049821 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121455881 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103111873 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123765342 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090585218 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124974198 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098726803 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.121206991 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092990421 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.123124712 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.092962092 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129981421 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.125107005 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097783236 seconds)
  done (took 14.693094649 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.225620256 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.211411036 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.202053607 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.289736587 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.133592407 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114318288 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209145509 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15483783 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122278932 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157097256 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171957104 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.178853992 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169394309 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180395359 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.167913316 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093949491 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.139456977 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.131930063 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.240641804 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.255008634 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142104666 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099607007 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.158693142 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157740956 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136116896 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.101421599 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.137725165 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134375219 seconds)
  done (took 5.783561994 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107979195 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153218919 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097310005 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.142888272 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145513856 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092755954 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125690523 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093013012 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.132940857 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133405835 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091893124 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127001715 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.0991672 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.129786124 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.119610626 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102963993 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.129985867 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094193623 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123275055 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.095811319 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13141114 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101321186 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125503511 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090537362 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.130024327 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118332698 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086254579 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140130047 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.093187824 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.142911618 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.118928486 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.1022311 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134559146 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094103387 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121563686 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095388627 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.123702185 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.0947175 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123169409 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091067921 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120325445 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076597644 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120214662 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10654976 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127449174 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079823107 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127849169 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.097093482 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.122185209 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.116859736 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09669349 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121465961 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096494814 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127142446 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095656255 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121630698 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097919903 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.112907261 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099957692 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.122862963 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085139266 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.089914953 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126325335 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.114031241 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10086442 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125708343 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092315046 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.122395464 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097040609 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128018191 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095259575 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128192819 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.089969155 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.123995605 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095820637 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127627361 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.094884266 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121577919 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.091343116 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.122294168 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07448638 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121825243 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073562897 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12367413 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091606562 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.119767724 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094490278 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128419347 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134835977 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095393433 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.129558617 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093732558 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119660105 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095648285 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.110300385 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097038604 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137925725 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137844902 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09406485 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.118986828 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108205823 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.123384682 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092276878 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.103534786 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102360672 seconds)
  done (took 12.84579095 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126864007 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.151058479 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.093944568 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.141800102 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.162122494 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.153179904 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101536416 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128148841 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095066737 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140624023 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093731701 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.129710186 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094054681 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135897635 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.153426334 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104128272 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123540624 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108082047 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126790483 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.167226468 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111086523 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141044195 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109279313 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122672172 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098158949 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.138633833 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.158971789 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.10599747 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135118188 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.138542157 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108125676 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.158977451 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112358287 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127566769 seconds)
  done (took 5.469477544 seconds)
done (took 49.588271803 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.278369211 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.465194407 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.235811096 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.164574113 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.25657743 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.240324009 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.252742141 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.236487407 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.687564635 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.243618271 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.463517217 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.805585337 seconds)
done (took 60.498702498 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.267168556 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.377177232 seconds)
    (2/2) benchmarking "String"...
    done (took 1.506130145 seconds)
  done (took 4.046645766 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.598987874 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.13931894 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.49928571 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.238738151 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.237863305 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.544361157 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.86589596 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.522715034 seconds)
  done (took 28.211953817 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.24934988 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.317516464 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.262021537 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.243553305 seconds)
  done (took 6.234948316 seconds)
done (took 48.524412991 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.247138517 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.26953272 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.241777379 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.215076713 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.366851343 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.259059449 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.598210002 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.277772945 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.261190146 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.212905207 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.256230508 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.261564029 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.247304578 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.643278174 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.245541529 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.235578272 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.282517102 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.776158702 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.605707011 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.245118533 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.259139511 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.279675715 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.254091282 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.234397566 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.265178257 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.234266036 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.251190308 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.241038877 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.363452066 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.235960445 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.344305137 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.751172373 seconds)
  done (took 191.623975508 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.234262119 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.119775699 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.257240852 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.297850327 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.71915354 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.434457456 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.37060411 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.702403741 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.256373755 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.26406042 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.446940392 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.234600724 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.4913515 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.210229992 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.264597049 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.344872852 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.448319865 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.496726508 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.284789669 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.379686639 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.260166361 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.297021404 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.22629929 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.414776318 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.276464198 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.249278684 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.247397124 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.267730234 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.425480092 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.378385264 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.25822224 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.241820389 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.785694894 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.099837233 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.256556219 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.240183394 seconds)
  done (took 150.34532281 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.279806571 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.235064265 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.235984141 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.23534051 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.236061953 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.264759487 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.235270778 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.737030058 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.743775351 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.726601091 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.547908261 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.24226171 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.368878678 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.441836903 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.241136813 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.326614184 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.249972194 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.238643375 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.249558288 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.278727628 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.240559679 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.237677091 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.741707968 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.253505043 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.443212 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.405879686 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.253812823 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.267672647 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.625370109 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.238945431 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.266625583 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.556299116 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.28467472 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.237704351 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.5600294 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.870320322 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.347865918 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.239087045 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.265582447 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.239203015 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.510098108 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.238494111 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.237456693 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.240237394 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.848051358 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.242875107 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.739371159 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.244091879 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.133096825 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.239321411 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.238359308 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.758738115 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.778149424 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.257782458 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.237915986 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.237622659 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.239985845 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.23790019 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.23974147 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.267923786 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.782926066 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.325059536 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.25542572 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.241719962 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.265527863 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.238995516 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.428119909 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.241593716 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.505675674 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.30004751 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.344908878 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.742423307 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.242756459 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.334458854 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.35655159 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.240885739 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.235490434 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.234759079 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.235360739 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.343390448 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.234284079 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.619194973 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.39754462 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.250331296 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.37745387 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.328213876 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.229729935 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.558067892 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.234141158 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.229605236 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.915563375 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322780287 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.230442204 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.230024882 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.230610006 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.228572281 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.612711351 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.733857367 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.408980428 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.23272285 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.790145694 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.229891929 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.627526975 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.725481028 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.839858444 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.233532549 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337470341 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.394405305 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.248056642 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.22915341 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.373181029 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.234738817 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.287668908 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.23004327 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.62535379 seconds)
  done (took 368.653833127 seconds)
done (took 713.064900852 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.932080574 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.923813581 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.030141984 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.923875226 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.885510277 seconds)
  done (took 10.851538362 seconds)
done (took 12.007482814 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.414433332 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.414066243 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.289213946 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.418430866 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25983744 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.431516793 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.396007691 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.254042557 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.331737418 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.310150985 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.332427208 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.285593262 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.259738932 seconds)
  done (took 18.555119256 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.55351046 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.545268261 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.297156137 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.547613638 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.272239694 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.560831372 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.427986637 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.442728541 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.450785596 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.267789511 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.247167818 seconds)
  done (took 16.77366602 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.54440595 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.554714716 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.299558226 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.542842902 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.274890076 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.556776248 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.432905197 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.445090764 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.447416016 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.267526596 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.245599276 seconds)
  done (took 16.771120715 seconds)
done (took 53.257912119 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.243057197 seconds)
  done (took 2.40258901 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.276329037 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.438620259 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.272640615 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.250256171 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.244060054 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.244805879 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.248602247 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.2450954 seconds)
  done (took 11.381400663 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.243889 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.2471675 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.240210153 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.237934049 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.23947317 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.237848282 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.23909068 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.240594847 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.24038825 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.2412856 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.241020951 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.238120271 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.242744877 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.239197623 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.2399723 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.23937653 seconds)
  done (took 21.010440848 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.242040392 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.239219243 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.239897557 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.239925103 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.24044269 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.241140991 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.23994246 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.239824646 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.240211653 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.240031119 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.240947263 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.239326701 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.240640878 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.240094669 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.239047955 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.241710572 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.239450215 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.240032541 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.24396186 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.240372703 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.241026898 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.240046554 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.241771307 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.241018945 seconds)
  done (took 30.933224472 seconds)
done (took 66.887864799 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.193732824 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.769637095 seconds)
  done (took 9.124886978 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.243334201 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.242253035 seconds)
  done (took 3.647231254 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.242639296 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.241615203 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.242951987 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.242743271 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.244309581 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.24021623 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.239892931 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.240708213 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.240165688 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.241195322 seconds)
  done (took 13.578000396 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.241985798 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.246599545 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.238371243 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.240506215 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.239971545 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.237079116 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.240672705 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.239961823 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.240125223 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.241041597 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.235639726 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.235403191 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.238089655 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.236814344 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.237922021 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.233523849 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.231094827 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.241844825 seconds)
  done (took 23.456468721 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.235281655 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.23646856 seconds)
  done (took 3.625235402 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.235559841 seconds)
    (2/7) benchmarking "second"...
    done (took 1.234376783 seconds)
    (3/7) benchmarking "month"...
    done (took 1.234528175 seconds)
    (4/7) benchmarking "year"...
    done (took 1.234131467 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.235290293 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.231731742 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.2326503 seconds)
  done (took 9.792633819 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.23591258 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.407076782 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.48678553 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.855318841 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.239093394 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.237379911 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.091523891 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.237722736 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.238951284 seconds)
  done (took 14.181715194 seconds)
done (took 78.568210658 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.218357723 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.243302372 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.298727905 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.245782517 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.243710149 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.57106832 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.25048176 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.361055773 seconds)
done (took 37.584070179 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.238235646 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.208640583 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.873110572 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.223760085 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.215098222 seconds)
  done (took 18.673367159 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.170702895 seconds)
    (2/2) benchmarking "read"...
    done (took 1.567756024 seconds)
  done (took 4.888311652 seconds)
done (took 30.95271284 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233562237 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.231311358 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.232220229 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.233532318 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.229937226 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.232254215 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.230249542 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.229573622 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.231891084 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.232835248 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.23266195 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.234592433 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.230118849 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.232870702 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234275824 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231087804 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230400053 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233722812 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.232263698 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231132334 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231299879 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234391499 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.23125199 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.23152447 seconds)
  done (took 30.720886859 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.234166365 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.232303374 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.234926857 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.234605522 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.231146982 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.234158562 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.233890687 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.230934818 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.23397453 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.233343967 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23095411 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.231680044 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.233980763 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.231676198 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234506505 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.232587412 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.235151824 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230808239 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234747595 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.232204401 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.235574662 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2319951 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.23210545 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234444734 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.232351448 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232896209 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.234506712 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.233067568 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234983361 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.232421458 seconds)
  done (took 38.148764937 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.238971858 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.240313234 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.23854055 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231705125 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.232249699 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.232794039 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.23346369 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.232357776 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.233422915 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.232991899 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.236471351 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.230711624 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.231168005 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.230929251 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.231337058 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.230431274 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.23054366 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.230831432 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.233792993 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.228490698 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.228102895 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.226818093 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.227522598 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.227831709 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.227346276 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.227900679 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.230390841 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.2255415 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.225939665 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.226451427 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.225537797 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225927516 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.2257909 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.226091147 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.227302978 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.222654543 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.226528325 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.228483192 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.223058585 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.22249862 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.223330981 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.223215658 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.226216794 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.222402116 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.222992401 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.222500673 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.222404348 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.22312208 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.22222074 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.222948338 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.226687962 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.222308831 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.221525498 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.221093533 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.221172749 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.222010368 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.221888986 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.222347775 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.221637286 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.223913746 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.220502802 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.220988474 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.220053789 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.220826817 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.220155915 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.219498056 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.219813078 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.221000067 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.219180019 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.220082127 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.219274545 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.22000211 seconds)
  done (took 89.442566635 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.220272918 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.217470805 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.217114223 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.21553048 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214309048 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.217183687 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.216005967 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217712035 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21534771 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.218052402 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223089988 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.216864122 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213084909 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.215885011 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216455798 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.214937727 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.216599368 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214001114 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.216807078 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.219226813 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217052271 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.213215233 seconds)
  done (took 27.906909235 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216790762 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218492088 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.214420373 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.216174088 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213718346 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217371914 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.218545065 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.218679744 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217959283 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214484876 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215287992 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217572241 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.215235293 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214887593 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214795241 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217003311 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216979156 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216259142 seconds)
  done (took 23.031339137 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.216994492 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.215478731 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.218009 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215107813 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.21629431 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.218447536 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215025604 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.21845628 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.218421919 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.215288102 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.218054501 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218992415 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.218486658 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215849369 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218696603 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.21655213 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.218612175 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216684635 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218792144 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216948881 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.216576342 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219436263 seconds)
  done (took 27.919750348 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219955555 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219192491 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.217128235 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.216703523 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.216535249 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.219218796 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.219537343 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.21711301 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.220605896 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.220077838 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217122613 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.221141735 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.21939996 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.218419661 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.216847181 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217524898 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.219739186 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217998241 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219828529 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.219052275 seconds)
  done (took 25.512902013 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221459286 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2213793 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.220999223 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221405834 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222043306 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.221982575 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222633786 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.221366183 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222613638 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.221323496 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.222487122 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222527417 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222858647 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.222514368 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222316384 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221837997 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221918014 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222152133 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.221902081 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222962467 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.222936709 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223259062 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22245618 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.223089142 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.222682087 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222791656 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223131592 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.223169142 seconds)
  done (took 35.364520475 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222352288 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22230469 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.219944596 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.219710617 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.219983859 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.220173357 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.221354773 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220017913 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.222824505 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2203841 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.222785647 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.223109549 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222381627 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.222811227 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.221868069 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.223945367 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223012711 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.220536469 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22025058 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221319073 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.224123537 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223483746 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.223479439 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221150288 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221645669 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.223678904 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222617703 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22102289 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22454917 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.221892716 seconds)
  done (took 37.800661105 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.243225989 seconds)
    (2/2) benchmarking "in"...
    done (took 1.243344415 seconds)
  done (took 3.629582434 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.22198357 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224610262 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.223971843 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222352439 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223667539 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.225315259 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224623253 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221985957 seconds)
  done (took 10.931888081 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.225048688 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.224907735 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.225643274 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.225100375 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.225716754 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.224584802 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231133448 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.243582666 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.224773955 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.225630652 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.230023209 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.231622106 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.227696302 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.224779496 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.224918165 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.226542729 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.226535151 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.225088619 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.226927007 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.226548715 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226864438 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227539703 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228880196 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.223204559 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.227290455 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.235734379 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.246829564 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.226914399 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.225119883 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.229840821 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.225707612 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.22454924 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.227296728 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.228955137 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.227850437 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.227728914 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.23495818 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243816376 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.233295975 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244860511 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227425419 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.223879307 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.227059232 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.227544908 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.22768327 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.227689193 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.227055657 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.225754824 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.227122071 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.230473587 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.232554156 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.22757146 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.225860132 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23042029 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.230789801 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233788153 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.24715235 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.231459593 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.236271944 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.236785576 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.25749715 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.250090706 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230188553 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.228231592 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237205012 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.249590878 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234455581 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.243603324 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.226735624 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.230087751 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.234706349 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260303635 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.250345203 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.232138609 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.229491745 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.229120774 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231277784 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230418645 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235545302 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.250114293 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.230521205 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.229982425 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.239594682 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250864033 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.229194699 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.230324215 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.230599046 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.228499037 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.231834124 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.238479415 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.249177469 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.230246376 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.229894732 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.230510739 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.231350056 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.231772195 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.229613239 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230797811 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.228342363 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.23310319 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230566354 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233967253 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.237523864 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.234772813 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.227526407 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.236276454 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.248195967 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233211572 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.239069895 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.232592483 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230615141 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.232354975 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.236514461 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.228828215 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232269679 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.239079053 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.231668609 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.23119547 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.229732929 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.23292414 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.239017939 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.251264541 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.234671147 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.232453392 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.23532246 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.241795574 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2315237 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.234187042 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.235647563 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.229612127 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.229288337 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.233052711 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.236499174 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.232469691 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23324696 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234498611 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.231594587 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.233023461 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.232526278 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.234006072 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.237763637 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.233140146 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.233333276 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.236149238 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.232363426 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.234467774 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.240400502 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.251249815 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.234033172 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.234821127 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.229908844 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236514775 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.23449789 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.236496702 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.23381213 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231155657 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.234429473 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.234616301 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.2363061 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.231598601 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236105544 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.234778078 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237272644 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.233493912 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.234221065 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.23102242 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.230921379 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.233471258 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.235744117 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.235228054 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.235230994 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.235030284 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.238335735 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.240500326 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.235627351 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.235591865 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.23738132 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236473535 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.235556607 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235473078 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.234197651 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.241495244 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.236663488 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.240851271 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.251744194 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236507333 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.233583038 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.236319071 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.235109359 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235132888 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.239267053 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.239423948 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245735688 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257270272 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.237132095 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.239262316 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.236921692 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.23906572 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.240170263 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.235955989 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.237833889 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237379044 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23608516 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237394234 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.234410134 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.235615627 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.236330788 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.237994921 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.237995268 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.236802539 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239355952 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.236718563 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23492974 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.234014843 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237839386 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237402964 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.239822074 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.235786872 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.236444995 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.237470618 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.238355258 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.235131937 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.241135365 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.233678848 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23546257 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240200918 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.24103369 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.236239393 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.236953871 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240510926 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.239267862 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243450403 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.256578098 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.239126261 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245178706 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.257369704 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.234928246 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.241358854 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.2393938 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.234725723 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.240773753 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.247347212 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.23959225 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.241047309 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.239298026 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239574136 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240331559 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.245608968 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.254050028 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.238170486 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.23754707 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.240671685 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.236579161 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.240814743 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.240664052 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.239549282 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242646547 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243687362 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.24187867 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240776101 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.240524823 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.240585187 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.241141483 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243674356 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.246897435 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.245462787 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.240721176 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.242980168 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.241799913 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.244277128 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.241929587 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.241988002 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.241369754 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253189696 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.262994102 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247333745 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.260168643 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.241756989 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248419552 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.260079231 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.244949572 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241733828 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242449295 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.242179881 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.241724792 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.240299947 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.242235522 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.242449206 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.24377238 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.243531591 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.246606251 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.243561718 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.242602906 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.243354922 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.243061176 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.242861119 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.242816373 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.243964558 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.244797406 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24437157 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.243446242 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.243458911 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248925524 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261800837 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.243871137 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.243187124 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.243736103 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.242987007 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.245208608 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.243682263 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.24736936 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.251481035 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.24693665 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.25056815 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.245310996 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251073905 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.244621809 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.246605261 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.251534457 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.242594958 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.244231687 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.244261346 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.244940086 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250912067 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.264295266 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.246987641 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.247823531 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245269921 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.246179817 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.246483846 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.245965356 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246164267 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.245775459 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252196565 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.264148319 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.248620165 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247887165 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.243397458 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.245811066 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.245430501 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.245320537 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24859396 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.246234628 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.245904711 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.244822601 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.245963879 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.247405973 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.246560263 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.247245371 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.243698217 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.246386118 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251558017 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.267560637 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249611157 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.247301445 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.252358806 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264195017 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252134932 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.265235409 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.246241936 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.246975685 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.246933819 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.246814929 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.246025714 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.246423181 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.247918202 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.248604971 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.250006294 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.248041436 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.249328182 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.247754555 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.248775169 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.248262865 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255685244 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267950547 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.248268435 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251761862 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.245057413 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.249008244 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.251839343 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.248560965 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.247319655 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.250257701 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256226402 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254786969 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.248239805 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.248094313 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248481407 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249057891 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.248425484 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.249306669 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.249174923 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.248922512 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.249726742 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.249504534 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2509845 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.250095504 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.250286491 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250014727 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.250950105 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.258049237 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.268083905 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.251788117 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250241897 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.251550934 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.249318126 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.250865872 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.250000183 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250599134 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250804387 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.250719134 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25517726 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.254781442 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.252086259 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.249975641 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.250160276 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.250512691 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.250385308 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250444957 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.251409986 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250799088 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.250523343 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.251103449 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.250578439 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.250264583 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.250235283 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.250565229 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251055899 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251755733 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.256584029 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250403754 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.247939688 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.250772448 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251366071 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.250235062 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.251735203 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.257833874 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272083207 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.259570544 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.258772731 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.254567186 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.251544218 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254022933 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.258227 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.25085801 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.252665898 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.251593686 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.252508446 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.252404293 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.254518576 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252718702 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.25770023 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.269364809 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.251837979 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259403757 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.271440367 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252553873 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.25504067 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.255697635 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.252347952 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.250607678 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.253177738 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.25336811 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259071167 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.273609365 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253505588 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255557955 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.252091382 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.253983716 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256030758 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253539851 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.253510749 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.250705472 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.255618553 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253409706 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255527102 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.250856499 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.252702653 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.253348374 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.256755608 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.259310678 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.251895285 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255411059 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.254456903 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.254275296 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255439504 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255013967 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.252449146 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.251941245 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.25469172 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254775021 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.255008031 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.255980046 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.254177038 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.255726624 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.256513272 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254742657 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257492735 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.262943285 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.262102199 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.252504787 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.255528019 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.255755173 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.256835617 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254359568 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.256567056 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255014876 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.256127335 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.256007993 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255689828 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.257182206 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.257835536 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267886288 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.274742564 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256396323 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.256327935 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258498973 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.257591139 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.253497976 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.256973147 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.257500756 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.259706674 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.264515481 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.25688599 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262175275 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27533627 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.258663221 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.26073773 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.259774427 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.263025643 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.258408127 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257328117 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.257805873 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.26198257 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.271763908 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257725506 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267075149 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.282599805 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.276643952 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.257719152 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.258157137 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256765699 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.258005786 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.259144754 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.257627916 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.258172981 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258131766 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.258537924 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.259693071 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262757682 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.258940639 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.260772852 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.258888609 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.258089481 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.259578252 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.256859761 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.259080343 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.258809766 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.259317615 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.259144886 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.259650636 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.259532112 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270315168 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.283059279 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.26104455 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.259593184 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.257147762 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.26211192 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.262519217 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267525139 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.26567833 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.260280992 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.260430172 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.260529625 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260303546 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.258534229 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.260322462 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.2597368 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258635042 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.257505962 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.271950763 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283469852 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.265328315 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.259235072 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261498703 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.26097667 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260447398 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261704223 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26031976 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.26255273 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.262593409 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26488507 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.261576809 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.260889316 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.264090133 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.266257067 seconds)
  done (took 743.516945619 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.260736922 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257520107 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.25835281 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.259638584 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258082614 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259007867 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259178381 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.258588604 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.259270555 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.258573992 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.259319365 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259203793 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.259610462 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.259910278 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260061589 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.260487954 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260007375 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260392164 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.260110796 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259295047 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.259903167 seconds)
  done (took 27.625102472 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.263187044 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.260775864 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.260398237 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.262575364 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260253624 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.2628535 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.260496793 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263157916 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.263623897 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260051628 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.263670675 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263577841 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.260944942 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.260913854 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260947991 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263830554 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.263331912 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261635254 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.264686318 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.261224424 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.264298992 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.26221601 seconds)
  done (took 28.949413836 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.264278387 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.264195462 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.264246715 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.26128092 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.264404446 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.260979187 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.264833801 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.263791028 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.264286051 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.264665451 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.263256398 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.266507364 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.269502008 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.267613207 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.265843293 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.264320397 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.408734122 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.264498731 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.265336853 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.265268187 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.262881743 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.270832279 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.2808884 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.262738443 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.264562705 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.266358841 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.264606686 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.265226794 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.265305974 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.266477341 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.268148042 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.265089383 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.265500295 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.267214499 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.264623712 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.266416847 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.269634796 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.265498618 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.263637057 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.26651883 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.275005614 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.282543905 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.267007171 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.271389883 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.284512631 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.266772827 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.269123321 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.272573459 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.264672473 seconds)
  done (took 63.406959749 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.267396561 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.26634741 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.264418387 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267132753 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.267551466 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.267840043 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.267517403 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.266653323 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.264454296 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.265020719 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.267928689 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.265714899 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.265084831 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.267530243 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.266925307 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.265746933 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.265614194 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.265274197 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.266040285 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.265864463 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.266808528 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.268351266 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.268365795 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.2659509 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.26835511 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.266261328 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.266090319 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.269722192 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.26751146 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.266268146 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.268590755 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.269834499 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.270222082 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.267329597 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.266924435 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.269457843 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.269401712 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.266561047 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.270457976 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.267912369 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.269013837 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.26971903 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.269689995 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.269678804 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.267036095 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.268616836 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.267021337 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.266676999 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.267084412 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.26992084 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.269795554 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.268509433 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.270117848 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.2682994 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.270332294 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.270401492 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.2677515 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.267317986 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.270395241 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.268333006 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.268562322 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.270426212 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.269188212 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.272016885 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.270857764 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.268434831 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.267683922 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.270678847 seconds)
  done (took 87.40559142 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271880307 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.27178086 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271757487 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271401927 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.270089158 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.271086798 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.271299626 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.272917565 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.271373283 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.271430876 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.272454137 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.272014143 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.27156256 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.272015782 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.272014448 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.271957747 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.27251852 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.271965122 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272606422 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273027596 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.272454277 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.272203711 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.272608075 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.272384282 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273052174 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.271804657 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272107599 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.272538278 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272713002 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.272544384 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.273007897 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.272796432 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.273214139 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.273286103 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.273222068 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.273064155 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274022164 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273028583 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.273326683 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.273887771 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.274243196 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273540956 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.27395851 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.273501328 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273698907 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.273510332 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.274187088 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.27470488 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.273839242 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274077849 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.274491722 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.274519314 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274936763 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274504487 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.273304674 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.274496822 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273820703 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274829912 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274736141 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.274166607 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.275558727 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.274331553 seconds)
  done (took 80.116621604 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276045681 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.274738054 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.272992532 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.272291319 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.27453867 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.272331241 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.274622884 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.274700665 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.27567757 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.274625002 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274916315 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273582435 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27222886 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276208991 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.272090351 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273246782 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273693357 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.272710711 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275474738 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.273869418 seconds)
  done (took 26.671313201 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.273777457 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.27517135 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.273822984 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274023171 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.276493202 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.274118941 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.277195474 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276670704 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274347644 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276590753 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.276826948 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.276197497 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274261023 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.274503395 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.27611149 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.274561465 seconds)
  done (took 21.595371466 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.275547851 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.277234121 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.276168511 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.277237554 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.27501307 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.274806668 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.277908466 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.275470714 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.275489603 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.278398962 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.277071397 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.277946168 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.276876581 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.277781039 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.275100101 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.278031549 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.275601273 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.276565714 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.277697348 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.278353882 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.275907861 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.275659914 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.27812319 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.277753411 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.275855203 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.276055899 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.275266977 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.276404637 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.275720142 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.278928137 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.276183083 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.277171137 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.276673061 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.276490422 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.278211335 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.276239259 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.279381658 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.278886484 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.279641734 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.279450397 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.279965882 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.279605591 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.280380598 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.28055344 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.276482955 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.279851152 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.276748716 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.278234474 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.277603671 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.276658562 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.279476774 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.280200463 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.280318414 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.280907449 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.280338684 seconds)
  done (took 71.459483497 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280610593 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.279913998 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.277796203 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.280290121 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.281158806 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.27807548 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.279648104 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279792407 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279518163 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.281702004 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279207569 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.281598177 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279085119 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282185531 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.279537181 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280427146 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.278329787 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.278311079 seconds)
  done (took 24.233472461 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.278751135 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278389788 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.282045057 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.279208567 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.278073431 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282161863 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278410922 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.281278338 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281215299 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.279000335 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279134757 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.281871801 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282052134 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.282317304 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280210618 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279227154 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.281899968 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282888053 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.2794692 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279505842 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.28351757 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281974395 seconds)
  done (took 29.369997983 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.282301993 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.283020194 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.281480608 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.297852496 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.298793946 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.303027865 seconds)
  done (took 8.944090256 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289366462 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283280966 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280947241 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283933833 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283613589 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280886503 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281574409 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280843296 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283401327 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282831658 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281585431 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283143717 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283077635 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280905149 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283455745 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282929697 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280639818 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281013905 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282760463 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284477665 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280965362 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284202984 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281489271 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282157216 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280212724 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282118677 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28402524 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281018561 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281372153 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28339631 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284443654 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281743701 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285079527 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282061073 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285295275 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285042103 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282147831 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285464519 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284089936 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282908141 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285247579 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284009139 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284259658 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282589098 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285440566 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282341325 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281836995 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282998159 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282713865 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286243496 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286031234 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283420543 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285162044 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285805193 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285523194 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287264821 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284219291 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282845749 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28618283 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285097829 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284384974 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286889089 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283857659 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284350884 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287411598 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283980734 seconds)
  done (took 85.934836338 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285185466 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284236399 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285227459 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285591303 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284121202 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285254943 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284901259 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284226293 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284440773 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285063561 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286816977 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284423545 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284588311 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28527667 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284647897 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284728869 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284885215 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286580467 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28626658 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287772543 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286484518 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285970776 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285758779 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284970629 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285581752 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28875548 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286720892 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285288134 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285696013 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286541124 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286424856 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286217833 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286917165 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285585023 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286862043 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286088414 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285897625 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286175958 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285897603 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288454192 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286544676 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289760797 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286794047 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286620197 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28771806 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287668679 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288061067 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287862586 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287567933 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287705528 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288097913 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289038006 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287759116 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287206634 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28693614 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28677342 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286435367 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287748163 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287910332 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290309828 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286597321 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2887093 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290839412 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288358362 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288158142 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288922145 seconds)
  done (took 86.120816031 seconds)
done (took 1736.911095495 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.389763375 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.351299926 seconds)
  done (took 13.946286015 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.453250718 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.405227722 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.288563731 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.332635264 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.290764009 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.288335179 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.306187557 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.288700982 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.289231686 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.289889475 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.289778723 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.474427393 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.337994526 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.29017693 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.28884507 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.384731685 seconds)
  done (took 42.51343742 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.314812982 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.295978164 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.403745077 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.319000546 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.316278671 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.474635765 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.353241251 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.301249858 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.45844188 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.337733648 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.789919078 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.31656138 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.299833733 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.357332589 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.313213482 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.47594212 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.535351606 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.819506307 seconds)
  done (took 29.689398947 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.722654382 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.292179516 seconds)
  done (took 9.222199783 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.314594302 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.297186161 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.294956184 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.293622089 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.286701794 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.293943076 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.293968196 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.2918417 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.76326532 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.421929617 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.305062375 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.302087668 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.313196378 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.295631627 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.293886414 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.330535695 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.467293544 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.295319413 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.292907149 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.300117558 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.295888821 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.376560942 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.335919611 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.300998994 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.415106478 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.760991708 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.30502863 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.301989768 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.44727082 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.295387934 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.296480932 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.295959723 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.297590127 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.901323033 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.730039039 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.312798214 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.334939963 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.305334604 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.294689735 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.434926729 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.297979984 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.302223815 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.300908246 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.719642203 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.44318893 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.408728054 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.513110741 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.32099627 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.29809758 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.357810667 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.303380104 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.298877369 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.324901121 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.05137371 seconds)
  done (took 108.945860216 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.311541383 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.683327154 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.458342074 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.31627503 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.903133962 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.975281157 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.311935784 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.566659739 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.36115771 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.289194212 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.579990392 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.790834317 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.315274928 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.306422643 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.934472176 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.340217184 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292770112 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.008205205 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.313116218 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.297793468 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.784032883 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297642125 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.314966137 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.449219554 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.330250892 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.740937946 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.643051644 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.733584255 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.315592079 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.293021791 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.744799 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.31888896 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.299066273 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.293887696 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.551081426 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.642857983 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.634154778 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.31074701 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.295476804 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.292848769 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.325378683 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.732411695 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.638918282 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.309416737 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.294088526 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.756627942 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.314149422 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.294495486 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.29751937 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.493991611 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.949361851 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.299194723 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.644246235 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.300694777 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.656062832 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.346401494 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.36306344 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.769784278 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316660316 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.35810712 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.336338529 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.294343037 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.295607026 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.297442567 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.297516967 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.636445661 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.432443166 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.297853925 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.633911005 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.763433655 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.316553795 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.818382709 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.176814707 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.323007095 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.399275038 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.295658702 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.821274171 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.782459273 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.318437561 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.296067016 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.621613287 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.322720375 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.573102564 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.310793432 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.29678601 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.816041539 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.305828275 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.35495708 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.297713274 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.303994487 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.902210083 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.312636622 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.559628046 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.329242145 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.297415054 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.296902959 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.296690988 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.295826117 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.312227282 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.303570947 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.807083482 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.319946722 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.404831111 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.312269005 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305582905 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.31987342 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.298690932 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.297652614 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.512279006 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.774788914 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.314396081 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.298033766 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.297717285 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.30403891 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.48081011 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.305748094 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.596780349 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.320858797 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297368726 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.323662241 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.011416759 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.337069031 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297764166 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.318189303 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.18297943 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.508620916 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.316666407 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.29982298 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.297944088 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.321894649 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.505306703 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.315815182 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.340901113 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.298852737 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.98612048 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.347211092 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.321884094 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.608213745 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.303596637 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.124873403 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.317299003 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.301533557 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.607202686 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.56436875 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.3549636 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.302153032 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.321280137 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.974480668 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.35518498 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.438283007 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.320483415 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.383080816 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.497528199 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.669424996 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.301732911 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.915158318 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.302869812 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.512098807 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.300990824 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.597768911 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.775119912 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.322881911 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.307551682 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.987754113 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.027761286 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.111400039 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.303354182 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.572575166 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.241936105 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.78293052 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.300755154 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.30366665 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.721850117 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.304758909 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.308318315 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.301284597 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.302137733 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.46510211 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.474543467 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.91908216 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.300276727 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.74486311 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.340952131 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301917434 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.324716279 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.303715154 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.647658327 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.380089897 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.306457639 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.342550075 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.302285175 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.302519063 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.7673252 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.234463956 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.308218896 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.453355467 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.913037465 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.32323356 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.303403744 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.933806529 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.602752284 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.805724506 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.378190282 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.602804182 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.327914159 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.339919887 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.921431649 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.37693441 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.809584339 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.328133501 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.310279632 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.882285536 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.326154127 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.666317162 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.304151574 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.304821049 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.819495584 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.3244657 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.308052807 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.519971109 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.321710421 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.567421352 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.305186708 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.322881122 seconds)
  done (took 1102.986464656 seconds)
done (took 1308.508137129 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.306096127 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.310941766 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.293059304 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.310766351 seconds)
  done (took 26.445909395 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.316482601 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.311718428 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.312418795 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.311456864 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.314141595 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.311676289 seconds)
  done (took 9.101821277 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.32593067 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.313917766 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.311993806 seconds)
  done (took 19.178148407 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.511820726 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.579540706 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.665278594 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.50013673 seconds)
  done (took 10.481674037 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.313441789 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.312742542 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.312307949 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.314623342 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.316532385 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.317697879 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.31420257 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.314943261 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.317164531 seconds)
  done (took 13.058083333 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.315308041 seconds)
done (took 80.804840466 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.391818913 seconds)
    (2/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.324261156 seconds)
    (3/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.327325776 seconds)
    (4/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.620441343 seconds)
    (5/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.323949619 seconds)
    (6/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.354538397 seconds)
    (7/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.295370642 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.162821952 seconds)
    (9/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.350160669 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.557340026 seconds)
    (11/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.033495828 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.365332161 seconds)
    (13/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.43354437 seconds)
    (14/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.332751769 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.334948672 seconds)
    (16/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.3168392 seconds)
    (17/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.331192917 seconds)
    (18/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.082290473 seconds)
    (19/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.288516855 seconds)
    (20/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.317911721 seconds)
    (21/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.288801276 seconds)
    (22/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.358812822 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.306979412 seconds)
    (24/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.734772679 seconds)
    (25/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.093974486 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.221443557 seconds)
    (27/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.331556735 seconds)
    (28/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.114922766 seconds)
    (29/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.309773979 seconds)
    (30/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.569063155 seconds)
    (31/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.399414959 seconds)
    (32/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.106582024 seconds)
    (33/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.515854992 seconds)
    (34/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.454435464 seconds)
    (35/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.488241193 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 6.325109379 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.418733559 seconds)
    (38/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.6730324 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.930887536 seconds)
    (40/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.28900104 seconds)
    (41/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.898525792 seconds)
    (42/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.312002684 seconds)
    (43/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.398800747 seconds)
    (44/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.33448955 seconds)
    (45/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.391319408 seconds)
    (46/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.258385162 seconds)
    (47/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.34584316 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.419799379 seconds)
    (49/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.28958539 seconds)
    (50/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.342254084 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.565707283 seconds)
    (52/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.668456369 seconds)
    (53/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.296224397 seconds)
    (54/286) benchmarking ("sort", BigInt, false)...
    done (took 6.347403936 seconds)
    (55/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.676041087 seconds)
    (56/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.30518035 seconds)
    (57/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.803484964 seconds)
    (58/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.906574265 seconds)
    (59/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.346877558 seconds)
    (60/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.37120623 seconds)
    (61/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.511068562 seconds)
    (62/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.918623241 seconds)
    (63/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.326187398 seconds)
    (64/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.90169672 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.37365255 seconds)
    (66/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.375228008 seconds)
    (67/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.585875098 seconds)
    (68/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.296812271 seconds)
    (69/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.114144537 seconds)
    (70/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.358475256 seconds)
    (71/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.64934549 seconds)
    (72/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.036304729 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.871837453 seconds)
    (74/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.290663363 seconds)
    (75/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.311526232 seconds)
    (76/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.316225363 seconds)
    (77/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.337493291 seconds)
    (78/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.301108533 seconds)
    (79/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.133804726 seconds)
    (80/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.355933768 seconds)
    (81/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.416061358 seconds)
    (82/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.722722725 seconds)
    (83/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.36433965 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.22695065 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.72390274 seconds)
    (86/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.357672952 seconds)
    (87/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.330168448 seconds)
    (88/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.695750841 seconds)
    (89/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.362648383 seconds)
    (90/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.732828954 seconds)
    (91/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.340273339 seconds)
    (92/286) benchmarking ("sort", Int64, false)...
    done (took 5.497180575 seconds)
    (93/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.744972803 seconds)
    (94/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.135267607 seconds)
    (95/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.416519479 seconds)
    (96/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.764109917 seconds)
    (97/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.292710986 seconds)
    (98/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.37744515 seconds)
    (99/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.302085477 seconds)
    (100/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.437083706 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.171589909 seconds)
    (102/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.584332175 seconds)
    (103/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.319331376 seconds)
    (104/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.419221896 seconds)
    (105/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.681979019 seconds)
    (106/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.308896869 seconds)
    (107/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.31909425 seconds)
    (108/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.150535864 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.961378556 seconds)
    (110/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.315348736 seconds)
    (111/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.294137628 seconds)
    (112/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.436329741 seconds)
    (113/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.667450382 seconds)
    (114/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.321768246 seconds)
    (115/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.540621079 seconds)
    (116/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.388466833 seconds)
    (117/286) benchmarking ("sort", Float32, false)...
    done (took 5.351335795 seconds)
    (118/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.160327773 seconds)
    (119/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.575587449 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.895040238 seconds)
    (121/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.499419586 seconds)
    (122/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.429180406 seconds)
    (123/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.92947038 seconds)
    (124/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.91403037 seconds)
    (125/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.300783627 seconds)
    (126/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.14110012 seconds)
    (127/286) benchmarking ("sort", Bool, false)...
    done (took 1.838233829 seconds)
    (128/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.353990955 seconds)
    (129/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.426043095 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.740472992 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.609511852 seconds)
    (132/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.295815694 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.081419122 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.582044669 seconds)
    (135/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.738123213 seconds)
    (136/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.339159832 seconds)
    (137/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.301848928 seconds)
    (138/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.364084467 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.561009189 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.970046996 seconds)
    (141/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.424081458 seconds)
    (142/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.330173043 seconds)
    (143/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.418441866 seconds)
    (144/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.352386426 seconds)
    (145/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.296440218 seconds)
    (146/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.312345251 seconds)
    (147/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.337240164 seconds)
    (148/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.09917512 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.073248273 seconds)
    (150/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.837048327 seconds)
    (151/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.343588765 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.511344678 seconds)
    (153/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.446333816 seconds)
    (154/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.877743558 seconds)
    (155/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.15644751 seconds)
    (156/286) benchmarking ("sort", Float64, true)...
    done (took 6.338285789 seconds)
    (157/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.302133447 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.257737821 seconds)
    (159/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.787914644 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.345619626 seconds)
    (161/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.522584259 seconds)
    (162/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.29706213 seconds)
    (163/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.303939797 seconds)
    (164/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.493235483 seconds)
    (165/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.297652703 seconds)
    (166/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.328107461 seconds)
    (167/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.402380048 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.716551257 seconds)
    (169/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.710620513 seconds)
    (170/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.343900736 seconds)
    (171/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.317492275 seconds)
    (172/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.895951181 seconds)
    (173/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.248418979 seconds)
    (174/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.672669463 seconds)
    (175/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.328370133 seconds)
    (176/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.719012775 seconds)
    (177/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.383649348 seconds)
    (178/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.32380148 seconds)
    (179/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.409888294 seconds)
    (180/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.49343316 seconds)
    (181/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.304728918 seconds)
    (182/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.333142845 seconds)
    (183/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.344092744 seconds)
    (184/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.687104409 seconds)
    (185/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.335884761 seconds)
    (186/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.334943828 seconds)
    (187/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.317564393 seconds)
    (188/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.365422153 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.225915937 seconds)
    (190/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.106847431 seconds)
    (191/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.445553467 seconds)
    (192/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.400859346 seconds)
    (193/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.299083161 seconds)
    (194/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.314391799 seconds)
    (195/286) benchmarking ("sort", Bool, true)...
    done (took 5.48110059 seconds)
    (196/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.398028592 seconds)
    (197/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.023700458 seconds)
    (198/286) benchmarking ("sort", Float64, false)...
    done (took 5.63736264 seconds)
    (199/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.023731404 seconds)
    (200/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.425502032 seconds)
    (201/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.304192262 seconds)
    (202/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.418003117 seconds)
    (203/286) benchmarking ("sort", Int8, true)...
    done (took 6.317226275 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.965511786 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.527214326 seconds)
    (206/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.667468947 seconds)
    (207/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.326057481 seconds)
    (208/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.399783508 seconds)
    (209/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.50069872 seconds)
    (210/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.874705507 seconds)
    (211/286) benchmarking ("sort", Int8, false)...
    done (took 4.342217405 seconds)
    (212/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.447468048 seconds)
    (213/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.328468615 seconds)
    (214/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.319935948 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.34901524 seconds)
    (216/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.059104767 seconds)
    (217/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.353759552 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.379294239 seconds)
    (219/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.299943704 seconds)
    (220/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.087835254 seconds)
    (221/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.549836467 seconds)
    (222/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.922470494 seconds)
    (223/286) benchmarking ("sort", BigInt, true)...
    done (took 6.32604557 seconds)
    (224/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.307304438 seconds)
    (225/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.921390975 seconds)
    (226/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.511699281 seconds)
    (227/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.300706643 seconds)
    (228/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.355529084 seconds)
    (229/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.528637739 seconds)
    (230/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.476836957 seconds)
    (231/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.421120018 seconds)
    (232/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.103395819 seconds)
    (233/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.533777003 seconds)
    (234/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.346994622 seconds)
    (235/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.336968849 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.528519748 seconds)
    (237/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.689207224 seconds)
    (238/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.068895488 seconds)
    (239/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.675623407 seconds)
    (240/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.301851442 seconds)
    (241/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.325347163 seconds)
    (242/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.137553438 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.347027281 seconds)
    (244/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.526720955 seconds)
    (245/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.200429292 seconds)
    (246/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.635802679 seconds)
    (247/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.328949503 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.713163184 seconds)
    (249/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.371879534 seconds)
    (250/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.312742831 seconds)
    (251/286) benchmarking ("sort", Float32, true)...
    done (took 6.328167634 seconds)
    (252/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.352290097 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.733562499 seconds)
    (254/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.324130352 seconds)
    (255/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.350343031 seconds)
    (256/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.108633436 seconds)
    (257/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.349499386 seconds)
    (258/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.339082956 seconds)
    (259/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.350391478 seconds)
    (260/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.764088308 seconds)
    (261/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.648354804 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.420503591 seconds)
    (263/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.34305852 seconds)
    (264/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.303685843 seconds)
    (265/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.077125423 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.404916853 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.4386145 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.135740616 seconds)
    (269/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.304097522 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.98032153 seconds)
    (271/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.908251569 seconds)
    (272/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.304288432 seconds)
    (273/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.322180618 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.383730423 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.672226128 seconds)
    (276/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.448735698 seconds)
    (277/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.433261137 seconds)
    (278/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.349884173 seconds)
    (279/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.323346055 seconds)
    (280/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.263924045 seconds)
    (281/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.640143564 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.363991999 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.673243359 seconds)
    (284/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.789749702 seconds)
    (285/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.335724516 seconds)
    (286/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.407904188 seconds)
  done (took 932.800645181 seconds)
done (took 934.028057862 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.357796759 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.352190648 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.334496482 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.356089465 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.447213455 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.36224596 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.344424318 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.336232551 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.382527718 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.384924356 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.334871181 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.362664649 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.337729887 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.336053425 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.334738175 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.350492075 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.362146663 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.343282021 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.35295995 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.344918317 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.351792458 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.334949747 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.386154297 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.363012705 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.339127882 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.338806883 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.339887468 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.35484933 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.448368721 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.339981959 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.338128359 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.348346355 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.361238153 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.341391634 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.331155346 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.356642659 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.34771155 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.346512949 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.339614353 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.368764584 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.741110723 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.352690511 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.33853428 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.336600501 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.337138522 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.34212139 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.338472083 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.344330207 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351706585 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352128916 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.735766742 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.370041456 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.341101907 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.338341012 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.348789126 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.339193506 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.34078875 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356566559 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.357767153 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.355744045 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.350146421 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.34890236 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.340904606 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.355926441 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.346330994 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.773463994 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.350167974 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.342930979 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.747472537 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.36018319 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.776748596 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.364080302 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.340101555 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.35386326 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.37150499 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.365362323 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.341350335 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.338364497 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.348092521 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.338043661 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.348820879 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.353586708 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.344525376 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.341232102 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.354624089 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.368097223 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.349521151 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.341559232 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.348632359 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.360220537 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.348152693 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.351884243 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.342923758 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.334845007 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.349283255 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.343402077 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.343798595 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.342716413 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.345069294 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.350954636 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.748269864 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377587299 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.336697149 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.337068649 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.340487239 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.355137655 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.74813647 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.360357094 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.36259399 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.38914737 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.343591934 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.344372003 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.346070151 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360681642 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.350934027 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.34571924 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.33746555 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.345966982 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.744519309 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.373850852 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.342901091 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.340938147 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360408339 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.344791961 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.33966426 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.362155247 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.344817723 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356942472 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.46411114 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.35314839 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.374333685 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.342120781 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.346341037 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.370070273 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361070305 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.375686763 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.347457305 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361891311 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.359203146 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.340266937 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.355676406 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.355022179 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.345428719 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.349129933 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.33799313 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.371427091 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.358438558 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358520064 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.364863775 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.466441968 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.342192085 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.34884405 seconds)
done (took 226.171087165 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.402729053 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.338518966 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.427454985 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.339588998 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.441611529 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.44342719 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.338454068 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.338534552 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.337734527 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.718267739 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.33841099 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.338672141 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.33461532 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.338623915 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.425426452 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.340763701 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.338521535 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.710290568 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.342398916 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.412512578 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.339420221 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.340016881 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.341429669 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.763922929 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.337995846 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.339722192 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.413445046 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.341543235 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.698307208 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.339402832 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.336192587 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.728333625 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.43139671 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.37002575 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.352597555 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.340871007 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.443355359 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.371220313 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.423600646 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.425500309 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.430188068 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.371731189 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.337916828 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.337973766 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.345060911 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.34440523 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.341330568 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.369635517 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.335779026 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.341168804 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.683836242 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.353046989 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.35076325 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.341726916 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.34181777 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.364593406 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.342520526 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.344928991 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.432179506 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.345078389 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.407971109 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.732445513 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.753692871 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.344062493 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.343381062 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.34184817 seconds)
  done (took 149.157458582 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.410892056 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.417687191 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.456360746 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.367325 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.39448655 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.459363861 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.368578649 seconds)
  done (took 11.129218389 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.351406431 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.346142003 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.395449078 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.395520489 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.344852192 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.493555602 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.346257125 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.356385856 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.343413609 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.398149645 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.346619404 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.34604514 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.352299851 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.346202797 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.396461279 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.356866695 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.459441428 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.347369841 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.347390686 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.498124242 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.344993679 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.352778981 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.398192095 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.357502186 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.34668869 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.352934505 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.910776952 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.347849605 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345629291 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.346968207 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.343928431 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.384956881 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.347785125 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.341581333 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.344569578 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.464311412 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.347270094 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345162567 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.347479618 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.341494128 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.348250296 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.347615361 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.347506911 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.345482674 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.34705077 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.369968965 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.348588776 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.347909682 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.347572232 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.348372092 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.397369787 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.348469707 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.345714919 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.345870701 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.404256837 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355656544 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.348684319 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.348264595 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.349444703 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.345787367 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.498341732 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.396062174 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.348202575 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.396330643 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.348947921 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.349095467 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.349631688 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.349742971 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.402746733 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.348214149 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.39742585 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.348627033 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.504391694 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.372940136 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.350888525 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.353415163 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.352878562 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.351447095 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.34900554 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.356106337 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.347437597 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.351577867 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.356104933 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348229135 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348763278 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.453058068 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.457689767 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.347852774 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.363444499 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.357340561 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.349089435 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.40248897 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.351292277 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.348060448 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.401998627 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.464994629 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.404471814 seconds)
  done (took 154.605235692 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.356343469 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.358074048 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.352401463 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.366880058 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.350053253 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.351487634 seconds)
  done (took 9.395005766 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.353431752 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.353377058 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.3519281 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.351633467 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.352226561 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.353086112 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.351811946 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35431483 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.354926257 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.351254247 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.351802556 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.35394386 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.353129362 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.353446068 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.352417975 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.352112827 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.352063114 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.349965112 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.351562714 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352200846 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.457217354 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.352572232 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.352861108 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.35373229 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.356830326 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.355010233 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.361126917 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.353446766 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.353205782 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.360837461 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.372584386 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.353127293 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.354748555 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.358639109 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.357008198 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.354404514 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357207006 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.354084824 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.351162989 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.352738043 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.354753343 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.353484329 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.35341012 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.356336301 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.356391154 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.359357961 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.358867582 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.361705103 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.355396664 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.35596918 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.355801666 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.354618021 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.355627472 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.355481433 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.357653349 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.376769458 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.359537378 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.355861762 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.35574781 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.35590339 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.356603457 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.355422006 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.356151586 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.358632409 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.352769368 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.356451599 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.356241096 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.359199743 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355781949 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.356371144 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.357399872 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.353700155 seconds)
  done (took 99.959540524 seconds)
done (took 425.497311175 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.698270626 seconds)
  done (took 7.963072416 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.449368386 seconds)
  done (took 7.715203008 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.827715745 seconds)
  done (took 22.095424091 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.353212119 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.461285895 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.371227053 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.347009737 seconds)
  done (took 26.796293141 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.73851695 seconds)
  done (took 8.001280928 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.346695522 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.363269913 seconds)
  done (took 13.974013438 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.936296851 seconds)
  done (took 8.199691689 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.518281396 seconds)
  done (took 7.786501522 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.349212583 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.367094587 seconds)
  done (took 14.237661768 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.327502741 seconds)
  done (took 7.589764899 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.163209924 seconds)
  done (took 8.430196986 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.363770165 seconds)
  done (took 7.63129405 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.375820093 seconds)
  done (took 7.642818961 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.326338449 seconds)
  done (took 9.592273656 seconds)
done (took 158.921163087 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.350493114 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.35083884 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.349495725 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.350131196 seconds)
  done (took 26.668160743 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.391276148 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.391873052 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.392333005 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.402095131 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.394907733 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.391760375 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.384024219 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.383924613 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.402308933 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.394776355 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.393335418 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.39349794 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.391695197 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.384556196 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.393834888 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.392996849 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.403308356 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.394317027 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.385445485 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.395776409 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.360718844 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.403418192 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.395506449 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.359910595 seconds)
  done (took 34.64484794 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.878839291 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.431154125 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.512506981 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.412715815 seconds)
  done (took 7.503167234 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.411281406 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.413606569 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.425962818 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.463190833 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.489746337 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.422814745 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.38863401 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.382488311 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.367372391 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.413955123 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.489892449 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.429357255 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.499186902 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.361510243 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.567807187 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.360558466 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.361149252 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.412675814 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.464633084 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.479570203 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.36067386 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.412251787 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.416956826 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.430127712 seconds)
  done (took 35.495004925 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.361149221 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.380066492 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.361011078 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.35920392 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.369654521 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.36205524 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.360503193 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.36155929 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.360256645 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.366907957 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.3594103 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.373582618 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.362087105 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.360773499 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.367020694 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.363360437 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.36814827 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.361301972 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.361082637 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.367635564 seconds)
  done (took 28.557357269 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.353740149 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.207956413 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.707149291 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.610239694 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.35396562 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.355377829 seconds)
  done (took 27.859023003 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.431739551 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.585737671 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.364047561 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.716161088 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.816083497 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.385890546 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.362372665 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.602357353 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.922019477 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.913114797 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.427413779 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.43360133 seconds)
  done (took 20.231730099 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.356372382 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.363039064 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.363315765 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.396356376 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.417035666 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.387953235 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.370260313 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.355393944 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.4248415 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.440427321 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.386101404 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.419812986 seconds)
  done (took 37.953292824 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445609899 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401988651 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.238733172 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368049624 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.092978888 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57066028 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.367420572 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.821539636 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.365870474 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632756245 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368231179 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455165385 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.613710932 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370573954 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366911708 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.342432743 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601170014 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859300441 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366993434 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.473172481 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3924415 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369817524 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.565061294 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.396659453 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570998181 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.50035825 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.62119527 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.135413108 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.654506055 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378722321 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370980256 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361610416 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633827659 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01947955 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474027856 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370341616 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362759547 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.912345236 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.346913561 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.484238472 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370736067 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36998427 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372182963 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361803022 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.295212022 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374832193 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842440964 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.372989723 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.072900197 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.362097998 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372383045 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457459826 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.365910741 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.930933389 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377974663 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.366457239 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.358954035 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45520353 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947542142 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.878160597 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384411009 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.304160709 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379113146 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.400803208 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014800474 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.487579799 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.365627966 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.366554033 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295883001 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.398543339 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385472196 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510312369 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.386204842 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.012990254 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107304473 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.398369052 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.30086339 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949890476 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375080439 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.304689551 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589316823 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.1416943 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300041292 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.310816543 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.298056447 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071475275 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376771512 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.756948598 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389768389 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.846948099 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.377813387 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381534444 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38716661 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.58724708 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.242821087 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364439543 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.363554064 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495140091 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385852778 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.835611868 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302813302 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.367613102 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619660967 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.576323029 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374811789 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.350721524 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600946478 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370609551 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.386543554 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.364830985 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.402700488 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.950387608 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402102274 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.894498992 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389237644 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.142776728 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119043478 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383852749 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.472637596 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380488852 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619664236 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.128864064 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.275852448 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432817725 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370003574 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.366071067 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.919787573 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.963344019 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.261867886 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.363466178 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366961281 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.382976572 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.366661967 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315864594 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.373752917 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372229055 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.144870453 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.588391029 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370095126 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643669302 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29490054 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509654211 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.368095649 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.581137701 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.566550652 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.383663573 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622135726 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370485187 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384047811 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382183152 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380897183 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467723492 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385400469 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.368950117 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.623781908 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.364181281 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.372770209 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.511607236 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.147980274 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365842084 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.365625274 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371114645 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962517011 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363905731 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370009112 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.253529527 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.378109567 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431359621 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37437622 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.377722727 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.178982054 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392664902 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.375386767 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.375388914 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590231372 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371762778 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.397034111 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449251567 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.574876491 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.96496474 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394001181 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.301193592 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.072844052 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.053908809 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362532388 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.55418571 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365924644 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376606577 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374447134 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368561478 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.96312137 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385841626 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.400807704 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.37684243 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376647842 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.36879683 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367698208 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.153730932 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.92304827 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384855685 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.38060126 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515518299 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.377059862 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302718241 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.882589046 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373203361 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370091596 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.144400218 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400866004 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.42315333 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860098032 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623539871 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382430402 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384522252 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.523271024 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.402543694 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.370009044 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368766504 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377669533 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.393674839 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371493058 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.376208285 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.49957835 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.736094391 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934688211 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130685731 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944226514 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32002425 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.384348064 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.254804887 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.841202319 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300084433 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.027127755 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552922952 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.860991711 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317566853 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583179329 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.583607861 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148091147 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380556618 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604361722 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304173182 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.383350759 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387543889 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582047062 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40390058 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.380149484 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.300513426 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.644546618 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640930003 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365782039 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453839701 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840306535 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380501413 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.149038091 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.390761711 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.682526184 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564978931 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.918569495 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.757211602 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370450474 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.385780894 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859215904 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.371549564 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.897677395 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032443377 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392091593 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.613932929 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314013468 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.384078909 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.381521693 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.363655384 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.676448958 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.384167243 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.630865787 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379100952 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306066746 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.369552424 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91507963 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.242106708 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.372813544 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375630477 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119248616 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378555133 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670246922 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.396249674 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.147077125 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39383039 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.306509656 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30442392 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.065648677 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38228923 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344366738 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881178098 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.382446676 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390261686 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38141072 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222148269 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.626208264 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.38961527 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.97824656 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620600385 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375344114 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421043011 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.47532779 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374454878 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.360956096 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.268693504 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.607222711 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408438178 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.594763361 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.268205501 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.278315379 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.407766921 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585538368 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.268515693 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376913618 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635634596 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.108172837 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.384738918 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136544312 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418915298 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386527676 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.391759707 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373546639 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403271869 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461045424 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381389421 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.385357289 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.383694692 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555214426 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395096183 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379929193 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.389265347 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470319895 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.94739845 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.155453778 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.151537054 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978777958 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17730814 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.988749847 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404770476 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382032563 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384630741 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310411981 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52653334 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.904413449 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652310024 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509956258 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.388214445 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40467016 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388409204 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387230366 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594512632 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655582157 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.348322636 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388453896 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.168235506 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.261631763 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384815384 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.591551633 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897184059 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95990345 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50301578 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375152676 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.859263354 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656803672 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.465225963 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37551612 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.967001557 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.397812509 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.722102539 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.405007469 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383784753 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528003951 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387504101 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041512903 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.400789567 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.53732662 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.153654835 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.525741454 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.63879064 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.850960796 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.38650121 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98545117 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.121402193 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647908126 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456217829 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.394869405 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.485775094 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53094521 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.390059207 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.270397902 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381167566 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22359008 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.089418602 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.3922434 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982805798 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663771382 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.378775971 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.392907802 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411600237 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.396348907 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608509658 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108470355 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605826304 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.394811132 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394032585 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.371439348 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983627543 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414666464 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312290533 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.381167391 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64055411 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.641916734 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40296739 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.840013966 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.095540708 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968714392 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.361202297 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404528391 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393628507 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.099194815 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991974535 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.184772313 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904446825 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.046876924 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381470651 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658781333 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.390311281 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385759889 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663431225 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.385209427 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.387958875 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403801336 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.997055517 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174188122 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.40511614 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.584320997 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.327848976 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.60991794 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409397264 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316559372 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379740801 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.569479611 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.389909084 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520336548 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390942914 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.394790506 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403798969 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.141646876 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.670371611 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.386187296 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.362350085 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.362769143 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398713673 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482732728 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.66199215 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386274617 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.061954774 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.737453469 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.643599017 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.384025323 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.370029442 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.386433838 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384622069 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.100390093 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.387723482 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381461154 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971038241 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.395973668 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.400100491 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393912133 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.604754964 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599813494 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399761402 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39795617 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390911338 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408270137 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.290601402 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.150670261 seconds)
  done (took 1661.726289888 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.402532171 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.403973485 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.402532354 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.440295241 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.430479241 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.510480804 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.457765452 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.403170938 seconds)
  done (took 52.749748879 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.386274711 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.538577814 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.423851327 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.393258869 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.390309162 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.392830457 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.852053335 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.412340357 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.392832818 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.395798091 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.380617572 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.382335755 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.053296123 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.399075086 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.389056709 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.385790853 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.392409845 seconds)
  done (took 66.260067969 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.387426478 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.398005545 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.49075809 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.400362699 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.476699075 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.406814499 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.289513149 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.452899722 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.40241243 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.402747497 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.057064226 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.400523883 seconds)
  done (took 84.857371664 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.400825825 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.405801475 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.403893726 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.405304965 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.403474169 seconds)
  done (took 8.31543789 seconds)
done (took 2094.089905722 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.392624592 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.091287785 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.026220352 seconds)
  done (took 5.409550684 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.545019661 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.592646265 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.718071308 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.717382116 seconds)
  done (took 7.878157161 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.680798157 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.771081199 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.586354234 seconds)
  done (took 6.344073339 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.676224017 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.405027427 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.398987915 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.39887216 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.402863858 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.402775704 seconds)
  done (took 20.509717789 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.401146073 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.408983621 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.405334784 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.409304867 seconds)
  done (took 6.930158493 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.377826624 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.091314521 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.383122772 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.39984694 seconds)
  done (took 18.558670105 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.14719359 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.163488408 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.147115848 seconds)
  done (took 7.765332069 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.426079382 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.428767917 seconds)
  done (took 4.162316821 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.697810048 seconds)
  done (took 3.004397139 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.414300225 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.456988726 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.458012817 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.396655575 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.676068852 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.829353442 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.045160647 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.610772251 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.35915326 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.628806957 seconds)
  done (took 31.181501557 seconds)
done (took 128.908246033 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.238847795 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.643613441 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.603886192 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.207478697 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.626267889 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.604603328 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.613323778 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.175403989 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.717817666 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.705104514 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.205562031 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.631946196 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.559792653 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.399925071 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.559672687 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.40249861 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.631084757 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.288209869 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.886101891 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.08143972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.611242456 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.847479457 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.030018055 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.86732867 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.63049958 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.553173097 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.44102649 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.400820786 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.060172213 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.457213123 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.554887788 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.262201052 seconds)
  done (took 192.806098366 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.399022039 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.399263887 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.399007478 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.408317062 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.402124368 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.407738651 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.400225226 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.413733836 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.398727843 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.405029851 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.398144204 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.414042273 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.397563607 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.399716572 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.412305515 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.399400766 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.417063102 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.407009708 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.401410994 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.411157576 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.399517767 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.412221986 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.415877219 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.398935934 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.422778439 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.412144633 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.413636062 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.402798423 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.402747847 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.410697133 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.404060907 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.405547865 seconds)
  done (took 206.303211973 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.409989433 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.399199631 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.417036197 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.397816521 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.397659597 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.41565112 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.400701444 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.399074042 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.418536707 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.397880055 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.400584621 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.407992799 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.402791098 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.397746296 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.402284099 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.407427258 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.407810051 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.400131421 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.415372659 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.398034675 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.401503283 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.404790079 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.399254427 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.400943905 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.416263125 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.40289531 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.400117775 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.419417252 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.416508546 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.401801673 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.400782614 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.40031743 seconds)
  done (took 206.266641544 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.600273458 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.410632755 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.409702065 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.343422141 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.411618124 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.411875288 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.406028856 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.60955162 seconds)
  done (took 14.912359853 seconds)
done (took 621.597666403 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.708734056 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.427142944 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.620078266 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.436519822 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.200865134 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.453961073 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.429733612 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.597522202 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.362431353 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.614884703 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.658481605 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.445321258 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.780971559 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.425901421 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.683108416 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.529064521 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.288345416 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.402131868 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.745178539 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.987618579 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.699402515 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.903350469 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.621561955 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.359679026 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.810252737 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.902667442 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.129709062 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.284902317 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.443259996 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.751549285 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.080934413 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.387435628 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.495950845 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.497030215 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.552108089 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.529779344 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.36709136 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.488714111 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.632613365 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.662169377 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.988021806 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.177341712 seconds)
  done (took 94.876598401 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.394576481 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.395313986 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.398566217 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.392286614 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.393277217 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.395304696 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.397024189 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.398511498 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.3954185 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.395209572 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.396054918 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.396996843 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.394035914 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.395636762 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.395020787 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.393973828 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.396986615 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.394780987 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.394348071 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.396174603 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.392970934 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.395806313 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.394789681 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.39618791 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.395151283 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.393913102 seconds)
  done (took 37.591681762 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.413203852 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.660892162 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.824525045 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.418228888 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.412153278 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.418431162 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.49057996 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.421339632 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.413054082 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.411301743 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.566876593 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.423378512 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.444074815 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.85108614 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.417670223 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.41456221 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.416333992 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.416119717 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.664605993 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.425957963 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.507780969 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.420151574 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.492571095 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.431505553 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.435181007 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.414188137 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.41695458 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.994977242 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.436320445 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.564893875 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.221439082 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.491115192 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.941504985 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.860681934 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.225983087 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.425140287 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.413941655 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.574087787 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.419921486 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.414614103 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.492931207 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.419404328 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.836360752 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.089299354 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.439001793 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.413249372 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.020821591 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.590744234 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.66762878 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.424136269 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.861256629 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.420148354 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.412617334 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.414193543 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.661386783 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.429857446 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.415705857 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.027401386 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.441157728 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.490720686 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.415752343 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.41731721 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.671876632 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.411997277 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.659541837 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.417798658 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.4226962 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.431465848 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.834430507 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.426866548 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.114877918 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.440408089 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.418626642 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.569663596 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.668478473 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.054097842 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.442618154 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.681802053 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.951402559 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.506072994 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.42363104 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.989893335 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.519485632 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.422803416 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.420115115 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.421270286 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.41884448 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.468216429 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.491143147 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.056166991 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.119545835 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.053721839 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.521801265 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.43424269 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.417705018 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.032584577 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.44205053 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.417657015 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.834970157 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.119969856 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.435398314 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.426685157 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.11306024 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.439847363 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.500152934 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.427918786 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.845065003 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.427637589 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.467735301 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.421188486 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.429236218 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.44077656 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.503274376 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.425943676 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.421876856 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.087220259 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.595772879 seconds)
  done (took 186.706441064 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.414685614 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.430198756 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.415201648 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.412447551 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.414256308 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.420390029 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.415078699 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.413738926 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.42279579 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.414618702 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.414078339 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.418016339 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.417860864 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.438634546 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.423079248 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.422264428 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.026308882 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.414574235 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.411904527 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.414366918 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.213677379 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.42116522 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.426704037 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.414058754 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.416345465 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.419219124 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.4186383 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.416368171 seconds)
  done (took 154.444895459 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.421315778 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.995032998 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.442032167 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.556442855 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.4496208 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.422275146 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.553501817 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.48318743 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.444522799 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.423379641 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.423375732 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.731402777 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.431750054 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.953085344 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.615113254 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.577341432 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.945971147 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.441106412 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.42222747 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.423482962 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.557355976 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.431341639 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.733488821 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.993540003 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.441041241 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.990791985 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.409461001 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.428320569 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.42388907 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.993061337 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.436702489 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.732433979 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.498905328 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.488448205 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.013175801 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.958912526 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.97061061 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.578124658 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.430430725 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.424529395 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.423466098 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.407876205 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.992553969 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.437248503 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.425702091 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.978587117 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.44114485 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.430954038 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.43061423 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.425041117 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.485531666 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.504977468 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.748511542 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.99627059 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.515864197 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.444329062 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.558215756 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.787091807 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.434932303 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.945331194 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.416184769 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.001591279 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.440367301 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.411937452 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.428200771 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.431753037 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.575959704 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.565615232 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.94680975 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.448697411 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.937539685 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.591019775 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.432941912 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.427506946 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.434167449 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.999537285 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.957344033 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.592704625 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.56652803 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.62287963 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.420164942 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.429702594 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.411172815 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.506839615 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.427409284 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.00289784 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.95929988 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.443442899 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.430170313 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.429379393 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.424256487 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.605225217 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.023431789 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.521545999 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.945806753 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.75964898 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.738119049 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.431437329 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.489828614 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.450002205 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.739599324 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.435981475 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.484923002 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.858967779 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.736409998 seconds)
  done (took 169.565892203 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.672185648 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.608202398 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.518348628 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.57846859 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.02533463 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.985150484 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.682946602 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.57068453 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.54142333 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.686815415 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.572001826 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.516443385 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.641673048 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.525149876 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.198164755 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.518757238 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.543609332 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.577753718 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.59607428 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.440813702 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.110357885 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.715549396 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.621128698 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.305480211 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.526309881 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.205618519 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.995325863 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.961840413 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.597481334 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.727029341 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.993216123 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.556311317 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.3998672 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.146776601 seconds)
  done (took 68.190525183 seconds)
done (took 712.689401653 seconds)
SAVING RESULT...
DONE!
