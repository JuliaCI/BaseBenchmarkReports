cset: moving following pidspec: 24634
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.574892866 seconds)
loading group "shootout"... done (took 1.198058623 seconds)
loading group "string"... done (took 0.407258618 seconds)
loading group "linalg"... done (took 7.626252881 seconds)
loading group "parallel"... done (took 0.151351666 seconds)
loading group "find"... done (took 1.434062089 seconds)
loading group "tuple"... done (took 1.874490782 seconds)
loading group "union"... done (took 12.364778643 seconds)
loading group "dates"... done (took 1.260079491 seconds)
loading group "micro"... done (took 0.193282396 seconds)
loading group "simd"... done (took 4.178062747 seconds)
loading group "io"... done (took 1.003045704 seconds)
loading group "random"... done (took 8.311052255 seconds)
loading group "problem"... done (took 1.533453205 seconds)
loading group "array"... done (took 18.537261538 seconds)
loading group "misc"... done (took 1.442576066 seconds)
loading group "scalar"... done (took 37.781086826 seconds)
loading group "sort"... done (took 2.822539127 seconds)
loading group "sparse"... done (took 11.459021497 seconds)
loading group "collection"... done (took 16.69712191 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.491008736 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123861908 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126684492 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11500314 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.141726189 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116882923 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122112306 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083442287 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.915180884 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.141962712 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.111698297 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.436269738 seconds)
done (took 5.262877507 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.164533668 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086444285 seconds)
    (2/2) benchmarking "String"...
    done (took 0.076734934 seconds)
  done (took 1.286642843 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.062025435 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125389603 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.062699328 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06399293 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.064398373 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064487991 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064650214 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064390376 seconds)
  done (took 1.633416345 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.06934849 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.064866235 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063271188 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066307008 seconds)
  done (took 1.389462535 seconds)
done (took 5.672560578 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.234438539 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.099399826 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.284522697 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.392497913 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.45245761 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.090072132 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.07222074 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.06722785 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.124795464 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319986849 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108249423 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.183614523 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.08968366 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.172768481 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.968536776 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.116629088 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082335955 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.120049372 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089027288 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128519048 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.412010197 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.077264568 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071684525 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.066672454 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.064439782 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.648412569 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.664135684 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129118454 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080729986 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.099685584 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.113087407 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.6454783 seconds)
  done (took 10.430906596 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.091234728 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.089760009 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065488419 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121565408 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.090098957 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.066133252 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071770476 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.064844809 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088055231 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.121416949 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086811272 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.097539658 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.062432978 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.066071137 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.073503136 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197553523 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078966787 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079449404 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066511787 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078849013 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104622379 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077301867 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077985334 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078155877 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128189965 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169312779 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095946135 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.094275688 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065675979 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079703275 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11367326 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12586097 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.062548474 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062782461 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117166916 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.091110214 seconds)
  done (took 4.47778551 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.950526068 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.0896922 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.105224115 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.621821237 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064119676 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.15479711 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246661398 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071779834 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.39041888 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.144425282 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.140954331 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.147463434 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.113925727 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069251574 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.253564508 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.114975259 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.409418694 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.06758951 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066208817 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06359054 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.066274912 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065085115 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.060990422 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067982246 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.089031546 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.085373929 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.173267634 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.966197855 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.261828415 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067547383 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166712167 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.083488139 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.374175453 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.071311968 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.085493651 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.406319783 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.124744253 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065826588 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17281306 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.115797906 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067874682 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.117705016 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080461056 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.070596828 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.069225804 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069178699 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072608678 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.083260789 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.103230024 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068437967 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065791953 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166680161 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065205738 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067588943 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.068345208 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150128275 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065108789 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.087568242 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.14913026 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064404498 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068613641 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.09717635 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068411372 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.094362548 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.110711305 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.335553264 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.027833293 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066076887 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.047937913 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077835778 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.067406389 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.073354366 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066847762 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.068745842 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068133587 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.077986367 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070127695 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066451097 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107631094 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065071955 seconds)
    (80/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067993275 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062539171 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064972152 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.071012379 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.097337554 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066784804 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.463795382 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097532278 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067685619 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.078558499 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.104592953 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065623132 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.072846016 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066469085 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.171298428 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064857669 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066731451 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070134085 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.091976807 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063012995 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068585393 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111665353 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.02312897 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067703768 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065566173 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071119727 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063093834 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069999687 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.06803313 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064977899 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070231671 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069131326 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065824408 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.11732325 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065601492 seconds)
  done (took 21.742352379 seconds)
done (took 38.725167536 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.255062892 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083651117 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083392335 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083321178 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083980257 seconds)
  done (took 1.815045924 seconds)
done (took 3.022317997 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.107665501 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.063244927 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.100548688 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.099372922 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.065599965 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.062396948 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.097940117 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.062921969 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.096781754 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.099516778 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.101249799 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.101544878 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.063071493 seconds)
  done (took 2.345406758 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068388514 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.08003294 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082849175 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061610531 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071280486 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080487403 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062057133 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079732255 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.087627808 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080154197 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079962362 seconds)
  done (took 2.036967687 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068420664 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080666283 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.085870568 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.06158617 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.075120266 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.082721377 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061502783 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080362961 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085078853 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080863193 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.0810198 seconds)
  done (took 2.038935645 seconds)
done (took 7.615437723 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.068862818 seconds)
  done (took 1.255042854 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.543129844 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.565322115 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.065604255 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.085375496 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181438356 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.096427212 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.223378478 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.070396713 seconds)
  done (took 8.196542885 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090526836 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069029339 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.065989638 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.065630265 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06707011 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.064741145 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.066046959 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065999409 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.066026712 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066868028 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.065943701 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.067030183 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.066480205 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065824863 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.06697142 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066921369 seconds)
  done (took 2.382610932 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092317298 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091939706 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070854011 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071961883 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069713026 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068740108 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071310212 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070951321 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067580778 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.069775804 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072414457 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070112669 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070051638 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061358526 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.071105454 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07280892 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067416299 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07111334 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071635025 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072650214 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071778827 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.059851742 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068365936 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.069298703 seconds)
  done (took 3.033234039 seconds)
done (took 16.062281797 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110657666 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074713359 seconds)
  done (took 1.389983517 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.067962563 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.06868184 seconds)
  done (took 1.356137106 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.074396895 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057807785 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083446809 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070876887 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059655062 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059180598 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.079218627 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.057826969 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.057850878 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058378983 seconds)
  done (took 1.876976979 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060319984 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.069229072 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066816282 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.067192842 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.065608592 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.059867632 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063014657 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.059843555 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068033609 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.058964934 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.0642956 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.078609385 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063108914 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08075453 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063116803 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064220773 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.06678001 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063223644 seconds)
  done (took 2.4058685 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.058250014 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.059198626 seconds)
  done (took 1.339203605 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063656615 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06046081 seconds)
    (3/7) benchmarking "month"...
    done (took 0.062980644 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063162416 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059366128 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058611652 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.05928341 seconds)
  done (took 1.645921064 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.345467222 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116822644 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.310184894 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066548599 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076976206 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.239548706 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.059446836 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065509241 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.064464559 seconds)
  done (took 2.605541436 seconds)
done (took 13.846975705 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.076163876 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.079627879 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.084773997 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.417465425 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090016619 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064346227 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.110314376 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.16556806 seconds)
done (took 2.320383903 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.221762784 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.449343634 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.955224457 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.063840907 seconds)
  done (took 3.695475238 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.318140125 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081040022 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074851338 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064555747 seconds)
  done (took 1.777301287 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.061003639 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068824746 seconds)
  done (took 1.363538736 seconds)
done (took 8.292967042 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060823243 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061126158 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.061361242 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.061457714 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.061229917 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061702317 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.086220593 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06072531 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061086248 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060772778 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.061164797 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.061364139 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061090158 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061460005 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061205577 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061269999 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.061253123 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060787695 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060998473 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061036286 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061076624 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061125871 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061312344 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060894778 seconds)
  done (took 2.753161655 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.078260259 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064088498 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065968716 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065270671 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.065318386 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065335413 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.065694221 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063556161 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065360045 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063371997 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065074416 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065250411 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.063572741 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065260988 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063281736 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065573786 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.065375882 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063682774 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063624963 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.065678852 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064779866 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063395828 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065417867 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064794723 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06516761 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065351157 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.063470691 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.0635025 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064994745 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06532911 seconds)
  done (took 3.198678632 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.061189503 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057244332 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059110886 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066913778 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058130911 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058735844 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.059646781 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057508914 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058085783 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.059683454 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058816763 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.058126533 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.059425912 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057844931 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057912984 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058734136 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061961502 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075543122 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.05836859 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057983293 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061961036 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057985955 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057793852 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.058001279 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.059067229 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057800515 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057519189 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058392554 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057657789 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058454491 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057508603 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061112529 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062653821 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.058081018 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066602105 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061927919 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057894082 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061467915 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059488295 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.05763545 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057480876 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057901668 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057235794 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058166368 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06720226 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.058144712 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.059820582 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058469242 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057946817 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057403886 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057668374 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.06045324 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062685687 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059654875 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057444713 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059283177 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057336077 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058661388 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057694916 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.05746115 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.05736548 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060664387 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059687398 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058416693 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.075512499 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.05957228 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066593789 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057626583 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062205594 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06111159 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058595313 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073666337 seconds)
  done (took 5.564766524 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084399643 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08614841 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063675802 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062901565 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058968201 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059121206 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067066463 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058506342 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063053476 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078217071 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058941649 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062554463 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062840368 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062825458 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059216395 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063162124 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067382969 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.05906825 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058603586 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062296331 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058754889 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066490356 seconds)
  done (took 2.684234597 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.136951124 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06482917 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102329808 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07580695 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067630731 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075936182 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064398287 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064883592 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064674037 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064853613 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064833695 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06474039 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067501037 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064827752 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064861434 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065080538 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064646962 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064976683 seconds)
  done (took 2.554164611 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074272372 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064267548 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086282549 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063795508 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063835088 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063795948 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068355559 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069713684 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06301372 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063416038 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.069184341 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063846161 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063302925 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063401374 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063445121 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063335318 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.063669126 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063928634 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068895032 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067962485 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068782847 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068959128 seconds)
  done (took 2.722374103 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072310459 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06181365 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074860602 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063984613 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.05724396 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057689039 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.062732646 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.061845738 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.062611526 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061041347 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061902339 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057757641 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064783899 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063071341 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064893229 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062947977 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0627928 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06270771 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06282405 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058943049 seconds)
  done (took 2.51075877 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082868937 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061346049 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061811576 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0803179 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061939537 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061573111 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079767597 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061763453 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061434071 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083647235 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061560121 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062112187 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080225592 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080176974 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061967775 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079908878 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080412264 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079884531 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061617875 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061584194 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083561553 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061374542 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080278008 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061984801 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061889271 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061868098 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061456522 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079858744 seconds)
  done (took 3.210977474 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060686245 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070293015 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.061573083 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.061641472 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.061095442 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06112838 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061135929 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061388644 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061243305 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062799664 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060822453 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.061536975 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061444308 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060719804 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061035304 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06096098 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06152808 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06126111 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061541563 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061646406 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.061000046 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061016117 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060950414 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061623316 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061499885 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060759224 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061371195 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061152303 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061182366 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061118614 seconds)
  done (took 3.106145181 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.071002152 seconds)
    (2/2) benchmarking "in"...
    done (took 0.068827045 seconds)
  done (took 1.400340753 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059754519 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074267283 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057246205 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067298227 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068222163 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061875696 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068331925 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066952221 seconds)
  done (took 1.77737474 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.065368353 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.086910488 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059876469 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060127215 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.06299831 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116648341 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.074325837 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.069384438 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074735554 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061178245 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.060966501 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.072394414 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059575065 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070689252 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062219993 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067958537 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066910964 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071097771 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070941696 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058535823 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073127166 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063157229 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059028712 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061509973 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060085768 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065935966 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073753086 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070433424 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067431341 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057933153 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.081085378 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058870501 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059993325 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067336192 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.064018971 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058869496 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094745828 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059464145 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065153308 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059032638 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070346674 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080837075 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071782559 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.076928305 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060513485 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.060802499 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058817212 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061595957 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061463054 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067542219 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059164076 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064861598 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058218106 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.061341852 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068256032 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.05933457 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064611289 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.065956577 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071838737 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067504713 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065169545 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071395719 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.065708092 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067963437 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059704197 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076226454 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.059888739 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.06832557 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070619738 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060175605 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071360646 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057714382 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057500402 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.05861723 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08988162 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060622048 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060560358 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058736593 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.059300893 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060160078 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067421644 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065397275 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064439018 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063447958 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075060921 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068409729 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058407013 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067988506 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.075650335 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061050672 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.059158075 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.074066823 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.061695206 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.0587473 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075788995 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066557399 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060897805 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.061034007 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061212701 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071325793 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060600918 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057365162 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065296366 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.061092799 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.062178058 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.06409506 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065093582 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058640536 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067685493 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064539342 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060701706 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057307914 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06181959 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059501102 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056851689 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066628105 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058451678 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072404816 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062981834 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.07083195 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072462661 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.067091498 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074394718 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058676514 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.186615632 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.077455778 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06688073 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061486003 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078723937 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.05958955 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06929409 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059092511 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061922177 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067743519 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058878077 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06149756 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060258412 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.066738877 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061385163 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062012078 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.062177144 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067064934 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070789467 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.061078545 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06691869 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.060278657 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073649224 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068004225 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063419525 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063953274 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.060140451 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070332249 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06503072 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068293277 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058524732 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.060250976 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059112018 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069411839 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067431283 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062102753 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069981601 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063222101 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059895476 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059819991 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060824317 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061654213 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063013755 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060580217 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066851239 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068354836 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.072921419 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070993564 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066327068 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.058903303 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058667025 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.061031829 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058597237 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.063071486 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067994249 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07274246 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069651855 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077904364 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059405419 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067246735 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060758513 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074828301 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069771406 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059373475 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064736195 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.056873865 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059813438 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066125702 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068290659 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.072208457 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070871086 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.061995752 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.060967648 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057130431 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070540144 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058077738 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064895323 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.066934945 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.0636019 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.058363482 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.059736383 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.065736278 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062066639 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.05907973 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.073513971 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.067010634 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058540104 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071032781 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.059269654 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.068912069 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.05837632 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060953982 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062415001 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061296703 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067535586 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076170617 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057337946 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.060361267 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076168397 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060802314 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060705135 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065270758 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.073241409 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06342903 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06527716 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068204869 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067176797 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062535572 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066597372 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059782761 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.06820402 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.062894066 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068769759 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.05825672 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074763369 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056277319 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.069990864 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.057784666 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.066874291 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.057888112 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065612151 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.057976503 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.072073265 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.058781062 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.057324777 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.06767767 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.054696113 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065387867 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.18809545 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062490106 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064234642 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.068034519 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060407035 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06671053 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.060721021 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065908916 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.061589539 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065688279 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.06750711 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062905036 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059343002 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068076517 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069579091 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066309611 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061662854 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061329792 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060059524 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069427023 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061370354 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059716674 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066721169 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062567105 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.062639036 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060610083 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060868281 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060502781 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067506627 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065949316 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074154302 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064683501 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064000182 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067347456 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.057662478 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07462439 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.057984102 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064066947 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059319659 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.06796115 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069329397 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059480593 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077367489 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.061174841 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065970198 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071750158 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065810968 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061357459 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076392443 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063338554 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066844593 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065445835 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062602597 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064460009 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061369842 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066599433 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069108015 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068803522 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.060405625 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06509361 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066959563 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061042427 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.069732542 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061439212 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066864301 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.061484084 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057919684 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.063871496 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069426315 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062927092 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063429335 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059142077 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057670535 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.059255319 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.068410944 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063313934 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065353244 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071932937 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057567867 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059422553 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.057963415 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064209084 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075956439 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067722527 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065982852 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063584531 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.058327103 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.061169374 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.061223031 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.059485877 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063581002 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.05824475 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058570295 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068443664 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061080915 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.061964751 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059176628 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06032806 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067381701 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.06526469 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.059557444 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064359469 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.059100758 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062776758 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.058151004 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060696677 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062409917 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057948012 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061031831 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.06778171 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.073803253 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.063742226 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066011328 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061357123 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065474746 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073385813 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.068019085 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060710261 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06666525 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.056983683 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076100661 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.064937205 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063833153 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065616083 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059654735 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07213828 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.060080624 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.064626869 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072856709 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057594629 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.064599279 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.055819321 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072974139 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.060009294 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.056109167 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.063287913 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062697949 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.062591534 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.06893732 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.05883114 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06505537 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063884004 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.060523934 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.059580559 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.059686947 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065220712 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.072197441 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.058739508 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.063643437 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.064380004 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065376897 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.061698699 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069555869 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.064785548 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059174027 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06004855 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.060192257 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.05870712 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.068512366 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058052258 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062301543 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.061336541 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.057538456 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.063122906 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071808059 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067381805 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06600397 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.057239364 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.057769575 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.075392685 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060215528 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.062152102 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.064539669 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065936607 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068615842 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.066829384 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07344308 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059298107 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.062445195 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0675304 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.057976532 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.05638038 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.059794495 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.058319998 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06400688 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.063701467 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.061695571 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059573888 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.061716408 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06667224 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.057272622 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.059536895 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.062015701 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.056090077 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.064809678 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.062583382 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.062649199 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.057417086 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.054917836 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.058438699 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.064579734 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.061691111 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06502452 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.05661928 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.063591141 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.067419759 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.062255406 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060521325 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.055197419 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.0603954 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064245361 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.061151999 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.055849441 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.059874173 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.058331368 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063831986 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.064775829 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.060267149 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.055571688 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07058739 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.062419229 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.063149265 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.05770193 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.057479152 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.056519761 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.055485875 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.06513705 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.055879494 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.05740865 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.060040594 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.057405126 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.07111142 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.062373681 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072787154 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.056748453 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.059629584 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.056383443 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06390632 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.059401561 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.055837509 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.064886013 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.055864907 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072652791 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.066486221 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.065050192 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.055692679 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.060010207 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.063270841 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.069927445 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06431817 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.064872977 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.059523276 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.064309837 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.057845419 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.065137746 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.055385737 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.054566518 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.065202257 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063185518 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.311154174 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059573701 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.06893984 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.062266669 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066498089 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066381442 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.061347169 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062928584 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.063847596 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070991088 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066111219 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070931494 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065845686 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07881187 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.062704388 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072100748 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069389419 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.071868383 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074376051 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073364026 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068609378 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061692068 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067484395 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068226633 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062099716 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064473876 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.065336476 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.084363621 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063012886 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.062951995 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073736654 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.070157765 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.061084098 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069996769 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064537868 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.070180046 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061739035 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.06995255 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.066308412 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061796317 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063287006 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06406116 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058627998 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059230152 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059898037 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068693711 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063775291 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.059850813 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07709808 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061137419 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067204483 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070349868 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06523437 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062405921 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058621284 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062108959 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070448892 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073488329 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062548491 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0667776 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06214231 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068871853 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.058526593 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067217615 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066665708 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066624965 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058971966 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059798063 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073081758 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073149152 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062959795 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068746706 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06778384 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06196621 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.083190169 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067278248 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061070311 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.069128818 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062931316 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.058952616 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058659131 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.063684321 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070479411 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059240528 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062781658 seconds)
  done (took 40.175058576 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099547305 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060127663 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.05884643 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058814885 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070471717 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059452318 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0588519 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059369398 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059667425 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061897424 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058180023 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058233489 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070522451 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074097796 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069912714 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06308164 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058282275 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.05971323 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.05825783 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059402812 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069609122 seconds)
  done (took 2.767727668 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068202925 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.074775434 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071313461 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075849135 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067368721 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063516494 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07056204 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064157862 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071935857 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06930225 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071874659 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063702859 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069282548 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069112049 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069262124 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064300405 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071689246 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067239369 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.063870403 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07127488 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063941333 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07065516 seconds)
  done (took 2.887261011 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.061589262 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.058990954 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065751511 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.05804836 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057891084 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06241953 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058091026 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.062198768 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.062947141 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.062939725 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067026724 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.060448697 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059258585 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.06458764 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059562035 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060915249 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.1050734 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061239108 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061486761 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.060025115 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.066237485 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070412216 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059435218 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059786816 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.062645494 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064023836 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059076297 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061543205 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059073977 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06176817 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059351851 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057750159 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065966155 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06759453 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063484196 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063054377 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061607963 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060842157 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059517206 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059524958 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067590704 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060967992 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.059675248 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061825386 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068682775 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060105668 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059115707 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067207408 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059196977 seconds)
  done (took 4.455254469 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074039425 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11028546 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066080308 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089903172 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.074775374 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067893007 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065104709 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09148972 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061426088 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062521941 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.076535691 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.076362844 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064017307 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.0656796 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.06762997 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063968759 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064601627 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063127588 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06729018 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063350498 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067177676 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.065592088 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.073253561 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073744587 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06319564 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06102781 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061559005 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063969776 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073166065 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066458276 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064007436 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064610365 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.073433648 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065828088 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061883011 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061507426 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074015851 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06260977 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062119488 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061454806 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062837359 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.065377537 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067483584 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.076279446 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063721328 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067702415 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064065432 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06135017 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.075314211 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.063519179 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.068538481 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074899915 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063317818 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06268595 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063715752 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.073162341 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062244639 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06045288 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06234823 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.072886751 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.059888452 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063021427 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.073629956 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061215589 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066173869 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.073817066 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.065664965 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063543297 seconds)
  done (took 6.136403339 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070605073 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.088993779 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071189115 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070877163 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069433947 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.069235252 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069152116 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069608052 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069440881 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070330149 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069309558 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108516555 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.064847641 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075058841 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069205476 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069119784 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069207582 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069519605 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069374221 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069226276 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069568433 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070060715 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069377167 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071205344 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073989059 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066285869 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070996533 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070790062 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072061997 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070637796 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.074930993 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070958074 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071076586 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071747127 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.074848056 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071209816 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060266384 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070689948 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070908425 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071151398 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066644688 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072125582 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070779045 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066962036 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071564069 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070391137 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072007903 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.075361285 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080475774 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07223948 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07135946 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072052409 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070937506 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071294845 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072155425 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.080568459 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072300115 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071890421 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071103564 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072051563 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072274223 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.080778814 seconds)
  done (took 5.875185334 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077227786 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068754726 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081744629 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062455741 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059580452 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070192977 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059761025 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.059311658 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068406781 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.068806436 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070870059 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070242865 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072953614 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070526786 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069925182 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072805914 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069930394 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070163252 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068426547 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069977518 seconds)
  done (took 2.793628981 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07226013 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.077344709 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065597956 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07031818 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065899137 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069857735 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.064413992 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065875489 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066009068 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065772591 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07164651 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07213358 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066027319 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069989123 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071844046 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070315314 seconds)
  done (took 2.506845309 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.066772156 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.06752252 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.067205774 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060565993 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063302658 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058658288 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060320684 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058482259 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059896314 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.074276435 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060960901 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072295835 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061348711 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.059695312 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060157732 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.066609327 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059906046 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060962251 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060703936 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.066444387 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067721342 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062180271 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064632641 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.061230145 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066127156 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068024961 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06278609 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064336988 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061246754 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.061778671 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066823695 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067567028 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060668889 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061674698 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059658094 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060667189 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061424239 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061040702 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066205326 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061111788 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058942314 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065713562 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.061564914 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.062152561 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058495141 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060079047 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.058459857 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064733151 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.059678183 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064430747 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.059813489 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.061609896 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.05993578 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.066936097 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063245313 seconds)
  done (took 4.862152082 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074595893 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063239773 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058960164 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057822722 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063548944 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.063646143 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06327603 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063233554 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063824273 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057870813 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06382779 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063165967 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064282684 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0633011 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063979495 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064206401 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057719802 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063846672 seconds)
  done (took 2.550300175 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069209064 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06334024 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.06800528 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062665828 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062848795 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062301424 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058283256 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058359981 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058339356 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062836534 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062696223 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062468366 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059733178 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064145715 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063943167 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064096412 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.062479667 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058793395 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06446936 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059656748 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063578923 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059924052 seconds)
  done (took 2.777630362 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.085232434 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080925679 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.119140855 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07701742 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08524509 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.069480065 seconds)
  done (took 1.92533964 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087222497 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101701 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063064012 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063533508 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074176577 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066463714 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06659703 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066365827 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074156223 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072479017 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06716897 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073763326 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075429979 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070856205 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074484997 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076847525 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066936932 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066466041 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063281875 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076833792 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066655489 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074049033 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066880114 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066225885 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066721678 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069010419 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095739344 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072063804 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068767949 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074043876 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077429922 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068671836 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076152415 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072904917 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063450286 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07581315 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068324192 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079603823 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07611395 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070795987 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064663338 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075965614 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075722389 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069810507 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077668405 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066715675 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069310511 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068406563 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068541211 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082592897 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075987705 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070958366 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076164012 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079832224 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079630985 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082494201 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072918574 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069671354 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074796153 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072646281 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069224264 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074027215 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069085813 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072281635 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077155001 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069095022 seconds)
  done (took 6.213765492 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096012557 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06369944 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067688603 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073589673 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068993096 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066432079 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067206969 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067259774 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066808766 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06393116 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103195172 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068854095 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070959296 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071033721 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068639009 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068782514 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06901361 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070934519 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065050379 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080811061 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06655579 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069006873 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069122899 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069870197 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073106435 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078061812 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067867547 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067330653 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067038531 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06645158 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068683031 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066822133 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068858479 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063155842 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068844159 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066464281 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066249557 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068760296 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066231566 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073681701 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0687747 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076942253 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067635542 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06833842 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07400235 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068088616 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068534945 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065230889 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068125766 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064931687 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074161368 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074034967 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073085603 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069245571 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067444591 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067044548 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068141868 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068110999 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067386787 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078536559 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06900791 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066678519 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080474692 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06642993 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066874554 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068901271 seconds)
  done (took 6.057343342 seconds)
done (took 124.698430987 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206309874 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.180579765 seconds)
  done (took 1.780282555 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070871369 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09323071 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.071513218 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129523925 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06720224 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101297163 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100269158 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.071555629 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066779386 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067088253 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067293764 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070584561 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131919377 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066834825 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067090613 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069521708 seconds)
  done (took 2.726711868 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100187301 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.178043331 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105317908 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06492142 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100198096 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072399857 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065959914 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077404648 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070415623 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070128793 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074785303 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072482779 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068071225 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070684658 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069175622 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074179748 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069045036 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074532003 seconds)
  done (took 2.894783561 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.089820973 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.082461885 seconds)
  done (took 1.592766115 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15664362 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.102590877 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.141479521 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.32303227 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.135390663 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.279588157 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130291374 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.12889702 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113294758 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124019529 seconds)
  done (took 3.049953732 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098147899 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.162381327 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.29648997 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117356593 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073487681 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.085891594 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117687255 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077990792 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078566431 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078289092 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07813972 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07830795 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096488151 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07374253 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072086061 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.072521993 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.096245189 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071425909 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.071508823 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072126045 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095711939 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065531429 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072661942 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07218974 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075290561 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076177134 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068863557 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067031257 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073916952 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073042759 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076941668 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.082615393 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076086999 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102630005 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071127262 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.103308062 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072000446 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070659524 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.0712761 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.069747997 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.073375764 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.073369329 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073750623 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.072832604 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066831229 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.071117946 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066840837 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065626673 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.075665506 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067628122 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07560558 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.074868049 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.099986287 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066917223 seconds)
  done (took 5.97446883 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.1077048 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106517119 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070818466 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112312566 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105017912 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069549639 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104353757 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097077349 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106362408 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068618965 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066517119 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068617449 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078660961 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078403699 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116498722 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10840967 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071952661 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068864966 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106525233 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10597425 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066517555 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10086447 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095243373 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104864276 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.065348561 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068515712 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065646639 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068114026 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072373119 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.074672596 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066912199 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077511002 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081139922 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074145782 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064811765 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065854155 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066149163 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077753999 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077676303 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075688281 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073393195 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065066406 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065927215 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067579957 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067806163 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065013349 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074439357 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.076592026 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.074548344 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066570555 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068150549 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066035874 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067755326 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076153942 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073771498 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.0773134 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076252157 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066328808 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066389154 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072187825 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076540603 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075922954 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076147323 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068764857 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075232997 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066603487 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076056635 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080065139 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066776471 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068123992 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066326945 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067041328 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068293119 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073559905 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.073250498 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068506192 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066634349 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066385969 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075810787 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074803027 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066449947 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072706206 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065388796 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066824156 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0703269 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068935683 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07301235 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076653727 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068388524 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066897641 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067004571 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066805252 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065360815 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.072784097 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077047303 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076333159 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.074540323 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067900296 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075739961 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074636402 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068320655 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076051803 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066119378 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06799922 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067482209 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074691869 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072789076 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.206595634 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06804079 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067303942 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074973516 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077808361 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066849331 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074985219 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077117226 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07568429 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066157887 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080144247 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066913567 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075640709 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067522013 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076529778 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067352823 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076243354 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066995643 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065948305 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066752123 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075899563 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06875521 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066931135 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067953727 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067432143 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075871358 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078135947 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069316825 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075289844 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074450761 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069022249 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074360533 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066693293 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074581329 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067602237 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068625342 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065799422 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077678488 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067198925 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066740339 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067439591 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076257077 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06714317 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076044439 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073881887 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065909071 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077377664 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076326391 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073275945 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075804498 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068437325 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066751804 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066189609 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067453805 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073559388 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075084558 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068762282 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066128988 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073348896 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.074908377 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065256174 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073950644 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073843998 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074067687 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066784711 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066800634 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076475765 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076340754 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074812652 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073912737 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074278373 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066563726 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073576271 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074125634 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06637778 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080441311 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065935933 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079616794 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074747765 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07328022 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074387717 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076005211 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075685103 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076225729 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079113381 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065400076 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065880533 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076900054 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067298321 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066842385 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074478163 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068137632 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068231027 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079044078 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066959145 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075446527 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065367756 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075498999 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065105852 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068336759 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080170228 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06642129 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068004367 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07577872 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066743698 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073722501 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075798279 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07381159 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065918505 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067598573 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208945361 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075150874 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067235606 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066844813 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069351919 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.074919077 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07377719 seconds)
  done (took 18.170868909 seconds)
done (took 37.62000804 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.204762267 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154027061 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.186383632 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.112198781 seconds)
  done (took 2.17396724 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.097115822 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.094599391 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.076124061 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.061444464 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.082536418 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.060995478 seconds)
  done (took 1.934558765 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280266237 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.197340687 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174434542 seconds)
  done (took 2.108836274 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212592392 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.192257197 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.454416135 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284944004 seconds)
  done (took 2.70142643 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.131725758 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.080619961 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.060488474 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.071422241 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.112292033 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.145779342 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.088829753 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.113736614 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.072114471 seconds)
  done (took 2.393712294 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.13251076 seconds)
done (took 12.898082006 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.435620453 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.260980792 seconds)
    (3/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.166520902 seconds)
    (4/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.09577879 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068157431 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.144460901 seconds)
    (7/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070889206 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.064223553 seconds)
    (9/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072502732 seconds)
    (10/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.17536998 seconds)
    (11/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.098476183 seconds)
    (12/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.085052466 seconds)
    (13/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076252782 seconds)
    (14/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.229539189 seconds)
    (15/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.186156401 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07436281 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.131080839 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.112851621 seconds)
    (19/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071199633 seconds)
    (20/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.071139193 seconds)
    (21/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072580782 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071082713 seconds)
    (23/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.069229066 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.081392972 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.225174496 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070228231 seconds)
    (27/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.202640174 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.083968822 seconds)
    (29/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.230143454 seconds)
    (30/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.063366355 seconds)
    (31/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.134568957 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068903249 seconds)
    (33/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.169126528 seconds)
    (34/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.18981788 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.196998254 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.0867484 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088273903 seconds)
    (38/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06415923 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.064079747 seconds)
    (40/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07233873 seconds)
    (41/309) benchmarking ("sort", BigInt, false)...
    done (took 0.241855536 seconds)
    (42/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06914237 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071379616 seconds)
    (44/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.160925315 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.062508808 seconds)
    (46/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065134658 seconds)
    (47/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073731639 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08992641 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068634211 seconds)
    (50/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.069916539 seconds)
    (51/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.137732588 seconds)
    (52/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.064194115 seconds)
    (53/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.075101286 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 0.151881264 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.171723736 seconds)
    (56/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089718961 seconds)
    (57/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.238839455 seconds)
    (58/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.14547947 seconds)
    (59/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.201799533 seconds)
    (60/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079118452 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 0.064178388 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075175796 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076997372 seconds)
    (64/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.175309297 seconds)
    (65/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.174561971 seconds)
    (66/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.194409253 seconds)
    (67/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074546289 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07145343 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063105738 seconds)
    (70/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.13492396 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.162545519 seconds)
    (72/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072014621 seconds)
    (73/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.159255813 seconds)
    (74/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.186457237 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121514865 seconds)
    (76/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074997667 seconds)
    (77/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076373032 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06162789 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.061614076 seconds)
    (80/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067142512 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.108571805 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.077476218 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.077772852 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06168498 seconds)
    (85/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.171870435 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.062072502 seconds)
    (87/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.158497941 seconds)
    (88/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.212359408 seconds)
    (89/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.192600598 seconds)
    (90/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.073415544 seconds)
    (91/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.19957353 seconds)
    (92/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.16378794 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.175746885 seconds)
    (94/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.092270787 seconds)
    (95/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066925862 seconds)
    (96/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.064200115 seconds)
    (97/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.190593087 seconds)
    (98/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.215751988 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.153931478 seconds)
    (100/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116621861 seconds)
    (101/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071452242 seconds)
    (102/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.135439759 seconds)
    (103/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.06338519 seconds)
    (104/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.156554869 seconds)
    (105/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.076495453 seconds)
    (106/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070165425 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143443132 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.077840992 seconds)
    (109/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062265951 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.062052796 seconds)
    (111/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.061192696 seconds)
    (112/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070035878 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.068487355 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.117892661 seconds)
    (115/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070439758 seconds)
    (116/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085873187 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133567905 seconds)
    (118/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06342561 seconds)
    (119/309) benchmarking ("sort", Float64, false)...
    done (took 0.127807494 seconds)
    (120/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068899597 seconds)
    (121/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.070038448 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.061367084 seconds)
    (123/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071490487 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088326336 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.190072864 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072936711 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.086272313 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070535827 seconds)
    (129/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.061225106 seconds)
    (130/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.152157147 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.132969059 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.126805959 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.062225663 seconds)
    (134/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.074832206 seconds)
    (135/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066322636 seconds)
    (136/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.062677401 seconds)
    (137/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070337478 seconds)
    (138/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07411449 seconds)
    (139/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.133449122 seconds)
    (140/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.062387699 seconds)
    (141/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.06093062 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.083907067 seconds)
    (143/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070506677 seconds)
    (144/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.133109115 seconds)
    (145/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.062775226 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.060645312 seconds)
    (147/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069912449 seconds)
    (148/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.063274424 seconds)
    (149/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.066363152 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071073854 seconds)
    (151/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068651799 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089004321 seconds)
    (153/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.061199419 seconds)
    (154/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07066476 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11328418 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133213359 seconds)
    (157/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07240768 seconds)
    (158/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.062219915 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.139233726 seconds)
    (160/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.062095306 seconds)
    (161/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070739658 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.060102461 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08085281 seconds)
    (164/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.064185535 seconds)
    (165/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.068549171 seconds)
    (166/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.061072216 seconds)
    (167/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.134406994 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.061821026 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.081863032 seconds)
    (170/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.0605694 seconds)
    (171/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.130073689 seconds)
    (172/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.072841761 seconds)
    (173/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.059140217 seconds)
    (174/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.066421331 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.082037039 seconds)
    (176/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.062526192 seconds)
    (177/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.059078186 seconds)
    (178/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069203757 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.062576647 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.0596574 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11146037 seconds)
    (182/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.063273614 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067237289 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136564344 seconds)
    (185/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.078918087 seconds)
    (186/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.132180498 seconds)
    (187/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.074026956 seconds)
    (188/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068905903 seconds)
    (189/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.061571881 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.08944079 seconds)
    (191/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.418392541 seconds)
    (192/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084125845 seconds)
    (193/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064969569 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093298849 seconds)
    (195/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.067075932 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094437774 seconds)
    (197/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094306897 seconds)
    (198/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.064999149 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069349275 seconds)
    (200/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.066591359 seconds)
    (201/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065003745 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178511173 seconds)
    (203/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068807879 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.125282255 seconds)
    (205/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066487865 seconds)
    (206/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.065880084 seconds)
    (207/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065234691 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.063828597 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06415661 seconds)
    (210/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073081014 seconds)
    (211/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066107725 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072098073 seconds)
    (213/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.159980731 seconds)
    (214/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065293917 seconds)
    (215/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.064429201 seconds)
    (216/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.064926362 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.082273422 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063617744 seconds)
    (219/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.063290482 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071315556 seconds)
    (221/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.169234821 seconds)
    (222/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.062802842 seconds)
    (223/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.062644802 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075641264 seconds)
    (225/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.063151303 seconds)
    (226/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.063504524 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074811085 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112157117 seconds)
    (229/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093116463 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138805662 seconds)
    (231/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.208095212 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065211974 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065432531 seconds)
    (234/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.064372037 seconds)
    (235/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.06500959 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126676693 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117227336 seconds)
    (238/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.061359966 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.068557577 seconds)
    (240/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.062898928 seconds)
    (241/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.075863606 seconds)
    (242/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07154672 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.063124102 seconds)
    (244/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.0633471 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.061735841 seconds)
    (246/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.061357681 seconds)
    (247/309) benchmarking ("sort", Int8, false)...
    done (took 0.166609685 seconds)
    (248/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.151900969 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062240873 seconds)
    (250/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.066422805 seconds)
    (251/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.062707101 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.062940926 seconds)
    (253/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062444467 seconds)
    (254/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.073924367 seconds)
    (255/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.063134859 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132587097 seconds)
    (257/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064277862 seconds)
    (258/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.156410697 seconds)
    (259/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071094883 seconds)
    (260/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06277597 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.063472838 seconds)
    (262/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064754881 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063435492 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086844267 seconds)
    (265/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06317103 seconds)
    (266/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.063255134 seconds)
    (267/309) benchmarking ("sort", Float32, false)...
    done (took 0.133052963 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107389944 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.063457729 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089070772 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.063087 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125370446 seconds)
    (273/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064305645 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.064049512 seconds)
    (275/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.161600714 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070131083 seconds)
    (277/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.062970313 seconds)
    (278/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.064569514 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.063981392 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064143902 seconds)
    (281/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.062939797 seconds)
    (282/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.063972317 seconds)
    (283/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.064655403 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123424995 seconds)
    (285/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070425589 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086291105 seconds)
    (287/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.063533923 seconds)
    (288/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.065575562 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.062940999 seconds)
    (290/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071929066 seconds)
    (291/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170201305 seconds)
    (292/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.066165421 seconds)
    (293/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.06247694 seconds)
    (294/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.074468948 seconds)
    (295/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064878245 seconds)
    (296/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.062843911 seconds)
    (297/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.063254031 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074509441 seconds)
    (299/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.063835859 seconds)
    (300/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.064114918 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.131627926 seconds)
    (302/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165949762 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.070905903 seconds)
    (304/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.062944755 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.065830878 seconds)
    (306/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.062948891 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063338394 seconds)
    (308/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.062601584 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063354924 seconds)
  done (took 31.820282749 seconds)
done (took 33.290973952 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086161667 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089671252 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073404478 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.087291757 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082542617 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098670585 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074216682 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078940602 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08047042 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079722951 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080058996 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072061031 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07488635 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075477248 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07269667 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089545639 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079099323 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07377378 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072972022 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063825731 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07287513 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063762154 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06344219 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070790177 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.075252007 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070821876 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074239319 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07295644 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063720078 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063337788 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068112089 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072641382 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065763667 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076680202 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072771512 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071333326 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.071359084 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074871609 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.061539071 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062420879 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.071518921 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062048589 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.070346051 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.068406361 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.066424976 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.068155517 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.070568691 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.073981094 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084131395 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065262713 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072369965 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07343234 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.073546834 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.067684369 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.0672979 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.070663268 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067798872 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084217286 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.070101196 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065606449 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.071642233 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071520836 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069924404 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072902233 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072149094 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074343509 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076577069 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070254766 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074431618 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071021428 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062947039 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071948733 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067936155 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063569452 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074549009 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076257978 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06246124 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067825891 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072383249 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072050651 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06312182 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067326124 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062961478 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.068028538 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067792373 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070253146 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068159489 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070606214 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063080349 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072104394 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.0709769 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071421503 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062790249 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075776704 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061724967 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068785327 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062638846 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062141449 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062681535 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069110655 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063439223 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067463399 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071869411 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062305519 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067974378 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07714629 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063421598 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070940355 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062755722 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06294352 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07521745 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074188333 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063451724 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067862995 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.0628181 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.067823595 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062934368 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062650046 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062909826 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062718998 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067685422 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063120159 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067709748 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068420532 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076947513 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062830402 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068100395 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067830163 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062867655 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069996176 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063867813 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063028034 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062525361 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07807268 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067664723 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063156088 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067769749 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06769822 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072515703 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063115322 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.20837021 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067808609 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.06704221 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068040617 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061157502 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073227343 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06597823 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065697302 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.061451765 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062247339 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.061125169 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.061850812 seconds)
done (took 12.413209293 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065281465 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.104797546 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.071532991 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.078653068 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.074481345 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.062344337 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.066851425 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.080829798 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.0653775 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.081621587 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.082514318 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.082245734 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.089985704 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.061558249 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062362115 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.062914137 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.060932256 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.068439982 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.077638829 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.083004718 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.091954117 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.061999538 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.071233468 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.076817169 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.073253209 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.079186685 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.062985262 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.063059311 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.064597089 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.080588244 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08475015 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.061474476 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.062603995 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.077280861 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.076477894 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.071643053 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062364857 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.066714785 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.062611226 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.061802663 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.063520635 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.077161677 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.066372899 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.069464874 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.062972744 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06293626 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.062814451 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.066888467 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077226531 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067632424 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.070566808 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.077363579 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066561467 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063959631 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062456926 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.069238041 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06364397 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064489841 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.064190089 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.064153738 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063486425 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065794484 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064610072 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.064924967 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.067442481 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067888628 seconds)
  done (took 6.212322217 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083028602 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092140501 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081389805 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.080586577 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062776625 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.064293813 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063992175 seconds)
  done (took 2.153676773 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065407259 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077977986 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07982341 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079715859 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.072480909 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.082011414 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.064281849 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.094429451 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063671876 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.076695972 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.112249608 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082152241 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067329893 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076207532 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064314559 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.073143928 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.064449743 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07252376 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073643704 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08134569 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069282189 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090839186 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.076400149 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.064041169 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.086020936 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.070104318 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.064175316 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.064288675 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065619291 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065540514 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065914337 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104106068 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.069673507 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076460791 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06584509 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.06428106 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.071022464 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068066156 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.068110727 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073040188 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.070547233 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066563825 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064063672 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066305992 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067278236 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.06854978 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.063466483 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065738901 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.0656034 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.077367275 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.063321859 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.0689325 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067942464 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069539614 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070488016 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068970318 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070966217 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064593831 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.075303587 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.072406179 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065608037 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.074116552 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.07313589 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.070608707 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073672011 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.06869427 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.0695779 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.070526186 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065503677 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.066192621 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066299043 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.073289492 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.064168568 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.066910719 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067640817 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066597243 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068760599 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.081016945 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.081191517 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076926327 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066094597 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065531149 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068827265 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.080838947 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069726771 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065556784 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067794312 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063545126 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068831096 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065808932 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070082206 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06576489 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.072801114 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.067346174 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068118971 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073859596 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064324232 seconds)
  done (took 8.523606857 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068755853 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066526794 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06774302 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066245431 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065609681 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066459441 seconds)
  done (took 2.064902019 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090091878 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06685014 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080613332 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066397658 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101297477 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.073395076 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.073882895 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074924905 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.078830376 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078792937 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.073961977 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.076735468 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.072857531 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.067793624 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.07338667 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.067244648 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.07338668 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070214392 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077827035 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068301296 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080436453 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067733083 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067854497 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.07785665 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068518302 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.067267199 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064627176 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077513125 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077794123 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078049649 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.067448918 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.06852681 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073216158 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074678168 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.07387787 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073235285 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066004404 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071631952 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067715293 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068358049 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.075024373 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0664579 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.066863829 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.069876077 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073530523 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07333241 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071708576 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069906357 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.073010085 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071475218 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071610207 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066870633 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068300297 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071803747 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073222882 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074945212 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070084775 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.071029094 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.065383981 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071173288 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.064378231 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.066860521 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07226167 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.066734337 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.070145918 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.069528973 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071689258 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.066701099 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067378161 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065248879 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070037031 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.064348523 seconds)
  done (took 6.798112916 seconds)
done (took 27.360615642 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.978155021 seconds)
  done (took 2.585222674 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.578087962 seconds)
  done (took 2.225343901 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.725194157 seconds)
  done (took 8.361983177 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.296417146 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.340329501 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.719262804 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132826309 seconds)
  done (took 3.159365466 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.701898227 seconds)
  done (took 2.356765945 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233957657 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220304014 seconds)
  done (took 2.111873075 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.349536834 seconds)
  done (took 1.997689251 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.086431264 seconds)
  done (took 2.727225257 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.234251321 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157158581 seconds)
  done (took 2.041062854 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.452570759 seconds)
  done (took 2.09956667 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.266270606 seconds)
  done (took 5.917542609 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237385931 seconds)
  done (took 1.918527038 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233818726 seconds)
  done (took 1.890999208 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.74511018 seconds)
  done (took 3.391501764 seconds)
done (took 44.439102805 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082285596 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08185985 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081997761 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077577912 seconds)
  done (took 1.944833281 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.073883059 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.067827181 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.072472316 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072567036 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069763768 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07153744 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.071705077 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068081196 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.068327543 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.066259248 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.065359814 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.066213666 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.069250457 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.066687623 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.069410868 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.070475478 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.066643633 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.06626957 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.069122909 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.066156925 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.069633804 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068178709 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.06662186 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.067186424 seconds)
  done (took 3.296414068 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076581726 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070912168 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073372256 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069744433 seconds)
  done (took 1.952067963 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.074853007 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.084011266 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.085640299 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.090016293 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073013732 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.07371707 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.081658048 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081793843 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.061860835 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.08557346 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.064438374 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.063293523 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.063055927 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084182166 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.081661204 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061458052 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062502645 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074345005 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074735251 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.077371436 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065929052 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063937608 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075205962 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.075006655 seconds)
  done (took 3.439206658 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078817139 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.062203111 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077212517 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088617271 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090618302 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062633819 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.078803757 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09048644 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.137835098 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064155842 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069882029 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064001051 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.106636966 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063693456 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081180986 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110697188 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114169403 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06782271 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098286781 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064078253 seconds)
  done (took 3.344291817 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076302554 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066302169 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066978118 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.062143245 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.073060502 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.069654734 seconds)
  done (took 2.087231456 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066621974 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064467795 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.0640463 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063182265 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068844747 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.065238985 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064003828 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06615905 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065645117 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065487862 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064779983 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.063894443 seconds)
  done (took 2.443121668 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.163120898 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067257175 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067170207 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065282623 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.068678904 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.062947902 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.077726965 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064986215 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.081176347 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063015422 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.062944211 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.065263986 seconds)
  done (took 2.574610223 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102040293 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132275079 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097079062 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070225429 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169851082 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093153801 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.088007203 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.120489348 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091973327 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.066634294 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091708339 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133563361 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094122671 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.096842517 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080215625 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123308567 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108274915 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085898693 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112041364 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079769941 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.068019483 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132116381 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067607178 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091251788 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10032283 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.095287212 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107904816 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131712818 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0819428 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.087852305 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080308207 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.072004229 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102706131 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.082462887 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.095250375 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092478022 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095593646 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083252849 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.08347272 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117835856 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157971478 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099313078 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097837493 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131550322 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076114896 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.106461072 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078815415 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096973595 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101732558 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090577185 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073028642 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088989219 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.103774334 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100330484 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.079361709 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079194052 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11623996 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.096576214 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094033787 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078241196 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105125478 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.08570991 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248511943 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120280588 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140119769 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099755832 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13692832 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122053209 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095655018 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.087591142 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.090103231 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07359992 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110788405 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096408121 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135802682 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108694701 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098817917 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.093209112 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081233941 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106848872 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113565657 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094385413 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094055111 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146742123 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10824101 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094921755 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090152985 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.138866429 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069091882 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146382853 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086902285 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118457119 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09566837 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137461812 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092043077 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.083557529 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107390828 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106219822 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089814618 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103954107 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083669463 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113208454 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090018191 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099688352 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079372544 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088100272 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08459765 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.094511833 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.072776811 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102333885 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114341105 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112473566 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.072350453 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106475087 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083741162 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.074105673 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090565371 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138546945 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082041364 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072984539 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149403804 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.091273557 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.115304188 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255390791 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.083063962 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11641666 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137335994 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091388838 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089703811 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075505184 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154532192 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074522884 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116817243 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079667175 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100870587 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104767098 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138010978 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139420842 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095420823 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076821571 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09010154 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.10553256 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085310255 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083951367 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075115133 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.108088616 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126445483 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.098956684 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079353946 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.092001261 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.069351984 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115743585 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076612259 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085686582 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097006412 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.086172396 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.087601048 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141402145 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.082553623 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106881789 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095793733 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.064898386 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090817207 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16027509 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083288997 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.11245415 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119087867 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08322768 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.066175464 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.094498611 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.071076922 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107035117 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.091331611 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104512941 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075953819 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104920752 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.066433332 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072753934 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131643644 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09990793 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087664112 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.131911067 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10324652 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.087326765 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.103828916 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.240788422 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096862717 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101919895 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.106967712 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106886037 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.072058947 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128833916 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090159529 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.075491104 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086488806 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077298122 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.075750118 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099962707 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114137771 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088806854 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09983285 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102937356 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091321532 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.108156519 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089988902 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079530092 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133932633 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075852979 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.072850557 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087286897 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.104467155 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087627282 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.132945885 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.077995073 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136089504 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091392749 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079768383 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116271855 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068887995 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069941799 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.082928949 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092827516 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116389372 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079788959 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078794845 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120508365 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131879685 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096198336 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102289268 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.066577596 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088939607 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1351371 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.111090602 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079759507 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108758376 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082557621 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128664393 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095097468 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118070973 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104322316 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109041992 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089434643 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.078979313 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.071507115 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085732409 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109622945 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08406952 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080361268 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.065734991 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.072865723 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092103265 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089346325 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111675106 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086822445 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283439524 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072520242 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103444852 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107758754 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105807112 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09043385 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094231816 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.090663617 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090331365 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090174042 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090587272 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.072193211 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126259169 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102760787 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077355514 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087901423 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095281313 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106400912 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108609227 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109343701 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092557464 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106457912 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122142832 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097387393 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081362434 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082485863 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.093042827 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.083296687 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079642765 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.103098587 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111385549 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097039936 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107491883 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.093466818 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.089402494 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105985757 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091556144 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087101922 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.116784585 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152147757 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.1006873 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104540914 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084100455 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10646567 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104008564 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111178994 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.109818381 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107578691 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068632551 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.073676153 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.068405687 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105170554 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07752902 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117106779 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074648755 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105443619 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095999654 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078169994 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.064875536 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099828809 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09202274 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.080404133 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122485408 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.113774786 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073597135 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092079771 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108057064 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.232213025 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126182033 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.104658176 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104166085 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072161306 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091975452 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.072564159 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108655563 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101051811 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.076466054 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.074900111 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.068727761 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107071615 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083216047 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109278732 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089180706 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099392669 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119090644 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138703162 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085803868 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095759102 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118092073 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112626141 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.080587902 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111744932 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136469471 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.12052 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.081196109 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.083441833 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107798185 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108065111 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103722116 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07710466 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07938199 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111042002 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117141528 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.068000394 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08380787 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068782248 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.083137253 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111814625 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095178974 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082134403 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119602693 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075299457 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110074464 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096621197 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123797166 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121709651 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14523837 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095095263 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083312611 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074825916 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123222786 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.068909112 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11646335 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111950642 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086492259 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.066657891 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08199142 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.093923119 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.626274243 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107276946 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.073862501 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134597266 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085929465 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263920782 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084944887 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.119120479 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09308233 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103021591 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091411586 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133937758 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.081198102 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109637721 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.172298161 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11181665 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.106949233 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072592754 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.083726049 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.071994068 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.077344636 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08045809 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086107269 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108358281 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084374118 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105757708 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.078567317 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.106617473 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090357717 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087653017 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.098528433 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079107497 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139181543 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085892983 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121822525 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105467048 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076750486 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072889338 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.084729841 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100024221 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080413887 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09382915 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077245279 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.076001589 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154505011 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103526446 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085493136 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102107083 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.092203687 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.088931508 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092619337 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119964419 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110527623 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071790334 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.08596562 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102403639 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077344163 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072914051 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094839347 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.06818794 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087897367 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098758418 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095616518 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089464593 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.102269568 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076441613 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086930508 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109262018 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084202723 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075441819 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075310061 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074945455 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.074453346 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.252761593 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108159283 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115256924 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109367419 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090520285 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095587319 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.07787089 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.220041192 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078891302 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096148168 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.103787738 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074456366 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.130381932 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08831295 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08827032 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096596532 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100484403 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153834807 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073067985 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109548883 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092610508 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109892007 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085381696 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107162307 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095516214 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092882859 seconds)
  done (took 50.227438635 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.093815902 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.147659764 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.155125909 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078123647 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.092430345 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.116905984 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206340959 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189585427 seconds)
  done (took 2.855319716 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074952049 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.079786912 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102738697 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081620659 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065082131 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073549926 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.207323236 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080333804 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.064126981 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094008123 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07515945 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065921312 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.41533313 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.063979426 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.064814184 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074241152 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.063288811 seconds)
  done (took 3.504382893 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.368971879 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.607555958 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.345602487 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073933242 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.985111451 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08808185 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.205635859 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136491403 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076854588 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535829634 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369031821 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131743657 seconds)
  done (took 18.704348258 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074581948 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071883934 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.075950763 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.07548544 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070912145 seconds)
  done (took 2.135201691 seconds)
done (took 100.17069252 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080318169 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.163962899 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.064780073 seconds)
  done (took 2.031142592 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.082833252 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.079314894 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.079130866 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.07709875 seconds)
  done (took 2.096282323 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073505785 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.074329538 seconds)
  done (took 1.922329746 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.230516533 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16542477 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091822885 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08293571 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079250893 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079208321 seconds)
  done (took 2.020590001 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071253135 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.070490184 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.069959161 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070430308 seconds)
  done (took 2.052579235 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.066411311 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.064272954 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.0658251 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.068207157 seconds)
  done (took 2.035140232 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083471063 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082585015 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07700553 seconds)
  done (took 2.007792669 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.094859942 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094857919 seconds)
  done (took 1.955981735 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079461328 seconds)
  done (took 1.843618191 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088180891 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.095228932 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.118230676 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.102443903 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.118009853 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.098282297 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075399249 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076232798 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.070849626 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.068853061 seconds)
  done (took 2.677356437 seconds)
done (took 22.973269377 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07724452 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363036845 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.35601256 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081958152 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666526318 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.352410356 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.000013017 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087428912 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.09520856 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06482203 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080237395 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.644936662 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.990363629 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.321879464 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.976525684 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325290438 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.645340672 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064209884 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063779967 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064672844 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.985489012 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063501614 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064143497 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064380626 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.682374896 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368682713 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065001028 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322222433 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064650976 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066935014 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35223012 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065869677 seconds)
  done (took 16.22700163 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069090714 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117852222 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069376838 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.079306955 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.066771652 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06621085 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068900475 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067484737 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.105758214 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064825493 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081030616 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064167758 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068872802 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066386421 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084919174 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064875705 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065980884 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0653974 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064809277 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068535858 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082809347 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064719367 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065739039 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065455285 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065525021 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078101846 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066720086 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064955448 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066338315 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068162324 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071049434 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06961646 seconds)
  done (took 4.088438155 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120239274 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126177725 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071856405 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104201744 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115813594 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066408396 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144833646 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089513892 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.109565525 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064857274 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081199081 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064196478 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098852839 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066311769 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084876202 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066449905 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06831064 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067415495 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066405412 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068103855 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084574428 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066976555 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066589708 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065516616 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066497885 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079719599 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067947037 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065905186 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066743342 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069416955 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069825288 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066281602 seconds)
  done (took 4.365024257 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068723503 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.068760498 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.076354192 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.077928386 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.063715963 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.066022898 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.067189927 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.063795208 seconds)
  done (took 2.33774577 seconds)
done (took 28.792465371 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076665915 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.063961332 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.067522327 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083773945 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07007918 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.067558159 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.060993589 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.070548771 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.06792236 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.068548117 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.068915191 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.062766739 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.06681176 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.061778931 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.068934254 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.062802071 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.069416173 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.06740344 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.068041393 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.068746761 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.065940438 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.068506997 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070753644 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067871183 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.068331246 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.0677574 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.072734 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.068280813 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.063798675 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.066081728 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.064761646 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.07431178 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069691287 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.07001811 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.063206464 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.063463508 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067814855 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.065609472 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.069674251 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.072599894 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066797096 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074684958 seconds)
  done (took 4.615184874 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.083714585 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.08618429 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.078895428 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077970651 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.0954661 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.077561331 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.082240738 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07453892 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.073678144 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.081642441 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.069572103 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.076115774 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.074397488 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.068210238 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.072928537 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07019396 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075383624 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.070013533 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.074058685 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.076017946 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084190605 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.069886778 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077708718 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077998701 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073063506 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.078479142 seconds)
  done (took 3.805718352 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071557912 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.081408207 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087877701 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144260812 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111267 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078150342 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077554755 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087565189 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.093165528 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.064419343 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.067750043 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.088783839 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088064198 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.070259844 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.103931331 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.079986503 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079171501 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066166688 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070956468 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093745346 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086668642 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084028838 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09280127 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082378791 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065593812 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068591887 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072168818 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080115609 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072551522 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077315044 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069923355 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067539991 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06462264 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.074452351 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.068411322 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.063248447 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087032171 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075157836 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076400187 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105389355 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072657895 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06474504 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091250295 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12588645 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.063234923 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.067986723 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067201631 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075480877 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.064896678 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091396287 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077343549 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.063565466 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.064595011 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.064857909 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064660755 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078782394 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.065200644 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.065493191 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.0747092 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069460522 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085196726 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068957346 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085134731 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065448331 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076101296 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066604925 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06700787 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.064521161 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097140299 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071938576 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11412986 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066904043 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.064144808 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077319899 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07563733 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07122222 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.063439868 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080926319 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074293087 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067457753 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07439703 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.066225865 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.066565184 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.094258784 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.063576055 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.062900307 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.062225795 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.066703391 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.066614255 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.064413441 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076901288 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063329133 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.066685299 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.078185593 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063229675 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.063990192 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.067598076 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.06606309 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06301432 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076364707 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.067510194 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.064724743 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07483063 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.064207188 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.066453881 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076660063 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.070395151 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063016311 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.065295592 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.066828388 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.064965452 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067368383 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.066451644 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.065842323 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.070292996 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070487644 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068963426 seconds)
  done (took 10.550147352 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160902766 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150225789 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.065737255 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142029983 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.070986647 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.069227911 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.142809801 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.08309066 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.064387246 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065061165 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.063511995 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.092802314 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.089045773 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.099058341 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068667205 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.064584056 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087488095 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.09708077 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.144019021 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.140875932 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090178329 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.072914567 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067010021 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.065394597 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.065409608 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.072447446 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.079411978 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.071304063 seconds)
  done (took 4.378123298 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.076828364 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.087837242 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.06943518 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.075921868 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086349962 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064676007 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.065483603 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.065567563 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078321411 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074261663 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064525908 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.068583805 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.067867885 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.066897907 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.064867271 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.070596908 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.070502891 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.063996594 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.067904869 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.069959773 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076279329 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092176161 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07038472 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065712265 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068640542 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066000585 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.075664953 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077862551 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064554475 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.078275457 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06171133 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.068554617 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078031762 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.064979753 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.063692413 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.064300932 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064094192 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.063937582 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.064189813 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062846022 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062809053 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.069143622 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06284513 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07307268 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077460395 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070909163 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.066133899 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.066508161 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066937891 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061498154 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.066485786 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067173925 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.06625708 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.071422901 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.067464965 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.066924239 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.064866232 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091746015 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.069576905 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.063347537 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063447835 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062875026 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.066260622 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.074913932 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080205469 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.066452784 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06267555 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.063974734 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069438564 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077928647 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.063425463 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.068423633 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.061892599 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.064569909 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.066444631 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06629631 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065423772 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.062750884 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.064039782 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.063973554 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064817043 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.063604869 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.064430459 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.066324676 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062291125 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062912324 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.064257033 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.065899057 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073482549 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.063045827 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.067493078 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.064842792 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.062659656 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.066888257 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.069682097 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.066978573 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.077442078 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075703892 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064499517 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.062961584 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.07687037 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.066439976 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063415015 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.069827103 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.067819966 seconds)
  done (took 9.021593504 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089600209 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.066739478 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.080022951 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.086719162 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.074359486 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.070092603 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074920317 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.065080463 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.079875331 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.063354891 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.072274511 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.063281317 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075424974 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073911043 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.0659924 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.074400906 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.066853873 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081159288 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078256702 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.063149296 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072759335 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.075752068 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.076165237 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.078107837 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077821553 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.078711329 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.076298089 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.066719925 seconds)
  done (took 3.91436224 seconds)
done (took 38.060709477 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.860018207 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.119266338 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.864473535 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.087611059 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.931368137 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.084982837 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.903542248 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.858341612 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.115435696 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.904600913 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.172929627 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.389601484 seconds)
done (took 67.147535866 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.894735107 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.024127989 seconds)
    (2/2) benchmarking "String"...
    done (took 2.122609681 seconds)
  done (took 5.941478811 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.102850157 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.504775512 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.120775191 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.86072205 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.863212994 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.283279425 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.636866444 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.297600012 seconds)
  done (took 31.361317612 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.027436051 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.092125311 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.570420387 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.590827571 seconds)
  done (took 16.11554316 seconds)
done (took 65.300896038 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.866690491 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.858073918 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.884700677 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.888901587 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.861755809 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.859325817 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.864185947 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.861220027 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.896214277 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.90711941 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.859711983 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.8612247 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.86104293 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.868830383 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.377052214 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.908707145 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.8731766 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.866001313 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.883973929 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.919598756 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.862119618 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.866819681 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.343587328 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.017059819 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.471288683 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.023012823 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.236791446 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.258678368 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.873674946 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 7.011188886 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.938598857 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.076145684 seconds)
  done (took 206.799452635 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.860913914 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.000078376 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.030440722 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.863260391 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.50953942 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.033650744 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.976183809 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.542064134 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.860955333 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.879900397 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.132797862 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.860544885 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.147093864 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.854374652 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.896378627 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.896867406 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.131025443 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.142991412 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.900042205 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.015833278 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.883632637 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.989082551 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.939743235 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.105015035 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.897334516 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.904636054 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.868310755 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.868357924 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.048213078 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.102760691 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.874044543 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.8902643 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.048054575 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.729246857 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.877374905 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.884203554 seconds)
  done (took 174.242422987 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.056746418 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.871703153 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.860414246 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.921070522 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.983337347 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.863267336 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.524331378 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.873017121 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.320748527 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.866328336 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.863012049 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.863368069 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.864548034 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.876910261 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.958257874 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.864199465 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.87760325 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.864994187 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.888824273 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.864787829 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.863717727 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.86468356 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.864337962 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.863933663 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.863894374 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.863559498 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.985284978 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.115682856 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.863175681 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.865006677 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.89768413 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.877490524 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.017900971 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.86487635 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.955325293 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.920226995 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.986218508 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.862980118 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.086540935 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.951586806 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.862394569 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.864182065 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.929353959 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.875210546 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.866345213 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.866890626 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.870619222 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.927090129 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.137978546 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.865614134 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.986987712 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.356728879 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.863553472 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.865607871 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.864433966 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.46439209 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.865551292 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.865164494 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.8664721 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.870940744 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.869796767 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.864190133 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.866351613 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.253278733 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.934893018 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.932681244 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.017904204 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.865641581 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.121402502 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.992295362 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.864642066 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.866977043 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.866539211 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.869159575 seconds)
    (74/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.866750714 seconds)
    (75/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.869775321 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.989746128 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.873811887 seconds)
    (78/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.990348385 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.947112428 seconds)
    (80/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.987795575 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.866566097 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.866330639 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.880273611 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.687357658 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.938326193 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.905056225 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.689742792 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.869003072 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.241641328 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.652019064 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.868220559 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.866838965 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.879849603 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.868529654 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.866832326 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.868966101 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.947044893 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.868721932 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.867925266 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.990596036 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.58419939 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.077090654 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.867551741 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.868419893 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.87875945 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.869256208 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.950919288 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.987296314 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.868361966 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.935630884 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.871302249 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.867979874 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.961184183 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.868130717 seconds)
  done (took 410.715479239 seconds)
done (took 795.671505592 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.453333714 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.419717014 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.518576066 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.438178617 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.411450282 seconds)
  done (took 14.041749148 seconds)
done (took 15.843394407 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.883571343 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.875244034 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.92764082 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.951010831 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.885499593 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.886680915 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.949631266 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.886981658 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.918325911 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.921118067 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.950772155 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.952165124 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.891378058 seconds)
  done (took 26.682683452 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.877660926 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.02316883 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.090280925 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.911127589 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.878518438 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.101817352 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.932513282 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.015963137 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.01727184 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.106330439 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.10638297 seconds)
  done (took 23.866610995 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.877701998 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.04650265 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.100756642 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.911880024 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.878404898 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.105551712 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.938865569 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.020726286 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.021510128 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.106282664 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.11212953 seconds)
  done (took 23.933541853 seconds)
done (took 76.288145315 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.871147667 seconds)
  done (took 3.6743704 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.899892554 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.038696164 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.872195771 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.871320336 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.872192122 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.874592651 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.87154912 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.873334766 seconds)
  done (took 16.976151803 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.87372019 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.873180632 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.874659225 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.87318836 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.873758145 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.873358258 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.873466584 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.873111205 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.874996218 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.874559881 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.873070033 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.873644602 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.874710727 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.872982996 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.874505617 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.874134194 seconds)
  done (took 31.786330591 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.876904278 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.87441445 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.875506297 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.873872971 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.874807135 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.87538815 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.876012212 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.874893979 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.874469318 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.876825524 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.875875206 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.87473662 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.875657242 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.873719166 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.875212295 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.877038062 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.875804216 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.875284195 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.878978247 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.875551992 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.875435464 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.876914131 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.87617723 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.876591475 seconds)
  done (took 46.822134825 seconds)
done (took 101.075603886 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.587707158 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.587327932 seconds)
  done (took 9.980034354 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.876457413 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.876922293 seconds)
  done (took 5.563806572 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.877431198 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.876642945 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.876781339 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.8782806 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.87715006 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.875552877 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.876823221 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.877085809 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.877992335 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.877642602 seconds)
  done (took 20.578449693 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.8768241 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.877553246 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.877304642 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.879793989 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.877610898 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.87676672 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.878484997 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.876749133 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.878435707 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.876734219 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.876723235 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.876621911 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.878194546 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.876764 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.878566136 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.879040996 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.879269961 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.877320723 seconds)
  done (took 35.606863521 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.877888834 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.877644188 seconds)
  done (took 5.563226352 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.877446648 seconds)
    (2/7) benchmarking "second"...
    done (took 1.878418015 seconds)
    (3/7) benchmarking "month"...
    done (took 1.877909025 seconds)
    (4/7) benchmarking "year"...
    done (took 1.877566682 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.878936269 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.877703567 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.878499579 seconds)
  done (took 14.953944928 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.880016145 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.034732318 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.096924716 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.733086548 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.879413133 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.88050663 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.16537468 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.879938737 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.88174072 seconds)
  done (took 21.239525403 seconds)
done (took 115.294358147 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.692773095 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.87694895 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.130111155 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.926360546 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.904223323 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.170787713 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.902434056 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.14574488 seconds)
done (took 43.561090599 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.881853887 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.876802918 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.905362625 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.90459351 seconds)
  done (took 22.494563851 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.881499751 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.261493595 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.896214772 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.685968721 seconds)
  done (took 22.552814465 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.260252107 seconds)
    (2/2) benchmarking "read"...
    done (took 2.220058289 seconds)
  done (took 6.294916985 seconds)
done (took 60.039156441 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.880710187 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.879544168 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.879991388 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.879786951 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.880775824 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.879143884 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.879620161 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.881047025 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.87953892 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.879448552 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.879103325 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.879953757 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.881611202 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.880597217 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.880856536 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.880495488 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.881051285 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.881136445 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.880795979 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.880456797 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.880050007 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.879243061 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.881080831 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.881297637 seconds)
  done (took 46.938703378 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.881879433 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.881079849 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.881290767 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.880495802 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.880983856 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.88152782 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.880408176 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.88106127 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.881911782 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.880802092 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.880231297 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.881708452 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.881884261 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.881901292 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.882225179 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.881433808 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.882937282 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.881481222 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.881853469 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.88190996 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.882489492 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.880578154 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.881984158 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.881486785 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.882632436 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.882390587 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.882551562 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.882790861 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.882449502 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.884073008 seconds)
  done (took 58.263489526 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.882916756 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.883173783 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.883313317 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.883824351 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.883619412 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.882639465 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.882614367 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.883850292 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.883634856 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.883890927 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.883874875 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.882946402 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.883402576 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.883922928 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.884549602 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.88411126 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.883028193 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.885016001 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.884391488 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.884331426 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.883846472 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.883984745 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.883686478 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.884128953 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.883413546 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.88424433 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.884234258 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.883815037 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.884221592 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.883736563 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.886523093 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.886716876 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.884344113 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.883317852 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.884003955 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.884761146 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.884637174 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.885062358 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.886155376 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.884867924 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.884566619 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.884289264 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.884492111 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.884115185 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.883808424 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.884817582 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.884599533 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.88713862 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.884147738 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.885684551 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.885996137 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.885585317 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.885810527 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.884617686 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.88566567 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.886029195 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.886688579 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.884556721 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.886290119 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.886538688 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.884754147 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.884865399 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.885653993 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.887099495 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.886316009 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.886340588 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.886719767 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.885858057 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.887129999 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.886211549 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.88601898 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.88650502 seconds)
  done (took 137.517861563 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.886234805 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.886249559 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.886142491 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.885054596 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.887575103 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.886781471 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.887281598 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.886201126 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.885806965 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.886052723 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.887231649 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.887215971 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.886371621 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.887208188 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.887072458 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.88784416 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.888088025 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.888366078 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.886903903 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.888447983 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.887558095 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.88839048 seconds)
  done (took 43.330952407 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.888498259 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.887561774 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.887036293 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.88940464 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.888049263 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.888807182 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.88870312 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.888187764 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.886706218 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.88834477 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.887818732 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.88813133 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.888418599 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.888317976 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.889242931 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.889051177 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.889591197 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.889368348 seconds)
  done (took 35.81169442 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.889088647 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.888006717 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.888583797 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.889394818 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.8897005 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.889589232 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.88758555 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.888541443 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.888970254 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.889923837 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.888945252 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.889069038 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.892067187 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.890080805 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.889084911 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.889598016 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.890333138 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.889487293 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.889212549 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.889720177 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.890139014 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.88913722 seconds)
  done (took 43.385381641 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.890120751 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.888787206 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.889767603 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.889769716 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.891234499 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.890996531 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.889279182 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.890672046 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.888992361 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.890067232 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.890134607 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.889785816 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.88941611 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.89061028 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.891988288 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.890875034 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.890030971 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.891477522 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.891799324 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.894201281 seconds)
  done (took 39.630030438 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.891513901 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.892450567 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.892776489 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.891504404 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.891187829 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.89224306 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.893550513 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.892395961 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.892804872 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.892154055 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.892774114 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.891861936 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.893151682 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.892391808 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.892229084 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.893341743 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.891810589 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.892870792 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.891912102 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.891636098 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.892813355 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.893247616 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.892075369 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.893048583 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.891502612 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.891341775 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.892816395 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.89187654 seconds)
  done (took 54.806292931 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.891878179 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.89225473 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.891931336 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.891700098 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.892252003 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.892257554 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.892579825 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.891852303 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.89306064 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.89274024 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.89235933 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.892827034 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.891817517 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.893688482 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.892738606 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.894513866 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.892679349 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.893705362 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.894068385 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.892496412 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.892473238 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.893457559 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.893923795 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.894569477 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.894596555 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.893137484 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.893362355 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.893920226 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.892348006 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.892544744 seconds)
  done (took 58.608879813 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.913722788 seconds)
    (2/2) benchmarking "in"...
    done (took 1.914096723 seconds)
  done (took 5.651612427 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.895271095 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.892783345 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.894830924 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.893922283 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.894670954 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.893567613 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.893408713 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.893116097 seconds)
  done (took 16.976168597 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.893905575 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.896553586 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.894182462 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.894255514 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.894948152 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.902669853 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.894831755 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.8967638 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.898168039 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.896572206 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.898831827 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.898801939 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.903851186 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.899422168 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.895551541 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.895142385 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.897274008 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.898251606 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.896686829 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.895236174 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.900141518 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.895433663 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.896181481 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.897508332 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.896676068 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.897037619 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.904366015 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.896921083 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.897080901 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.897341095 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.904543121 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.896401541 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.897585542 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.899925859 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.896563645 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.895595019 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.90262189 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.897081526 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.89895357 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.898084122 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.900457654 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.898913911 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.901223955 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.904317241 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.897995294 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.899817497 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.898843495 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.900647436 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.902344932 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.903646118 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.908459511 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.89990798 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.897127922 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.899339874 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.901384692 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.896316964 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.897742395 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.901015855 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.905865623 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.905528364 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.901605743 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.920033362 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.908914728 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.897536425 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.89826491 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.909015281 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.924837718 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.899948771 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.900095676 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.898515823 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.904492885 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.898968834 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.9000111 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.898473164 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.911477129 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.907405384 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.898884946 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.899674014 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.898844273 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.899389483 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.901152728 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.898689097 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.900509445 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.899548629 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.91016985 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.92787505 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.900132958 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.901240858 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.90247433 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.901064144 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.904260649 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.904075735 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.899287573 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.900025912 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.901959865 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.900590241 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.900976364 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.901199717 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.901921249 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.907424151 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.900994332 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.901297577 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.905855287 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.908680589 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.900776292 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.901807666 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.900693329 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.900726557 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.908404127 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.900869989 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.901498699 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.901614084 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.902658201 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.904387236 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.901363025 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.905180048 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.910594798 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.909052761 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.904450541 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.904801823 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.905101676 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.904030602 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.911495512 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.928204086 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.902284543 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.907158753 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.908726234 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.913505134 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.90517974 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.902069269 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.90506712 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.901807465 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.902790983 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.905288715 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.903256037 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.901612118 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.902132368 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.902370471 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.902407918 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.903337867 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.904832984 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.903056344 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.905004921 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.902135885 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.906864286 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.903445145 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.906309627 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.910573181 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.904530815 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.906409816 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.906065415 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.906822213 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.906090547 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.9055715 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.903518001 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.903869244 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.904531579 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.904150113 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.905780838 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.904565939 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.902980132 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.905279199 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.908062427 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.905015316 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.904336187 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.906667953 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.904346829 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.903346887 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.905689839 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.904958447 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.90557113 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.904694142 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.907102968 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.903736883 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.905537516 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.904660865 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.904144629 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.904685721 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.908369015 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.917544532 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.908764488 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.91634392 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.904513381 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.912146678 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.905538513 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.906992896 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.905640533 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.904426134 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.905372396 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.90626931 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.907380645 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.910405563 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.929001176 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.917205371 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.908685251 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.907173086 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.913378782 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.912237 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.912751081 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.906382559 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.908304446 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.90966992 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.906589938 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.907255091 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.90848941 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.910997968 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.906084395 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.907576996 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.910523512 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.907371639 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.90618005 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.909269002 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.906348296 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.907576077 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.905864156 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.906744293 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.905940647 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.907012175 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.913746774 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.908238689 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.907063342 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.907643317 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.910858581 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.907875399 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.908263843 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.909422705 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.914061807 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.907942064 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.913559834 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.914960581 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.908620959 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.907913167 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.908538941 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.909036121 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.912758314 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.908664856 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.912239395 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.919231863 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.912472629 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.908166671 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.914779019 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.909066493 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.911965412 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.910865584 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.912352205 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.909201307 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.910086479 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.910205026 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.908785764 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.915887171 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.910031181 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.91084858 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.910691045 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.912863094 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.911535029 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.912657876 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.911945327 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.914815953 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.920886094 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.917238668 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.91468054 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.91355161 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.912807026 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.911968049 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.914912449 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.912023115 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.922866835 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.921183902 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.912176074 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.910750311 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.912002653 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.913759729 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.9103827 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.911668666 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.916885262 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.913632806 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.913094124 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.915618627 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.911784728 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.911736868 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.917906569 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.915422915 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.915530611 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.913036296 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.912579154 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.913073237 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.912542546 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.914478953 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.911312192 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.913516323 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.917230968 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.913821541 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.912489415 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.913507676 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.91951729 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.912586833 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.913163103 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.918385609 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.912993534 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.913216535 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.913214375 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.912937699 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.914138293 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.913950234 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.91408088 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.914907375 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.912401745 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.917598577 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.924410036 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.916192692 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.922594177 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.918221862 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.922704268 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.913984726 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.913361484 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.913178864 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.91763021 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.921905223 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.914963419 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.914110833 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.920612877 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.91409268 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.915788584 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.918590896 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.912464163 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.913696858 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.913687502 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.914742108 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.919727486 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.917140375 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.913997138 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.914000034 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.914657534 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.913765946 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.91714987 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.916663646 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.915339833 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.914140464 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.914457177 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.91466641 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.913171518 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.915078755 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.914116047 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.915147454 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.915575452 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.921393465 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.915493235 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.91610808 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.919709453 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.916005242 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.92296235 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.915080822 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.913774281 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.916726166 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.915669843 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.917452638 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.914544227 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.91476666 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.915201623 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.915810794 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.916616784 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.925580451 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.921636365 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.918077493 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.915470355 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.914910027 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.916986014 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.922880461 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.941768177 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.916335167 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.918057179 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.920996408 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.923020533 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.918010113 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.922016921 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.919897125 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.924289636 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.918054165 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.916917295 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.920353762 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.929494482 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.916169836 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.915757457 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.916640832 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.921343575 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.918683731 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.915756551 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.918146989 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.918959229 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.918254651 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.926853371 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.917875534 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.918730103 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.915862828 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.916557595 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.918077593 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.917529673 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.91968962 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.918445519 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.915443121 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.916987886 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.921780538 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.923990566 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.918479934 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.920620153 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.928293451 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.91806174 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.917390014 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.919134471 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.91797167 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.921498093 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.916640656 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.919022288 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.919312588 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.917917133 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.919112011 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.922639698 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.929438479 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.91918328 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.917379914 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.918467409 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.92270363 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.918405067 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.918896662 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.919519489 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.925642599 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.923069153 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.931038012 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.929115457 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.918269252 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.920983372 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.927586319 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.928848194 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.918529232 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.919088017 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.919886369 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.921476344 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.920651697 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.920297779 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.91939157 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.920181081 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.925354881 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.917967661 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.920272029 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.919226834 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.918333907 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.922021223 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.921093798 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.925590416 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.919439778 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.919640645 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.918774389 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.922472361 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.921798738 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.923346655 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.920123762 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.921031949 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.924153466 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.922494718 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.92636522 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.921079957 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.921029191 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.921813267 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.921981212 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.922589776 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.922739024 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.921471514 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.921787495 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.925544617 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.930442008 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.922143272 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.922880534 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.921720384 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.92475762 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.921142625 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.920617687 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.921280857 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.921467089 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.928361861 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.921899097 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.921250427 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.921108561 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.92226447 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.927054514 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.924033147 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.926012302 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.92158304 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.922650421 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.921333606 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.925740992 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.932701076 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.925657231 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.925621708 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.932073519 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.926989427 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.924094876 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.922783839 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.923190793 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.92511522 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.925260049 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.925951916 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.925011771 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.924814782 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.922819223 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.926334106 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.923014868 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.925623441 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.923911893 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.924138668 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.926024596 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.934850269 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.930401809 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.923395565 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.925337234 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.923711034 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.928267087 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.936331412 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.922889105 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.926097314 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.924601691 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.925476114 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.924503387 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.932405853 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.934430065 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.927465083 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.922962304 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.929536941 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.942053394 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.926652574 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.93435297 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.9573991 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.925754987 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.924040781 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.925418752 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.925090649 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.925024211 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.927073529 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.924370664 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.931842806 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.924125095 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.927239091 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.929813169 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.92152017 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.923091221 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.923042651 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.925233857 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.928487893 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.922488338 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.929683871 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.923792261 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.923631196 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.922991094 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.923626512 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.921459477 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.922635849 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.923139932 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.924457726 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.92238072 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.924353902 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.930735111 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.926129305 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.924703214 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.934620785 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.933765749 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.921841241 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.923042223 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.924083641 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.928558953 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.927332527 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.922172929 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.927052347 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.93374285 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.92713483 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.933159464 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.925992486 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.924702201 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.924770232 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.923076085 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.924088414 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.93515327 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.934950507 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.927359316 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.923563318 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.930925266 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.923497138 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.930763904 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.931986472 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.922003809 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.929039562 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.922438138 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.922625104 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.924034721 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.920963778 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.925008287 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.929135667 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.920835222 seconds)
  done (took 1142.659506425 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.918193939 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.918034627 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.921741273 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.91623909 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.916676169 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.919972508 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.919888341 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.921577079 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.919029211 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.919750715 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.917628114 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.918878665 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.918967028 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.916386614 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.917862012 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.920276955 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.918787648 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.921281903 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.919003787 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.917989423 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.916132576 seconds)
  done (took 42.141095794 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.919925367 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.919936766 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.917786122 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.919664063 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.91929754 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.917808189 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.914899095 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.918814533 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.919229718 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.920887547 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.919932258 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.917160262 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.918712927 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.917294774 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.917886124 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.913549267 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.914001686 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.917847459 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.917395008 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.917382831 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.914249153 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.916531225 seconds)
  done (took 44.039953737 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.911596636 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.909681228 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.912930804 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.90998199 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.908211548 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.909525986 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.909597478 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.909177356 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.905074354 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.90720746 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.911927219 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.912670086 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.905141149 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.906429914 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.904438763 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.902935683 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.051843375 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.903323297 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.903201508 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.903581317 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.903987681 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.909230695 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.903772798 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.903683967 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.903960772 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.903814424 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.904330451 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.903897378 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.903687545 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.905612126 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.907752241 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.903667229 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.905262597 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.907379364 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.903841682 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.904918022 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.907578706 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.904345728 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.90447487 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.904376182 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.914782549 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.931342811 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.903812573 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.904746586 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.910174481 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.904997536 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.90508903 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.908065093 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.912141889 seconds)
  done (took 95.43907137 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.904251692 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.903181377 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.903581405 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.904581951 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.906492877 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.904379016 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.905663934 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.905176608 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.904133856 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.90449696 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.90481175 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.903959653 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.903983319 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.903605355 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.905583208 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.904319172 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.904009644 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.904152164 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.905104965 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.906413344 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.905681426 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.904540885 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.907135727 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.906771735 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.90584105 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.906332991 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.904322893 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.906664781 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.90579289 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.905489271 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.905684351 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.908214814 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.905889784 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.905464042 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.906066115 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.906015867 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.907971289 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.906117454 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.906602639 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.906607708 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.905590405 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.906908539 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.904636922 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.907025682 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.905721866 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.905674343 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.907027247 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.906010921 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.904347965 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.907188675 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.904628538 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.90582169 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.902469339 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.901482154 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.901757205 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.901881822 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.90291356 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.902701188 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.901367874 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.90124047 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.902345507 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.902194515 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.902605488 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.901059366 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.902090627 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.901689369 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.902692404 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.902867026 seconds)
  done (took 131.357349393 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.903629249 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.902971053 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.902263506 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.901633466 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.903518105 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.90094911 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.901421252 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.901406957 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.901413404 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.902173965 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.901643944 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.901095808 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.901908693 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.902520759 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.905258071 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.904955376 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.903352332 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.901205089 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.90208284 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.904201045 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.901928512 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.90278127 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.904666748 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.902874999 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.903555411 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.906689585 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.902095864 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.900976675 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.901075586 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.902562512 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.904025311 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.902988812 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.904574384 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.902181588 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.905967238 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.90272147 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.902507773 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.902182899 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.900313402 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.899827799 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.902225927 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.899505961 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.898811804 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.899299311 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.899716074 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.900401947 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.900469195 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.901953915 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.900059397 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.898974611 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.900320836 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.901840628 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.900284155 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.89886205 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.89938905 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.898905937 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.901215524 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.897772755 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.897009561 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.898566024 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.899014908 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.899294661 seconds)
  done (took 119.735038299 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.899108137 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.901207982 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.89816218 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.897931503 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.899675726 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.898705406 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.899233751 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.898282519 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.89812724 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.901904977 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.899091973 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.899108634 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.900568387 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.900841999 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.902056432 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.900377498 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.899627584 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.899441759 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.899659132 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.899966947 seconds)
  done (took 39.824739631 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.898905918 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.898516559 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.898614423 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.898132012 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.900006317 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.897577603 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.899073715 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.898160637 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.899391897 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.896874734 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.895520311 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.8987975 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.898180446 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.895742763 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.897257789 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.895065176 seconds)
  done (took 32.195683968 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.893951317 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.89423136 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.898313509 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.899217168 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.89752699 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.896649848 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.898724561 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.89659943 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.897028765 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.898251656 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.89921014 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.897072396 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.899114376 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.895461794 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.898144253 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.898356707 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.896883056 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.894201541 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.897356457 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.897529823 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.89607381 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.89355776 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.895873199 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.895340837 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.894850671 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.897987693 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.898633881 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.894482306 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.898176697 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.897563173 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.897857109 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.896804846 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.898584446 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.896658482 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.89832381 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.894792238 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.896425874 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.898030111 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.896179334 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.896843054 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.899738258 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.895407798 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.896172862 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.895785999 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.897186437 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.897267333 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.896703515 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.89791412 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.896911209 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.896765068 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.897267379 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.896156453 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.894884211 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.896200717 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.895014866 seconds)
  done (took 106.156131582 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.894375734 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.893906904 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.894047477 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.894219476 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.89559884 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.894520057 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.892820884 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.895441337 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.894375849 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.895140474 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.893588469 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.896248784 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.895911822 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.895001017 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.894172293 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.896239662 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.895016327 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.895288923 seconds)
  done (took 35.932426512 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.893201971 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.893973157 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.894750357 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.894431419 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.894538465 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.895311465 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.895959076 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.897959278 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.894373217 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.895236906 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.893131282 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.893676123 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.892104132 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.895671961 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.894780735 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.894190273 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.894953578 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.894984374 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.892960678 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.897346322 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.895548316 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.897451737 seconds)
  done (took 43.513976291 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.895279619 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.894422214 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.90758775 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.913475039 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.91394246 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.926989704 seconds)
  done (took 13.278492932 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897702408 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895486108 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.89443381 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89594098 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894742332 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896252653 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89707512 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896192481 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894730147 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897761982 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896079061 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897667935 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897135449 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897586651 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898620028 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89755899 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897852444 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898620975 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896680489 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898018938 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898868837 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896859112 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895657389 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898152363 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899006999 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898793804 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896778121 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897232807 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896853481 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898325189 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897975011 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897412961 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897129963 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897108777 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898106225 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897513018 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897316222 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897936331 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898236152 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89687691 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.899479361 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898828065 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899114067 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898130252 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897400686 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896981017 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899277342 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898450955 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900106475 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90015974 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897478039 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898616191 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899698374 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900594575 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899616871 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899123561 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901407716 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900034803 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898923438 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899821319 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900540523 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900624863 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899974694 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900235356 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898741994 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897883895 seconds)
  done (took 127.09947309 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900879564 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.902211841 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898448024 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898404456 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897429453 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900591968 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899055918 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90250526 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900144888 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901881494 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899791246 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900746893 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902678713 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901819356 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901070367 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902873482 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90104531 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900677385 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901252672 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901016613 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90107438 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902579905 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901264741 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900902322 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901773955 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899988462 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903464498 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901824868 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902456595 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901272974 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900034946 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.903772873 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900982053 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.901738143 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902891207 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900910035 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901993927 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901838886 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903491223 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902572804 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902209435 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901370864 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902678877 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902898218 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901171161 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903684162 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901215777 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902728321 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901751312 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900469431 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902762078 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905607572 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903091879 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901139152 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.903764515 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901346707 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90168197 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902299006 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902562235 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902103902 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903455732 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904299255 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901168291 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901500086 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903427031 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900914853 seconds)
  done (took 127.344562676 seconds)
done (took 2643.455292853 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.984995038 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.112248938 seconds)
  done (took 15.930244533 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.074713904 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.023448454 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.913706677 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.930656994 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.910442977 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.935581046 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.929748264 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.910980008 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.911591607 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.91373826 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.914695837 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.102113086 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.97149697 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.912937287 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.914771734 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.004086213 seconds)
  done (took 53.112563033 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.919202288 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.917310058 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.93064546 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.918251582 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.922331375 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.93513093 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.947891299 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.920346057 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.977814022 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.932884174 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.038658556 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.930570468 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.918417486 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.982638428 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.930488837 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.931807579 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.01889059 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.994758553 seconds)
  done (took 36.907147031 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.998337379 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.924086993 seconds)
  done (took 10.767882908 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.933241591 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.927109424 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.921048824 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.941915468 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.922123492 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.91325655 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.918419144 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.944322597 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.913726689 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.916747538 seconds)
  done (took 71.09341911 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.918148621 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.918606482 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.917797997 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.912837667 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.911407733 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.915712998 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.914686011 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.916345228 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.610605991 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.955289686 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.924227791 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.922904432 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.915851902 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.914438157 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.912233122 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.939788843 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.025453706 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.909487828 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.912533325 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.919648928 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.91345748 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.965533679 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.929280854 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.912865421 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.948192968 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.604203752 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.926068613 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.92079686 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.025632006 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.912416511 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.914129162 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.125103782 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.91981936 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.376795926 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.201996239 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.919494651 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.926517715 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.922304789 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.909614118 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.03747915 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.914373585 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.92164533 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.871173221 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.169236112 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.010575168 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.961284132 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.258673587 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.918088647 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.917686084 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.94829584 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.919045851 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.914737665 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.93243023 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.437616734 seconds)
  done (took 135.436068335 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.911999863 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.257006312 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.077132329 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.914262729 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.195786874 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.115452485 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.911438364 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.959354482 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.913296938 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.139907521 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.167053489 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.015956188 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.914881013 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.911706146 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.909193388 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.911601654 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.067127593 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.981207561 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.91416759 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.909979786 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.93910479 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.150223031 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.030747431 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.915560228 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.937739765 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.124979076 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.030584155 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.015718828 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.698782485 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.9137624 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.972838694 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.914300877 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.910649237 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.910747903 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.068548221 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.00331987 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.991551187 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.913878253 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.913413678 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.914717897 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.660680839 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.11479923 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.004998 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.041935324 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.162498568 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.115061292 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.693336044 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.91208861 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.645161238 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.072069114 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.14262722 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.143518495 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.03107937 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.917462734 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.247496038 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.911131662 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.916809277 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.161432977 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.134076488 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.012536557 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.916158361 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.913338043 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.91141637 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.203916162 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.919688065 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.0072765 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.915326677 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.913917456 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.011038381 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.013663453 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.140636149 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.12282141 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.942794184 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.253569172 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.421625658 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.158911224 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.980804369 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.163821758 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.917626714 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.912735304 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.992460502 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.754544676 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.166582225 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.194745181 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.159358094 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.949425426 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.631441272 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.915068321 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.139829727 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.135336307 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.179126726 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.16018251 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.153306122 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.235136137 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.915487349 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.915094866 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.280453379 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.040207553 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.916896923 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.257055223 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.145874412 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.482502398 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.939773266 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.220050565 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.048656257 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.918074477 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.545093455 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.917476836 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.144811337 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.954042596 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.918439223 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.918032121 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.132622013 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.947107663 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.918117729 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.55180835 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.976941131 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.921281265 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.149689174 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.918849915 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.186670344 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.918243562 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.159301696 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.514635193 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.946612369 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.089907396 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.162651569 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.918424685 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.164181452 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.161048854 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.030334031 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.136288543 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.611653343 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.919139807 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.203680915 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.918592997 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.916682009 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.085081118 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.922764918 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.059637666 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.925209015 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.21224965 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.940767819 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.151774534 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.919757056 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.171377409 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.95133776 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.968248115 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.922628565 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.046725123 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.922092999 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.750463449 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.073399235 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.922057226 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.91697321 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.468773183 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.917906398 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.064529332 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.154180069 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.940575801 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.990655764 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.581612403 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.918679609 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.002142063 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.940476223 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.308289939 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.919399341 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.170010216 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.921471559 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.921259836 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.91941885 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.209762301 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.103404934 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.921995443 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.919716632 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.823466656 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.918439041 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.918659586 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.099407725 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.289171227 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.922423713 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.121452496 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.923909219 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.047135299 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.923033634 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.991737125 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.252307134 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.919449695 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.918932973 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 7.364294409 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.922430432 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.925617414 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.127177082 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.944929812 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.449964584 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.058339523 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.19712246 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.229297765 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.158568808 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.963121519 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.925263699 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.176681619 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.923036943 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.982090516 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.922659212 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.944223527 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.152829306 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.927065479 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.13218414 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.191962882 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.88128975 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.969563495 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.926004937 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.925191805 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.923152941 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.070024612 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.008040957 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.925951113 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.924669485 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.037684032 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.044852459 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.131138878 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.924220371 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.033431157 seconds)
  done (took 914.295156079 seconds)
done (took 1239.378005442 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.925109193 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.92366348 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.929618025 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.928041352 seconds)
  done (took 29.560478899 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.929452792 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.92561372 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.928025795 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.926274647 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.927720006 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.925359968 seconds)
  done (took 13.416591226 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.998513914 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.929238778 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.926212021 seconds)
  done (took 21.709642849 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.004062599 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.340271326 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.070481291 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.366852902 seconds)
  done (took 10.637304058 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.927918833 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.928995039 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.927786164 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.928515601 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.929065466 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.931070336 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.9288262 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.92819208 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.932523694 seconds)
  done (took 19.218359183 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.711440864 seconds)
done (took 101.110234565 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.075995536 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.185696784 seconds)
    (3/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.828177611 seconds)
    (4/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.060467556 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.993207549 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.77856233 seconds)
    (7/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.110725007 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.024617117 seconds)
    (9/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.9354939 seconds)
    (10/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.119670536 seconds)
    (11/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.950233978 seconds)
    (12/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.618453496 seconds)
    (13/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.927610102 seconds)
    (14/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.202152115 seconds)
    (15/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.927426508 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.947120413 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.951864605 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.844779935 seconds)
    (19/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.438674704 seconds)
    (20/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.03461137 seconds)
    (21/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.019708743 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.085036688 seconds)
    (23/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.321339783 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.254089302 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.647517154 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.033700349 seconds)
    (27/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.390461359 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.053657691 seconds)
    (29/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.265338167 seconds)
    (30/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.24707156 seconds)
    (31/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.008359845 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.017540528 seconds)
    (33/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.931941863 seconds)
    (34/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 4.292688507 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.243194529 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.815251639 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.933205997 seconds)
    (38/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.074832918 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.935248382 seconds)
    (40/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.960442515 seconds)
    (41/309) benchmarking ("sort", BigInt, false)...
    done (took 6.928326702 seconds)
    (42/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.071271198 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.098901078 seconds)
    (44/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.200244041 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.035741383 seconds)
    (46/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.095411328 seconds)
    (47/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.120505887 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.063270821 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.13846613 seconds)
    (50/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.954824729 seconds)
    (51/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.19019486 seconds)
    (52/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.026992306 seconds)
    (53/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.352214239 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 2.147621667 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.930934112 seconds)
    (56/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.944948139 seconds)
    (57/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.730595929 seconds)
    (58/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.13517238 seconds)
    (59/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.225146791 seconds)
    (60/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.937289791 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 5.643799036 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.182796737 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.241360014 seconds)
    (64/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.706114604 seconds)
    (65/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.453579019 seconds)
    (66/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.323993153 seconds)
    (67/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.34971152 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.212627746 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.082744258 seconds)
    (70/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.073102582 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.062125133 seconds)
    (72/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.948429516 seconds)
    (73/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.026332956 seconds)
    (74/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.692812011 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.065179492 seconds)
    (76/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.063788878 seconds)
    (77/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.933082426 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.07662316 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.104718923 seconds)
    (80/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.990935536 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.751789235 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.290741634 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.246807882 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.01060612 seconds)
    (85/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.414396682 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.277089885 seconds)
    (87/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.044977832 seconds)
    (88/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.988803886 seconds)
    (89/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.245387929 seconds)
    (90/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.953348679 seconds)
    (91/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.928828648 seconds)
    (92/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 4.107928659 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.934529331 seconds)
    (94/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.984130644 seconds)
    (95/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.008608901 seconds)
    (96/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.972476589 seconds)
    (97/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.336884688 seconds)
    (98/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.929882797 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.200965264 seconds)
    (100/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.933262026 seconds)
    (101/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.932171415 seconds)
    (102/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.143531637 seconds)
    (103/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.025604487 seconds)
    (104/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.125795851 seconds)
    (105/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.852916359 seconds)
    (106/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.955583746 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.93029282 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.323482586 seconds)
    (109/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.932518741 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.239734163 seconds)
    (111/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.233322429 seconds)
    (112/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.958252775 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.949018081 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.935324328 seconds)
    (115/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.038510133 seconds)
    (116/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.9427024 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.9318246 seconds)
    (118/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.346018134 seconds)
    (119/309) benchmarking ("sort", Float64, false)...
    done (took 5.65859335 seconds)
    (120/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.070551073 seconds)
    (121/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.083871631 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.033635232 seconds)
    (123/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.514710256 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.689571637 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.129686303 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.234141394 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.276825099 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.957131439 seconds)
    (129/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.09951362 seconds)
    (130/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.046046523 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.069722798 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.968763806 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.248175877 seconds)
    (134/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.107009457 seconds)
    (135/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.993437376 seconds)
    (136/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.508071246 seconds)
    (137/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.065511217 seconds)
    (138/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.422769991 seconds)
    (139/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.211378596 seconds)
    (140/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.822614725 seconds)
    (141/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.333047894 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.699585106 seconds)
    (143/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.94219739 seconds)
    (144/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.042147257 seconds)
    (145/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.731496474 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.253651006 seconds)
    (147/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.972146493 seconds)
    (148/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.014698268 seconds)
    (149/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.935475709 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.247060887 seconds)
    (151/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.529545187 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.652287205 seconds)
    (153/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.198320452 seconds)
    (154/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.205867605 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.059930858 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.931197794 seconds)
    (157/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.93817591 seconds)
    (158/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.036159528 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.934780273 seconds)
    (160/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.182981884 seconds)
    (161/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.935643313 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.21452432 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.819847716 seconds)
    (164/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.030382954 seconds)
    (165/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.952519442 seconds)
    (166/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.249875876 seconds)
    (167/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.936639862 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.976126334 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.904705971 seconds)
    (170/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.635230403 seconds)
    (171/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.214566549 seconds)
    (172/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.58943281 seconds)
    (173/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.962681722 seconds)
    (174/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.934943801 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.896742957 seconds)
    (176/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.488130892 seconds)
    (177/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.148438348 seconds)
    (178/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.960649451 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.33447943 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.33141697 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.697172545 seconds)
    (182/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.095547919 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.201447938 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.935466046 seconds)
    (185/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.830728411 seconds)
    (186/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.223443428 seconds)
    (187/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.417028771 seconds)
    (188/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.261560055 seconds)
    (189/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.333854629 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.92506921 seconds)
    (191/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.041492371 seconds)
    (192/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.741515355 seconds)
    (193/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.025323527 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.934238642 seconds)
    (195/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.163643195 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.721548798 seconds)
    (197/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.684608026 seconds)
    (198/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.114859885 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.939726258 seconds)
    (200/309) benchmarking ("map", identity, BigInt, true)...
    done (took 4.030495423 seconds)
    (201/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.191984437 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.936467788 seconds)
    (203/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.997250238 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.060744934 seconds)
    (205/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.24443373 seconds)
    (206/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.057428497 seconds)
    (207/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.940911906 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.095105652 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.091870044 seconds)
    (210/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.958141596 seconds)
    (211/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.01631364 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.014171315 seconds)
    (213/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.121073626 seconds)
    (214/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.946444866 seconds)
    (215/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.125310019 seconds)
    (216/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.454854307 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.937144263 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 3.805377961 seconds)
    (219/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.094470566 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.175806397 seconds)
    (221/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.941792864 seconds)
    (222/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.207625911 seconds)
    (223/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.69505498 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.627744391 seconds)
    (225/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.03516854 seconds)
    (226/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.161813942 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.25929069 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.062372076 seconds)
    (229/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.964486824 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.937471705 seconds)
    (231/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.282593893 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.942928872 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 8.407221143 seconds)
    (234/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.274011583 seconds)
    (235/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.153671106 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.049186744 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.950205602 seconds)
    (238/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.958638534 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.952645525 seconds)
    (240/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.105282768 seconds)
    (241/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.503238489 seconds)
    (242/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.981262471 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.330414684 seconds)
    (244/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.363128097 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.334387004 seconds)
    (246/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.13122997 seconds)
    (247/309) benchmarking ("sort", Int8, false)...
    done (took 4.811646825 seconds)
    (248/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.053877517 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.343960969 seconds)
    (250/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.022338926 seconds)
    (251/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.237123075 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.941572215 seconds)
    (253/309) benchmarking ("map", identity, Int8, true)...
    done (took 3.712963118 seconds)
    (254/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.629139103 seconds)
    (255/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.583700363 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.940174204 seconds)
    (257/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.948124656 seconds)
    (258/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.056639414 seconds)
    (259/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.959708504 seconds)
    (260/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.032319706 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.275487141 seconds)
    (262/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.163519946 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.260368232 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.993242553 seconds)
    (265/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.181416374 seconds)
    (266/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.30926485 seconds)
    (267/309) benchmarking ("sort", Float32, false)...
    done (took 5.673671484 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.075280281 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.191995513 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.560098472 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.27846506 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.048230264 seconds)
    (273/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.631709269 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.111752479 seconds)
    (275/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.82952783 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.960802626 seconds)
    (277/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.246650032 seconds)
    (278/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.02760197 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.947518926 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.957229419 seconds)
    (281/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.280129692 seconds)
    (282/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.615316977 seconds)
    (283/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.48641798 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.074202277 seconds)
    (285/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.968646774 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.846289928 seconds)
    (287/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.353371627 seconds)
    (288/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.277767784 seconds)
    (289/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.218505147 seconds)
    (290/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.973046857 seconds)
    (291/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.951541228 seconds)
    (292/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.044868424 seconds)
    (293/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.149734338 seconds)
    (294/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.08237353 seconds)
    (295/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.949842412 seconds)
    (296/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.744057701 seconds)
    (297/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.221781835 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.845261165 seconds)
    (299/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.077751985 seconds)
    (300/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.964491345 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.14086695 seconds)
    (302/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.950281535 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.984518856 seconds)
    (304/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.097823603 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.955513288 seconds)
    (306/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.826861187 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.24318783 seconds)
    (308/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.43771677 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.161425744 seconds)
  done (took 1033.115481596 seconds)
done (took 1035.04995573 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.978285971 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.973808711 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.952872747 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.979115627 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.066232773 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.999603506 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.969108586 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.957857431 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.006577156 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.003219726 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.954799924 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.996082124 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.956754958 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.954443908 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.953906464 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.969611658 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.26009409 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.985916933 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.972708821 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.970927951 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.974343472 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.951379587 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.003049563 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.994567968 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.958394722 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.960368084 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.959168731 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.974172535 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.067834559 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.958533524 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.959097575 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.967907871 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.257308653 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.97649956 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.953037649 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.974175045 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.967158254 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.967782723 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.960462932 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.988419918 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.397942418 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.958996085 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.95711346 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.955472284 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.957039772 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.964273368 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.958134974 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.964029381 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.972485243 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.972446057 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.393594032 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.979617162 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.958727583 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.960633954 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.970261329 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.959235766 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.962076248 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.973689763 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.980247351 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.973799706 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.2448349 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.989387908 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.959039952 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.979934184 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.965001202 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.431515555 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.95968435 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.967176718 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.409285706 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.971503881 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.423829408 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.970647801 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.96118166 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.973619436 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.992108143 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.257721768 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.979285328 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.95784248 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.966531296 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.956623045 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.971150881 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.972826725 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.963490239 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.963377909 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.977005401 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.002006945 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.971406827 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.959041626 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.971207277 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.978498594 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.968565265 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.971443219 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.964555279 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.96070021 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.970658917 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.965035917 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.965277572 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.962054778 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.966321926 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.973696767 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.398828919 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.980971796 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.954380145 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.960037099 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.959062767 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.975305381 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.400365171 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.969627501 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.983157512 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.009343414 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.962381308 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.246605871 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.990437169 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.978477815 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.970906468 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.965170397 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.95867451 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.248743736 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.41883809 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.982630587 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.961442644 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.962011149 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.978459618 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.964122058 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.959977171 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.260939524 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.986894467 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.977573601 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.084217669 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.974828145 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.992449836 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.960258805 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.964297895 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.005587775 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.978278027 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.992482913 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.962812998 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.976605289 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.980289412 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.958796288 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.974930318 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.975868623 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.964110078 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.968650329 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.958171968 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.007563282 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.976929886 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.979425361 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.981408514 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.085053434 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.959037811 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.251003177 seconds)
done (took 307.691001924 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.03748547 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.959633742 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.077395434 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.960731606 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.047373772 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.030779088 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.964149891 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.95984556 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.963608173 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.458120137 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.961719499 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.969523311 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.958220742 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.961592498 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.027844278 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.959115409 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.960455304 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.40685381 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.960994858 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.038813871 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.961101288 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.961648087 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.96137638 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.478993085 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.958421626 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.961857184 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.039872814 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.960612839 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.410488725 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.960325384 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.964161793 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.426577934 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.039306108 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.989293058 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.967081079 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.969173792 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.049063248 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.971384753 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.027665099 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.025994559 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.079099847 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.993862817 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.962773892 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.966639657 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.96466666 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.962239733 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.962633542 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.993540444 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.962223785 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.967189923 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.437129081 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.968942107 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.966284637 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.963380865 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.961206923 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.989880524 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.963039966 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.963811515 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.041355353 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.965333757 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.029188617 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.465318745 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.459855531 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.960821971 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.96077598 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.963266311 seconds)
  done (took 191.511423947 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.027147299 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.034898702 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.02463332 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.966184463 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.014186205 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.029968362 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.966670093 seconds)
  done (took 15.951811796 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.971569211 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.962819211 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.014459214 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.013091915 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.962915261 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.142384999 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.975874383 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.968752898 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.991423758 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.96421191 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.599987877 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.010531434 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.968027301 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.965324434 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.976110438 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.020794602 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.967551102 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.963687622 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.079499032 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.112291375 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.967506785 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.972454659 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.991876009 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.974550447 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.965678106 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.964308445 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.962770119 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.973884402 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.962734554 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.964493399 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.965527362 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.015675969 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.967997389 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.963211757 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.963142852 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.964373264 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.964770694 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.964810707 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.964799339 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.964655598 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.965667992 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.966017459 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.967821441 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.965531294 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.964378724 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.991625471 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.967088683 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.963946611 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.966013943 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.964744911 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.994924754 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.966567352 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.965283617 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.970203793 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.010279479 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.974838998 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.969240997 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.970473778 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.967086347 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.964858028 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.970802951 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.112779342 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.016522022 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.964657265 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.019025133 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.124444538 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.96608114 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.967000647 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.964731696 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.056810075 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.965547721 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.016860499 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.965768932 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.081171116 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.9672577 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.145537574 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.990966766 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.970520393 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.969233063 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.965557468 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.974685898 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.967442381 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.969108439 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.971430429 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.972623925 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.970069416 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.966874451 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.970173219 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.972861035 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.966217124 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.015890799 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.966751684 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.967051894 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.104868726 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.966876106 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.083903301 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.993804019 seconds)
  done (took 215.36049034 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.974492218 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.976862569 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.974653168 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.98393063 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.968708213 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.966701862 seconds)
  done (took 13.741619338 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.971491718 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.973160682 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.969164313 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.967035074 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.969029111 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.972429928 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.96873339 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.969928136 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.973743748 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.971174136 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.969174243 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.969912998 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.971251589 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.967245597 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.967757612 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.969052034 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.970677585 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.970756975 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.968774464 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.970889275 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.175052912 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.971764299 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.968471754 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.972377507 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.975963999 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.969989987 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.982840245 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.968691388 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.968520718 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.974277942 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.972496367 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.97087809 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.976764527 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.975065663 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.976477871 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.972820532 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.974682848 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.974113452 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.971478436 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.972608047 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.9728182 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.969950826 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.970739386 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.971076112 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.97469073 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.982954677 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.974282706 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.982858601 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.970184602 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.974155585 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.973016393 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.971786609 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.972430211 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.974537842 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.977158054 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.97751147 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.976108428 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.972395472 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.971812353 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.975013412 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.975870904 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.970273827 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.974527538 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.976344449 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.979697109 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.97344346 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.975530922 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.975163368 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.971584519 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.972543911 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.974533857 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.973890273 seconds)
  done (took 145.141999949 seconds)
done (took 583.612571097 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.903514807 seconds)
  done (took 9.800827229 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.133793768 seconds)
  done (took 9.036353511 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.61471437 seconds)
  done (took 10.514387055 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.991411037 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.002799159 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.97823318 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.975363472 seconds)
  done (took 29.855926294 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.317415259 seconds)
  done (took 9.217711233 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.985296783 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.973810701 seconds)
  done (took 15.926853632 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.009406293 seconds)
  done (took 8.909253232 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.339223482 seconds)
  done (took 9.251066722 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.985975037 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.999597872 seconds)
  done (took 15.906393024 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.97275681 seconds)
  done (took 8.871927322 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.219944896 seconds)
  done (took 10.207778453 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.980931545 seconds)
  done (took 8.919934978 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.972063016 seconds)
  done (took 8.87226159 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.258575166 seconds)
  done (took 10.158966734 seconds)
done (took 167.349290652 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.978333398 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.972678678 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.967205625 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.971578135 seconds)
  done (took 29.788316379 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.007459458 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.008601601 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.016260859 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.006909775 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.997630813 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.99712765 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.008019669 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.008391321 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.998289068 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.004895654 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.007669082 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.006119268 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.008870336 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.018004768 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.016579779 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.007402888 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.008495821 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.010344209 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.998336557 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.01992253 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.006369114 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.007236131 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.975677712 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.974974707 seconds)
  done (took 50.018546819 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.163995305 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.044243327 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.129171338 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.026872979 seconds)
  done (took 10.264418425 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.976015926 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.037055668 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.024570644 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.020799055 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.026093019 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.074569156 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.027387349 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.128740596 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.107048954 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.101111906 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.981167117 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.99365539 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.995421788 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.020382387 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.078394745 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.973412522 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.973051957 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.090437597 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.036271047 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.157643072 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.974826547 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.026375149 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.026593877 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.027874448 seconds)
  done (took 50.779968889 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.977365087 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.982663625 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.981352475 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.977762702 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.975995878 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.975680247 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.983004404 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.977398709 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.000573951 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.982039091 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.974896456 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.976698545 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.982630804 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.973950818 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.974434509 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.988011765 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.989649846 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.976407025 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.980853718 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.982119886 seconds)
  done (took 41.513891137 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.972747284 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.820702339 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.319161033 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.228036368 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.974126082 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.974245701 seconds)
  done (took 32.189704605 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.986178203 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.979688912 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.976789322 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.030073558 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.113651155 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.979571466 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.97615466 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.986196067 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.02067123 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.037161302 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.996667996 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.002070783 seconds)
  done (took 25.986807963 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.972960684 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.975116754 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.976548987 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.985068669 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.985305124 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.982492107 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.983483129 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.97396432 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.989082912 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.996368955 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.983348116 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.987415522 seconds)
  done (took 45.699174068 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.682306055 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04949211 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.975223509 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.848765254 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.453186128 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.52323907 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.867165118 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.695670214 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.445395306 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.902185077 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.179114484 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.973476992 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.05890859 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.976848911 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247830513 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.384781493 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173807147 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.217144494 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.682741951 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.006366575 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.180251782 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186563361 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.259408782 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.976989632 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977659579 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.976972837 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.599750585 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.743442068 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.012492044 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.343071049 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.219598412 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.92927047 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033964223 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.979506165 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.989198411 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980719109 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981904768 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248698635 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.127866856 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107284796 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051978236 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.22696887 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981514522 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.401631092 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.679962845 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.304484949 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.095765257 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.977683895 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979917366 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.97815524 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.903939059 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0717103 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.9817534 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982670748 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.677425249 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.978212034 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055668849 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.979366458 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17996761 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.783737838 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.667505305 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.977097683 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979955185 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.527985812 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.088118024 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.09493555 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.761618456 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.361398164 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.399774945 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.077630523 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.980018265 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98271796 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.168206862 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.946489422 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.710155599 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018617737 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.116593086 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.996800555 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.621050757 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266477221 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.440588547 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.541554197 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.896812333 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247418364 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.795537761 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.961608881 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197865069 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.816047131 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.906687943 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186704238 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005966036 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98616521 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.243194797 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.765941476 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.092924455 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.99417124 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.417130556 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998252229 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.987363647 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981312959 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.196137315 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.426527105 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.011905165 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.102198479 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997549413 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.074700774 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.909738025 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.992335437 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.98539957 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.887230255 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.985976616 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.972051872 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.029860062 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.71101602 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.023385615 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.921117618 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984907817 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.096789606 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025962206 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.940893741 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223195565 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.28034994 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.643370453 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.992508497 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.114255507 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.403147108 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212919191 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.986271394 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.19902499 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.509495691 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.438075128 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.034863978 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274346016 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.043130501 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278413673 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413606728 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060240968 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.780629885 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.609614637 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.200525655 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999181392 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.984789882 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.98770676 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989660755 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.917562271 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.633000331 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.385592497 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.154259182 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.199013386 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.365580679 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.967089386 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.985016555 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.291359432 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.121938717 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.991646104 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.639037016 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.444235665 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.807909421 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.009490041 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.16320824 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.210970488 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.945127318 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999259097 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063633668 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001438598 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.993614229 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.381251451 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351186555 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.986155816 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.986456667 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.931037716 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.992148634 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.987544741 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.519325137 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.953151137 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.991425627 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.99649373 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.85854074 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05960954 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991799631 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.989344335 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.523907439 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.490579217 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.990179448 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.653579896 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.986875363 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174728701 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.261621627 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.366369164 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118364857 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.687065745 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.439032891 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.10542146 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.689189857 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.913382536 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.988242872 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.927331612 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990676145 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.991688276 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991752923 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.175226065 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.261362374 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291804781 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.455807711 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.052367843 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192309092 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.720477191 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.942317012 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.988797416 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994310328 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.988488 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.989417974 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.50141828 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.280866729 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.092292623 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023221112 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.995997949 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11717268 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.000876682 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.917435746 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.991247706 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.987928181 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.467087315 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.019317815 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.936265618 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.310362376 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.89230705 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11268348 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036781064 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.000179407 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994606181 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.722709265 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.039752398 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.921442931 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475231367 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034586976 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.776626918 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.485631351 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.555000244 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290138032 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.317766221 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.329662983 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.070627411 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.211540406 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.082749745 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053047015 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084433508 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.934311534 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.922036748 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.647598317 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332166537 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.265468533 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008386536 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213778266 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724359891 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.231011327 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025847832 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.72174786 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304583699 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.975331284 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01404576 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.38177355 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.106507525 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080801171 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003847035 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.950803192 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.333993765 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03773201 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.705461971 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012280135 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.354680978 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.477929512 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.217327529 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.402554076 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211758965 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.006210054 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.353362106 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.24643557 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.032912962 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.001436215 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.984506674 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.213659147 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.573597452 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.863997935 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00188226 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.199470557 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.291048267 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.90291405 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.998032915 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.192473685 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252873794 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.995532182 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.362705214 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357799308 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.095007105 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056737928 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.225512245 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.726510791 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302259232 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.553083664 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.484191021 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.006593307 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.926197862 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.699039262 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.201790889 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.003003723 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.963573469 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.204883822 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228907319 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.680709907 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.22090565 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.242871176 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.01037625 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.27065189 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073623212 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.097065171 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.328858345 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.422337165 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.237934868 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.225492231 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.539841168 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.220074344 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.447999106 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.158999727 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.002385982 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.206921749 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.218753864 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.215439577 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.402977506 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175379039 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.712604459 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.009411829 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.208659088 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297279858 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06675233 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.411398156 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.173733748 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.087388983 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006812719 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068465646 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.007552008 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010788758 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.426211792 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.537618826 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.015656686 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081506077 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.11880957 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.526995202 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.004809244 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.005449853 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273906144 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358727482 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334750884 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.987130414 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.002964054 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.009495471 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13033198 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.932315236 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012791189 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2746808 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.007323683 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.461644674 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.156892215 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021087268 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.329214346 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.395805099 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.722211086 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.968723505 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007977004 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215362975 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299142367 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.229814993 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.125842128 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2773585 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.329173604 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.035741124 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.40689048 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249434549 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008373923 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.878540065 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.008818197 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13258933 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.211301758 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280628281 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.517548496 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.787886125 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275711395 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.857190851 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.010045648 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.730986544 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277302038 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.276250696 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.060336729 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068351176 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01308652 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.48742443 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.729294627 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136827281 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.928590085 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.935895444 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.013589793 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.335948311 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.246300935 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.716690839 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.008302545 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282932791 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310469685 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277542738 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.060631588 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.865669539 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221470027 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007585369 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.010566925 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.278097294 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215776248 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245941517 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009196164 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.009561641 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.814208318 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.931032939 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.008617417 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058081443 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.232111421 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025192201 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.520121794 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.706029568 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275590385 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047268038 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009274383 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.276192338 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.532846568 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.557201289 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012163555 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.212933231 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.031303733 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.307415288 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.008175492 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.482173269 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.310727583 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.006722677 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.587594931 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.252748943 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.272378661 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.937325142 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01629921 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221011251 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.857209309 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.00914379 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.990564541 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.487651935 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240681725 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.74206901 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.564569402 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.009907816 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.009801046 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.494729714 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038938075 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.494182589 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.034656233 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025157704 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.52748485 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.718897028 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.298394623 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.249406516 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.58864 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.590717591 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.004720822 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.004728562 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.007886369 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.926028808 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.184776548 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.190542115 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.27511818 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.031598712 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.484610136 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03771775 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.397385068 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126378353 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.215321446 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048722781 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.529146126 seconds)
  done (took 1720.934097663 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.013615762 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.058730164 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.078774463 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.005422917 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.003406224 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.000589255 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.085849918 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.009724812 seconds)
  done (took 58.194646116 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.994314156 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.007712803 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.99705485 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.992305474 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.999115333 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.992479408 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.149471126 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.000304144 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.99362075 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.995047367 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.991781602 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.987402249 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.275167465 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.00389243 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.98692122 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.98829673 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.991194418 seconds)
  done (took 76.273146188 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.989341456 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.233791528 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.045946862 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.985630672 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.94063385 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.995503431 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.955761217 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.024967008 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.99225973 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.232261563 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.287701623 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.024484076 seconds)
  done (took 91.626068315 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.991618913 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.987304572 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.987264597 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.987660862 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.987261565 seconds)
  done (took 11.862150696 seconds)
done (took 2247.069313181 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.266490113 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.044564053 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.085819879 seconds)
  done (took 6.047333983 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.133661137 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.180850998 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.292996193 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.055099484 seconds)
  done (took 10.586433069 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.290229355 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.370164974 seconds)
  done (took 6.577022216 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.345501472 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.991521511 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.359273832 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.992173428 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.993612582 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.990288397 seconds)
  done (took 22.899478993 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.988857826 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.995206243 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.992589843 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.991676338 seconds)
  done (took 9.886287396 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.990794274 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.70293515 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.990979957 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.002712123 seconds)
  done (took 21.607525268 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.138412449 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.107742967 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.135262563 seconds)
  done (took 8.300792303 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.133165306 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.834053234 seconds)
  done (took 6.887013737 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.135990304 seconds)
  done (took 4.056566101 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.020336356 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.261903641 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.474671825 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.933535227 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.699748846 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.120795672 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.375619795 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.267001306 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.424927955 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.457979358 seconds)
  done (took 26.956461613 seconds)
done (took 139.687497611 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.530469955 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.041426038 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.216511016 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.405049861 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.239488892 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.216183513 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.221096735 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.411156556 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.080811766 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.067998481 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.395680168 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.237452076 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.174172657 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.036017103 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.178712026 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.036438695 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.238641732 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.398676658 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.072212802 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.301453809 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.231308337 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.038699362 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.236338538 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.040986477 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.238650725 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.162111289 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.582201679 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.033308113 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.213625724 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.57894774 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.162245729 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.435690636 seconds)
  done (took 173.391189014 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.001043693 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.00103015 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.003104758 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.997117336 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.47692492 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.995673145 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.994662873 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.994519334 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.460081732 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.466822503 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.992908868 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.4731434 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.989530952 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.98921809 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.988147488 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.987255612 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.629963328 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.984131903 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.984370029 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.985025384 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.984139836 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.301204659 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.980752271 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.293759143 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.629317587 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.978591257 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.976138409 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.976822278 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.976190385 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.973912361 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.974251786 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.971977174 seconds)
  done (took 213.342903476 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.972418292 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.972756119 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.97028026 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.972958597 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.97257287 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.974041624 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.971489193 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.970900834 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.835902101 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.808814346 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.970457596 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.971872522 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.974700944 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.971095862 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.968279914 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.968316638 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.967725585 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.970116998 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.967803945 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.968449552 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.967555922 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.664162425 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.967315685 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.710046024 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.967871539 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.970476535 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.967806266 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.965993878 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.963678216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.965036414 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.966334594 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.962520417 seconds)
  done (took 224.063261356 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.200424445 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.960108031 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.961827314 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.870140043 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.9637801 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.959176229 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.94588455 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.206821488 seconds)
  done (took 19.961900537 seconds)
done (took 632.715810049 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.361992499 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.188759699 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.139180956 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.981584452 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.255825491 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.027386477 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.977632166 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.045387883 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.809430257 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.058084629 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.645089658 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.004061229 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.739853869 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.00732213 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.102551108 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.036759371 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.571677321 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.672444745 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.126596927 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.069656002 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.161472877 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.905968473 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.062522236 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.865165072 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.662375492 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.958414287 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.021062715 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.574893525 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.993916764 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.140912128 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.66147084 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.302727242 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.998401284 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.980268978 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.032029525 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.012136405 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.208772964 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.99477346 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.107697884 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.705607434 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.059756832 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.722003268 seconds)
  done (took 106.84293537 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.970631437 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.964287402 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.965122052 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.9652153 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.97448541 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.965428022 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.965610656 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.96557481 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.964866503 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.965750486 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.966127026 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.974908262 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.967223232 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.974238114 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.965327858 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.965682991 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.966121123 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.974806682 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.966159217 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.967021331 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.96669054 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.96633484 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.961996791 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.966002996 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.966222813 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.966121269 seconds)
  done (took 53.052598357 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.962124825 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.113497691 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.208053015 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.98351679 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.962722339 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.965193671 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.981204147 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.970059791 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.966456414 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.965854851 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.06796154 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.968638013 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.98129876 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.208855774 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.981848925 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.963094595 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.962804097 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.964994764 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.123702333 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.979029009 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.983774272 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.968351455 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.984822529 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.977106865 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.966477672 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.964290091 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.967433593 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.439975312 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.976844613 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.069326727 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.034549199 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.985763292 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.379394133 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.218872738 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.019605178 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.970566327 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.962807387 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.074576546 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.970874966 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.963017855 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.979968897 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.967689187 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.20843193 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.485419542 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.97695714 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.961724276 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.44846606 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.084320117 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.00441971 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.972948189 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.211541907 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.981823485 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.963149703 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.963342885 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.998872293 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.975477928 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.963925628 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.323405097 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.976703559 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.981657027 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.968258444 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.965431198 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.128116268 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.97249867 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.125372848 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.974271851 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.971836937 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.965533706 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.207933525 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.980033422 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.504824753 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.978181652 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.965541491 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.07237645 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.128141602 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.472623524 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.982478857 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.126831508 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.395326366 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.98617615 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.971680677 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.432588977 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.988004814 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.967752352 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.962031402 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.96113856 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.962516825 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.003920947 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.975684981 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.402891404 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.49471577 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.337276721 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.984959333 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.969053915 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.960357669 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.320015724 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.964907574 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.956029737 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.192914681 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.503454095 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.97782784 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.962170335 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.468561825 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.972718738 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.974384846 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.965731712 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.206441966 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.970607038 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.998310657 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.954654177 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.960126464 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.956400804 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.973328605 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.962349471 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.954024086 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.45841465 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.078757468 seconds)
  done (took 243.463209785 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.956033227 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.953898968 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.95280397 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.953836553 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.953330507 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.955602145 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.953242304 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.956680484 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.95254444 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.953857162 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.948473412 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.947350371 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.951954515 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.951364854 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.991057369 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.949375594 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.553197304 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.947184107 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.94536088 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.944588665 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.582579026 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.945941286 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.942336064 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.946268912 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.942023407 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.937884102 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.947521655 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.976988092 seconds)
  done (took 169.780124989 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.936599957 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.049319626 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.956489553 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.966089041 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.94614275 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.937263802 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.03675936 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.956870842 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.942707592 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.937706966 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.936870161 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.996401236 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.948635662 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.036583196 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.969338904 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.044643165 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.045261635 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.946219562 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.936873552 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.938175516 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.967030691 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.946887481 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.998094869 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.063719833 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.958714424 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.050231128 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.958743182 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.937529398 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.937804545 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.051437135 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.958118677 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.998573702 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.970841054 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.956869901 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.056625303 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.05794135 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.047419372 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.047325224 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.945780758 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.939273962 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.937736323 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.940161726 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.052624438 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.959021892 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.94040684 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.054896588 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.956915003 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.939566499 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.938063276 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.940835332 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.953710818 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.957609112 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.003681445 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.071571498 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.975733775 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.962543758 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.040551074 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.068673927 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.938755077 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.039561849 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.948344596 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.053963304 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.961319078 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.941262971 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.94078009 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.94348011 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.970610286 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.047316999 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.049101473 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.950162139 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.038409733 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.97878638 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.948072222 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.940347037 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.940779058 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.054665793 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.059468289 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.978260775 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.977661754 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.971555654 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.950638755 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.940665381 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.942989202 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.955988316 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.944784053 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.05330952 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.059776993 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.949276291 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.940947571 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.940479144 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.94171994 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.966280072 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.062025783 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.979573676 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.04859388 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.009807071 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.016625191 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.954870556 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.95530083 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.94539782 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.004216738 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.95757039 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.953010158 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.244536997 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.00211342 seconds)
  done (took 210.27237641 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.327108451 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.991491869 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.997899675 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.264973758 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.334552485 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.903037877 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.989097363 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.990325523 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.023770503 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.214611501 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.062782862 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.007320763 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.97671396 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.961824948 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.986211172 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.023264625 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.995671195 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.350214518 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.204416216 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.491402706 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.982394467 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.277984628 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.327364476 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.597306839 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.038729208 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.405272437 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.584565744 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.159348912 seconds)
  done (took 65.349011301 seconds)
done (took 850.655486053 seconds)
SAVING RESULT...
DONE!
