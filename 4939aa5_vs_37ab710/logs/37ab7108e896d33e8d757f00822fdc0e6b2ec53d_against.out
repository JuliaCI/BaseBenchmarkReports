cset: moving following pidspec: 4239
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.303621783 seconds)
loading group "string"... done (took 0.466016096 seconds)
loading group "linalg"... done (took 7.690635433 seconds)
loading group "parallel"... done (took 0.172233673 seconds)
loading group "find"... done (took 1.155070395 seconds)
loading group "tuple"... done (took 1.86935746 seconds)
loading group "dates"... done (took 1.276404486 seconds)
loading group "micro"... done (took 0.237334784 seconds)
loading group "io"... done (took 0.723657852 seconds)
loading group "scalar"... done (took 41.519666518 seconds)
loading group "sparse"... done (took 12.9017899 seconds)
loading group "broadcast"... done (took 1.12473475 seconds)
loading group "union"... done (took 13.914608694 seconds)
loading group "simd"... done (took 4.838539375 seconds)
loading group "random"... done (took 9.744010859 seconds)
loading group "problem"... done (took 2.004356282 seconds)
loading group "array"... done (took 22.679411181 seconds)
loading group "misc"... done (took 1.449724851 seconds)
loading group "sort"... done (took 3.632795256 seconds)
loading group "collection"... done (took 19.598206315 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.537515807 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140965875 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.134286429 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.150493646 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.208844701 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.145093835 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158788002 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.11647434 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.023229935 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.184610495 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155230522 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.518886327 seconds)
done (took 5.271750904 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.228149477 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094684908 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104655105 seconds)
  done (took 0.934532546 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077741747 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.1473814 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096616913 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079047747 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097349003 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.0806505 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097290054 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.093736667 seconds)
  done (took 1.432897098 seconds)
done (took 3.418902441 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.726563812 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.284637042 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204971511 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465322531 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194976901 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216963089 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673939418 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.3518797 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.256286622 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100703902 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144502618 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391975702 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13702124 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68880537 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092240466 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126536845 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178683171 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.459937102 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082669223 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.11107839 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117306943 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141171564 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130001698 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090996688 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184680074 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084894411 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.197659274 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.110204839 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080999461 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.292167236 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202383621 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.693524317 seconds)
  done (took 10.996544398 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11232347 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135835401 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098975808 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140082765 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136024299 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101707777 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084925451 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098114744 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123193088 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17815062 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132234236 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.122434929 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096881682 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08268967 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118218637 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246411881 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12135111 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104597843 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102121576 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105608402 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121956182 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113915967 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110476015 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094165346 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168026755 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223894557 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112663429 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127391908 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09774725 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115012726 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145795275 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.1429697 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096861733 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081133994 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174370541 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125683817 seconds)
  done (took 5.24707353 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189028959 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121667078 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.172090021 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.166813909 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141680604 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161520209 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114636051 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.248541492 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.120210348 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165703639 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142123294 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.117269191 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080557669 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099621182 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096953593 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.646782504 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.16564105 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136333911 seconds)
    (19/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.158155254 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114420279 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09023801 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102042617 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105914545 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080514673 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099698859 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.107442765 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.321400139 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160346491 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099663788 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.147385861 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121427171 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082984533 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134996016 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.21078815 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110516835 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136066375 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096739185 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079199785 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096848474 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179111842 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087889679 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09804574 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12002996 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118765316 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136394605 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09961661 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.100811808 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204966316 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080197982 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115918901 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095579764 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.962173763 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182172866 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090126679 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096777309 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.327143719 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098747177 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098760262 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077622987 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.283194554 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.185673089 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098751703 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080339642 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09769531 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08123087 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.403471182 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081904056 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.830058631 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083571469 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106126845 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079065491 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098762241 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081041095 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105255374 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104069393 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098164234 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097706054 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08166089 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098004955 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078410567 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101165244 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10829218 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086625038 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098192253 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148780352 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095571783 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098615758 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129649949 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101882258 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080261811 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131921161 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100418341 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080089939 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134670132 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099398174 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.091195351 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10229344 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144681787 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097304348 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.192675604 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08039437 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124684757 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099431471 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114396677 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113737402 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09962564 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085104515 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096345628 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077145008 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16588655 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080187791 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098511509 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081408136 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111819482 seconds)
  done (took 22.904649606 seconds)
done (took 39.887791827 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.332103004 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105370267 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105062124 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104648515 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103662851 seconds)
  done (took 1.56420241 seconds)
done (took 2.351385595 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.288991833 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17553182 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096754257 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.171530226 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076723852 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.197408768 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162283093 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114197756 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.186573534 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095776857 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.167153267 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077000284 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096736739 seconds)
  done (took 2.720309229 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096190213 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117128526 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08337196 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113064394 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077216448 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114016361 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093151505 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118782618 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112022976 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08496316 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095180174 seconds)
  done (took 1.887975118 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095631718 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114294565 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083099354 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11195461 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076485743 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112029583 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092600718 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11816294 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111720849 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085803333 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094955954 seconds)
  done (took 1.880328039 seconds)
done (took 7.265624192 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091779536 seconds)
  done (took 0.873058332 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.025456608 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.315348186 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.114082254 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.153379209 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.321162938 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.201042922 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.57334461 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126488535 seconds)
  done (took 15.8092333 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.116384024 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.117642501 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.105364899 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084377975 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.106655876 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086244653 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101548503 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101482124 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084890182 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103260571 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083328104 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.105787766 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100765113 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086648131 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103922385 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086343048 seconds)
  done (took 2.417068712 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120652945 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119058543 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110042327 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111547178 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087442816 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108773869 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109170322 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090938979 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105307298 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105932258 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090637196 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108145517 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106050506 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080673916 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108252557 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110980628 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086299391 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109800717 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109948759 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091302387 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109830509 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097815215 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088912395 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109244202 seconds)
  done (took 3.371038266 seconds)
done (took 23.256019244 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.166152519 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110762904 seconds)
  done (took 1.063937694 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096808002 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115606391 seconds)
  done (took 1.002585773 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.100023962 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098657116 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.126256755 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112268028 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.0816703 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098892649 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123201341 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080817693 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099488468 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080223018 seconds)
  done (took 1.795894472 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084748724 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.11188133 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104611845 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096630129 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108392052 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097288439 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089991891 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101832568 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111087947 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078396579 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105201748 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116800502 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086821112 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119644826 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107257874 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084644831 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104714318 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.10129352 seconds)
  done (took 2.606328704 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.0818289 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098117016 seconds)
  done (took 0.976452102 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083012409 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096412152 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082628822 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100328608 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096201384 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077827245 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096553415 seconds)
  done (took 1.429081448 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.481088321 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137774728 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260042531 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085499114 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124636895 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.311565173 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100595458 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085180423 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.106013573 seconds)
  done (took 2.547428295 seconds)
done (took 12.212651372 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094524431 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119968812 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113917353 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.480017555 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108874628 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.100588303 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.163409969 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.257017859 seconds)
done (took 2.239280878 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.151193145 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330128517 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.118033902 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068115694 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.101092825 seconds)
  done (took 1.418591351 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08147902 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101168171 seconds)
  done (took 0.983555086 seconds)
done (took 3.354794959 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082846109 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.09833996 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080486285 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098929377 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.079307447 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096383987 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081159416 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.09822306 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.132893969 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079485649 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.09981713 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.081599783 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100137937 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079253284 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095872403 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082224683 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095459712 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078310224 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095841583 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078537242 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098254049 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081115175 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096047282 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07934837 seconds)
  done (took 3.006792978 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101131011 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.102328876 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105308616 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08790118 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103443952 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087284169 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105671295 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099024743 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086956005 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102218318 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101698331 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086032319 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100979393 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085175263 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102975816 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102894021 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087402859 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100575475 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083690197 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103575468 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10442751 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082020914 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103937376 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104998264 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085463856 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102654126 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083240997 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101349058 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104361644 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085517114 seconds)
  done (took 3.699770127 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087195571 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09564873 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080402813 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103453527 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078102527 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098774909 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078619509 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097659322 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079154129 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097614913 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080381168 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.098770477 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07858656 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099007436 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.097392468 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083436907 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110326649 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079424296 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096716409 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.07993563 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101138647 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07962806 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097554421 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078725647 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096833998 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078093517 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097604219 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077567087 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098601493 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077913369 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100646137 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08139399 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098551246 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102391583 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08351746 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09615396 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083730934 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095976789 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080454215 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096898868 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079917506 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097054797 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079598506 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104220251 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079260556 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100616093 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078691506 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100264977 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078802983 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101221042 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077682536 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.098439195 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.099202278 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081103255 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101301893 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078698396 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098352176 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078089192 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098516548 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079717557 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097250929 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078510008 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100842302 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079861623 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113158608 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085474672 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098174838 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098834306 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.080553385 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099200694 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.081264634 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.11142214 seconds)
  done (took 7.328927135 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085538884 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108056761 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0803765 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10067028 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077364941 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099831644 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101297251 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080024857 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098733176 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087319403 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098317693 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079428844 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100404472 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108615505 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080729753 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099189781 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086805833 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0960275 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079023455 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102558913 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096649894 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084455147 seconds)
  done (took 2.841880059 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.215898096 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108268216 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143705922 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109203618 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08495305 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108545801 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103270017 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088969586 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104623748 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083907544 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103554225 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104543052 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084405107 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10361202 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101775884 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086742515 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105093808 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08500493 seconds)
  done (took 2.739654063 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095538522 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100838154 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103404326 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101392419 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101314379 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084239131 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106698954 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110552365 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084845702 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100754844 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091969119 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104453227 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102471487 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083196789 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10239335 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081583801 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103577532 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081185081 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111668433 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107030213 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10498309 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093576401 seconds)
  done (took 2.972994799 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099743979 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102612537 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.121108002 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086813911 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096743311 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080849926 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107764952 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081017725 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109975814 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101329977 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082412276 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099670776 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087848659 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101421181 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105949542 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082870634 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102768229 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081919284 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103374444 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076686384 seconds)
  done (took 2.731070746 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104276723 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102332134 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10066129 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093986899 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103332824 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082326959 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111777041 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102206275 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083376089 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129258568 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10295978 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083205323 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112408426 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108312171 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101988301 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093776188 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112069831 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112062808 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083814423 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103423696 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.238227299 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084422846 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113087837 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102347083 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082825986 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102152393 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101429896 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090045048 seconds)
  done (took 3.764422534 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083546713 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100338963 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081225408 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098096373 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080974686 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097847101 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080346027 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098685372 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082954862 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098144359 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083572384 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100947567 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082615902 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101140673 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082538499 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100797348 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08387782 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099139949 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079861204 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098807573 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081278169 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100722357 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081118847 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099395573 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079172651 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100927556 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079154269 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098818056 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099150435 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080620365 seconds)
  done (took 3.540808205 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09258125 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108772548 seconds)
  done (took 1.02711431 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081157062 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116429945 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079587311 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10519549 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105380025 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083793451 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11003924 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087165403 seconds)
  done (took 1.593313128 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097974722 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112500232 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084131379 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114833124 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111526872 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095938102 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162322879 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103092476 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087041857 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.100802315 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113914872 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082602936 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106589483 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083016295 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107586198 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090300259 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100066206 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088256685 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105313348 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100095408 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084982111 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113342478 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084915988 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099540057 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102121848 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094441146 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110763782 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083127019 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105637578 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10950881 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08958437 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094976822 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082914428 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102461004 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.07989008 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111207211 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114023893 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086561246 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110607053 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083514247 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115076398 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096850603 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088585973 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108013654 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092337943 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102831116 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101725006 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078823883 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099462067 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085327177 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09697101 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082367692 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096641852 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090407925 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106702739 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114689845 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08192178 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10450819 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085933584 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105043004 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088338617 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105416285 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103150705 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083934282 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108575917 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086707545 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11021348 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077127452 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096701783 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080126114 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110113316 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124381922 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090836427 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10298155 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10271035 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082098893 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105206671 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085145496 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109060345 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108971624 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084136209 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109430401 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090644409 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10255515 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083908582 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.11018254 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.10064336 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085262099 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100715919 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115218154 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082872478 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099690344 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080497416 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111213828 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085772295 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102476859 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079268144 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113172628 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076893485 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104212924 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103842193 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084588916 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111199628 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107169862 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091352581 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109854755 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09049797 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103220165 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085424287 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100167298 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102806583 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086060032 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109548527 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077001658 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106357334 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084129245 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103163512 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.10854713 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082334652 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10271819 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090953419 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109743928 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080344112 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099638424 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.10402186 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084617276 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10687926 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090835708 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.10152393 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078930396 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098352335 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086615635 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102459491 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.105541656 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089771915 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10583472 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076790787 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100744972 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106196548 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091459075 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103041843 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08322165 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107610012 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082958113 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.103734134 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107602077 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08561276 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.10110667 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088602101 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104514116 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078534111 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10725126 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104054075 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082911387 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105710048 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087216433 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10496891 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083432897 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10249104 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106844801 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084925549 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101521845 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083401272 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100955382 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092881164 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10515835 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097331135 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081532021 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110372648 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08161647 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102360853 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08156518 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105749151 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083684669 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101742992 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.10069738 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085957172 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115475037 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087842213 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104088179 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107506859 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093902326 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103082492 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085017046 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103052216 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083313966 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104826793 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.1086255 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088989512 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109611244 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084962489 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100443532 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107830778 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092365905 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101821617 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081682879 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102369361 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085825903 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110767452 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105529197 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084100901 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100269044 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083909721 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107913022 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08551476 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103178319 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101026012 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088767171 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102648182 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090307823 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105293069 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111535964 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086226097 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098803657 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087129157 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101661505 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087983294 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098951771 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.100091149 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083531351 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10413838 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.08260833 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105756201 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078390003 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110284507 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090457698 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104044235 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100586425 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085062487 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111531912 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085173813 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106840541 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08685773 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108867597 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116093147 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082895561 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106317776 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092499196 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10381667 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076650147 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109366371 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101752395 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083373988 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102370702 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081411435 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10619986 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111508143 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.088883774 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097201591 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085945143 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101299444 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08186835 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099694942 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088589809 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107572864 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103687831 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092394653 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104556045 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.084168463 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107270976 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083284562 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104400941 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103730822 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086543293 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.1048771 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085440916 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102980108 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.084924005 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101955727 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099859047 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086546427 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103073974 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083485021 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108629185 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086281792 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104275262 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085086648 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105414283 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103806496 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084359259 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102530949 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086391067 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104674055 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084163646 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106167399 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078926979 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111716115 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102441501 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091520603 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103586417 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080227267 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.110320595 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084694687 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109417784 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104212512 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085686933 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.105507611 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083652007 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106515874 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111308058 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082197176 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111336754 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088707203 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104639704 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08609938 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104447877 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103995344 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083757262 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104238722 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084788695 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103423674 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083763524 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109348601 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085718437 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104842465 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103999155 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086330439 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.103277014 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085664736 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097891402 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082352487 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103208129 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082868562 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110539458 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103551411 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087592174 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.1021959 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084871252 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.103257621 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080159294 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11246286 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113100016 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085691936 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112841875 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082623687 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.107049482 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112937057 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078271587 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101764859 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081687736 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101751895 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09147056 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.106292284 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110571848 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085384046 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103225939 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082686336 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104970648 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082727675 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098923174 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081868716 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107480192 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086070215 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103135649 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103152906 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086902256 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104791102 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091487205 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103962614 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084989102 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106166208 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080606132 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102997128 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100942298 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088171268 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105483496 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081478128 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101187843 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083499045 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.114122613 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084198729 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.104337943 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103865319 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091798019 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102895268 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086736258 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108886616 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07818915 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.1075704 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102153837 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085371302 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101233594 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087960279 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107011665 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085651179 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112186242 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101626617 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086494407 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104166825 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082229771 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104779167 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084430371 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104613842 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082740435 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106801709 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11200017 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.082721948 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106977702 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084495976 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104895325 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.088920223 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105654212 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.10442537 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093998998 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106624605 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085432323 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111240309 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087009372 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108349556 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105000176 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085600813 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11056801 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082426492 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112360258 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084179786 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105427651 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105684408 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081942457 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103246074 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083929484 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103043327 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088446575 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.106357421 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081711516 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103534693 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.101736162 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086636127 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107586845 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091550881 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107810891 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105039316 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081061394 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09973497 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086984607 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100915279 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086436259 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10716613 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090555811 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107286764 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08404826 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103951216 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110688558 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089998399 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109710478 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08174247 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109469067 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103520822 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08761486 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104370638 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084438643 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106034598 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088624094 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106996589 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08258476 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112257169 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107760308 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085862337 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106150406 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08394389 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104716829 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079019882 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105175241 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.1046598 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090981081 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106706725 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084841435 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113757287 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082247472 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105718266 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107270949 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085258953 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110167809 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078814618 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106106632 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08511051 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105687638 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099165811 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083987856 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101578125 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086824345 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.103877092 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079909099 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114776587 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.090623534 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106992287 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102704711 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083304615 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098750216 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080098192 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103734766 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085420608 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107385142 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.112028764 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084996434 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101918546 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080612731 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103868844 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087458647 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108003308 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081423088 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.10095395 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082433 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107662085 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110424119 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08417945 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104201483 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08892877 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106550943 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08131206 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10984176 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079670639 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108733662 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115043172 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085180578 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105290524 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089102803 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113119274 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104921521 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080255189 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105731439 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086587891 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105354834 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084236446 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107626082 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118558281 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088201063 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104366886 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08349046 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107601038 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083185261 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112326484 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106119115 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087072277 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110041316 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086146778 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11456237 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107053833 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090863924 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105934108 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086547329 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103933633 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083542353 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103233163 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082197032 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10580083 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10457962 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089775437 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114615789 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082691191 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11461434 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112679436 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088921317 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101606623 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08334829 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104637928 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078959435 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106184593 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101982701 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084782593 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10223522 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084540262 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104569724 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090764694 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107015187 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085675955 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105443131 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078494815 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107540021 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.107091522 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086355115 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101728159 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084787121 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10627746 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089445098 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112378004 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10396578 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087662382 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106264255 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086331837 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100760294 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091036285 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104722305 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087617014 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105335283 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08485138 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107119412 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108304378 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091226995 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106764679 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085319328 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118479645 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106611791 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.083304765 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10176763 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090777333 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103159932 seconds)
  done (took 58.695176897 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150041906 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08231758 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100309926 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080680032 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116251553 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099760531 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081153706 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102256887 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081132002 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104723072 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07998647 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100981905 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110800871 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126848339 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094813877 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106035721 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09949842 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083894198 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099608444 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081337744 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110838495 seconds)
  done (took 2.968197917 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107253918 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120475881 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115769914 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121198558 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089643132 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118096009 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117260307 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116223995 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101504867 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11335772 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120486874 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116280095 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091686369 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.113300625 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111205857 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095419819 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121474642 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111173994 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116450164 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096155145 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116230408 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11624923 seconds)
  done (took 3.320773114 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085051207 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104396065 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08625624 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099840569 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084667833 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099565566 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088492435 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102676334 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087090315 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.104493064 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.102275442 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.084128418 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.105446042 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080044748 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10408007 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082906934 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.155455329 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110406953 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083385009 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107291783 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.099203307 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087232325 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100053159 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080813438 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103283627 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089106442 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10738773 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082245233 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105477342 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082749393 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105811285 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.101430858 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.086850357 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10449374 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084134028 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103692362 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084917162 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105177692 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079834982 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.10304851 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084813842 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.102086254 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084121389 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106642663 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.101234917 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083786344 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.105569356 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085673673 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.099936525 seconds)
  done (took 5.585552414 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105519368 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163839937 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08766553 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144252352 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123358564 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114892091 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088389716 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143932608 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104587633 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083048412 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124857665 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123038106 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.1059336 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089599592 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112302834 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105080691 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088219746 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105115088 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109669102 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084704598 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11127766 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090275367 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.123974266 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120179631 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110400331 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084532869 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105503822 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110532134 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098833532 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111832672 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111560004 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090410574 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123568408 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111053278 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103103426 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088438226 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122970917 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106403484 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088230874 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102988169 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088234406 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111859528 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111301115 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12310622 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086273818 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111306733 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084025746 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103873168 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.120064069 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088550452 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114971373 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120902702 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110249134 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085318263 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111030514 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122760574 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086586136 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104474072 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107745088 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099752946 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.104269899 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109130239 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.101197845 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108848034 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.113254851 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100431143 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112158965 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110499008 seconds)
  done (took 8.292081602 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095469647 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.114532083 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122497899 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122955779 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092556107 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114514367 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112667775 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092180209 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11336406 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118197163 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112675391 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13629017 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086913967 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116650495 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113132258 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092050615 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113831697 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113458072 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091775703 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114273173 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113192102 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123075952 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092225699 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12346121 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143714884 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10811764 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091629666 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112954698 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123319289 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113453958 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126416522 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093615375 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114139545 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123152634 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12589579 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092054746 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105818332 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111542143 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092982705 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114506497 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106707856 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102368652 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114463556 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108095833 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092153254 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114195538 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123159765 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127010532 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115598443 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098577277 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114699801 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123418337 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113367558 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092405459 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122476262 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148976709 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123197358 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123506653 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11319258 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102316783 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123827484 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131712374 seconds)
  done (took 7.856599499 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109709914 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117395152 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119709533 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101103555 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083622034 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11069477 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083024941 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104726183 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115785344 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096501744 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119081511 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110356524 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093102259 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119836324 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112250179 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114408928 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088974689 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111158374 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116568808 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110710258 seconds)
  done (took 3.027553729 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095185135 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126780734 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085270328 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114007461 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109565999 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092716526 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109476352 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108914623 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08694884 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110168379 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097443527 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118672662 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107180142 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092919632 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118746252 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112997522 seconds)
  done (took 2.57531127 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097161673 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120026829 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122625108 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085296818 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106740428 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08113065 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.108379649 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102759254 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082695625 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123202624 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085534369 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112858458 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106687736 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084952667 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103484028 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088208429 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104332229 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082960286 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107557124 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.124891475 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096630093 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106333914 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.1075016 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088655351 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107914458 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090723471 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108203757 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104227827 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084001342 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107773015 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085433937 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115078048 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103157229 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084516766 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.105653793 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083158763 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107208659 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086407584 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111494205 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106566833 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084438169 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107919661 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085858187 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10845979 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101671563 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.087554453 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103092671 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092720103 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105433951 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085704259 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.108136485 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109472811 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.0873378 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118447718 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089701272 seconds)
  done (took 6.390514393 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10170971 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111019143 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08137056 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105645215 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089009425 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110062142 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.11001178 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089460117 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108677876 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083898846 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110405971 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090094129 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111278712 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110138796 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088842367 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111644824 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081098604 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109323131 seconds)
  done (took 2.702765832 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092568843 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106671248 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093064246 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108399316 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085321959 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110283 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080630082 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10607952 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105477955 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086929826 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106719799 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088266988 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106877857 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088266939 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107805929 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084736898 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.11098898 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105774988 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086449883 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102737677 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088561358 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10704398 seconds)
  done (took 3.059050887 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119893511 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127618104 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093422207 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.232846308 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104574273 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.135022996 seconds)
  done (took 1.711563155 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112139004 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123059847 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107865624 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108404603 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117754907 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107869441 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089425298 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109716655 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119708906 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103346202 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111351891 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120860631 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119995285 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098583341 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117367225 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117487208 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109248846 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088875732 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108751808 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130880015 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089547689 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120692645 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110300424 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087964191 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110699071 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120087417 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118722123 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123820177 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089372297 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120087013 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115283303 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089228722 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121121864 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125076339 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110179977 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100315987 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110751749 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131419266 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116006112 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099536233 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112217968 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116149273 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098077654 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116802069 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121736228 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109523826 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095073947 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110982166 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110137291 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138068475 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094917076 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11994313 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117778751 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121270919 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098487652 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.158239236 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104061073 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120330769 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118040663 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124558203 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119615296 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094849514 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119769258 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125777536 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117500301 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120376352 seconds)
  done (took 8.338734742 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104840209 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129146071 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110977278 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125642029 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099375959 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110574262 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110058358 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089160634 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109987745 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108136957 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154902294 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089678183 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120903303 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120877839 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088260846 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111819815 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111879839 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12001208 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088235763 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138007028 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11102271 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119635396 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119931438 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099592325 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125306001 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118529043 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109375826 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090280053 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111190498 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108684537 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096263219 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112063465 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121305906 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087777624 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120320113 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111350494 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088240823 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117513643 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111390186 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116202512 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099168578 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131536003 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112042236 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110103949 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103625339 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111769764 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111356491 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087979228 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111466301 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109289432 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102880415 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126593443 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126799034 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12049701 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110821723 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088790876 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111543547 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110107134 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09003425 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117107036 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120700007 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087936766 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138655619 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112004091 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110772269 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119541116 seconds)
  done (took 8.226594644 seconds)
done (took 158.796789877 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099908474 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138942468 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096493349 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.172108606 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10758058 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120195725 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140542871 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098520322 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108764579 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086432325 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109309583 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08727348 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173361627 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.106490821 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088810136 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109430286 seconds)
  done (took 2.749378108 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.203233266 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.258532053 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102944383 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108860987 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089663278 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112292997 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105550246 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09305717 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.111464274 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086983466 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110709741 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087111202 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.108166306 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086770958 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.113119406 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088030713 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108998446 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.110047327 seconds)
  done (took 2.997662742 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11415159 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151677083 seconds)
  done (took 1.178299641 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121201997 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182840664 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301347065 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158366368 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120121482 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129434166 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.159586979 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133730874 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199946499 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124903473 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125046906 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097659546 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14202032 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118243154 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094122173 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120712699 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144793668 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093398283 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.117592312 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11839288 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116720537 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.109260867 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116941492 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094581865 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183782723 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.122450919 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.108149055 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086867556 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118327415 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094782824 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.116524607 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127752154 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12000086 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.158266126 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.12467857 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.160534562 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119035694 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093966604 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116830542 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092931939 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12140678 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.121097827 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104454245 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120790436 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.110601294 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098647994 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.109647169 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086126324 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11719387 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.120690218 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095562966 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116801507 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157600787 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121312431 seconds)
  done (took 7.700247569 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.805173289 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.165798519 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114607782 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.877702319 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139535843 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124574805 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.772103465 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136455303 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234439026 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.787695037 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10811638 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124962755 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232515905 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.239893739 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.932890785 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313709263 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.678419497 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127854062 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151331749 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155503358 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095759469 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137945078 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130881959 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.433666292 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116025883 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090199266 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119301606 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120488338 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162423664 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125480339 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093963923 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.202676273 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251608741 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185678379 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11696073 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111680962 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090174744 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.192756647 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.249761164 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220065874 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.184497598 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109033106 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090582175 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121809108 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131061482 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087551507 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186155018 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.178839699 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173415231 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115938328 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098214954 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121693029 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12197026 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167060727 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.124574036 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.32070273 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.326546758 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089485717 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12042004 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126515384 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246530394 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125763288 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229667044 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137767997 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192794966 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112284968 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800265437 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.172839198 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11296757 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096543175 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118778168 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116110606 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100008205 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168506808 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393856234 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126569264 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114861335 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09075927 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.238698835 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.105230479 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112980647 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164929875 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116801064 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.096463557 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12655614 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123596669 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17347423 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.232626157 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124536496 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120895818 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093906041 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124332045 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116301941 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214485226 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224166696 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.166223121 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.235142369 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102240415 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.188704362 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171003407 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11970706 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.176780487 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117408767 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105076834 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122744157 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222939868 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148643374 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124052064 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094437457 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119332666 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.15056817 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12811507 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097849701 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.193716428 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.461827412 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.17069517 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110710248 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129802696 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097974272 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162093683 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119456307 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263108259 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119172419 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.173787616 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117288866 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088792253 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119451937 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.167911776 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123152267 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097169748 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124170159 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119465507 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.238687376 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224740796 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123831806 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228234441 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187260637 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119874537 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175230805 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121273973 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170947455 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122214283 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098094016 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117414997 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794531899 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123291703 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097826497 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116880195 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189754965 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089412272 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127425907 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.127413008 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086538261 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779732228 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129626552 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.123001967 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104656145 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120374491 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119140699 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095329127 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117302725 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165886873 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237779474 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122743257 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096136588 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.127213392 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162501354 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117094589 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.128159567 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125858388 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105796351 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121455919 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113884904 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104647905 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194551247 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.166823854 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226788648 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.579877465 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113240497 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12690271 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234635185 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091424742 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294733856 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119615243 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.20792981 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.190976505 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100439368 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.327895619 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.191782652 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190991852 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107726427 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.199248946 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088152504 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118857857 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16809424 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113846356 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095554152 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.187245143 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.1033002 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125373351 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.968135163 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090038774 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250709967 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087630443 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.197383982 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096035372 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12364903 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298964541 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090904663 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130544904 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.167128721 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11643319 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.127995101 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.708957158 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.129508218 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121610168 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097671294 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23021571 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16628527 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120004619 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119943127 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099244903 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.189883132 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211901782 seconds)
  done (took 44.514914309 seconds)
done (took 60.048634654 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278735807 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216253738 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.263054795 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177624568 seconds)
  done (took 1.950884471 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174375841 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150813501 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120454651 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.110089365 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151840914 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085841697 seconds)
  done (took 1.733672447 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.360535994 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278057971 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242824359 seconds)
  done (took 1.826747848 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.250421897 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.272616253 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.33330089 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.425026377 seconds)
  done (took 2.322521279 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.202169068 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133394549 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.113245173 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105379089 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.199706023 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.24320896 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143685501 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.169785225 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.124744935 seconds)
  done (took 2.422551291 seconds)
done (took 11.19829966 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.137215323 seconds)
    (2/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.260411509 seconds)
    (3/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.129688288 seconds)
    (4/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.248293663 seconds)
    (5/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.257553212 seconds)
    (6/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116398298 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.104046988 seconds)
    (8/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11926405 seconds)
    (9/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.163327441 seconds)
    (10/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.177269306 seconds)
    (11/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.150408077 seconds)
    (12/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.188923655 seconds)
    (13/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09520443 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.126945513 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118095754 seconds)
    (16/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095229193 seconds)
    (17/286) benchmarking ("sort", Int8, false)...
    done (took 0.199251447 seconds)
    (18/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.221253004 seconds)
    (19/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.254563629 seconds)
    (20/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066609414 seconds)
    (21/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.12384529 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.241856167 seconds)
    (23/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.12026693 seconds)
    (24/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.172051281 seconds)
    (25/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119908198 seconds)
    (26/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.220702097 seconds)
    (27/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.235638446 seconds)
    (28/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.201780034 seconds)
    (29/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.103735569 seconds)
    (30/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.133883815 seconds)
    (31/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.206141905 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.227694018 seconds)
    (33/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.093175149 seconds)
    (34/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.189509709 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.119420078 seconds)
    (36/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.164577726 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111847359 seconds)
    (38/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.184918651 seconds)
    (39/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.120502205 seconds)
    (40/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.100773075 seconds)
    (41/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.12383061 seconds)
    (42/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.078610352 seconds)
    (43/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117149027 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.112854591 seconds)
    (45/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.141001443 seconds)
    (46/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.089484014 seconds)
    (47/286) benchmarking ("sort", Float32, true)...
    done (took 0.233695477 seconds)
    (48/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.085375826 seconds)
    (49/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092399589 seconds)
    (50/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.17347819 seconds)
    (51/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.183846334 seconds)
    (52/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.097888877 seconds)
    (53/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.18811466 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118785087 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.109570422 seconds)
    (56/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126545532 seconds)
    (57/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13828055 seconds)
    (58/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.087805796 seconds)
    (59/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.12406167 seconds)
    (60/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.227735107 seconds)
    (61/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.175562434 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.11360483 seconds)
    (63/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.198444792 seconds)
    (64/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.129430147 seconds)
    (65/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.093039951 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.112029577 seconds)
    (67/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.090486954 seconds)
    (68/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.19347354 seconds)
    (69/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065973226 seconds)
    (70/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.137369663 seconds)
    (71/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.15363371 seconds)
    (72/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.109542639 seconds)
    (73/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.111723738 seconds)
    (74/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.185372389 seconds)
    (75/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.118428209 seconds)
    (76/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.174190833 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.139854331 seconds)
    (78/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.164449607 seconds)
    (79/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.138532383 seconds)
    (80/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.198171112 seconds)
    (81/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.152731093 seconds)
    (82/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.07050949 seconds)
    (83/286) benchmarking ("sort", BigInt, true)...
    done (took 0.236468597 seconds)
    (84/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.17695678 seconds)
    (85/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.204712798 seconds)
    (86/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.152407156 seconds)
    (87/286) benchmarking ("sort", Int64, false)...
    done (took 0.114294211 seconds)
    (88/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.187127245 seconds)
    (89/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.104627383 seconds)
    (90/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.093105343 seconds)
    (91/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090799831 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110258959 seconds)
    (93/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.146272464 seconds)
    (94/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.092050131 seconds)
    (95/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.112950786 seconds)
    (96/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.119973547 seconds)
    (97/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.07541847 seconds)
    (98/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.116986682 seconds)
    (99/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.076595885 seconds)
    (100/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127889863 seconds)
    (101/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067206421 seconds)
    (102/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.110586579 seconds)
    (103/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.161088138 seconds)
    (104/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.127159192 seconds)
    (105/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.123411651 seconds)
    (106/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088634939 seconds)
    (107/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.101034902 seconds)
    (108/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.068650856 seconds)
    (109/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086664455 seconds)
    (110/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.186869181 seconds)
    (111/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.125008399 seconds)
    (112/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094573493 seconds)
    (113/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.095420693 seconds)
    (114/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.13544232 seconds)
    (115/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.113099123 seconds)
    (116/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.08665827 seconds)
    (117/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.177560471 seconds)
    (118/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116583176 seconds)
    (119/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.150359841 seconds)
    (120/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.093777498 seconds)
    (121/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067361863 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 0.184074376 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.121009424 seconds)
    (124/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.068228223 seconds)
    (125/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068576831 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.136073685 seconds)
    (127/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.139501647 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092815544 seconds)
    (129/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.120141241 seconds)
    (130/286) benchmarking ("sort", Float64, true)...
    done (took 0.234976773 seconds)
    (131/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.1180111 seconds)
    (132/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.131863326 seconds)
    (133/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.122331541 seconds)
    (134/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098686162 seconds)
    (135/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.171282731 seconds)
    (136/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.187150381 seconds)
    (137/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068253029 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.120713328 seconds)
    (139/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.119275288 seconds)
    (140/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.114394914 seconds)
    (141/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.121007161 seconds)
    (142/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.165046898 seconds)
    (143/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.08728757 seconds)
    (144/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.139084776 seconds)
    (145/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.121904858 seconds)
    (146/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.122539938 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.112659876 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094494521 seconds)
    (149/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.141959118 seconds)
    (150/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.14577164 seconds)
    (151/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068957266 seconds)
    (152/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.121592068 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.09756818 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.11161057 seconds)
    (155/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068572546 seconds)
    (156/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067009411 seconds)
    (157/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.123559547 seconds)
    (158/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.18658413 seconds)
    (159/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.120007981 seconds)
    (160/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.128863895 seconds)
    (161/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138852664 seconds)
    (162/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.068535923 seconds)
    (163/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.087388344 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.112991667 seconds)
    (165/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067397537 seconds)
    (166/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.114226252 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087624619 seconds)
    (168/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.181913516 seconds)
    (169/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117645947 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088396095 seconds)
    (171/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.160915609 seconds)
    (172/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066800722 seconds)
    (173/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067572283 seconds)
    (174/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.175515067 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.119453195 seconds)
    (176/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.090480589 seconds)
    (177/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.139352872 seconds)
    (178/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088644922 seconds)
    (179/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.093434384 seconds)
    (180/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068309269 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.122102716 seconds)
    (182/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.090641714 seconds)
    (183/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.091849032 seconds)
    (184/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.069438504 seconds)
    (185/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066709693 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.122879391 seconds)
    (187/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113130058 seconds)
    (188/286) benchmarking ("sort", Bool, true)...
    done (took 0.226762911 seconds)
    (189/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.094018909 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086590413 seconds)
    (191/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138966271 seconds)
    (192/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.0671799 seconds)
    (193/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.093107343 seconds)
    (194/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.083560087 seconds)
    (195/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068140657 seconds)
    (196/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.123971694 seconds)
    (197/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.12237052 seconds)
    (198/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.096893657 seconds)
    (199/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.077377644 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.123106942 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119587213 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.097744753 seconds)
    (203/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.2356586 seconds)
    (204/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125101673 seconds)
    (205/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.070071456 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.113020481 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089447038 seconds)
    (208/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.166882627 seconds)
    (209/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088130769 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.121420883 seconds)
    (211/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.08861462 seconds)
    (212/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.10258346 seconds)
    (213/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.068215402 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109838906 seconds)
    (215/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.289954519 seconds)
    (216/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138327242 seconds)
    (217/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.113019407 seconds)
    (218/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.114433554 seconds)
    (219/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.096259867 seconds)
    (220/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.119310809 seconds)
    (221/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.071691142 seconds)
    (222/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.09217177 seconds)
    (223/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.122820558 seconds)
    (224/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.093024497 seconds)
    (225/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089949207 seconds)
    (226/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120149577 seconds)
    (227/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.067886287 seconds)
    (228/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067600402 seconds)
    (229/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.101865125 seconds)
    (230/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067864058 seconds)
    (231/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078408881 seconds)
    (232/286) benchmarking ("sort", Float32, false)...
    done (took 0.176860251 seconds)
    (233/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.121764171 seconds)
    (234/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.191453146 seconds)
    (235/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094876107 seconds)
    (236/286) benchmarking ("sort", Float64, false)...
    done (took 0.17425641 seconds)
    (237/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067920888 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111665395 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087654797 seconds)
    (240/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.111300071 seconds)
    (241/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085788908 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111935299 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093418872 seconds)
    (244/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.092934838 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096549365 seconds)
    (246/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.120217048 seconds)
    (247/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067337745 seconds)
    (248/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117708633 seconds)
    (249/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.157264696 seconds)
    (250/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.124505653 seconds)
    (251/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.112774795 seconds)
    (252/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.079729981 seconds)
    (253/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069161724 seconds)
    (254/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.113816061 seconds)
    (255/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.077676615 seconds)
    (256/286) benchmarking ("sort", Int8, true)...
    done (took 0.224678834 seconds)
    (257/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.11933861 seconds)
    (258/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069660455 seconds)
    (259/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067169972 seconds)
    (260/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.093577107 seconds)
    (261/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086771212 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119744856 seconds)
    (263/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.068493397 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.11052629 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086876167 seconds)
    (266/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.166437822 seconds)
    (267/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.137105785 seconds)
    (268/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088175766 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121013201 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087732034 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.119460866 seconds)
    (272/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.117166501 seconds)
    (273/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.092477777 seconds)
    (274/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088293854 seconds)
    (275/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.112012937 seconds)
    (276/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093277476 seconds)
    (277/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.111742231 seconds)
    (278/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.068695087 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117937841 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087182246 seconds)
    (281/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125654135 seconds)
    (282/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.089881006 seconds)
    (283/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.124807961 seconds)
    (284/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.079051955 seconds)
    (285/286) benchmarking ("sort", BigInt, false)...
    done (took 0.245056099 seconds)
    (286/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091709853 seconds)
  done (took 36.624632501 seconds)
done (took 37.574829175 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102098411 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150471547 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096607606 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138206426 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125244758 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091681339 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120417315 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098261284 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.127213313 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127496433 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098081377 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.095725189 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097527016 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123414458 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097376429 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141568403 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125241618 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094666319 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120971853 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085746919 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121060582 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.109842227 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.090436322 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069518618 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.124840161 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.09458841 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118086305 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120754162 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088214485 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.113295575 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092623618 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11968715 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087180255 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126965717 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092901247 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120573059 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.121440377 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098201592 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113640208 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087818031 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119972462 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087206498 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119595282 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094948642 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118455628 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093338886 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.121397546 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124030418 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117751131 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117173702 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096417413 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122842518 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096378848 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120022129 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.114540476 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097093724 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.11760545 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117263781 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121089035 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09182988 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120534091 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.11848271 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.09459438 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.12054883 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.095967675 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122675592 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098456698 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118785687 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096655367 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119049088 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.110530984 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097680516 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.11515125 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.088470728 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.121649329 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.099283465 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.111338092 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093072877 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.119264646 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091924805 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.112677491 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089454046 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11450135 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092859163 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11540387 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070701189 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.116452038 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094076868 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112843598 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096482704 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118702444 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093426581 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115377987 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124826961 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.088950683 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.117664041 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.088978957 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.112149252 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090516311 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.116675148 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.087569668 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115427346 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.097340049 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.115324775 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093470173 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125152827 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086483141 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.119676539 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087045551 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.113561018 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126172899 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098520787 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.112182396 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094372265 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.111341073 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.095776761 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112626405 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.087703226 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112626707 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088081231 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119073702 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087041237 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115578428 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.09368762 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126919579 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.111302911 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.092483961 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114492792 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089402944 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.117286303 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088728263 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.111838162 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.091173764 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.102237233 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092278076 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.112331276 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09714836 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115257747 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097095573 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114954335 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096933534 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.118711504 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093602522 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.118839576 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086347148 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.100419212 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093643156 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114943823 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089626346 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.113645626 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.089322252 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.113462239 seconds)
done (took 17.21673219 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.089759036 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185449281 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153043296 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143409691 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107703999 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114314296 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122687121 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119963274 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.116474715 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144780328 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.11046395 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133829982 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149245539 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086921871 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113596466 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091566834 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115842881 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.126481814 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.123512059 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134991841 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166235203 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.11152341 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.124629249 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138265349 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122200388 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114694664 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114906015 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09184969 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.117753389 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.127507483 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109341625 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116149701 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089378242 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135890849 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104903882 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122718247 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111984555 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.09626894 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.112304643 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088706065 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142487344 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.135365401 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093623216 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119890762 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091215843 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.117205066 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089583322 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123395414 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.12354047 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.093115818 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12921351 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158078006 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09127717 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123718806 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.111654831 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.099656943 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.123493124 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090387223 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.114869731 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091129988 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.114519149 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091852501 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128625495 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143419482 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.11568949 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.09928769 seconds)
  done (took 8.752756019 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.1075873 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141356094 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106811515 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.134008412 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113644761 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089462419 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11443586 seconds)
  done (took 1.818657263 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090672381 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135544041 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112203938 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.138406004 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.135613806 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.111953313 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12604813 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088257963 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134681385 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.115260804 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110250724 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1522446 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116154852 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098179001 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140644682 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08902967 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139471557 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.113444643 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094678364 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138840621 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091981037 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137584545 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091071452 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115767435 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.128751263 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.090911158 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164469127 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094800725 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117414602 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117479758 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089677686 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.154568769 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103587726 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127121798 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115019875 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10632752 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130671335 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087923385 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.128883131 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09463942 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129951239 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115069077 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091616445 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.113952909 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.095508708 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125724546 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.093707476 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.134550677 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092269009 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13597736 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090457604 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130241728 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.113405898 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.095660176 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.116033012 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096370529 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125773697 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090135073 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136518818 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091481949 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13256022 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131617057 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103707689 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133069559 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09161019 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129885784 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.130696587 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.093338123 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117069398 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093718638 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13266266 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087338676 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.118441949 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099827977 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118452225 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.137975726 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113656272 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117792785 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100313976 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11688289 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089773352 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.117328774 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.138531565 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094647287 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116442165 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094725999 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118800963 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.088833772 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.115127123 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093515507 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114376869 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091668585 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119541797 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089658524 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118425894 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132117871 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.092561451 seconds)
  done (took 12.022814212 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092720651 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115344637 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.0941509 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116934192 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091753862 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116730383 seconds)
  done (took 1.654757182 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.118532661 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119356296 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104306492 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12251446 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158182637 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129056925 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.107178946 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126612653 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107993612 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129038195 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130684402 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105453463 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13858824 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121477457 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104481406 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121919909 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130198023 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101773534 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129395924 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098201283 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139922417 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123626287 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097707169 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.136001827 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11908989 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097534249 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129093704 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102729106 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129075705 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124407616 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097468316 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119880764 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.120685698 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.100424413 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131383468 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09639979 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123493465 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.11992302 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101921138 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119772887 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.128834486 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100049967 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129094813 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094971219 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.1262668 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121961746 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095295352 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127673469 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.129912559 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095716655 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121265663 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095937833 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120562145 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119265929 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.098102899 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128668113 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094444836 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.134051652 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.125781312 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097362775 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120570727 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093665686 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126349929 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119932885 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104897117 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121946557 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.12216004 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097640669 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123692283 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096417099 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121323721 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119634557 seconds)
  done (took 9.41395513 seconds)
done (took 34.664041605 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.69321897 seconds)
  done (took 1.714851726 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.829044322 seconds)
  done (took 1.852950859 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.172256633 seconds)
  done (took 18.226123668 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.504315609 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.607312525 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.990200924 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.174942739 seconds)
  done (took 3.299592847 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.976606993 seconds)
  done (took 2.01693595 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286234209 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236690821 seconds)
  done (took 1.548912807 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.786260284 seconds)
  done (took 1.823982591 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.452678784 seconds)
  done (took 2.483723935 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327152919 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184733106 seconds)
  done (took 1.553610948 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.558132764 seconds)
  done (took 1.5954116 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.216515221 seconds)
  done (took 11.259666958 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.271791481 seconds)
  done (took 1.318924203 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304320823 seconds)
  done (took 1.342450226 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.565425375 seconds)
  done (took 4.607998251 seconds)
done (took 55.674082615 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101216443 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128960051 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103412692 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126363272 seconds)
  done (took 1.494697972 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.103484459 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122667409 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10209152 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123160285 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.128748894 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097662847 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125517785 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102223976 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123362876 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097346839 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124104559 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121677816 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100229496 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.126550218 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094107249 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.127075976 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12638208 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.09810895 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12667798 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097357239 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.122175491 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098272758 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12847706 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121109642 seconds)
  done (took 3.783253044 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102754914 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120646744 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098498613 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120607428 seconds)
  done (took 1.486672757 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.102495463 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133299112 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105806378 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127818521 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132681088 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.10857221 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118899029 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.09368938 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.121523253 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100038143 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.11802221 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140909487 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.108291733 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.126528437 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102686073 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.117668321 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091976144 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.133769191 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126279962 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102200183 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119962817 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101756853 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.118359475 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110363158 seconds)
  done (took 3.810622839 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173164836 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.13051119 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140627905 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.097595892 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162491201 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.14356651 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088833299 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143327743 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088186354 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134008946 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118955305 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133668708 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131459115 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089178413 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116326824 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087617991 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131009726 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131263766 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092593847 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129461046 seconds)
  done (took 3.518353547 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099278695 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118382059 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089516346 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118086044 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100296853 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12246567 seconds)
  done (took 1.699099988 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092909556 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114917789 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09242982 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115834084 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096613868 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116434311 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090701579 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11702039 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091154737 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115448925 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090869242 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116522599 seconds)
  done (took 2.301785002 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.50831624 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123069752 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122271151 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090870027 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123501511 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090908617 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.131704194 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093418085 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.143288384 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089343864 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118112058 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.120198305 seconds)
  done (took 2.807333261 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240316936 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128352504 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281876485 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368034311 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159700226 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167562648 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283652594 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168024331 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.19467849 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153427915 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225324924 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199841073 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153991692 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194376194 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140282997 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146810569 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193389232 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253500013 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154032365 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21428229 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181665162 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170222372 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182395801 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152284589 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141458781 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164416152 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123258891 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104617687 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238881223 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181143288 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221812784 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163940897 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14868245 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206375796 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236227729 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223138391 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259897773 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139495852 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.169524519 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.173192281 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235290258 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140740546 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238406926 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158602095 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106431166 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226952323 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16301237 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177225291 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.147800189 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140341816 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201289539 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244512559 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.188922032 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140887744 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302248401 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156180168 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.1610565 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1912626 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256036434 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229049546 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192757477 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121262378 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192089831 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194061731 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186339712 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.154211652 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.205840487 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148247407 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186884108 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19247236 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170687286 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178509942 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.213489322 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139569953 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172517905 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175978552 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172378757 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261726586 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188732842 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122718016 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172167079 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149988337 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106142693 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196444152 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126879726 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217111676 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14667579 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165594925 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21250481 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162584561 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163545425 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195734989 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215497257 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148911403 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08567037 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155470306 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157260606 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175006001 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141032184 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159915834 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158840148 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104372539 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171444621 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.127256501 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187504899 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.120072436 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170291818 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18588142 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.12844005 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163593836 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126030951 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.153576699 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205076361 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20150609 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142040615 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107913372 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237711784 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185060513 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.143766092 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181047139 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201530525 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147225314 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151437899 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200881797 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249040755 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141197286 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20542107 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150712742 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136157832 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106933376 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212030876 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130930728 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164605656 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13528057 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183831717 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233664919 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098806018 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141653589 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22471213 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109618984 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13542656 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156934185 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15109905 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111024663 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145773973 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14746326 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177601963 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207272621 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129564919 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167524515 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149252543 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236024101 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142245488 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152728266 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123690333 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123850807 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.189116489 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227824447 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10645471 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235013435 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171219505 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202192974 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174353295 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137729987 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178865306 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132240789 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094495579 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2242078 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167692365 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163513852 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197138711 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226567366 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.17913135 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.184735937 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169559433 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17610379 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.169036001 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156698325 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140349502 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163811571 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16098644 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.098207481 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.141833059 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13631838 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150642415 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116454855 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136548125 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226764674 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174222508 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193445448 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16476589 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151760259 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185099455 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.131845653 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179986964 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178871169 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149344587 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.198154118 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22181619 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192484488 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145831441 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204838966 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.123391554 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098710381 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.146055949 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170026095 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138844636 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13648417 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165196579 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184968846 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179596437 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175221062 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236160702 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179729432 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195585184 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.124156 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142789021 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208381902 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181782548 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155237578 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144514608 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152462954 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182117618 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151859908 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259088601 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169894044 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178333657 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203138061 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154508612 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134883238 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153991792 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180991397 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156861602 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174887006 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148860433 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139635278 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156488036 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.105547583 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162516443 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178693031 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16526359 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211656858 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150981298 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189371452 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129870672 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166111829 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162587311 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165759107 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083500042 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171900874 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224471409 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118448749 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163236938 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213261492 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105691384 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309876607 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235629192 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191366441 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14108588 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159054924 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163694175 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164234463 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169442814 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180319293 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162785271 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190218542 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160366437 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136770552 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111818018 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151621987 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155188706 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133975339 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147238082 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.180041368 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.110717558 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212535072 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158457874 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158764237 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174713969 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124186749 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146823808 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153721718 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218824497 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212345745 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215108401 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153832123 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17568067 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237401685 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09991894 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134515232 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134065768 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180588589 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110120911 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222829396 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190649483 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232537494 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187300439 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180833959 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141949503 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.09342375 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161827565 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171429658 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233701255 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151078726 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.15155951 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200868967 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.138907968 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106309171 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170099796 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292706924 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122026476 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218181336 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082221757 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.287317892 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131814929 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106836399 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167940047 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234429598 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137550251 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153556186 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172563251 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163670933 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167118698 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152509404 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.221224826 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218456579 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229095458 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183993319 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.1057096 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160546561 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170520649 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216802995 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159018931 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112407041 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23638455 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197529131 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195578297 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.145530898 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170745667 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17006376 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161595229 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218913201 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109528695 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238392013 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108110535 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223202579 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154477751 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140453136 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175998206 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192018145 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145413399 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183594255 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18313192 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138401429 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13534986 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162401677 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178743587 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151222522 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128116313 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182620929 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098027645 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226095982 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266155301 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108990488 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157846354 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150528247 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136823149 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156612347 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159990897 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111787104 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169892655 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200176046 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137856527 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187079709 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233541864 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172766329 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17057626 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147553205 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.69088564 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.10370365 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225307712 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121087861 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212841413 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121763126 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201863092 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133060169 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198222461 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201021175 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162872139 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233682292 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192714998 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.20916884 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107909073 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160354843 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157767153 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14614252 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156003005 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169830021 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163483151 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.148794239 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.181279708 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167945146 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136196053 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113199614 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231179082 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121142188 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21285345 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181732559 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111144246 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20227715 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193506267 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136246226 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.17686865 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232170951 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116717657 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152464942 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.137062086 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.153893211 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267382434 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100018633 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190320597 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21950132 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16187782 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172576493 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148882479 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196712421 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161244115 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187679453 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145637734 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159214988 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159945461 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139747315 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13069548 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129164497 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19371511 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.124892908 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162176088 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.169400851 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199625315 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125515995 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118163475 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315965575 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178338535 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21854633 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138623015 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138141696 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162268249 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120585523 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.207048476 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183846209 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137067531 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10873562 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138543784 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130152168 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139003204 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160729801 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195685292 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162740701 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236783219 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111945471 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283479889 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142525843 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155949757 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091644566 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.135349047 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152857658 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11863677 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152350209 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22317335 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26947399 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.121762709 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.137553585 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152834438 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098372214 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138792363 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168210939 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167156146 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181670198 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145692515 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109445775 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130453605 seconds)
  done (took 83.067942053 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168299429 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.135965901 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.15183034 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20581208 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.180671072 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272396679 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.213760013 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256900133 seconds)
  done (took 2.729814147 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095453648 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.150254175 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158276766 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.135704993 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093652044 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120861785 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343160713 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13452667 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.0935125 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.151390492 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175970643 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.096454864 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.561936337 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09362356 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121508739 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.11086087 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.094500908 seconds)
  done (took 3.868907218 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.34378841 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.494146711 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.128663096 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.202997754 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.185133169 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.123849976 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.708997752 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.121423882 seconds)
  done (took 12.45448942 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.117741912 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.138647745 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.125244399 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.155260789 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.142980013 seconds)
  done (took 1.827395549 seconds)
done (took 125.890084588 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100092639 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129330552 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099194449 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13153724 seconds)
  done (took 1.594067272 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.097077145 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072079439 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10205854 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07605724 seconds)
  done (took 1.492932342 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.19222626 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.170863152 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.39249011 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072843328 seconds)
  done (took 1.644055534 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.120291604 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134363309 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104397614 seconds)
  done (took 1.516094945 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.110455648 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130728339 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104820871 seconds)
  done (took 1.498805401 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.109900769 seconds)
  done (took 1.261536423 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.111521944 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138844699 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109488359 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.138666334 seconds)
  done (took 1.651973471 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.101465795 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128246497 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11054275 seconds)
  done (took 1.489707275 seconds)
done (took 13.657417794 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.107029629 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.420817043 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413121646 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112688948 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723475241 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380712101 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.038278042 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14891889 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16754271 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095101625 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141447408 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672766414 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.029636041 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.374871416 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.986503268 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.373705996 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679067999 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122929217 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121008833 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096240074 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.021726006 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092664975 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124336146 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093105463 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705211458 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426212615 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095979322 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371763926 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093354085 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128503101 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383865118 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125110478 seconds)
  done (took 17.009178158 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.098994959 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176071779 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099331428 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126075791 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.125411653 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096235451 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125816686 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095238221 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18109556 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124528827 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112718018 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123353428 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12680382 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097158506 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146439286 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093796488 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127562096 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093620739 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122882204 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12283708 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113863731 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122075111 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094780644 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123389366 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094809757 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138208995 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124021448 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094655151 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122911345 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100594031 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129743374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095357216 seconds)
  done (took 4.924470214 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144968688 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185487261 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129970561 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128283645 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170682734 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125049737 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200626677 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147433802 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18551389 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097376972 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141534188 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094252135 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158763073 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124276989 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116265315 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123265078 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097623504 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124743543 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092899843 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125957401 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14165461 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094668133 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12390622 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093997401 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125437556 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136579092 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098447646 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12269186 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094772765 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130470708 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099943438 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124983317 seconds)
  done (took 5.259883413 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.100848938 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127264803 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111199252 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139823965 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095236213 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127019598 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097917766 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126620281 seconds)
  done (took 2.083414173 seconds)
done (took 30.432663744 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116486185 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128794033 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.109159497 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136356394 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.104463962 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133445505 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09176541 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135893691 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133554476 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103907038 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138769839 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.0928939 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124528793 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093554943 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137373438 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098464457 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134370148 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102449236 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135571334 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133661821 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.0961801 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134557625 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104079075 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.135576009 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104672531 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135439047 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138077407 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101054246 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124975237 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095786945 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.126500647 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104437495 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125594473 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10559279 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.129082695 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097765375 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125330929 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094232219 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.135419489 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133682436 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101250762 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134765056 seconds)
  done (took 6.116178693 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.111383332 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140506632 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106064623 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081535329 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118580561 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080899896 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139797477 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080140179 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111865704 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109405306 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075442705 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.109155292 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079488548 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103206756 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079223428 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076552504 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110067685 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076753394 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077278608 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107516411 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081180617 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073388752 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.10963345 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078961742 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104447667 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083799942 seconds)
  done (took 3.670783572 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.104907185 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136090444 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114458827 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186106783 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162693357 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100737353 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133506387 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141042841 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110655889 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122146532 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097934624 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151955923 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110053033 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131671665 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09239325 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139395645 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137558099 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095713211 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130295744 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113091191 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140290281 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102490098 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143411812 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134017807 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093461296 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12454505 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098416654 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137079357 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.09896309 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133227276 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.1262556 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097588841 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12464915 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104777156 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.129168946 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095211091 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.144211875 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133648156 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.103221173 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123197924 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101830907 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.124328866 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114827767 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.163575444 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.122360337 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.101069395 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125911528 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103915651 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.124013181 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111288604 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133783551 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093261325 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.127133506 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091888158 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124319592 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137055225 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096272835 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.125485787 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.104141419 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.129515923 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106678105 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127769743 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10989257 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.124595584 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130786826 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.093370356 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.124149326 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094611066 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146262192 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095254245 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164051424 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.124266991 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.096118137 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.133532415 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102032659 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13068795 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093424011 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140562572 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131161544 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098820641 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.132991087 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.097483423 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.126373997 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.112335522 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.126982122 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095738239 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126285037 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100673483 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.127080378 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094348355 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138700017 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.121953647 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097749015 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.142179256 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093104035 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.125661571 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.101229695 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.130178126 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.120800423 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108634231 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.128885619 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.095084064 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.135364145 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093925657 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.127542417 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103347049 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.130127108 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.121886206 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.100229984 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.130195746 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.094999055 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124984644 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096681038 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125406575 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103530964 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.131939276 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097952628 seconds)
  done (took 15.060567268 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.233608843 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.219238471 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190404905 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.298988606 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136524354 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.1169887 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214195402 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.158188015 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123330175 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.131568022 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172969102 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183536374 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.171733854 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180352266 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171585672 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.125450317 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141059061 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.138331488 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.2161869 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.293657937 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144760975 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103748459 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164107899 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.164128453 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138046747 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.104227605 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.153474946 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.138751976 seconds)
  done (took 5.913529056 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.115278751 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157889015 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.100080751 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147737214 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.151362257 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093656671 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130969104 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095917061 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.138451549 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137983217 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094761256 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131864479 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100403403 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134251874 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124805215 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104847673 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134256415 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096263396 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128308234 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098805842 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135929054 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.131965033 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099277956 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122844597 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104655152 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12391253 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087849367 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.145194811 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124459326 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117256749 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122842296 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102477707 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.139080469 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094355522 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124594791 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096605213 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.127400429 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095986783 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126808275 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091966029 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.124428345 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078034604 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123900735 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.139089329 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101295803 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110811185 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.102900423 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.13066944 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096567349 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123278575 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09791506 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127567301 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097528705 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132445902 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096895196 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126460679 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097876627 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117828775 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100680159 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12752329 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085240978 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123701589 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.100466065 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.120323776 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101685169 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.131013869 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09235948 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12811183 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09752988 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131074994 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.123751205 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.102171862 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.121828562 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.098463449 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.126810416 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.10043553 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.128122228 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.09359488 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123975502 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095352959 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.105739367 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.094913356 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074085325 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127915228 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.12153145 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.095135382 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.125627584 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.102121929 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.140487637 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095595769 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.134508347 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.12292679 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.096004446 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.126283641 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.08599912 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096726889 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141173178 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143898168 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09419933 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.124044436 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.138052257 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.100153699 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123130181 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079013782 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102997012 seconds)
  done (took 13.192791766 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137117574 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155829412 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125467776 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.11539194 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158827977 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158258157 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103199537 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.133001427 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097286941 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144824689 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094381873 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.134291714 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095182038 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.1403546 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158165121 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105573456 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127756944 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109416336 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129868751 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170246802 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113968764 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14526907 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.14184364 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097647903 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.130172509 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.112705773 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162130626 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.138874213 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.110078348 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.144272555 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109998651 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162137201 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144336381 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100306749 seconds)
  done (took 5.608233081 seconds)
done (took 50.716162586 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.271606262 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.507281936 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.255570039 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.211070704 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.314642203 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.267812636 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.262273678 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.253633356 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.387404542 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.251602029 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.50783839 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.88484337 seconds)
done (took 59.560043961 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.316106354 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.407199921 seconds)
    (2/2) benchmarking "String"...
    done (took 1.537922774 seconds)
  done (took 4.12226529 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.813631806 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.208445574 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.518365779 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.25028979 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.250998223 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.545663036 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.078707257 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.62720315 seconds)
  done (took 28.655288159 seconds)
done (took 43.088476043 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.265404026 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.276573925 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.292086265 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.230356371 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.367366209 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.274918653 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.633108053 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.260407787 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.27368151 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.235140011 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.273368925 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.272194057 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.286141303 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.666389127 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.251882473 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.262664735 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.331127397 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.800587647 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.668113632 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.268448447 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.254403868 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.318721559 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.287614093 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.253845144 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.28340097 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.256226219 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.253475937 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.28020488 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.894049746 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.254345164 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.270939402 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.87802789 seconds)
  done (took 192.852922653 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.252232854 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.293933274 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.407480046 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.304236179 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.733852363 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.454173291 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.402440611 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.821967955 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.277489091 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.281821168 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.367642216 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.253667402 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.423384734 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.228615552 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.283992226 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.285063658 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.546231882 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.457327394 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.294115216 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.413570743 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.25723928 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.223210269 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.172208363 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.356142528 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.258947877 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.298915241 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.270415803 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.263085955 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.450608351 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.468028678 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.292311149 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.319626878 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.8982902 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.107808972 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.276043724 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.260382029 seconds)
  done (took 151.137762995 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.254691287 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.254887341 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.254515536 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.288550863 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.255336089 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.833498282 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.851750727 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.76882192 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.31235134 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.709737646 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.529388826 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.254547993 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.351554536 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.269380877 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.259807382 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.27134518 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.301742666 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.254826756 seconds)
    (19/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.256083519 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.25600263 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.834773585 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.268858703 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.433628743 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.274902695 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.289798632 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.646593058 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.388894124 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.25634915 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290120343 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.591437845 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.310144028 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.255938114 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.658059604 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.657135888 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.371189613 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.258884366 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290210096 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.256663602 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.257344636 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.539721017 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.257496074 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.257299634 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.259960957 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.938690343 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.257821541 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.836944718 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.257336839 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.223802936 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.257858991 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.257453541 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.256669576 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.821221836 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.955898153 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.278481553 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.256133775 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.258560158 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.256623604 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.256375343 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.288670432 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.80123729 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.350937782 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.273723469 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.256983683 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288419358 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.253985178 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.420082112 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.256569565 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.973425164 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.307078246 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.352600814 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.250678426 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.828007201 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.253445619 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.348647529 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.370012074 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.248204893 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.249137395 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.249266882 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.251079478 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.359347227 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.248335116 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.667808433 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.426254293 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.268780058 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.631099353 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.348411895 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.250321291 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.661626018 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.251798625 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.248109117 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.000375853 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34531622 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.247839474 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.24932543 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.248753129 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.666407009 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.826459499 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.510645997 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.253649704 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.833113536 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.252369028 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.68169173 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.801896469 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.934915776 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.25350226 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.362013015 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.425130419 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.268691936 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.248930931 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.636158129 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.253263849 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.304781162 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.252505588 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.647604509 seconds)
  done (took 372.990519048 seconds)
done (took 718.158621008 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.849729536 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.837465979 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.95519504 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.832026758 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.791947199 seconds)
  done (took 10.440992939 seconds)
done (took 11.616283826 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.444079448 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.444462628 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.311388263 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.445193704 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.284594905 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.463869043 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.423986841 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.270763733 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.356190528 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.336291128 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.355056509 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.305167109 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.286601142 seconds)
  done (took 18.90434835 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.580362473 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.581937637 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.31710307 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.585912406 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.293733946 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.577479063 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.459894313 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.474619349 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.479274264 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.28640859 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.264961249 seconds)
  done (took 17.078457208 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.593591361 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.591270516 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.321112522 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.591649501 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.295115444 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.60596393 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.464239332 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.478839793 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.48379768 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.287040278 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.264903077 seconds)
  done (took 17.15476894 seconds)
done (took 54.313675867 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.261023262 seconds)
  done (took 2.438247191 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.295778679 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.462266593 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.283546062 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.26487719 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.260541802 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.262098086 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.26440987 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.261874906 seconds)
  done (took 11.53410653 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.260056 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.261454431 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.259934996 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.258267923 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.260661753 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.260903813 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.258882449 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.258345481 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.257404032 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.258676862 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.258528062 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.260704701 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.258764563 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.26125092 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.260968931 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.261926189 seconds)
  done (took 21.335036724 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.26126124 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.25983478 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.259635276 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.259287552 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.258182092 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.259618227 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.259480862 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.258784252 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.258952316 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.260357319 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.259167047 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.259119426 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.259520777 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.25914218 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.259520723 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.260445904 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.259722933 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.25975177 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.263381251 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.258591245 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.260014025 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.259874177 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.260837675 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.261096981 seconds)
  done (took 31.416916099 seconds)
done (took 67.901792918 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.882544607 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.905127199 seconds)
  done (took 6.970115283 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.264579379 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.263849477 seconds)
  done (took 3.711136238 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.262802933 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.26303351 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.262975378 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.264012748 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.263587219 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.264798836 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.264724766 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.26330844 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.263983707 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.264796753 seconds)
  done (took 13.81893564 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.266255382 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.263192171 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.261937749 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.263855783 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.267842491 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.261376067 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.263532403 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.263064602 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.262534097 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.260577974 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.263782104 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.260511592 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.269260275 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.262379086 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.263581983 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.260518091 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.260197715 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.260725727 seconds)
  done (took 23.918234665 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.263653548 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.267077388 seconds)
  done (took 3.711505052 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.26137275 seconds)
    (2/7) benchmarking "second"...
    done (took 1.262207871 seconds)
    (3/7) benchmarking "month"...
    done (took 1.261323916 seconds)
    (4/7) benchmarking "year"...
    done (took 1.260421123 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.262074743 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.261857526 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.262315681 seconds)
  done (took 10.012956224 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.264640196 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.446740859 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.552700744 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.857571249 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.263871926 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.269905581 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.089566762 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.266152138 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.268191937 seconds)
  done (took 14.459281148 seconds)
done (took 77.782114815 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.284508491 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.271893913 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.561475424 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.264886991 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.274341696 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.606145398 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.271268671 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.39689905 seconds)
done (took 38.112237723 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.268861101 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.240393513 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.981952996 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.237987325 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.325395644 seconds)
  done (took 18.966583793 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.286575519 seconds)
    (2/2) benchmarking "read"...
    done (took 1.593047288 seconds)
  done (took 5.06009438 seconds)
done (took 31.476055834 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263435499 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.263249598 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.261423677 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.263284414 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.260695865 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.260255262 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.263503366 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.263146108 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.2634223 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.265340865 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.266875509 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.264445297 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263508755 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.260746581 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262133674 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264706694 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.261788662 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.265867158 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261387918 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261289788 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.263888328 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263637453 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.262038853 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.261099201 seconds)
  done (took 31.491873787 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.267005399 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.262963584 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.2641186 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.264306022 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.26224006 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.265239797 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.265212913 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.26218607 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.267791689 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.264399382 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.261981094 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.262642424 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.265101263 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.262283899 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264933919 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.263386931 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.26850982 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260653691 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264757971 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.26231062 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.264662813 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262292723 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.263209228 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.264728219 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.263267014 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261848066 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.264732513 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.262816026 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.264752484 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.262522957 seconds)
  done (took 39.098575419 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.270333727 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.275019871 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.264792004 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.264242842 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.26482629 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.265748834 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.264298681 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.264865963 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.265758273 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.267641895 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.264411992 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.263682816 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.264140866 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.264903602 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.264905502 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.265177674 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.265185747 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.264263206 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.263545261 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.264492888 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.263843891 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.263404535 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.264512857 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.265343139 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.264262559 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.265401274 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.263236591 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.264546926 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.264126885 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.264834118 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.263975397 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.263452412 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.264402596 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.264766346 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.263839143 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.264020173 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.269452894 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.271860362 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.265050176 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.264674891 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.265226824 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.266033245 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.265794659 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.264955254 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.265447077 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.26497844 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.265556447 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.265024481 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.267898354 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.268657486 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.265243292 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.265727001 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.266320627 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.266372848 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.266161673 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.265668206 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.266194658 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.267307444 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.265969278 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.266198403 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.265695088 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.265745223 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.265997091 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.266320981 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.26612081 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.266834167 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.266692684 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.267141315 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.266627239 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.267162394 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.266766095 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.267791457 seconds)
  done (took 92.315460607 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.267745316 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.265467087 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.264511952 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.2647456 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264969456 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.267227467 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.264640543 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267563742 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264355766 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.267222666 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267934687 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.266035085 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264046043 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268151307 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26765035 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.264978524 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.268188698 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26446378 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.267406571 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269420126 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.267515392 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.26493268 seconds)
  done (took 29.043738777 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268791798 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.269331944 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.265813538 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.267893419 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.265507869 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.267933362 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.268248943 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.270458332 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270059157 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266043229 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266410142 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267570419 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.26522932 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266562772 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265521347 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.26727459 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269455906 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.267202646 seconds)
  done (took 24.000029844 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.267643526 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.266585124 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.269232193 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.266973501 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.267632535 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.273773971 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267188857 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.270042189 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.268550412 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.26681824 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.270133815 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268771542 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.269723416 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270847696 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269519609 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.267539662 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.268811366 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267046563 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270266284 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267277236 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.268494457 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270059684 seconds)
  done (took 29.099256134 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270221185 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.269327544 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.267122587 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.267136337 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.26659886 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.271698272 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.269571361 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.26675234 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.269709795 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.268912341 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266416517 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.269348953 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.267895206 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.270041208 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.266852732 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266493617 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.269466492 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.267472967 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.26928065 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.267441391 seconds)
  done (took 26.553445894 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273150863 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270376411 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.270418735 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270593766 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270218594 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.270581503 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270938568 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.270471288 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.272246138 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.270597415 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.270520381 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.270494247 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27014077 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.270206677 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.270850431 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271444695 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.272270224 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269091964 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.269579491 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2694632 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.270518499 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26936812 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269349384 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.270672894 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272004356 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.270203505 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270409926 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.270268896 seconds)
  done (took 36.763930733 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271051266 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.269006883 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.267609559 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.26752956 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.267632755 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.266994616 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.267555267 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.267174565 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.269556498 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.267645097 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.269653078 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.272129694 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.269402086 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.269581674 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.270276132 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.270079142 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269928286 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.266883438 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266468036 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268611843 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.269730643 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27030209 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.269240616 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.267516725 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267219691 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.269900228 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269201988 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.268012714 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269650857 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.26646645 seconds)
  done (took 39.249408148 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.289265667 seconds)
    (2/2) benchmarking "in"...
    done (took 1.287375331 seconds)
  done (took 3.762481813 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.268651381 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2695505 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.269707753 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.267505938 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.267430428 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.270214457 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.269639717 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26746978 seconds)
  done (took 11.336340637 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.270866406 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.269739198 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.270257249 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.26996452 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.270112701 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.270002268 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.277383553 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.291849714 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.27071806 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.270355116 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.274853171 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.276477568 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.272029216 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269217709 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.269234768 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273295345 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.270189145 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.26960898 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.270748162 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.271151807 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270506971 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272582893 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271050903 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.270431723 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.271244408 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.281370802 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.291854084 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.269678199 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270072224 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.273863955 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.270368927 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.26910044 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.270994484 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.27089576 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.270228499 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.270181703 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277981748 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.288321245 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.276585806 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290199828 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271459443 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.267515608 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.270322185 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.2714471 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.271085596 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.270324803 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.271255126 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.269657586 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.270147058 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.273105384 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.27424786 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270198392 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.267888315 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.273066925 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.271876566 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.276114002 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.289580107 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.273977829 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.278508934 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.281285868 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.300813985 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.293498031 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273411328 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.271878464 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281183358 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.292642777 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.278710517 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.286943215 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.269106845 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.272640466 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.279796678 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.300494755 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.294620243 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.273206595 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273404651 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.273413281 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.27243593 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.274320867 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.280433318 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.293174982 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.274031556 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273571676 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284249578 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292184134 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.271858141 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.273122785 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.275117786 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.27413734 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.273528582 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.282135067 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.291569968 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.273663117 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.272658093 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.273070687 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.273491599 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.273839552 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.271080254 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.272928657 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.270473157 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.274203475 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.274000955 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276155025 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.28058866 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273052272 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273997101 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.281852327 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.292546747 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273585103 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.279324299 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.274111443 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.27482564 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.275895828 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.280271661 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.27206265 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276163397 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.280773637 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.273962178 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.275898589 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.274607559 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.275738208 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283539566 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.296669891 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.275557907 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.275296425 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.278034227 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.284801516 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275786551 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.277543217 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.274493119 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.272086241 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.273126688 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.275759726 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.27589213 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.276446146 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275563398 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.276873911 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.272959066 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.275976705 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.275635197 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.276593819 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.277704639 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.275900095 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.277224858 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.277710512 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.276709636 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.277140722 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.283672524 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.293192258 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.278095695 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.276783495 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.273370243 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276356751 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.276830716 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.276943763 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.276510651 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.276621644 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.277652487 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.277681119 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.277322373 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.277198775 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276930516 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.277564332 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.27993923 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.278587843 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.282432533 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.277818262 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.275102366 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.277753578 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.278372904 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.277636612 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.278044896 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.278359952 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.281455174 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.28397628 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.278596646 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.27866263 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.279725396 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278679851 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278374542 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.278322757 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.281306525 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.284145643 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.279011506 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.285688291 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.297119717 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279485961 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.27988292 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.278787915 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.27808931 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.278652698 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.282293517 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.285247889 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289919296 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.300941394 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.279441466 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.283068461 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.279385363 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.282449106 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.282658309 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.279100484 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.280574402 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280383798 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278840709 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279926953 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.281306031 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.279745208 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.278955808 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.280809509 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.279328233 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.279791385 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.280293145 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.280093116 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.28065512 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.277737254 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280370046 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281571981 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.280312675 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.277487563 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.278382782 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.280492679 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.280891315 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.280755472 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.287387068 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.278288996 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282095247 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.282054501 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.28163947 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.280475535 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.281635904 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282465013 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.280875245 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.28867276 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.299830057 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.281802879 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288403507 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.300047296 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.281485256 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.283809423 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.282031751 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.279948792 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.284431697 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.288971239 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.282224692 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.283280001 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.283077082 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282049787 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.282629393 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.2884176 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.297654706 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.282065164 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.283237325 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.283659951 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.281151088 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.283766219 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.283280285 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.282098889 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.28481409 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.282859994 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.282982732 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282580754 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.282880574 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.283637363 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.283422801 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28648625 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.288968893 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.288696683 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.282762019 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.284640461 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.284801269 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.286482588 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.283865758 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.283822324 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.285255008 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.295400013 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.307246861 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289833669 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.303449951 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.284227023 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.290075775 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.303748869 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.286984881 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.283221596 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285059038 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.284559134 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.283343842 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.28205322 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284442443 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.284862091 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285664748 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.285856963 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.287929427 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.286549206 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.285264274 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.286048775 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.286637923 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.286238093 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.284680381 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.285670027 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.287647102 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286729772 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.284966013 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.285667603 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.292901733 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.304834247 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.287667615 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.285405925 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.285343713 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.285675957 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.287444576 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.287153615 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.289917165 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.292795541 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.289689351 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.294082684 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.287799052 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.29708567 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.28645219 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.28938539 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.293378916 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.284815165 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.286232477 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.286623112 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.287139289 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293941626 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.305843215 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.287652797 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.290989536 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.289181645 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.288904436 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.288202949 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.288198263 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.288642191 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.288637269 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.296159888 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.305754957 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.291711762 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.289885517 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.28610748 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.288062812 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.288777062 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.287285649 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.290391514 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.289208685 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.288119573 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.288123461 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.287928366 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.287633976 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.287777988 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.288953208 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.286196336 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.288416255 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.29511942 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.309073537 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293258222 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.289644003 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.295714205 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.308684453 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.296460056 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.308444015 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.29066456 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.289865063 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.290397778 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.291761935 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.290127945 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.291165377 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.291295487 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.290796002 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.293851204 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.290839547 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.292374038 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.29207889 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.290322081 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.290797963 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.299662901 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.310303507 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.291643368 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.295432028 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.288613233 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.29237355 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.293942285 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.291493842 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.289818926 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.293023583 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.299177478 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.297281866 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.291453584 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.290751383 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.293337729 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291564169 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.292229253 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.291883994 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.291452824 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.292333122 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.292608079 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.290754052 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.294247331 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.292405546 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.292779241 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292967641 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.292939306 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.3019456 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.31052329 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.292752364 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.292626912 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.293939145 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.291904039 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.291966111 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.2925154 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.292895198 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.293216178 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.293195651 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.29930545 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.297803456 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.2946023 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.292861905 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.293473376 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.292612024 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.294065307 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.293799138 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.293861875 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294907995 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.293493961 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.293592542 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.295133327 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.292722948 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.294643544 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.294210765 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.295756487 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.295747856 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.300283221 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.293641102 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.291789063 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.293608484 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.29471593 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.293030096 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.293974412 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.302359836 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.315108406 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.302857549 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.301645708 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.298367916 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.294862895 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.29671935 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.301300603 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.29350812 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.296471586 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.295200229 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.295783501 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.294558303 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.298394498 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.295590614 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.302363617 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.312930016 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.29415657 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.302863496 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.314530465 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.296086182 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.297169279 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.300171068 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.297252403 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.294485161 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.296151856 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.295219805 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.303418957 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.315398248 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.296299419 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.300634744 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.291090434 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.292203022 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.295864217 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.293025217 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.292783604 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.289127372 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.292255448 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.29208287 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290846959 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.287070347 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.288262861 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.28974768 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.292101779 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.295732043 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.287484411 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.290957533 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.289694161 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.289597335 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28974292 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.290823085 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.286581755 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.287314866 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.289374144 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.289747229 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.290404757 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.291461331 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.28846307 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.291890084 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.291041661 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.290225618 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.293963252 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.297383228 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.296589818 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.287205602 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.28798313 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.289140122 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.292016327 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289914245 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.291066754 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288549576 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.287854134 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.287267711 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.287872731 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.28799366 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.290122238 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.299124912 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.304782477 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285481216 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.286317377 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288397614 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.287561645 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.284216419 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.287867573 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.288062139 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.289347923 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.292264126 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.286660943 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291343248 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.302355344 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.286278371 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.290030146 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.288749783 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.289222373 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.285405293 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282705868 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.284205108 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.287107144 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.298310685 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28451142 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294142 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307417121 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.299876987 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.282255181 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.281691709 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281487442 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.281191575 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.28339519 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.28263557 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.280195564 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279886374 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.280692568 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.281683796 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284718217 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.282160807 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.281446669 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.28112304 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.278034671 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.279367389 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.276527 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.278641288 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.279978736 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.278544386 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.280203656 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.279077474 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.278239017 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.288156335 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.301216756 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.27706912 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.278198222 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.275616297 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.281824035 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.276715198 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283974732 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.281848286 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.276384746 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.276995146 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.276973348 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275206732 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.27559112 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.272794898 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.272704069 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.272978297 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.270658781 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.283669782 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.296608214 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.278756959 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.273637154 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271655462 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.272048297 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270961089 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271827316 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271290418 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.272199611 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.273496597 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274181937 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.269502671 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.268856947 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.270911879 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.276193188 seconds)
  done (took 767.002392595 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.26823748 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266368305 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265884882 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263576203 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265077833 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264904261 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265898289 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26388096 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.26428145 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.264668647 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.26560299 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262552926 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262856614 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.262832935 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262960476 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.262315922 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263192427 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262712762 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26194437 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260984693 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.260749169 seconds)
  done (took 27.725547222 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.264145442 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.262429514 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.261640035 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.264674021 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260871814 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.263431624 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.261524505 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2648339 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.264638405 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262338249 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.264248813 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265288258 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.261977794 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.261717722 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262160612 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.264606991 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.265263238 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261992981 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.264897827 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.263849398 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.264403911 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.262953772 seconds)
  done (took 28.972885777 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.266620893 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.265189851 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.264738627 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.262489514 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.265548403 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.262877044 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.264455475 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.26525759 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.265386069 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.26555769 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.264725877 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.265964519 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.270829068 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.269396256 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.267362948 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.265977562 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.40931686 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.264677917 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.266827815 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.266146454 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.263358016 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.271985933 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.281396066 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.262552269 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.263902562 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.265827606 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.266665333 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.266284638 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.266039996 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.266854118 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.27063231 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.267145986 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.265301807 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.268249662 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.264730446 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.267200956 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.269852957 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.267098195 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.26446465 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.266480693 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.274717101 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.283763756 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.26647085 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.273147751 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.285425051 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.267462258 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.269439103 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.272354105 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.264491423 seconds)
  done (took 63.443036843 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.268898192 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.268041533 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.265518502 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.268095566 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.267626571 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.268663207 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.268570928 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.267833785 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.266020309 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.265593228 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.268300129 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.266328496 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.265737253 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.268735453 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.268267265 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.266616477 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.267206827 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.267059074 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.266763191 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.267139552 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.26722716 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.269345204 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.269325834 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.267221252 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.269459134 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.2664016 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.265524328 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.268990182 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.267309926 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.267214198 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.270201661 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.269488704 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.269194963 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.266664075 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.266620536 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.269434024 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.270074429 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.267386906 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.269390271 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.267330804 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.271279716 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.269944488 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.270580966 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.270236968 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.267589995 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.267747128 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.267464762 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.268500008 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.268130402 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.27091211 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.271281232 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.268339036 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.270256451 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.268291586 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.270833906 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.271752446 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.268220189 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.268073657 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.27160635 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.269172985 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.268580588 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.271619693 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.269751896 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.271757501 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.271971177 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.270151117 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.26889714 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.272828578 seconds)
  done (took 87.450402849 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271458906 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.27123864 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271612378 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271006142 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.271450122 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.271593495 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.272686699 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.272036789 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.271508405 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.271979009 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.271845923 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.272783295 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.2723663 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.272990329 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.272847314 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.272458804 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.272539592 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.27268479 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.271966006 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272719798 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.272676404 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.272961916 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.272964342 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.273188045 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273552617 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.273404506 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.273839562 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.273979085 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272759747 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.272997611 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274439836 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.273798524 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.273799032 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.273900666 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.273460095 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.274411006 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.273630241 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274203142 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.274037371 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.273755241 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.274157643 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273843975 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274036895 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.275164139 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.274370441 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.275802021 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.276065666 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.275651982 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.275776625 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274184561 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.275326611 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.2754446 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274974807 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27495598 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.27535004 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.275580281 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275565205 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.27511442 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27411813 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.274576869 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.275772432 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.275394973 seconds)
  done (took 80.152171008 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275681888 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.276089454 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.273431956 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.272688771 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.275683257 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.27347659 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.276226976 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.27621235 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.275895956 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.276641356 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275508337 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273845304 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274296043 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275381194 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.273901548 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273465668 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274100187 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.274112571 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276662694 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.274592732 seconds)
  done (took 26.687880905 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.274857677 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.276791125 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.275081262 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.275370013 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.27783489 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.27480611 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.277633107 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277581369 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274960491 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27643949 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.277622698 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.277379878 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275334545 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.274714553 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.278328434 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.275405778 seconds)
  done (took 21.610657596 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.276126735 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.278036332 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.277395756 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.277905588 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.276401577 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.276245234 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.278085663 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.275227297 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.27532766 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.278985688 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.278068485 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.278366328 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.279508156 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.278422206 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.276502209 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.279936213 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.277026752 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.276327785 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.279037956 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.279403336 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.278144483 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.276746431 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.279833807 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.280332711 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.276549207 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.276841136 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.276809377 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.276983946 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.276997732 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.279826574 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.277472857 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.278072421 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.277588739 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.276392219 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.280027097 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.276771352 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.280050216 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.279396543 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.280516098 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.280858741 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.28071845 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.277039529 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.280427673 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.280731582 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.278675311 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.280059838 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.277330366 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.279273771 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.278192949 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.277644412 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.279858291 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.28033487 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.281293345 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.281326615 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.281824506 seconds)
  done (took 71.505898314 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281054878 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281546268 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.278117921 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.280489145 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.280833828 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.279666422 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.281209647 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.281040308 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278932705 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.282187127 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280322176 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.282173822 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280173747 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.281931089 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281694756 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282711165 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.279026147 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.280705728 seconds)
  done (took 24.248438787 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.281021519 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.280048317 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.282624987 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.280376643 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.279754432 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282548074 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281008203 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.282624497 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283327352 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.281222062 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280440463 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.283423298 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282845312 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.283227121 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280606873 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281209528 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.283332843 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283610521 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.281323925 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281083632 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284814215 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282657018 seconds)
  done (took 29.398487165 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.282004151 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.282343011 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.282420777 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.296908363 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.299402559 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.302089053 seconds)
  done (took 8.941478381 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290468014 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284587036 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281540571 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284711822 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285777595 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284416049 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281442067 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282423181 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284651057 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281897214 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28267302 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284812692 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284757972 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282434218 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284828735 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284797435 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282517277 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282193165 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282791155 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285797653 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282749671 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285463341 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282425546 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283362572 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282974942 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283055874 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285338584 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283287209 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28288732 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286588874 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285099727 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28295168 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285413647 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283700487 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286583777 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286661901 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284422682 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286537479 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286314917 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284550974 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286825512 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286192042 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287596212 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283902646 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287000885 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284231015 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28443125 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284152086 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283834801 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287504766 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286806056 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284200132 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287152083 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287541452 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286817718 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288571693 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28583047 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285346805 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288240885 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285306227 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285069829 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287741589 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285459695 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285290857 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288763402 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287176164 seconds)
  done (took 86.028927196 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286740012 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286383969 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287215386 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287567591 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286287977 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285281403 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286173066 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286851164 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285955465 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286427772 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289014645 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286782115 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286501349 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286916863 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286341018 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286145038 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285801857 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287100841 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285964268 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289615306 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287353192 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286599583 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286919642 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286659099 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286980192 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289319917 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287521542 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286603759 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287206856 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287079109 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28727275 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287201281 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287519031 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287979245 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288131159 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287427322 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288001521 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288116972 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287898243 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289645245 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288380226 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290298736 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287092331 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287863836 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288154976 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288070633 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287229671 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288892278 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28710438 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287830776 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288317497 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28857069 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288097054 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288389162 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288557965 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288538663 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288679905 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288347071 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289242067 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291121852 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288938541 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289108483 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292012451 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289661418 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28954696 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289465394 seconds)
  done (took 86.197049824 seconds)
done (took 1773.259889065 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.452827645 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.406975302 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.290294887 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.330464122 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.290285066 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.302756455 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.309130946 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.291091895 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.290650956 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.291316105 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.290691726 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.47692983 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.287005305 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.290765753 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.290907184 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.384711296 seconds)
  done (took 42.48242572 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.315036688 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.296956355 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.404179442 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.311572532 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.317300116 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.474098226 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.35194226 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.295973281 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.457722036 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.33761973 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.786827948 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.322612327 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.296152936 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.342898425 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.313667163 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.472824074 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.534570098 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.79857014 seconds)
  done (took 29.635477409 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.714870556 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.295418913 seconds)
  done (took 9.216743696 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.314374853 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.295070378 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.297627973 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.294090184 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.286270722 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.287612961 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.294231761 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.304061446 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.699979262 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.421861771 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.296751154 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.305074558 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.312763806 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.296951462 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.294169627 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.332367707 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.451224103 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.294792006 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.292993281 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.300877249 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.296585784 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.404282118 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.336410059 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.294932148 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.41588033 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.710640104 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.304169481 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.302547797 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.425666983 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.297221262 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.296173126 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.297192122 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.298355353 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.134588787 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.773988754 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.307506042 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.32503514 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.30500862 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.2947748 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.456283289 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.301959309 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.302450205 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.290818363 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.771143609 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.432753917 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.413805911 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.477144773 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.320571309 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.297708345 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.356048895 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.299374678 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.29812828 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.337244741 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.067394484 seconds)
  done (took 109.134820966 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.341228428 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.680023912 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.458861545 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.315531353 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.90622377 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.985974621 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.312321472 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.561783544 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.332803401 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.290748674 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.585924188 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.784503925 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.316824358 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.293904075 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.987282967 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.369801015 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.29310673 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.027168182 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.312471616 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.294876929 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.778977057 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.29782222 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.312998402 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.456817318 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.330048802 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.734636472 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.607810996 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.741092657 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.315686801 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.292521404 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.738671137 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.314729725 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.350094098 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.295160196 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.548751936 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.643138703 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.637216836 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.320331651 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.291617301 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.294213608 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.293421271 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.729850992 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.642995468 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.314374662 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.31653343 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.756609105 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.315256061 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.293767573 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.302475446 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.492450586 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.162832273 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.301053427 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.610554854 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.300358125 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.582707072 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.362893793 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.345553475 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.765413176 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316797097 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.383106545 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.366001094 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.295711054 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.299262041 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.299147864 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.302271673 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.630104411 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.692028622 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.29452782 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.628492068 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.756970899 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.317147594 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.803602989 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.174884816 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.318699581 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.352821689 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.295297116 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.843361705 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.778906998 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.335519612 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.295153426 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.616632251 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.316777455 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.571916564 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.316240953 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.302081735 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.812879338 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.308485663 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.297957312 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.297789394 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.301120184 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.917930309 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307344282 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.56208416 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.318419151 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.296631632 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.296851521 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.300682514 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.296042766 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.303436874 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.302087092 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.800139387 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.324679764 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.4072844 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318274503 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303998965 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.318006101 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.297554404 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.298379153 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.512820831 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.759464678 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.324354592 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.298172505 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.297257446 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.322209372 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.440770786 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.299315809 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.59250351 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.321901883 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297038929 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.326423575 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.00358916 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.367589329 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297906705 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.307308665 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.178609331 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.50897206 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.318306043 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.304551452 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.299100153 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.321073245 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.507950495 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.320829025 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.392373751 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.302913297 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.981522977 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.347790853 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.317406286 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.822073521 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.301368546 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.146789481 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.322705453 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.301231836 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.60462056 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.560142041 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.600009527 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.302381785 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.32191756 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.980431188 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.331147188 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.436688499 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.31920052 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.347164174 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.49747173 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.421963844 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.300498069 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.921639875 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.301952619 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.513918204 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.302076605 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.600071538 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.770089515 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.322778703 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.300742742 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.983377557 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.024381079 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.972113593 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.302917644 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.572472451 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.284688405 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.777643193 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.301384673 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.300715913 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.726412724 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.302246175 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.311181087 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.301203112 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.302193161 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.463078984 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.474067081 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.004199501 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.305370159 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.740283956 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.339097951 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301737954 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.312528544 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.306141877 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.647285983 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.386418324 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.30576726 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.328535006 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.302051828 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.303172204 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.761166487 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.223534226 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.308909553 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.452789671 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.910672709 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.323545339 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.303023102 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.90209843 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.591072511 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.800255756 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.356916445 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.598549307 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.330523873 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.341382855 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.856557561 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.387164024 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.759912914 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323855368 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.304278756 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.873693154 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.326514786 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.373227022 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.304023155 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.305106966 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.815688569 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.325768605 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.308162386 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.506083398 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.322812798 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.555496319 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.30423517 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.31320407 seconds)
  done (took 1103.026468106 seconds)
done (took 1294.700331257 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.303347669 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.309711867 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.291270342 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.315483763 seconds)
  done (took 26.441586543 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.32238156 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.310770049 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.311740803 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.309898932 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.311690995 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.310283667 seconds)
  done (took 9.09873606 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.355542417 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.31036693 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.311065796 seconds)
  done (took 19.19891284 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.506283608 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.5559324 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.626630613 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.394602626 seconds)
  done (took 10.306220504 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.313042049 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.313971116 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.313657418 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.315524935 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.324349507 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.325313237 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.315539716 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.3162919 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.325365338 seconds)
  done (took 13.085867105 seconds)
done (took 79.353392915 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.512783934 seconds)
    (2/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.309029166 seconds)
    (3/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.123050015 seconds)
    (4/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.302201158 seconds)
    (5/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.321807115 seconds)
    (6/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.372812255 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.54986233 seconds)
    (8/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.355669305 seconds)
    (9/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.073696696 seconds)
    (10/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.665205255 seconds)
    (11/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.331597035 seconds)
    (12/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.300390686 seconds)
    (13/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.335638448 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.348584407 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.334212278 seconds)
    (16/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.334425258 seconds)
    (17/286) benchmarking ("sort", Int8, false)...
    done (took 4.318425048 seconds)
    (18/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.293541458 seconds)
    (19/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.789228342 seconds)
    (20/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.787184078 seconds)
    (21/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.393552981 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.752210819 seconds)
    (23/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.446511417 seconds)
    (24/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.296660059 seconds)
    (25/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.334535222 seconds)
    (26/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.286917845 seconds)
    (27/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.321620717 seconds)
    (28/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.294315789 seconds)
    (29/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.312528814 seconds)
    (30/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.963421114 seconds)
    (31/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.303578234 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 6.329584502 seconds)
    (33/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.42894859 seconds)
    (34/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.865155695 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.433653647 seconds)
    (36/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.626021096 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.711695255 seconds)
    (38/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.695104757 seconds)
    (39/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.439531861 seconds)
    (40/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.308384696 seconds)
    (41/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.335587498 seconds)
    (42/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.114730503 seconds)
    (43/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.336517354 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.926691665 seconds)
    (45/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.308896346 seconds)
    (46/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.307489778 seconds)
    (47/286) benchmarking ("sort", Float32, true)...
    done (took 6.325718149 seconds)
    (48/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.303192401 seconds)
    (49/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.039499223 seconds)
    (50/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.502308287 seconds)
    (51/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.09079486 seconds)
    (52/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.317343954 seconds)
    (53/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.291434414 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.42669493 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.57043549 seconds)
    (56/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.470393173 seconds)
    (57/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.33144003 seconds)
    (58/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.318665511 seconds)
    (59/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.355980456 seconds)
    (60/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.79176796 seconds)
    (61/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.28949971 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.199855652 seconds)
    (63/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.489637957 seconds)
    (64/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.631278871 seconds)
    (65/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.771009913 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.70473082 seconds)
    (67/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.390126299 seconds)
    (68/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.805204165 seconds)
    (69/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.517831208 seconds)
    (70/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.342339669 seconds)
    (71/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.034026926 seconds)
    (72/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.164408546 seconds)
    (73/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.326174554 seconds)
    (74/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.293186107 seconds)
    (75/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.49233834 seconds)
    (76/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.273098976 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.917855433 seconds)
    (78/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.427039399 seconds)
    (79/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.7171524 seconds)
    (80/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.70288592 seconds)
    (81/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.491566418 seconds)
    (82/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.308041211 seconds)
    (83/286) benchmarking ("sort", BigInt, true)...
    done (took 6.311811773 seconds)
    (84/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.331409196 seconds)
    (85/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.29226063 seconds)
    (86/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.543896486 seconds)
    (87/286) benchmarking ("sort", Int64, false)...
    done (took 5.495760287 seconds)
    (88/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.292144184 seconds)
    (89/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.398308671 seconds)
    (90/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.304718663 seconds)
    (91/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.382265451 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.902091637 seconds)
    (93/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.292184386 seconds)
    (94/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.155748198 seconds)
    (95/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.71987534 seconds)
    (96/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.319288065 seconds)
    (97/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.660396342 seconds)
    (98/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.382612272 seconds)
    (99/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.656342213 seconds)
    (100/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.020380772 seconds)
    (101/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.53369921 seconds)
    (102/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.554104571 seconds)
    (103/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.345101476 seconds)
    (104/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.031350705 seconds)
    (105/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.420564097 seconds)
    (106/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.338382268 seconds)
    (107/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.692001848 seconds)
    (108/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.311643445 seconds)
    (109/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.317736647 seconds)
    (110/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.310359164 seconds)
    (111/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.347074713 seconds)
    (112/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.591087784 seconds)
    (113/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.531748706 seconds)
    (114/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.651983161 seconds)
    (115/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.329176349 seconds)
    (116/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.061300177 seconds)
    (117/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.2951182 seconds)
    (118/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.346935663 seconds)
    (119/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.488788318 seconds)
    (120/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.293902861 seconds)
    (121/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.34442317 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 1.847749503 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.360136933 seconds)
    (124/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.295059573 seconds)
    (125/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.322816871 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.574515629 seconds)
    (127/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.314793923 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.044438792 seconds)
    (129/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.593317175 seconds)
    (130/286) benchmarking ("sort", Float64, true)...
    done (took 6.314141267 seconds)
    (131/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.045385718 seconds)
    (132/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.53827183 seconds)
    (133/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.315369936 seconds)
    (134/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.344030814 seconds)
    (135/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.054558992 seconds)
    (136/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.295566891 seconds)
    (137/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.80752442 seconds)
    (138/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.417551785 seconds)
    (139/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.115656799 seconds)
    (140/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.400246801 seconds)
    (141/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.91742525 seconds)
    (142/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.317512034 seconds)
    (143/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.133886032 seconds)
    (144/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.363176608 seconds)
    (145/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.37565405 seconds)
    (146/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.100961667 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.04947143 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.343493505 seconds)
    (149/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.615756308 seconds)
    (150/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.924146059 seconds)
    (151/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.785262778 seconds)
    (152/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.440668148 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.338783658 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.148838452 seconds)
    (155/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.296722248 seconds)
    (156/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.510154105 seconds)
    (157/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.33372344 seconds)
    (158/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.333744314 seconds)
    (159/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.944097675 seconds)
    (160/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.439864307 seconds)
    (161/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.776849015 seconds)
    (162/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.662773953 seconds)
    (163/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.315971002 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.903154209 seconds)
    (165/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.001706929 seconds)
    (166/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.439459271 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.859035187 seconds)
    (168/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.003065554 seconds)
    (169/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.361870792 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.665494608 seconds)
    (171/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.424693496 seconds)
    (172/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.096571878 seconds)
    (173/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.428981968 seconds)
    (174/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.317145462 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.363467982 seconds)
    (176/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.489067812 seconds)
    (177/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.376012583 seconds)
    (178/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.369238259 seconds)
    (179/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.413101791 seconds)
    (180/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.568058667 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.38226617 seconds)
    (182/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.400200765 seconds)
    (183/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.297742972 seconds)
    (184/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.327414926 seconds)
    (185/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.087157361 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.232671927 seconds)
    (187/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.33546916 seconds)
    (188/286) benchmarking ("sort", Bool, true)...
    done (took 5.416663842 seconds)
    (189/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.31907453 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.377820843 seconds)
    (191/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.157074285 seconds)
    (192/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.320533112 seconds)
    (193/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.321474837 seconds)
    (194/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.830709871 seconds)
    (195/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.374766372 seconds)
    (196/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.421095979 seconds)
    (197/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.404331393 seconds)
    (198/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.402013105 seconds)
    (199/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.583305589 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.666823469 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.96104891 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.530372949 seconds)
    (203/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.321331942 seconds)
    (204/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.651341706 seconds)
    (205/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.31027038 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.164297095 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.222928031 seconds)
    (208/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.301104522 seconds)
    (209/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.363503802 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.343820198 seconds)
    (211/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.318326518 seconds)
    (212/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.672476614 seconds)
    (213/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.929002931 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.360987723 seconds)
    (215/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.25219231 seconds)
    (216/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.419814186 seconds)
    (217/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.166365309 seconds)
    (218/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.471046679 seconds)
    (219/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.330311593 seconds)
    (220/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.673336496 seconds)
    (221/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.304907577 seconds)
    (222/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.679870137 seconds)
    (223/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.309485719 seconds)
    (224/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.325231605 seconds)
    (225/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.32115596 seconds)
    (226/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.463289018 seconds)
    (227/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.138474934 seconds)
    (228/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.319372301 seconds)
    (229/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.708974553 seconds)
    (230/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.31950419 seconds)
    (231/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.339827162 seconds)
    (232/286) benchmarking ("sort", Float32, false)...
    done (took 5.326322349 seconds)
    (233/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.363628585 seconds)
    (234/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.427838284 seconds)
    (235/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.347918659 seconds)
    (236/286) benchmarking ("sort", Float64, false)...
    done (took 5.605889751 seconds)
    (237/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.795390711 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.532174968 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.96633952 seconds)
    (240/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.419226562 seconds)
    (241/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.43772067 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.72934619 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.363675261 seconds)
    (244/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.312301893 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.708331444 seconds)
    (246/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.331034978 seconds)
    (247/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.76545254 seconds)
    (248/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.34929665 seconds)
    (249/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.412340481 seconds)
    (250/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.451121738 seconds)
    (251/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.419208469 seconds)
    (252/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.579235117 seconds)
    (253/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.303536277 seconds)
    (254/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.339659195 seconds)
    (255/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.564037175 seconds)
    (256/286) benchmarking ("sort", Int8, true)...
    done (took 6.322369483 seconds)
    (257/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.424346239 seconds)
    (258/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.309428976 seconds)
    (259/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.304584399 seconds)
    (260/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.529644638 seconds)
    (261/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.776271683 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.405727447 seconds)
    (263/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.684114873 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.422540705 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.436060828 seconds)
    (266/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.303898573 seconds)
    (267/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.626833623 seconds)
    (268/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.685203219 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.109065452 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.723332329 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.3863762 seconds)
    (272/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.303661202 seconds)
    (273/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.304590877 seconds)
    (274/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.333872426 seconds)
    (275/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.068937855 seconds)
    (276/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.350027348 seconds)
    (277/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.136066142 seconds)
    (278/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.320212102 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.347286999 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.217358913 seconds)
    (281/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.510537863 seconds)
    (282/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.332917425 seconds)
    (283/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.435018209 seconds)
    (284/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.304368598 seconds)
    (285/286) benchmarking ("sort", BigInt, false)...
    done (took 6.323255519 seconds)
    (286/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.406398401 seconds)
  done (took 930.099534181 seconds)
done (took 931.32401288 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.357191225 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359653055 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.334676167 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.35663042 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.453911655 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.358101049 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.345672372 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.336620516 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.383397733 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.384123555 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.341395061 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.356820317 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.344313315 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.34208794 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.334633937 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358639022 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.358737613 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.350012228 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.359722991 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.346321734 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.359409981 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.341765414 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.385695298 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.358823861 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.340315954 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.338824163 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.346467289 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.362847219 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.454616334 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.345982612 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.339299457 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.353881294 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.359835507 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.341019918 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.331843991 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.363844276 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.355382695 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.346527552 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.340541469 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.375507175 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.750507998 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.365576401 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.345171863 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.338232321 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.339017123 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.342502432 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.345934217 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.34332396 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357731635 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360367676 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.752732881 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.381794258 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.348278053 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.33958731 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.34894069 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.344997864 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.341072139 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362873713 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.364312057 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362761876 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.348085928 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.349925884 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.340578295 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.362071427 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.352459767 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.795604842 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.357671989 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.343401299 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.754822551 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.366415349 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.797451013 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.37720191 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.341405057 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.359645275 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.378058512 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.355326395 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.335613198 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.340195665 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.354413454 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.346210412 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.350602018 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36062115 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.345469643 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.340951881 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362041377 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.363534975 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.351648067 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.348009066 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.350340165 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.367905793 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.35521848 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.359369334 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.344004527 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.336025182 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.351147694 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.345560964 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.351379559 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.352933542 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.345969784 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.35227863 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.756050018 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389437925 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.337739833 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.338429634 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.341587885 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.363341219 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.756169138 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.373415541 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.363671594 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.388449112 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.342479774 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.344733187 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.35276539 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367271791 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.352399588 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.344890273 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.337032973 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.356334451 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.771880933 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.386056972 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.345109976 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.348340951 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368368551 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.344432008 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.339426527 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.37161678 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.34833114 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365467047 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.471266249 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.35387728 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.381423698 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.349386958 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.346300039 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.36668153 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367816894 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.381406116 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.346534562 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367387705 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.366906978 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.340011294 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.362190319 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.354092209 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.344609819 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.348740854 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.338419363 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.36648812 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366462357 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365343586 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.365239504 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.472981373 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.342713206 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.359180721 seconds)
done (took 226.799886767 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.403422949 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.341736751 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.424874813 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.341016598 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.441452351 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.442707197 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.338834724 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.339390302 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.338949445 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.719513152 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.339571828 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.338914132 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.341300199 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.339932928 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.425097232 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.341419038 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.339010546 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.683045756 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.341636496 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.412048506 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.339114232 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.340598317 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.342330428 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.734932362 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.341168757 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.335564574 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.412272067 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.342078664 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.689919425 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.336977537 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.339682252 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.689736397 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.431692027 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.360465677 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.35219807 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.349774131 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.443005001 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.361382063 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.424120108 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.42527329 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.427588659 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.381911581 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.33757997 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.343512232 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.34514833 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.343654236 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.342561757 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.370148766 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.340517197 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.342387914 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.685331478 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.35399688 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.343330461 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.341962433 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.342221996 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.372999673 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.34283981 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.345075738 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.434252098 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.345109197 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.407882848 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.728704232 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.724072086 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.344735661 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.34351099 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.343358201 seconds)
  done (took 149.052220646 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.413402657 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.417208673 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.454515037 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.361152517 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.394922238 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.4596591 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.361772622 seconds)
  done (took 11.116002592 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.3506747 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.346502204 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.394749498 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.394618148 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.346061601 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.523795334 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345919866 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.35635151 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.34429929 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.398413648 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.347097467 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.347226855 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.352957315 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.344736828 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.394893952 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.357297051 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.459999188 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.34742075 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.347536662 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.506899507 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.343863287 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.354538854 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.398717757 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.358028484 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.34928888 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.352338934 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.168680909 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.347223124 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345319138 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.347595491 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.345568302 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.422573586 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.349773112 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.345880155 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345438054 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.462714106 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.347978166 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345204312 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.347457601 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.340240756 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.34773702 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.347183231 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.348746387 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.345206578 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.348521246 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.370651002 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.34815927 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.34866328 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.349022394 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.348356384 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.399039801 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.352213769 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.348079311 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.345628323 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.405393392 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355516409 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.350344656 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.347261107 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.349251645 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.346319928 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.508374381 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.396511943 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.34978624 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.395304582 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.348630617 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.350221344 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.349454662 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.349313471 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.402949827 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.350715974 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.397152708 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.347700319 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.535171037 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.371857218 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.35200406 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.352517637 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.352235111 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.349574431 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.34677362 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.355590351 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.34826183 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.351539348 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.356824014 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349214286 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349126715 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.516659878 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.458085637 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.349012644 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.362681821 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.357437397 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.349288167 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.403687558 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.35157458 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.348888834 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.402935672 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.465609066 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.402805969 seconds)
  done (took 155.068515305 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.355989668 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.358923608 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.354076544 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.374074078 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.368433425 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.350634538 seconds)
  done (took 9.420636773 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.353308544 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.352880568 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.352493868 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.352698806 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.351940377 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.352295742 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.353081757 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.354501134 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.35528129 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.353543356 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.353297827 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.357416571 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.354497293 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.352744686 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.353748561 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.352968906 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.35305301 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.351228345 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.353769266 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353010847 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.447601427 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.352742521 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.354863342 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.354231455 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.356750472 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.353202968 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.361756387 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.353628213 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.353525133 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.36098146 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.373060514 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.354574668 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.35466825 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.358372979 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.356546678 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.354753343 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357302956 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.357773019 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.352553403 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.354772186 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.358829873 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.353643491 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.354536813 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.357952555 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.35578215 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.358034506 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.361480451 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.362256287 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.354395374 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.358970056 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.359274361 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.355677053 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.355416515 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.359646259 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.358311408 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.376755358 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.362543578 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.35598081 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.356497783 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.356648298 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.356089902 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.356907888 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.357211136 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.359048862 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.363596934 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.359396522 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.357349592 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.360416718 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356183945 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.357003222 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.35983137 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.35459021 seconds)
  done (took 100.024406865 seconds)
done (took 425.931442216 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.673727826 seconds)
  done (took 7.935792224 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.492230307 seconds)
  done (took 7.756053649 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.629680813 seconds)
  done (took 21.900083205 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.350652955 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.459416783 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.375931749 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.353173093 seconds)
  done (took 26.801958612 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.724483091 seconds)
  done (took 7.987924264 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.350055493 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.358971562 seconds)
  done (took 13.973716314 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.351386388 seconds)
  done (took 7.615277371 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.699120504 seconds)
  done (took 7.97162291 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.364649995 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.367013489 seconds)
  done (took 14.254362756 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.344254792 seconds)
  done (took 7.608472057 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.15593847 seconds)
  done (took 11.420773034 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.361986071 seconds)
  done (took 7.626809587 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.415423796 seconds)
  done (took 7.679575919 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.260390286 seconds)
  done (took 9.524626232 seconds)
done (took 161.321071519 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.35124086 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.358273149 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.359415294 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.357383077 seconds)
  done (took 26.69087505 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.39170257 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.391902091 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.392383288 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.402111211 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.395144337 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.392450009 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.383631301 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.383479054 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.402617552 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.394672863 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.393652989 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.395544904 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.392300162 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.385819918 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.394242181 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.394546491 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.403619496 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.39473777 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.385048997 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.394513436 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.359916171 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.403826474 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.395997359 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.360904025 seconds)
  done (took 34.650871618 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.883398476 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.430063568 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.5125948 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.411337787 seconds)
  done (took 7.50461063 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.411147865 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.412785107 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.425144496 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.464467687 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.498505934 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.422337559 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.386363745 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.382047693 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.367828803 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.414139401 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.489048025 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.428998575 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.51379164 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.360219837 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.556292675 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.360812719 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.361542917 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.413309632 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.464747143 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.478144277 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.361305282 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.413802522 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.416090467 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.430097595 seconds)
  done (took 35.50014613 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.360694968 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.380249962 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.360247401 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.361017523 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.36944237 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.362107651 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.361339166 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.362578801 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.361047968 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.367949558 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.360599664 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.374123217 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.360793795 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.36227451 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.366633674 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.363115016 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.368835105 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.360876873 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.361531478 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.368523389 seconds)
  done (took 28.562769703 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.35744857 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.207916658 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.706889864 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.612086062 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.356708158 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.362076044 seconds)
  done (took 27.872749654 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.430872089 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.58644502 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.368020272 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.713005228 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.804404551 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.380577208 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.363387814 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.600965597 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.921718119 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.904441166 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.427091417 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.436905406 seconds)
  done (took 20.20797637 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.356620663 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.363551819 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.374695295 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.381004878 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.416662461 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.385954357 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.370453602 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.357535835 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.424737922 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.441667534 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.39144508 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.417970535 seconds)
  done (took 37.95302342 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446589559 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403174441 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.243586964 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.446758923 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.104633459 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570402292 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.377722044 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.082640377 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.379982447 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632081349 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359264277 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454721299 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.614351926 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368040839 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366125438 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.32358301 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609104802 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848794587 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368549988 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.362179934 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391288878 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364406216 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.460863433 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.600948272 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597343228 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.337182463 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.622074093 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.135593942 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644130663 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381886039 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371344496 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360431217 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635483732 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999691179 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474649172 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.576463109 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39341514 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.913862409 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.35926461 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.363722455 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384845402 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.369862676 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372060044 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361782959 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.296009574 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361000448 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076652631 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.385086154 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.073088652 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.363522827 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61838557 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465220677 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.366350751 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.931812738 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388994613 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.374979972 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.366253808 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453580339 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948730142 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.64929036 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377053289 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.304719078 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381702162 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.378462511 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992700109 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.386032008 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.366707501 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.366927143 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297133148 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.373969112 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386240746 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510022326 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.38882563 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.013407264 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069866708 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.382523714 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.300316706 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91631619 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380179769 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.305035925 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.591299053 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.139577814 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30050322 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.311857658 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.29840243 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058035555 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37763647 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.771818787 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383635555 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.083645844 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.598482532 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40729785 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387895453 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.587423406 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.2446066 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364490911 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.364357094 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496599573 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385628802 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.070431618 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317921656 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.368639309 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619356714 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.576482863 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377936929 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.325908023 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872480213 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397517282 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.387926555 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.365281607 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.589384226 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.969657682 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.405486922 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.670051309 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38949117 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.141245876 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09724039 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382321762 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.376729037 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.366894326 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644367718 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.127281365 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.255242385 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435237777 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372150194 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368132883 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.40062571 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.223904721 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.269911589 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.566835465 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405551312 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.384260485 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.36670354 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311534258 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.364903883 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376616638 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.151200591 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.590760817 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380539495 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650291166 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301391375 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51570438 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.377294058 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.592078353 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.572306852 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.398387322 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627287334 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369101159 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.375898089 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399978963 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386329636 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468565447 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39012919 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.375442267 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.62971035 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.372890639 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.372933035 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.392769294 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.155649928 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376398489 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.374431863 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369222939 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974507534 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371931452 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372554381 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.259456062 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.384498829 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436924506 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374242603 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585717883 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.613876474 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412668824 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.38146945 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.370948204 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598633418 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379868058 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.387190444 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457427654 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.849358924 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.978704738 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401456668 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.304514058 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.080944786 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.063014088 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370575302 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.559178865 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371223796 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585277845 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408743054 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368444993 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.963815767 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390899062 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.391224441 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.382204712 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.383039641 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.376835285 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372411913 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.564535466 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.701854126 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387951494 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.390139964 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51502183 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.38539901 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.306413567 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.888130202 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378351485 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372412824 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.150100806 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4064811 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.406126888 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174277543 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649372709 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371976719 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636440128 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.498845855 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.406090789 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.382003601 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372048452 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404600663 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.398711973 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388200834 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.384421175 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.389759017 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.817429138 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93927943 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087434011 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924502877 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.620194218 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.391498717 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.265057471 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.080846279 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325903257 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.030049695 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609377285 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095262205 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336671048 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856442621 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.585729963 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153744122 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640379621 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609664767 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.59773361 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.406728247 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634721457 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594504041 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409804897 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.375475303 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.326643423 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.892168344 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935410009 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408269027 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452420913 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079742445 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394302376 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.152507854 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.432842355 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.0073958 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775093673 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.937734409 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.762691678 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386651818 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395171632 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169150443 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397208393 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.900972476 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999418865 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39577858 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.861864549 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329375984 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.592368183 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.412203361 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.373082692 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.910530742 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.397867145 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.637911002 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636006725 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319212822 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388845047 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917819027 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.249867778 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.381739755 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378076504 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106652657 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399065377 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668657858 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.391862635 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.590940307 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404781443 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.312522854 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311476392 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.069948677 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387694207 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353353013 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864389178 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.388042779 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418620347 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385613626 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228334561 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.632349999 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.391090421 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.963858401 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62757748 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382664345 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407146893 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.382058774 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391619889 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.366198666 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.688973625 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.612621294 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462830901 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.607381117 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.257427202 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.283953627 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.398601955 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611065575 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.273302784 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376704389 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639298096 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.112533969 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.385352581 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074788715 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419519757 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386104639 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.389262094 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391092926 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403405896 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466458456 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594391866 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.414035776 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.388196923 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.770677015 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404713391 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381557074 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.392332421 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472262046 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.696255011 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.595152022 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.176488275 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966580604 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120526616 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.986450149 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657032041 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387865018 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380455158 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314552924 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528533957 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.906004061 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653165148 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510348146 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.394555515 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410283498 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37918321 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381190154 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616205629 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654417048 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.250057064 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388849451 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.045593234 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.538155462 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390361878 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.590490372 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869068975 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940648879 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503605591 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387610605 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.095145823 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67274801 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.471108379 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380585513 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.970333242 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.398212344 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.008403826 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.39258655 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386046164 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529628356 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640141232 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040211636 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.40939961 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.542295306 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.15534007 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.415793365 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643657051 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.846893065 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.597934373 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998775442 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.101272758 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652058436 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453140874 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597958739 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.511085583 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530217419 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.390682717 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.281949785 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381849364 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228216241 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.092240865 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.391410491 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975268397 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669773619 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.385810204 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.385011794 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408741872 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.392640351 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605892812 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084484198 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613375932 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392332223 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391738866 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.954186383 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976010748 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661494312 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327254855 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.387806612 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626917631 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.644702974 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408969549 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.836536671 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.094563388 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944908487 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.362775034 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405290678 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383769115 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.112738395 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983588558 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.627206966 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897444672 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.04880981 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387050906 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665215069 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.389591766 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389957731 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668735028 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.387898316 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384358784 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627614219 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.997871174 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172477985 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.415226337 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.480149746 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.330407566 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.610328791 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435847318 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346880187 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386263587 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.785232956 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404971826 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51606508 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398100969 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.396086508 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397727699 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.125585071 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.670510493 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.391486576 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.365057451 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.382349158 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393958496 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48430371 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950871385 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409578595 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.06213296 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.738450371 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.64252601 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.388570066 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.372223453 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.391214996 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389495517 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.105070052 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.354934496 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387325737 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950696375 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.396259001 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.405540699 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39094463 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.603964523 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598196649 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387229511 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613851682 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413366217 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411258438 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.286624799 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.15404149 seconds)
  done (took 1677.128712837 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.398833746 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.441919962 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.415198418 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.400325525 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.433860837 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.503688489 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.505031875 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.528592569 seconds)
  done (took 52.925416903 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.386263521 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.556202152 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.417424499 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.399911412 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.403394159 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.39283103 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.854535778 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.411565199 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.404069564 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.397677328 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.390190536 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.397173121 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.060325411 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.404869736 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.388550093 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.387213407 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.396244582 seconds)
  done (took 66.354014539 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.459777223 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.409012695 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.193344025 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.45984732 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.426452937 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.398484854 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.966742918 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.413476331 seconds)
  done (took 59.028516333 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.406036804 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.405606196 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.404910583 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.405688814 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.406713925 seconds)
  done (took 8.328481275 seconds)
done (took 2083.974742408 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.393991495 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.396644488 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.394974717 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.396829985 seconds)
  done (took 6.882754644 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.369341759 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.089559276 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.370969555 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.39448019 seconds)
  done (took 18.525185112 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.400524847 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.413030403 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.086920125 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.011420249 seconds)
  done (took 5.400103396 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.139863447 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.154617224 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.137993756 seconds)
  done (took 7.732341885 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.391605275 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.398984643 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.394897512 seconds)
  done (took 20.486143235 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.690394023 seconds)
  done (took 2.990848326 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.53678824 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.585939668 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.708638504 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.713080086 seconds)
  done (took 7.843611364 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.78111217 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.768906471 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.576773713 seconds)
  done (took 6.426663492 seconds)
done (took 90.402630443 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.174536485 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.394576617 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.597561574 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.143427566 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.625522825 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.597793505 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.601113644 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.108607896 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.653921838 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.645202959 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.146456723 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.621548565 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.550828577 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.395068631 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.552959827 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.391114233 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.623696002 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.220950711 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.827335129 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.027342182 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.598961486 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.781207663 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.974592918 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.853838044 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.631956131 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.547309003 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.381099128 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.392421067 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.00885937 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.45780534 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.55534695 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.207217907 seconds)
  done (took 190.59163396 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.392424742 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.416249223 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.390491742 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.391890014 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.391235979 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.399217313 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.39267431 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.408319509 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.410496412 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.401311378 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.410018489 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.40342652 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.392032935 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.393137508 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.394233991 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.392423006 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.392699891 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.401211479 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.409675114 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.40833767 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.394704382 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.42336156 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.395230613 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.396731508 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.393445194 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.411883113 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.393531552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.39327916 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.393678986 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.399112283 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.394069035 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.404575116 seconds)
  done (took 206.088966761 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.393333764 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.42038162 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.407013522 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.394093852 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.410161838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.422669156 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.3928822 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.400790136 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.393487961 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.422758551 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.393959863 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.393406336 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.393972549 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.407005426 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.395172058 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.393744759 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.403039162 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.401528154 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.411789537 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.3952034 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.411638075 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.406511823 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.395291591 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.394937509 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.396686751 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.397143059 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.39734812 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.39557619 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.395471976 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.407943067 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.403182201 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.403557177 seconds)
  done (took 206.156897019 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.590025141 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.403889433 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.40323165 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.341021599 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.403625952 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.40271104 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.397825976 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.60175556 seconds)
  done (took 14.851035325 seconds)
done (took 618.989729365 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.730402627 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.444156196 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.610449807 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.424098172 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.198125781 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.449526302 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.423007888 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.593012016 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.33878235 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.60842607 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.685628071 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.439685344 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.822696584 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.4227056 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.677015976 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.525232842 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.27676219 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.38954156 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.736368261 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.971706708 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.691053454 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.86180719 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.613149293 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.338281446 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.837410676 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.860697477 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.122812632 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.261460721 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.440111503 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.743384204 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.073876244 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.394343715 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.483997999 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.483219132 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.542768895 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.521137455 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.351383482 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.481107505 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.623328009 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.625820022 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.955692356 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.150449686 seconds)
  done (took 94.532037871 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.387922964 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.387175286 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.387923275 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.388030329 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.389304392 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.388092327 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.38803763 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.387647601 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.388361814 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.387624346 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.388225033 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.388843272 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.388369845 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.38886891 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.387484544 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.388266621 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.389906906 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.389991256 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.388475189 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.387694983 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.389828432 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.388997336 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.389648031 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.389432134 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.390259518 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.38939591 seconds)
  done (took 37.413185662 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.409024177 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.652596742 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.817514243 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.413451376 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.406732575 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.411555878 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.485109484 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.409750406 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.411550741 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.411353707 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.557538045 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.412028956 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.439277018 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.846228988 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.418311656 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.409683119 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.408756247 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.408630799 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.661120944 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.416810077 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.508121109 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.410320465 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.486523897 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.418665701 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.432487679 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.408977791 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.41425645 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.995180991 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.428506093 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.559237552 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.20555853 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.49041098 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.929442225 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.848573252 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.206993713 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.419980617 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.41079595 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.564260974 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.412050351 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.409491862 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.486878019 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.412325156 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.828339083 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.082050327 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.429487046 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.41108711 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.012724885 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.580385991 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.653480354 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.425305262 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.850709441 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.422881462 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.412628003 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.411490284 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.653168397 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.426909933 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.410441692 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.015772516 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.444786756 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.488198823 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.413485517 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.410521296 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.66947554 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.411444567 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.656864354 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.414760684 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.419199438 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.432572485 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.830989519 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.422955628 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.103748978 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.431304651 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.413735868 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.562459617 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.658584446 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.047324127 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.434002599 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.67418978 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.944375217 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.505190328 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.418148777 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.98782307 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.50941603 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.41640008 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.415270641 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.415185577 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.413652737 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.45911338 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.48708135 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.041110644 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.110962519 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.04953948 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.517536806 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.42669377 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.412983847 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.018812034 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.442387658 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.415143952 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.826252921 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.110098071 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.433370228 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.421502922 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.106669029 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.435556467 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.493462339 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.420145428 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.838974034 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.424646175 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.461209516 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.41500582 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.419924016 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.43621989 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.492716527 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.418867341 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.416533707 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.077368637 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.589372299 seconds)
  done (took 185.994082542 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.420083243 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.409478809 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.420748505 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.40983009 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.409391906 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.417416662 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.409857863 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.40971366 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.415711249 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.409155084 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.408756347 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.411818435 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.410698397 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.421050363 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.420247493 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.41606036 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.019386959 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.411022289 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.415775773 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.410555964 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.20341491 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.419623662 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.411141794 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.410209825 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.41238011 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.411725426 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.44510779 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.412137101 seconds)
  done (took 154.322410911 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.417054158 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.975797739 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.444250902 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.546823885 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.443986682 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.416363299 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.544960623 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.474627787 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.436633487 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.416516279 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.416244338 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.714433363 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.41919247 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.92486829 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.609557143 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.564810808 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.923507526 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.436612711 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.416655293 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.416756585 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.548584103 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.424325095 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.715707679 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.972998043 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.437754555 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.97733444 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.410819246 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.419871957 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.417805932 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.980235806 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.442548556 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.717234673 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.494746006 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.477266816 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.997482504 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.953906601 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.952996785 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.566051855 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.418626398 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.418910044 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.418274565 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.402964487 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.976594589 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.438971675 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.420010334 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.967821901 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.438980385 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.420626856 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.425936167 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.417528149 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.478221398 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.49727209 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.738649568 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.981703207 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.514054554 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.432325246 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.548169544 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.807770368 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.430431885 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.927497769 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.403561315 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.984255138 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.439997476 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.403871802 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.420328507 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.424892433 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.567467528 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.550623676 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.928505317 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.438390103 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.926647788 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.58601253 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.42014552 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.419994025 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.422813098 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.981534774 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.946223027 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.58542772 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.553487363 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.612934435 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.413263573 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.419832361 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.404939182 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.497860585 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.421317017 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.98544993 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.947815941 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.440858381 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.424338042 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.422958853 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.422482984 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.596899018 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.010243891 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.515271302 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.918941368 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.741341775 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.723305974 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.424599867 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.481678167 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.439162294 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.725257583 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.424997914 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.480633885 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.873142402 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.731649695 seconds)
  done (took 168.618220771 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.655950877 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.616014919 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.514683051 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.567398763 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.010318841 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.991554548 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.683232947 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.565184959 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.534801584 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.678251829 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.541405434 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.51418105 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.63803479 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.499128149 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.145452573 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.509785027 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.532367785 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.575730704 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.580628635 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.440317207 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.082938414 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.700707018 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.611330681 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.257426007 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.515090328 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.176811635 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.973575806 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.942611913 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.594314304 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.709119718 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.973984049 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.547486419 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.374972194 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.111150841 seconds)
  done (took 67.692912642 seconds)
done (took 709.880086994 seconds)
SAVING RESULT...
DONE!
