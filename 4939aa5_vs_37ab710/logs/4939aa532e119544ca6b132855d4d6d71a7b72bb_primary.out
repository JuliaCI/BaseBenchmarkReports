cset: moving following pidspec: 13633
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.302577514 seconds)
loading group "string"... done (took 0.466706298 seconds)
loading group "linalg"... done (took 7.808813754 seconds)
loading group "parallel"... done (took 0.170816415 seconds)
loading group "find"... done (took 1.248339192 seconds)
loading group "tuple"... done (took 1.937732133 seconds)
loading group "dates"... done (took 1.316520342 seconds)
loading group "micro"... done (took 0.242903196 seconds)
loading group "io"... done (took 0.657572918 seconds)
loading group "scalar"... done (took 40.788121271 seconds)
loading group "sparse"... done (took 12.425216214 seconds)
loading group "broadcast"... done (took 1.09781962 seconds)
loading group "union"... done (took 13.721237264 seconds)
loading group "simd"... done (took 4.776241639 seconds)
loading group "random"... done (took 9.640046604 seconds)
loading group "problem"... done (took 1.975723419 seconds)
loading group "array"... done (took 22.424998235 seconds)
loading group "misc"... done (took 1.432952146 seconds)
loading group "sort"... done (took 3.575701843 seconds)
loading group "collection"... done (took 19.423247004 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.530977848 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138233765 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149647674 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.131471186 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202541568 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.141973133 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155972668 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.114347316 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.925084186 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.186250869 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153572045 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.512936169 seconds)
done (took 5.069977547 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.22259266 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09361998 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103524809 seconds)
  done (took 0.86401442 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078057303 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146036836 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093519362 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079563626 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094418416 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078820144 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093705724 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.093549609 seconds)
  done (took 1.353702022 seconds)
done (took 3.199531229 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.718308399 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.277770882 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203286545 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.476945989 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.178330832 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214425897 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674744124 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.36005565 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251408451 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098653275 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143108438 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391742142 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134782717 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682368237 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088882507 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.121821058 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.175578071 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.460353476 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082927032 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109934042 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11587524 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140441595 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127513588 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09044087 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.182128204 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081299615 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192282628 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106892162 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081225219 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.291962455 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201781103 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.678232318 seconds)
  done (took 10.845773343 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110960741 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133631805 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097426876 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138654952 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13477658 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099175364 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084835 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096458056 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12290168 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177333548 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.131908498 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.120536298 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094391042 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.098837866 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.098913313 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243949292 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122975975 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120419744 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08520451 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104747665 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121586403 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112929804 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108771556 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093465967 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.179288406 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204294819 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111190687 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124889902 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095622706 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.116617346 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142356817 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14274471 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096621264 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080915889 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172672994 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124533875 seconds)
  done (took 5.13319098 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188073886 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120872335 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169126878 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163905513 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14077339 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161722796 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111722563 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244438799 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.11432503 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177222215 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.138810233 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099612067 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097426274 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082996233 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096277522 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.640058334 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.124017176 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15502151 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116101843 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104895739 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083710485 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36461588 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101568971 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079749685 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09883689 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066205988 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159341817 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099444382 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.157504874 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120778053 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081775813 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134406831 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205862244 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122780387 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117773244 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096322262 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096329202 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178944241 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087616165 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096957962 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103737916 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135331994 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131290916 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099028916 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.094160753 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.205162276 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078597733 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11157724 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.959043095 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179013772 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.122317077 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098195715 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.328157229 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116225836 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079768892 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097456715 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.254447704 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.193283685 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.121088059 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081047129 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097465838 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079515102 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094354977 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081254816 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385161117 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.094171663 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.881044451 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083764578 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107394634 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077413921 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099210673 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.093952851 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086981969 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104285354 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097707366 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096913707 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082018692 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.095930215 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079656672 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099800334 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108312133 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084237373 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09393359 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160879542 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076876955 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.094745523 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097570942 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127479 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097283036 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078768295 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131449098 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096165258 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080950035 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132621565 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081567749 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108088538 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097797266 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141910305 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.093993856 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.161893094 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092390318 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12509837 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096551564 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113799111 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109271131 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099148984 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085653464 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094220702 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077654711 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162017148 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078869699 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.094656668 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082767055 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109756255 seconds)
  done (took 22.689321093 seconds)
done (took 39.340858199 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324984875 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.100830486 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102361237 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101267629 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.0996226 seconds)
  done (took 1.479058987 seconds)
done (took 2.204229968 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.299138481 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.1883961 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076042973 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167276658 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091770272 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173449685 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158767196 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110502847 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218740515 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076634843 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1787442 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076636092 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093656327 seconds)
  done (took 2.658867917 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09450831 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115285384 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082485473 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111190378 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07702214 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110561745 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109767384 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099744528 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109584179 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084139002 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092906744 seconds)
  done (took 1.806767255 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093402872 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113329406 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082003516 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109674774 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076768814 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109203934 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093732261 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115605271 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110076301 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084944956 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093678818 seconds)
  done (took 1.803215831 seconds)
done (took 6.983283143 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090729354 seconds)
  done (took 0.807775063 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.914556156 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.541481053 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113597224 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149414739 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.317210721 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.173386108 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.480780663 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124350649 seconds)
  done (took 10.740943975 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.143376731 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083833546 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10226937 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083122948 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100442615 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100018754 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08666547 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100293124 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08267359 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099115091 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101454879 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083076745 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096945532 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085763102 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09724539 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083077562 seconds)
  done (took 2.312475924 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118527825 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117076987 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10503056 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106796683 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.102229245 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.086330888 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105443739 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.103758161 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084921067 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101346878 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.104399424 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.08951586 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101623557 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079772253 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103667879 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.105532375 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.100607068 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.089640406 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105085857 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104398912 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089238185 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.093484351 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.101528242 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.08925005 seconds)
  done (took 3.214639323 seconds)
done (took 17.796472961 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156986112 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106240397 seconds)
  done (took 0.978956981 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09513608 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110618756 seconds)
  done (took 0.93638348 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096447403 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093472172 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119591217 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107176602 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079859799 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094134683 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116509069 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080478678 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.093915473 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095136096 seconds)
  done (took 1.710453932 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082266801 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.107341054 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.09922912 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094022979 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.102446302 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09360216 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087191624 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096475161 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.106939995 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076316752 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100463078 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112088997 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085476299 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114290769 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.101065306 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.097512762 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085004406 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096915969 seconds)
  done (took 2.469985063 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078802355 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094689931 seconds)
  done (took 0.903483667 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080767837 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092307398 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080767403 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09484773 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092460172 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076083555 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092759497 seconds)
  done (took 1.339895054 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.46724214 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13553098 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.252202008 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085269462 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119749628 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.304894982 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.095745952 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.101668623 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.084030187 seconds)
  done (took 2.431933611 seconds)
done (took 11.500144799 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092172102 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116303366 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112251686 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.461401473 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.12121174 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.080058577 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.158528752 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.243703971 seconds)
done (took 2.124805763 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.149816157 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323192747 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11361092 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066445228 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094976996 seconds)
  done (took 1.336511832 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07885073 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098249097 seconds)
  done (took 0.916688794 seconds)
done (took 3.13787122 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080342035 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.12752962 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077661589 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096852692 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077280228 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096788014 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.093367491 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077483927 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.094902727 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079481466 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.094531893 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079484314 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094732397 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076730146 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092244109 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079505553 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092283167 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077178846 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095091694 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077185993 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095104586 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077138051 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.092982702 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079450091 seconds)
  done (took 2.876326294 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099180921 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096828395 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.100848109 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085361344 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.099440637 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100190452 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.085599069 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095573031 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086340643 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097195118 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098516277 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084764815 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09678242 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084845792 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096641202 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099686844 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086160772 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095280705 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097023059 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.083101928 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.100986452 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08017203 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098391436 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100881344 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08379727 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098986779 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.098367557 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081648734 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100384289 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083394001 seconds)
  done (took 3.539418357 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084438438 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092407282 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07832561 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100140954 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07734914 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095586191 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078024576 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094496236 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078396023 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093715805 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07898574 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092910312 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078037193 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.093862482 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09469825 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.081342044 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.10649339 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077953058 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094069381 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078203593 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097590989 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077975911 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093256124 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078269012 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092657937 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078019741 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092521518 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078122712 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093792145 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092708267 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.080889492 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.097306636 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.077269908 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100130764 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081364344 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09376344 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081054533 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.092641289 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079011424 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093507884 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077289399 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.092895838 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078105715 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100470697 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077771685 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094924213 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.09365055 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.079705714 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.094585376 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.081762309 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.09317158 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.077403881 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09579911 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079047048 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097566917 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078288593 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094280025 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077783561 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095006236 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.093056377 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.077572145 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.093859784 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.08067957 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094824528 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.093575278 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100887806 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.077901672 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.09602606 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.079981546 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096184074 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.08096792 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107864706 seconds)
  done (took 7.080636134 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083391989 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104327556 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080715388 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095954764 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077273901 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09443861 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097601339 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079262634 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096492952 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084686756 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093413263 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09542066 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080695219 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105910095 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079290014 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096276344 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085064177 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091261538 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.09419869 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082077027 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094507233 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081899228 seconds)
  done (took 2.72508914 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207277156 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103356863 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14016551 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105993425 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08287675 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104518763 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100079995 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086201326 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100802627 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084461604 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099188044 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10073451 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082482369 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09838782 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09949951 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084579294 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100513754 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085214508 seconds)
  done (took 2.620607803 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093039299 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097331255 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.11789762 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.080793865 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097486066 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083160209 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102716792 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107305066 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083725831 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096579921 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.10563931 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083995745 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099636476 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080494284 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099234913 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082207835 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099419817 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096357848 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090709216 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1021744 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10175544 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090302179 seconds)
  done (took 2.847225177 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095426605 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098638202 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115966984 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083827275 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092995974 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078961253 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.102671897 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081974876 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.104114018 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098314121 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081050714 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094963382 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087229179 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096263256 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102471194 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080696376 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098536962 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081037896 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097836356 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092386484 seconds)
  done (took 2.622014638 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10211715 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098050213 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09809334 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091145029 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097751348 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.098009317 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091199437 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099254657 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098497623 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.108132568 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098799546 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.098168786 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092430287 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104726735 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097924093 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091032644 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106795797 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107549759 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.099013724 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082738825 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123716492 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.20896039 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091855421 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098491265 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098285471 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082563371 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098990044 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087946864 seconds)
  done (took 3.605457573 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081284545 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09699037 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079488332 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.094391929 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07862041 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095607743 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078453577 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094414775 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081262876 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095028962 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080642764 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097006401 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080905214 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.096681846 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081322013 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097429953 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083650201 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.094446539 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078364485 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09476814 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08087073 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097226925 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080815768 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094813398 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094879066 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.081162987 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09434243 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078723384 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096932835 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078097255 seconds)
  done (took 3.399507866 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091750584 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104620888 seconds)
  done (took 0.958130678 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079402035 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112545009 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07846808 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101097062 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101965313 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082573856 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105253716 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08558188 seconds)
  done (took 1.505419716 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096919701 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.108570839 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082755183 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110367719 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.107754568 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.09521281 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1579821 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099150132 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086971081 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.095436923 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.110615932 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081011446 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.103362982 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081316773 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10403303 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087836476 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094824767 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10345625 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084172926 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096127808 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082618423 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108763525 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099427533 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.078743715 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.09889097 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092536104 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.107432918 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082968722 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101091073 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107173807 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087365252 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092371475 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081577948 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098862985 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08012759 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.106674212 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110585481 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085287873 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106805038 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099126728 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092681789 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093339038 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087927008 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103501147 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108363269 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082983169 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099922697 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077129014 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096457773 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084263984 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093602087 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081656035 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092501719 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104942711 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085918273 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111652377 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081189957 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099257179 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.101073011 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084884637 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.104240624 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083760126 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100769131 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.08137486 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104828612 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.101751861 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088962522 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093050841 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075775174 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096464377 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.089850014 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119740979 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106238199 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082490103 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098809084 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079294847 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101747076 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099171436 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088544482 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106257363 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081725799 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106465481 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107003258 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081794977 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.100710944 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10567779 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.080310878 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.100705156 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079204865 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113632381 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097372882 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079188349 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097005419 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091351395 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102255063 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081341253 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.096241978 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092253094 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092781387 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099389212 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083355841 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099030001 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09142741 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104143788 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104575488 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.08847606 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.105258842 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082174635 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.10104114 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078190608 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100629569 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101039945 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088740945 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092506009 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084481487 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.100597064 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083211461 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.105167362 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096838749 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081430297 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10688032 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088508314 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096557753 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078158165 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.100573754 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09796511 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085517935 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105008101 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080691617 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093164911 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077331692 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10212661 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.097817819 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086099064 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103484903 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084716978 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093004325 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097020991 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086333216 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106111276 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.082523638 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.099169241 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103119213 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082193253 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098901309 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087706686 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.100204459 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080656085 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103085603 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083576712 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093577347 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101712567 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085599337 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097776782 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086089286 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103252953 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.100436533 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083368503 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096983716 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.08728787 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099771664 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080984005 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098468699 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081106253 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107052807 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.100875563 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077693281 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096066933 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089404321 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.095835026 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097573694 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081940432 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101222906 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083002476 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096791519 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082238794 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100102881 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110272163 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086786627 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100359103 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088228141 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.107620757 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098122102 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083659413 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.09833225 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082865381 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099929673 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090072427 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104237162 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10454181 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085018387 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095525549 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08734948 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105726723 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098240065 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080173683 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.09777616 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085986532 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105962034 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.101937137 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083239612 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09721152 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082540323 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102423972 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085334446 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098036788 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081630783 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.103696115 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.097981695 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088717946 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100449726 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.1079376 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084727666 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094647955 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086049597 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097015079 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088519357 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09385298 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.07972892 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.097429736 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.099711121 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081150215 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102085825 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076079971 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106780046 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090267442 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099837383 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.097662031 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08224098 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108001707 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084518472 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102446263 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085792336 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104225304 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112688475 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081889073 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.102355298 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09187701 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100222044 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.092769785 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087838573 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098861899 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08138247 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098669089 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080941715 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102544261 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108308177 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.087012772 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093069512 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085337122 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098741814 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081136341 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095998533 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106383159 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085662486 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.101333985 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090882596 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101145563 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083439369 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102834035 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099251008 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083314619 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100760537 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085253046 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.099882015 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102018756 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081441447 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101567166 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08118806 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097962998 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.084531393 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099631752 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082370355 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104766383 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101462795 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083474015 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.101973342 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084559192 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101000941 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082992492 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099142812 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086088567 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100642728 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.099643359 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084843418 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095274758 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090978418 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100233848 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091385871 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100331382 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098506433 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087945096 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.102381681 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087633068 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101046881 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100716705 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083971658 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099832588 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086256342 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108065985 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080192024 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.108110749 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106443176 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083528761 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102497544 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083091797 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101089047 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082577467 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102070315 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101272908 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082263918 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.09933019 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087187845 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.102486484 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082673607 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101809053 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101070905 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08274613 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101504443 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077144497 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.098944842 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082581349 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100577725 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090464995 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100664857 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102809609 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081965775 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101878189 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081893994 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097198047 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090785027 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109585234 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101083842 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091482385 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099139786 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102000098 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092219894 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095002947 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080890945 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098941975 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080950216 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10924577 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084803324 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.108703436 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101100489 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082213323 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098409231 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084422929 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099682728 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076982253 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098650829 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085885159 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103569795 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099269804 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083255782 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103418872 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084455647 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108266789 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082411809 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.101894981 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100850521 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079563538 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.098934454 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081117291 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104198492 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084319214 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098223587 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079802478 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.108448301 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084391142 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.10131482 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10087045 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084924553 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107506463 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08202458 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103203438 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104033693 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07796259 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103708702 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082871166 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100529053 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081450031 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105181671 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086517873 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101892444 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.108096967 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082466625 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101529139 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08342557 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.09991142 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082397736 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100330542 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101250062 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082513686 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10324973 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091533956 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099734489 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085019728 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100912016 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10164293 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.088250492 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102276965 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08453198 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10883298 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085898388 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102392199 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.10779313 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086716495 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104160637 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085391138 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102751699 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107262405 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082739363 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110530823 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082817025 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102838998 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08428402 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099190979 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101247679 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083190809 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100586955 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.087605633 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102623306 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081934346 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100345485 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080691172 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103159555 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105345649 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090221132 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103770907 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086335889 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096749563 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079974184 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102074682 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098588758 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084155568 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103795709 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089689301 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.1043369 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083270203 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100726332 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108181989 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089280504 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.10669978 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080912965 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106183518 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084911544 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103090344 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102090297 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083357262 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103196609 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089048754 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103374082 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082201557 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109283983 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105680663 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084889031 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103591093 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084533966 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101696189 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078451073 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103029597 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103684537 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090013937 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104928128 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083959261 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11090603 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083752992 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101440875 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106037371 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082099749 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108415233 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078310534 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102639043 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102622823 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084731915 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097800766 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082173307 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099861498 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085248385 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101369299 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078822501 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111155362 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109095946 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085130712 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100984409 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082587955 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098189694 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079012679 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101325183 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084921231 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103703078 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110647577 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082718564 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100751506 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078633884 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102663345 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087063328 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105251251 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099425457 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.07888217 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100994232 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085623133 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109391867 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081529814 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101857099 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087431224 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104431064 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100751474 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087738391 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098614943 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087627521 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112485605 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102957173 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08415816 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108444374 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091704106 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104726332 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.07911956 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102805867 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104373674 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08416182 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103635187 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084744787 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116159682 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105472747 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082749912 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101763335 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.085799331 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101955298 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090372717 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104077801 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102884752 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088876013 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.103880851 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092648383 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104480225 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107761282 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085232267 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.105050028 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08299223 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102950941 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081964918 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.101050455 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084999726 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104158684 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106964953 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091435387 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101179929 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111497407 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.090966831 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.107394256 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079775422 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102291696 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083283549 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097750763 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084730898 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101152922 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08237093 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101280003 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100998696 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084150517 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108398699 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085512333 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103782189 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.08458437 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096230912 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085460025 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105169444 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10271863 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080392239 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102326335 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084590225 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.108311933 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108872357 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08400081 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103728385 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085575485 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103776524 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.07872274 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.10933844 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08243421 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105183814 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083248341 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102822984 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103696754 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087012207 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109573008 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084979289 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105598086 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115111684 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086351357 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100085035 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081396355 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108056256 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082683697 seconds)
  done (took 57.239353837 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14555554 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079965302 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09814129 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078805861 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111335815 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099087792 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07920504 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099619848 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080482636 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10217913 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07909965 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097960696 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10748288 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12342833 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09326132 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103135055 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097384657 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080336237 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098279288 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080149464 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108536091 seconds)
  done (took 2.85206653 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103374357 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115853534 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11400202 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117915712 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08853314 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113945062 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114131496 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113479073 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098773167 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108879853 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11737442 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114077188 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090953613 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109330336 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109350346 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093793901 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11809811 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10884338 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115581698 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094556975 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112292054 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113670301 seconds)
  done (took 3.191820824 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084173664 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101555459 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084570294 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097835292 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083016041 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098250076 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087242989 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100356544 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106754515 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.082240676 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.101397559 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.082099121 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10431437 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079031984 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102449885 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081493307 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.149974339 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106467868 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103620307 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08450749 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098408615 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08600047 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098598018 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.07928546 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101873248 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08804796 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104011817 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.100513042 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.083315592 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.101437592 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.083279393 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.100178594 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084289153 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103134181 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082125529 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101892838 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083269582 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102805526 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078623138 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100594641 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.103094236 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.079070657 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.102335157 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.084330344 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.101552616 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.080772108 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.104392842 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083768241 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098734894 seconds)
  done (took 5.428176922 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104037854 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159502509 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084852979 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141741307 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119418494 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111920758 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087536052 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.120927619 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10144249 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082272975 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121780633 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118532372 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102498959 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090088678 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.105621745 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102424322 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085339667 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102095536 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107633306 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083028287 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107407637 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.109215773 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.098773426 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116411066 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107048694 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083004046 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102869907 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107881561 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.115783599 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089597978 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107925565 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109022355 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.10089316 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104700409 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102207272 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086621522 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120268163 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103295008 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086103211 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101199846 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08624804 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107849341 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109147002 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120187147 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084053707 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108266683 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103493273 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.081283765 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.115587178 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105419857 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092622815 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118920822 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107137511 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084488143 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107754346 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119099944 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084662027 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100302779 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106577734 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116353805 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.081155457 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108266042 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117411396 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087048726 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112102519 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.118372005 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.089037918 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107692849 seconds)
  done (took 8.042750953 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093419439 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110664065 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119354693 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119121311 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091006476 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110195131 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110486765 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091267724 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108951504 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115711778 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110459144 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132891789 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085879306 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114428418 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110753153 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091554676 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110608747 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111790145 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110430889 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091043005 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112265886 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121110928 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109904352 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100454452 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140339073 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105401311 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109854227 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091050264 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120317156 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110922327 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123147361 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091829877 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109614211 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120572998 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123407875 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.110494931 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.083302012 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110881694 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.111059279 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090897702 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105887729 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120626725 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091605408 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104467866 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111124465 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091076031 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.1197766 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12435014 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114292762 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116264286 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.091088639 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119597319 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109561006 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110847094 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118899867 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.127285046 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118872157 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120354645 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110512112 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120740471 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119159708 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128168318 seconds)
  done (took 7.650602109 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108937588 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115354366 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116789562 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100179315 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083008499 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109233745 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082520051 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103046369 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114231536 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093900066 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117040514 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107913012 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111738653 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096556757 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108403483 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11181771 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107306272 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089485712 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11342526 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108561249 seconds)
  done (took 2.919255138 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092989999 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123435209 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085694093 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11148686 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108191068 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091103871 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106362378 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108218481 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085377128 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107016769 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115862035 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097069021 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105656364 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110736009 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096822597 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111215253 seconds)
  done (took 2.477749093 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096116533 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116713235 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119271002 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084808813 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103128331 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.101637933 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.084861054 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100824526 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081422394 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121043138 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.10519538 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.087372045 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104830949 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082694789 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101207497 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088082375 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101019898 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.102628238 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085156484 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121981553 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096870609 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103074723 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105611042 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086748847 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104896042 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.110271595 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085640052 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102993578 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083171991 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104837392 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105200325 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.092605174 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101589383 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083696788 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103220775 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082707976 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103807339 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.105527939 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.088307494 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104536174 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083036614 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105148312 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104908171 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.085684718 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101022552 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.085739255 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101528859 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091048742 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103347412 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104417542 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.084232845 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106970709 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085924011 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11594975 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.10943643 seconds)
  done (took 6.237341661 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098960314 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109026478 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08055693 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102969926 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088748172 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107588048 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109560959 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087480768 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106501147 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083051088 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107089621 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090348212 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107161164 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108537632 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087084078 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108888854 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080806361 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106119256 seconds)
  done (took 2.598070545 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090636216 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105334422 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092068381 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105391305 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085174672 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107474229 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100429551 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.083764213 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103501157 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085131106 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106158375 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08780069 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104138172 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087944186 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105163514 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105045458 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.087545059 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103852238 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085381767 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1014266 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087909083 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103888992 seconds)
  done (took 2.954420918 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.11766944 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125032423 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092883407 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.229139032 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104668383 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131597828 seconds)
  done (took 1.632302985 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109551629 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121116321 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.1061368 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105683107 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114943643 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10806724 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087178899 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107360398 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117034379 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120918804 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087664168 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116362349 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116988976 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116410411 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094224951 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114750981 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107428061 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087609932 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106281195 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127050826 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087739971 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11777689 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107051864 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107538306 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087826961 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116858963 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117565471 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121632008 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088069632 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117017432 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11423874 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087735132 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116651933 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122006671 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109071624 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097100535 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107704885 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127258226 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113423509 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116823833 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088179718 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114335837 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117578038 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092911836 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117287064 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108030225 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112940111 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087544939 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108472196 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134174383 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1139859 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115899342 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094482406 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117748458 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117892439 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134504867 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121756733 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117144302 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095702372 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122286073 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116347141 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114980734 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097100403 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121470382 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114424026 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117536302 seconds)
  done (took 8.102192509 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102355186 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124791248 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108171987 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121964156 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097735788 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107056557 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108667644 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088355249 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107584809 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107387185 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152464059 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088724672 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117244043 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117609148 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10829978 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088431569 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108193504 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117009536 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08673289 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134255498 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107504633 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116518828 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117119111 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097453216 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121577007 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114433704 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107631698 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088689935 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107966733 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108223888 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093452402 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108127839 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116377434 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10629301 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097727764 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10823728 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107592496 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093335973 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106704613 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114700363 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117587037 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127066869 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088226623 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108336105 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123704886 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087442783 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108006966 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107508283 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088305643 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107761712 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123141635 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123066542 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102385057 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117751196 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10816005 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108323225 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08871407 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108520632 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107802941 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093746137 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117473712 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107615502 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13421368 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107563776 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088849413 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118115644 seconds)
  done (took 7.989818526 seconds)
done (took 153.829934285 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097996046 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.1362598 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096711634 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168872958 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10670062 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118790803 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138415734 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096803902 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107573799 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08582016 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106544651 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088204917 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170439428 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105976734 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08678268 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107858028 seconds)
  done (took 2.654821914 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200375866 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.25472331 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103067537 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105266596 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.110233383 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.088717971 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105459219 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09052689 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110295595 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084872616 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109163375 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085969783 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106453463 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085731413 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109454358 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108394248 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.085441743 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.109352129 seconds)
  done (took 2.893803003 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112987647 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146169407 seconds)
  done (took 1.10506553 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119059428 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179872892 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294273336 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154900383 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119505557 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127308833 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155869413 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130805702 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195376905 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122856721 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122657653 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096578683 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139966171 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116195973 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114853967 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097214543 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142672296 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.112987103 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.094733295 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116895358 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137995139 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085213918 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115939513 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093227654 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180033707 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118898499 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105506085 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084760754 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116555752 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094588201 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112668685 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125153603 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119031859 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.154372651 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123063371 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156422358 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118454007 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090723784 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115183785 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.11090618 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098207549 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118921574 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125103007 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097182172 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.108084757 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117603375 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085613231 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.106038697 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.094908283 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118170149 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114737512 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092381067 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174855743 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097838351 seconds)
  done (took 7.507573498 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794354588 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.163899795 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113781908 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.859602798 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137644925 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124767241 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.760665738 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134715177 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231465776 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.776690621 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132151095 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099783599 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231986251 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238578656 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.935888405 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310673653 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.675651432 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126231922 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150996935 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155586524 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119415696 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13758079 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109068542 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430166025 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115835772 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112879185 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096127428 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120737112 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16114718 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125538666 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115104471 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.181156905 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.24954413 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206702765 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116711309 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089572664 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111591573 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171324856 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270209873 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217938282 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182240554 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087908277 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111143 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12264382 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110290845 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109171195 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166028171 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.197681763 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170816496 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114844246 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099427952 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120472155 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122513502 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166819049 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123653878 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316536575 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.326064434 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089655249 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122106036 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127489572 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242880164 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123542054 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228048047 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139078765 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191815064 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111717635 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807959149 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.17060294 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111923284 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096174487 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118939322 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116897894 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099458001 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166264999 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39265351 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124258375 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115233654 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090283083 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227607887 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125165682 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090350612 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16412599 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115386295 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120604659 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124615172 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101376207 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.194472965 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230464818 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124001294 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097733515 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116269655 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125148037 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094233171 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23265325 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.200289176 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.183602355 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.21371543 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123704657 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.166771309 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169001626 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119773948 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173727753 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118221733 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127344656 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122465745 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.197263345 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146332033 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122465598 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115401126 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118097021 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14898986 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105571015 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120023105 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.173013342 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.4805801 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170159309 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109559486 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106669499 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11921613 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163022638 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118555637 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260909397 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100339038 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192747718 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097530248 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109003381 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120229149 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165372395 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124199532 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099411355 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122019013 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119736895 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.2336514 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219467354 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123737204 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223122311 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186390253 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118231578 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174292518 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120284664 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169359105 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120576705 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122278433 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094727114 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796963637 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124734454 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098055763 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115856237 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189321061 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112934388 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102527598 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124424948 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110100551 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754874686 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126923746 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122523844 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125339033 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096755114 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120286442 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118956401 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093709579 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184844055 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230430326 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100145285 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119846168 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12498414 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160456168 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116689775 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104101902 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125557761 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.127070532 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121916575 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094284478 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125670074 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171731214 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163094476 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222034168 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.59583575 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11396785 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104224814 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230948563 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112547725 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29072866 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097509079 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.227680464 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18665876 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100131706 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322697716 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167128652 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188373775 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.12660109 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.196444817 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087383011 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118488111 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166632454 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112800359 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096872218 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.185611983 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104682279 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123411138 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.967655809 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091808336 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24769859 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087732229 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.193263881 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0946213 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121444256 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295684999 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091483986 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129477655 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.167647077 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115724949 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126536706 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.70227779 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126546345 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122676832 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097688011 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223470673 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.186542178 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098190867 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119617958 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122698543 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.165645006 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210597683 seconds)
  done (took 44.241884562 seconds)
done (took 59.242456985 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.270523434 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209386396 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.257516338 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.165287027 seconds)
  done (took 1.853264791 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169052703 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147238597 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119896486 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106739493 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149444342 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084495464 seconds)
  done (took 1.657919746 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.355635185 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.269425887 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238568091 seconds)
  done (took 1.741772355 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.245917021 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.266650914 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.351729246 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.385644507 seconds)
  done (took 2.230280575 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.200447647 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130430892 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110672019 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103483039 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.193886542 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.237334111 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141279122 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.170214729 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121077272 seconds)
  done (took 2.33059599 seconds)
done (took 10.692183813 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.156958765 seconds)
    (2/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.110146223 seconds)
    (3/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.297629838 seconds)
    (4/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.125163947 seconds)
    (5/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.214514867 seconds)
    (6/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.247370953 seconds)
    (7/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.168608548 seconds)
    (8/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.202543337 seconds)
    (9/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.184422828 seconds)
    (10/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.228184995 seconds)
    (11/286) benchmarking ("sort", BigInt, false)...
    done (took 0.219720511 seconds)
    (12/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.12165235 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102496442 seconds)
    (14/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.214419275 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123390644 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094150318 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.229012052 seconds)
    (18/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.228787838 seconds)
    (19/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.164460525 seconds)
    (20/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.164464642 seconds)
    (21/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.112417106 seconds)
    (22/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.095491733 seconds)
    (23/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.11874404 seconds)
    (24/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096325369 seconds)
    (25/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.117255932 seconds)
    (26/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095731046 seconds)
    (27/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.196801763 seconds)
    (28/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.204999494 seconds)
    (29/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.092470836 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.136699214 seconds)
    (31/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.102012109 seconds)
    (32/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.19846661 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.136006585 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 0.224646749 seconds)
    (35/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.178996914 seconds)
    (36/286) benchmarking ("sort", BigInt, true)...
    done (took 0.232788209 seconds)
    (37/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136464565 seconds)
    (38/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.102054781 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.119743945 seconds)
    (40/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094109818 seconds)
    (41/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162746422 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.134659152 seconds)
    (43/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.166724377 seconds)
    (44/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.235830365 seconds)
    (45/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.117361755 seconds)
    (46/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.163183547 seconds)
    (47/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067077248 seconds)
    (48/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.159212903 seconds)
    (49/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.135026645 seconds)
    (50/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.184557419 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094073483 seconds)
    (52/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.201598666 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.132618044 seconds)
    (54/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.186243592 seconds)
    (55/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.18910181 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093954793 seconds)
    (57/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.183608635 seconds)
    (58/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.075408276 seconds)
    (59/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135343459 seconds)
    (60/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.112551298 seconds)
    (61/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107950395 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111653133 seconds)
    (63/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098385399 seconds)
    (64/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.148645693 seconds)
    (65/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.207645446 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.085813956 seconds)
    (67/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.101462474 seconds)
    (68/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.11464095 seconds)
    (69/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.168551318 seconds)
    (70/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.076759241 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107585993 seconds)
    (72/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.172318104 seconds)
    (73/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.166599778 seconds)
    (74/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12184202 seconds)
    (75/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.122288306 seconds)
    (76/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.217238146 seconds)
    (77/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.122508776 seconds)
    (78/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.089751948 seconds)
    (79/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.097145191 seconds)
    (80/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.067819975 seconds)
    (81/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.152660586 seconds)
    (82/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.150349297 seconds)
    (83/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065948806 seconds)
    (84/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124737602 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 0.086580197 seconds)
    (86/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.187924759 seconds)
    (87/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.173117619 seconds)
    (88/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066986468 seconds)
    (89/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.08874059 seconds)
    (90/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117656574 seconds)
    (91/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.087736297 seconds)
    (92/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.089616422 seconds)
    (93/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.119244185 seconds)
    (94/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.166328489 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.140028017 seconds)
    (96/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116627073 seconds)
    (97/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092779246 seconds)
    (98/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.076361285 seconds)
    (99/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.184558985 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.10908363 seconds)
    (101/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.096896537 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117486694 seconds)
    (103/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067036861 seconds)
    (104/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.090200524 seconds)
    (105/286) benchmarking ("sort", Float64, true)...
    done (took 0.231900389 seconds)
    (106/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.086532549 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.109322754 seconds)
    (108/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.112822096 seconds)
    (109/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185460376 seconds)
    (110/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.172394074 seconds)
    (111/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.183591703 seconds)
    (112/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066808055 seconds)
    (113/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.17436114 seconds)
    (114/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099843653 seconds)
    (115/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.091628543 seconds)
    (116/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.109684313 seconds)
    (117/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117671524 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 0.181835966 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119816418 seconds)
    (120/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092163986 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117968532 seconds)
    (122/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.094716954 seconds)
    (123/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.186990798 seconds)
    (124/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124439186 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09187844 seconds)
    (126/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.078752695 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.131417038 seconds)
    (128/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132709601 seconds)
    (129/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066413905 seconds)
    (130/286) benchmarking ("sort", Int8, true)...
    done (took 0.223055375 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110804846 seconds)
    (132/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.096787866 seconds)
    (133/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109575247 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095015116 seconds)
    (135/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.152664754 seconds)
    (136/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.109430169 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096985163 seconds)
    (138/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.200993144 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092754008 seconds)
    (140/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.155583667 seconds)
    (141/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121767738 seconds)
    (142/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06727216 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109807662 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094306659 seconds)
    (145/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.091924569 seconds)
    (146/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.107015938 seconds)
    (147/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118597735 seconds)
    (148/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.233225464 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096386045 seconds)
    (150/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.090901302 seconds)
    (151/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.163680824 seconds)
    (152/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086902202 seconds)
    (153/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068128719 seconds)
    (154/286) benchmarking ("sort", Float32, true)...
    done (took 0.23372073 seconds)
    (155/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.089773464 seconds)
    (156/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068093683 seconds)
    (157/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.093194404 seconds)
    (158/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.115099422 seconds)
    (159/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110009482 seconds)
    (160/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094622217 seconds)
    (161/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118748201 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087064846 seconds)
    (163/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.089234697 seconds)
    (164/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090748707 seconds)
    (165/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.118515248 seconds)
    (166/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.191821338 seconds)
    (167/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078239592 seconds)
    (168/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.08825809 seconds)
    (169/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109558326 seconds)
    (170/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.180512776 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.136043215 seconds)
    (172/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112080023 seconds)
    (173/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117705689 seconds)
    (174/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067821783 seconds)
    (175/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111542138 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067519629 seconds)
    (177/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090188139 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116641279 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120139483 seconds)
    (180/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091391085 seconds)
    (181/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109552598 seconds)
    (182/286) benchmarking ("sort", Float32, false)...
    done (took 0.151217844 seconds)
    (183/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.185670758 seconds)
    (184/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.090599336 seconds)
    (185/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087204209 seconds)
    (186/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.154561486 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 0.225166229 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085466395 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110299857 seconds)
    (190/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089594509 seconds)
    (191/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126947648 seconds)
    (192/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.076884027 seconds)
    (193/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115370576 seconds)
    (194/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066836292 seconds)
    (195/286) benchmarking ("sort", Float64, false)...
    done (took 0.172295601 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119791766 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095616013 seconds)
    (198/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116641881 seconds)
    (199/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067089124 seconds)
    (200/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115170181 seconds)
    (201/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086721611 seconds)
    (202/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.06844127 seconds)
    (203/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.089937023 seconds)
    (204/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149568954 seconds)
    (205/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.089729693 seconds)
    (206/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.180859156 seconds)
    (207/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.099132564 seconds)
    (208/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.139225872 seconds)
    (209/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089085251 seconds)
    (210/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.090884561 seconds)
    (211/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099883893 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.338358371 seconds)
    (213/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086486418 seconds)
    (214/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.091493697 seconds)
    (215/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067195917 seconds)
    (216/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109097662 seconds)
    (217/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088188784 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108641893 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086431138 seconds)
    (220/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.135899923 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086679671 seconds)
    (222/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.090608364 seconds)
    (223/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089648837 seconds)
    (224/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.142062861 seconds)
    (225/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067883466 seconds)
    (226/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116420714 seconds)
    (227/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.14852657 seconds)
    (228/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134429022 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.11080741 seconds)
    (230/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066911009 seconds)
    (231/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067712802 seconds)
    (232/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116384293 seconds)
    (233/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067069268 seconds)
    (234/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.08975568 seconds)
    (235/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092722384 seconds)
    (236/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135222859 seconds)
    (237/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066615285 seconds)
    (238/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119311699 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086309139 seconds)
    (240/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.10079131 seconds)
    (241/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093138261 seconds)
    (242/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067955621 seconds)
    (243/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.115025963 seconds)
    (244/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.076029735 seconds)
    (245/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.110029365 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086431095 seconds)
    (247/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.119352517 seconds)
    (248/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.109920593 seconds)
    (249/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.112304372 seconds)
    (250/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.091892656 seconds)
    (251/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.08889953 seconds)
    (252/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.11349237 seconds)
    (253/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093986085 seconds)
    (254/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.115038249 seconds)
    (255/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.086783998 seconds)
    (256/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.092322492 seconds)
    (257/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.09328199 seconds)
    (258/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.12509845 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086490441 seconds)
    (260/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090749769 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085672433 seconds)
    (262/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.09008798 seconds)
    (263/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067353215 seconds)
    (264/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096019674 seconds)
    (265/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.090327645 seconds)
    (266/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067519083 seconds)
    (267/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076629762 seconds)
    (268/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.110638497 seconds)
    (269/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.13608652 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093067836 seconds)
    (271/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114604149 seconds)
    (272/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066758684 seconds)
    (273/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068821342 seconds)
    (274/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.109377298 seconds)
    (275/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067143101 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109739086 seconds)
    (277/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.18104385 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09328856 seconds)
    (279/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.117414063 seconds)
    (280/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066173752 seconds)
    (281/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118774593 seconds)
    (282/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086090015 seconds)
    (283/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068892884 seconds)
    (284/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091861826 seconds)
    (285/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066093658 seconds)
    (286/286) benchmarking ("sort", Int8, false)...
    done (took 0.188605084 seconds)
  done (took 36.060448129 seconds)
done (took 36.944585711 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099456612 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147619457 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096968815 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134816168 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123720147 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091556776 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117565744 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.121925022 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.099399958 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126130846 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098069784 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093800502 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097623993 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119394109 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.120070626 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114430661 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123701648 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094081341 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118695703 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086574208 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.11744311 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.10943027 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.088098855 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070105383 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120551904 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118441704 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.092378667 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120163352 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086127004 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110157804 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091862339 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117114124 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086961294 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122555333 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.116173053 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.095280041 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.121258642 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.096681461 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112114896 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086423357 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118410345 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086640624 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117109606 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094792304 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114756574 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.114821719 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.095407847 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.123557135 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115251117 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114609515 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.118599288 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098478444 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.12077009 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.0931087 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.114979197 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.094617538 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.115642059 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138372831 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.095034627 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115454671 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.093874659 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.118111242 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.091983606 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.119256528 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.096712658 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120572002 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.121569676 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.091665948 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.120589092 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.092313654 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.110184978 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095287869 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.112988189 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087002711 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.118173327 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121104695 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08548033 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115986391 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.09314493 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.114847836 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.085779393 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112984753 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.088416802 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.116220371 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089728905 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.093000134 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090614561 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.115840067 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.085673107 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.119473712 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.093434277 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.117011543 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089703206 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121659226 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.087160272 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.114164881 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110372589 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087272471 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113294244 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090672146 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110184862 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089217255 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118948146 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087985388 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117144967 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.099665672 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.111383327 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.093409499 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.111300489 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.086870045 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124461474 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.1210712 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086655247 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116082011 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086154207 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118427514 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085726792 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110374359 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086481569 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110054864 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093051381 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110413663 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089417162 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.116962397 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124118831 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087117961 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113804468 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089593935 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110598276 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092673692 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111094603 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087033105 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112413462 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077638905 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113758548 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087411291 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118714114 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089518261 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.11880454 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089963567 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119965257 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092503442 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116423192 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093292656 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109027236 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074841976 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116478848 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090278296 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112807738 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086923704 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111961155 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087299082 seconds)
done (took 16.906457547 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087701413 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182106758 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149761422 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141947894 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107389906 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110720154 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121809738 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119403935 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113061085 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141933939 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110204897 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13019529 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147288108 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086996969 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111473544 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091970276 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11254881 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.126432464 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.121416386 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132251091 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162736627 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.111058604 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121786057 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134215796 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120739145 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114067637 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111320562 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092145376 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114018485 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.1269316 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.107300503 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114708517 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088024252 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132454457 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.128662177 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.095455949 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111390254 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.09426277 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.11156986 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088058438 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139569555 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133415266 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092926173 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117202899 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115128237 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.090622259 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.112604982 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.097440865 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.122047768 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.09254538 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125909209 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15522013 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.11485745 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.097045639 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.110556427 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.098948952 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119925245 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.114492477 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.087697304 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.114793482 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.087710996 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.1146816 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.102547484 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140434638 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.115188249 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.097317542 seconds)
  done (took 8.572678473 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106945658 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139367082 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129456928 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106409612 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112151873 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088598629 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112587496 seconds)
  done (took 1.747431771 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090788119 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134387078 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111066821 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135149036 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132357408 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11239267 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123016515 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090230404 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132780611 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.1139774 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109012093 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150220857 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090825437 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12038842 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137387731 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089034904 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136283571 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089116245 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115414142 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137456546 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091207162 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134355069 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09167379 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112491991 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.12744291 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.088425852 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161332799 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09488538 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113478495 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116739896 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.086639036 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151272923 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103324822 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124540104 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113330212 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104159392 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128594059 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08673111 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125694393 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.118631835 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.103342068 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.113657052 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090213026 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.111635414 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093476056 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124495483 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.109762102 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114646639 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091707107 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133846193 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.113455709 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.103484822 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.11337406 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.092271333 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115518503 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095505599 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12296942 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09036317 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133124765 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114751736 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106102844 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.130326668 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104291248 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129782899 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117154673 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.103523469 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.128139027 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092053578 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115518943 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.09306128 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129496145 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111387385 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.091010236 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.124122421 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091608191 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.137852322 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112494074 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11555524 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124263027 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.08918365 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11470476 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.089148711 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137507231 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093362049 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113965492 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093494911 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116235526 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.087592494 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.112551661 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11675189 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087185776 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11467228 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092232359 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114499276 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092060057 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132262606 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.090492319 seconds)
  done (took 11.805695416 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092312001 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114146104 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092592959 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115330485 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.08988975 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114450532 seconds)
  done (took 1.580788007 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11856184 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117107093 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104818887 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119440217 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154847574 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.128300406 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.104862014 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122830347 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.132362373 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102774778 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.12888231 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105872323 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13444344 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121566763 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104002762 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120228599 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129130574 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099840443 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12677392 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097370947 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135153391 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121163125 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097762022 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131295781 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117807645 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097770147 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124854321 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128436052 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.101674471 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122708251 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096291108 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116836133 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.120010339 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.098739674 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128268559 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.12118248 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095713013 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119365609 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100603264 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117155462 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.130332995 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096561927 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126282703 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.118495722 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.098552759 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120522159 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095168512 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123933152 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.128498965 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094268469 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118285157 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122288536 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.092194915 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120447056 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096962325 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124308185 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.118797944 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.104813108 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120507787 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120972208 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093520232 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118188633 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.098021113 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117089711 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.128905247 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.09490083 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120789378 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121178622 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098162168 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120757412 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095448918 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117611556 seconds)
  done (took 9.22657865 seconds)
done (took 33.87508307 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.68614049 seconds)
  done (took 1.643853678 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.813369444 seconds)
  done (took 1.771056363 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.05398728 seconds)
  done (took 18.043043574 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.492773494 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.59177699 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.992657071 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.16942862 seconds)
  done (took 3.206995099 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.952641763 seconds)
  done (took 1.939906395 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.287671145 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234814428 seconds)
  done (took 1.489148738 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.765153435 seconds)
  done (took 1.744061032 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.426814312 seconds)
  done (took 2.393227249 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.328097097 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184583076 seconds)
  done (took 1.493474599 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.552592304 seconds)
  done (took 1.529943148 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.077297288 seconds)
  done (took 11.059011509 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269904843 seconds)
  done (took 1.26041126 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302722722 seconds)
  done (took 1.283905896 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.480100921 seconds)
  done (took 4.46109488 seconds)
done (took 54.285254213 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102978639 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127207857 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102003524 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124690099 seconds)
  done (took 1.430911855 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.1055873 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12139825 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101006107 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120396724 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127775777 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09622261 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123256503 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101412178 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120953124 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.121542744 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.096629831 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121209509 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099118443 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122351185 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093554087 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123995789 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12550819 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096612664 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124562993 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09690528 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118514762 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.123831328 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.099172233 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119975659 seconds)
  done (took 3.686114322 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103366218 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119437387 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097378061 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119426111 seconds)
  done (took 1.421703939 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103068588 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131253381 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105770736 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126433111 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132121409 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105886201 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118056433 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092136556 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119123804 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.10067955 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115853898 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140647732 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106580194 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124485349 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102627704 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114147855 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092295217 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130810714 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126078329 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100768687 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118646289 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.09936454 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116319772 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.134241809 seconds)
  done (took 3.742905204 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173906303 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127285287 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138586096 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095821998 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161351717 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141308568 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088294445 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141518458 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088550577 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130198334 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118755176 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133795978 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129664007 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.113801425 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.088851135 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.1134443 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.104329151 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129876336 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092485188 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127665204 seconds)
  done (took 3.425187346 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100258993 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117738319 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088526061 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116510424 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099500936 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121327583 seconds)
  done (took 1.632683053 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094105574 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115020196 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090219761 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114445002 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094623627 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.11552545 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088749583 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11432069 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090160304 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115485064 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089824851 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115039168 seconds)
  done (took 2.226326492 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 1.730045319 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121711776 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094879533 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111359549 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122250109 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089066499 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129358871 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 1.279792395 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.146977531 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089246576 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115494204 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093930736 seconds)
  done (took 5.114244811 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244548481 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12567183 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276152726 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363303024 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156297338 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17159924 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281341694 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158995239 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223350426 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150221047 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199584972 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223880559 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152174234 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193335097 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137146114 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119380087 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216609545 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249358793 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126142248 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239256313 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185019568 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167725134 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179984016 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14971726 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164433756 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162581094 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094841521 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130257624 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234929494 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179438537 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190303999 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185641103 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119701447 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230463661 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230049649 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19724761 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27728978 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133905185 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.141945186 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167411187 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258130465 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138106354 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234294328 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156468609 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106026877 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221337832 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161077437 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176823407 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.144726417 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137727192 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198949603 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241997828 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191757272 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138122365 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299840253 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147816547 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.156987281 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189158737 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255697181 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226274616 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190291058 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120206488 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187476389 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19142623 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209468939 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152491568 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.177096729 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142404672 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214112114 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190814262 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165772754 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209638326 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182123722 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136398983 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170085838 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173681822 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170529421 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258127908 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212216211 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096146399 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170182045 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149244007 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131036132 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19421031 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099532251 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24119599 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142358821 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.137381844 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235389956 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159008177 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161044857 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195115824 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18722801 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147870437 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110334812 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153391939 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.129077412 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197836681 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114352075 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157995733 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185247903 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129280951 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170177551 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097884475 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210452836 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092149562 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1699628 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185439469 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127923731 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161878863 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152290168 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150882009 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177428035 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198853754 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139711752 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133728691 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210995301 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17976634 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140975814 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178330609 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228560564 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.14453427 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12204492 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224385472 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252202583 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137598877 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202386765 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147210051 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135147497 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134023317 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181839091 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155294987 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162104456 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106220348 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.208617405 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202598667 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125000233 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138994098 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198353731 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133285871 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133043107 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157851593 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146159048 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.136326714 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.115905465 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145291601 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177016114 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205798095 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153888925 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16524342 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146423789 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205130381 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138875101 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152672342 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149662497 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095068985 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190765667 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224967757 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130350787 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238663068 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171769968 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200394685 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168360794 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133482878 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210550194 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128215001 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094400927 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217377262 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166993077 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162356076 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196900346 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196274474 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.203660204 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183263353 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167918752 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173074987 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166803794 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153428511 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.137847127 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160593112 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159885817 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097531102 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.138969425 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134032651 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150331892 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141847011 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107298347 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225224217 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172130027 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190898603 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159203653 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148303734 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183820311 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127789492 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178744341 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177915848 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146182551 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.225854067 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194649452 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186249059 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143267171 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226827076 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093701035 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125198328 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141187833 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170157891 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106755052 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135530338 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163280656 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181525196 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202513333 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17161618 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20658079 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200298073 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192187819 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095487721 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16822344 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179920866 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176414683 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.178604924 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140262628 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152356195 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178030566 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148092014 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256566774 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168479187 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174580214 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202949099 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151178129 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131116069 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149795114 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184865054 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151024667 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176293409 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145929597 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138477204 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156936014 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131010631 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161258834 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179116156 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164600261 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180631643 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150048524 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213026099 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100925872 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162704557 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160266916 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162506625 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108933516 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170264035 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19753058 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142410934 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163366139 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185628646 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131489791 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307326451 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229865122 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190505441 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137327166 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155476323 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161664881 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1626187 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166988033 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187518553 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156570485 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214504574 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158929413 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109339775 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138354046 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151087145 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15308061 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.106082403 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148949891 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.204337487 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112110376 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20837733 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1597078 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1589667 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171896971 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15015204 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144807382 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123158503 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244606716 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184493856 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239612385 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.15204229 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177779244 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239985312 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124777607 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10489277 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13278097 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211965518 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111824899 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220725738 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188412321 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22654678 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181956661 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211079007 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139125546 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.09367539 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159354152 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170038022 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229558212 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146804722 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.121327346 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227319604 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110340583 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132206246 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198698616 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284205206 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148015694 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189214106 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080644507 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.302115182 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101768371 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132821888 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164770551 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204115766 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136798081 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178081875 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171043298 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165497407 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164724656 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149565654 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191251665 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236867624 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200302932 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180776211 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133854001 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158212714 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170487373 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188405983 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156478624 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139326138 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204615358 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222258292 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196097074 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142552977 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16961296 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170149772 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158337457 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21557394 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108594281 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241479133 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132745312 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215593682 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15362829 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111146352 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174553666 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.216833385 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140102294 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184920548 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183823265 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13623511 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132762466 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158968749 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179233173 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148490808 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099890158 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203090601 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097715938 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221656613 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234936841 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1342563 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155340687 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146587617 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107951807 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154730427 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184767668 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111158807 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163782849 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197723608 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136334225 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187257337 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229930173 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171366675 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168625072 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145983583 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.688073891 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131168012 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194903113 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147757892 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189209457 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15159951 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17399862 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159587621 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170196937 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195147313 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160865976 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233369254 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218213022 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179693239 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132900591 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15747473 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160374998 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143402203 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154334544 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169074859 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161671314 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144890238 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180355978 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165276814 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135190642 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113278187 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226342347 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148757415 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180732774 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214430998 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112048367 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172593723 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217185617 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133231978 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.175818075 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232749508 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144245933 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149045103 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.107094219 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151031312 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26266241 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125333077 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19118461 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185700971 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16050947 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170154413 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14546229 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220589235 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159173266 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187282452 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143562906 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160174768 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157286923 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136028731 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103996689 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156667432 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165049165 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150546901 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160197721 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.164475296 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196373351 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123937777 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117671896 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307958843 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175815498 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252042498 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134179838 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108255656 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16091614 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148833369 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177467843 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206306623 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108381809 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135468766 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137645961 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129536611 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136907133 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157123433 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192385651 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161968867 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241839107 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135204297 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27965932 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113912178 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157061532 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116650712 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105405103 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150124685 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145909766 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150604046 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19298096 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262905836 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147728543 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13475058 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149166935 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098445687 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135784445 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165436687 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165937255 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180567597 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142490813 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.08167315 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156715416 seconds)
  done (took 82.614762448 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167554193 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132443855 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146998375 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201266816 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17676864 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289696804 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209638829 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252888592 seconds)
  done (took 2.658983957 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096177043 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145378946 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156587867 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134203052 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091772997 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120340089 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.341461737 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132452059 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115392655 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122157406 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.169854932 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093710126 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.554002432 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090332706 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119370078 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107355417 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091971602 seconds)
  done (took 3.755332249 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.227213974 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.480435796 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.996593703 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195606742 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.178403688 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.120157708 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.688034781 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.11742892 seconds)
  done (took 12.08956952 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116851782 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136201153 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.12470838 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.1524339 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140917692 seconds)
  done (took 1.762752339 seconds)
done (took 126.536191179 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099439273 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127372855 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098088514 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129392141 seconds)
  done (took 1.527788393 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.097117288 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071257532 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10073071 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075019193 seconds)
  done (took 1.428779407 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189439095 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167872321 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.391252584 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072833561 seconds)
  done (took 1.582926392 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.117141731 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133180355 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105620989 seconds)
  done (took 1.449383194 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108259683 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128867927 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103039157 seconds)
  done (took 1.431614668 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108225383 seconds)
  done (took 1.200029619 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.110647952 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137090051 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10939018 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.1353594 seconds)
  done (took 1.585175113 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100498131 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126492781 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109421887 seconds)
  done (took 1.426753745 seconds)
done (took 13.074256709 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105892957 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.422349669 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413640815 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10960449 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72388373 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380689542 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.033411386 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146544017 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165414771 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094324842 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139072919 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672998102 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024033966 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.377996285 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981507282 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.369188286 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704261359 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093545266 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119049959 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093778208 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.015062982 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092754542 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121346962 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092886747 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701603108 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426551649 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0953157 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.36918175 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093043603 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126843757 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.410270094 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095432322 seconds)
  done (took 16.889442955 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097837198 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173631565 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.1265113 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095577752 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123111353 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095192891 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124274778 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094343974 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178927571 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12192095 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111524251 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120431538 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125997624 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095170181 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144313038 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092530037 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124535145 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120342867 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093420199 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122647869 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111572337 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120210279 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095051678 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121578319 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094911881 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134436049 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122844088 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0927433 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120693562 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098929759 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127395416 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122520193 seconds)
  done (took 4.841092481 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144209017 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183226294 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127443238 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126967785 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168836354 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122779232 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198203585 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147661317 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18225259 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094030893 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139397678 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093206419 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156128958 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122681637 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114002298 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121528582 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097247816 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121163944 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120512722 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095594407 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13932431 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093047112 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122815859 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09375337 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121724807 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136442358 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095783628 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121228497 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093161194 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126962556 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127474304 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095496936 seconds)
  done (took 5.135136849 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.100770637 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125727171 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110128822 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137738366 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096369995 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124578761 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097457202 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123502596 seconds)
  done (took 2.0191734 seconds)
done (took 29.976041992 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113730818 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126507377 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106943643 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134351685 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103194085 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13127498 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092328854 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133471505 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134196535 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102522482 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137848186 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092598695 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122511063 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092584461 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134528187 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097555206 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132519725 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.130162487 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.104727132 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131921975 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.0952951 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133164122 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10357251 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133105909 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.132252716 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.104523032 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137272233 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099607171 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122152024 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094759961 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124671027 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103200993 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123763456 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105349317 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126135977 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.126228027 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.095182131 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.122484565 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.10460124 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133167268 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100117878 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133686874 seconds)
  done (took 5.99743614 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.110284494 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139883544 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104852021 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08215767 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115726895 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081393464 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137652392 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079792022 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110286032 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108252816 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.103060323 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077610385 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078768152 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101070308 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077472143 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076095185 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108262912 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076162366 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077472107 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105460508 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080039181 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07390787 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107347848 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079225915 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.103275798 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081725644 seconds)
  done (took 3.581229805 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.103289331 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135548185 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113662072 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184013092 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161151478 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100931355 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130927198 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.14059669 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109387098 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.1203016 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096124427 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149972413 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110774763 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128651113 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.121512181 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.108055124 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135447543 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095061255 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128633292 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112449093 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137029546 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132161276 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.111754124 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132673269 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092564755 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123400644 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096803805 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135948231 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.125877617 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.101960172 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126267855 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096588424 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123647454 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104615963 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126312502 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.122339802 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.112595445 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132379392 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.102039098 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122167495 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100895066 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123213116 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.142969215 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133010201 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.121174143 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.100144604 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124311127 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104132882 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.12129055 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.139657435 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103517203 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.121313881 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.096469715 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.120851227 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.093150467 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136273772 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.095664475 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124140679 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.13147368 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098622832 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.13442746 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.097781399 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13798285 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.093127466 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130423484 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.092677435 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.123033838 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092302098 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143767854 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123102013 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.133964588 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.124026441 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094491788 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.130891673 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128875257 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.100175614 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.121826426 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.1099227 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131049894 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097287226 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130718862 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125398218 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096480708 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.138756156 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095846948 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123020561 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094667414 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128907976 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.096603674 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.123189317 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10878523 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.121266357 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124850395 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111643419 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121668365 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095819474 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129410725 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099370737 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.12122166 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136171244 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.10015388 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121809902 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104845096 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121432707 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.096819101 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.132141725 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.098249806 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.120347676 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126651136 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099471595 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123144918 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.095717678 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124115952 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095189115 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131766326 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.101102079 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127279149 seconds)
  done (took 14.877301979 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229758944 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214141065 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.235601933 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.262028908 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134977732 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116801098 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.239944584 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.126800901 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123140455 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159948097 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.170344869 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179846127 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168748914 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.17822139 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168590449 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093282165 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142578801 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165088282 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.22286285 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258094852 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143248924 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134283414 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162684612 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159600016 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106872442 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132709627 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.14113827 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105672068 seconds)
  done (took 5.793690564 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.11406623 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15414536 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099930872 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144009822 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14848837 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094453666 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12652789 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095975269 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134970225 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135606348 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094868313 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129190293 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.129820423 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10208973 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12301045 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103541248 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132217683 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095368637 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125410775 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098673979 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132474383 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.131001099 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097506513 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121656251 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10345146 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121443898 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086730054 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142280369 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122298969 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115914614 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121042355 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102736713 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136594331 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094238027 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122482286 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.125399793 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.095988122 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.124227608 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.096181194 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12106767 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.092395615 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.106798201 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.092979978 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136685775 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.1003519 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110423187 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.100359355 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128513594 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09545381 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120322041 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096743868 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12607439 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.098257097 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130903782 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126046125 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.095030008 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.12656347 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.08674446 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.129241645 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.095980933 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084717621 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121908785 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099109169 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117390286 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.130352657 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.098702846 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.120357063 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.096057256 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.127110776 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.100301173 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.12423783 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.100022978 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.120293559 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.097013619 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.124859251 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.099813234 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125617413 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121000751 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092847125 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.123167229 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075887944 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.094015036 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.103406757 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.097206901 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.120968994 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.092983112 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.124469949 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.100294028 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137204319 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.1243837 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103427222 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.12431522 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.094354076 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.125365252 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.084648134 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.125767907 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.11085653 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14067793 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.123044469 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.093898376 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.137129613 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.097241556 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121962202 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077131142 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.131465263 seconds)
  done (took 13.010745369 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137175798 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154031701 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124947754 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112882125 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15672152 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157417911 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101247116 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130521074 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09606002 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142990384 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094598914 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132525234 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094763427 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138079053 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156481189 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104750069 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125075426 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109129984 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127980174 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168566785 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.114038396 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141256842 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140575604 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094970835 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128398022 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111210749 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159943903 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.138122892 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107580608 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141752272 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108904003 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160365574 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142833285 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098549248 seconds)
  done (took 5.484576649 seconds)
done (took 49.843810662 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.207978403 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.418664664 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.195216947 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.082908287 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.250182262 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.229996639 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.208084198 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.195126226 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.72695856 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.199423669 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.444540511 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.758687965 seconds)
done (took 60.036699835 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.201761727 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.35238604 seconds)
    (2/2) benchmarking "String"...
    done (took 1.482413714 seconds)
  done (took 3.953088397 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.833523718 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.133517321 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.453888564 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.194878414 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.193128142 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.491771574 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.898105932 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.53965031 seconds)
  done (took 28.02261983 seconds)
done (took 42.128717875 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.197581691 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.247600261 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.229486289 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.172510551 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.29993476 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.240370248 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.423251591 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.206733264 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.218320966 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.177723632 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.212281128 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.213060699 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.200676895 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.399694731 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.195074786 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.201261163 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.252026244 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.652693496 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.607796361 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.214427366 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.243735744 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.229491074 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.227340396 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.207234756 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.242099224 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.207645075 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.195482312 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.195888231 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.743477248 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.200261412 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.203932794 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.644529309 seconds)
  done (took 190.221146782 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.198375323 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.284260765 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.429994081 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.227074237 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.714105343 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.396849357 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.345349696 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.819172031 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.21693198 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.209743817 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.399490434 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.200242838 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.462706201 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.192632327 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.226168456 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.277424967 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.489282326 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.487731606 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.233057861 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.357423403 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.210877144 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.287220169 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.209880184 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.380541604 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.20553847 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.248531884 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.209833603 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.216210498 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.386565376 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.326873999 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.236958867 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.246648913 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.801362649 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.052148349 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.196568284 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.208759367 seconds)
  done (took 149.714886574 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.19653321 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.197531911 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196048855 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.228917746 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.197407112 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.764942285 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.765239915 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.706581509 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.355848465 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.519691722 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.457082046 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.197313285 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29103815 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.205811756 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.195235098 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.211705994 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.23565258 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200064178 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198797977 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.744066034 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.207444906 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.203296321 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.366312258 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.207939764 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229378601 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.588581955 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193669489 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230074059 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.526153247 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.239877736 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.193025761 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.556713327 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.421841927 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307444787 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195854229 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232165184 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.198420799 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.477923358 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198223524 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.200647721 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.204061642 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.856534295 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.200591299 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.763288787 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201460586 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.119708139 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.196333239 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199500704 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.413250169 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.800117135 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.211346946 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.199279893 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.200933119 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.198813752 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200513636 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.231689523 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.397279345 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.294690915 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.214680629 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.199975181 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.205088406 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231022783 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.20097942 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.200385492 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.277764379 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.19673666 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.751186005 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.257934506 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.311510853 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.197351348 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.760845498 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201948156 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298497813 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316577582 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.196432564 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.200846967 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201286027 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.199578523 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.311252107 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.196666306 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.596288354 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.370749248 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.212974433 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.50063666 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.203182523 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.295802842 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.195344059 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.586953953 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.201498169 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.200338128 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.924265389 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294184337 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.197257113 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.200830222 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200559044 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.593164864 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.7493409 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.423600101 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.201389117 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.259099449 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.200750023 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.608236388 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.718523632 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.852415543 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.20116963 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31011318 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.36556219 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.211784878 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.197869721 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.46885868 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.199272277 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.253922734 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200210142 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.593350948 seconds)
  done (took 363.971935692 seconds)
done (took 705.028055005 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.790666183 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.783197718 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.889484031 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.786782493 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.747596392 seconds)
  done (took 10.116486269 seconds)
done (took 11.237962054 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.378236599 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.381108695 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258297373 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.381614575 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232796198 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.396201444 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.357024897 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.221733199 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.295737669 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.277555896 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.29723656 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251231757 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233717665 seconds)
  done (took 18.083000116 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.546227055 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.516940332 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26473036 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.513052799 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242229897 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.524772209 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403187928 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.434471818 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.423421751 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231785983 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213532332 seconds)
  done (took 16.435843471 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.521037446 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.525728592 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268396851 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.52212865 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24362196 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519953635 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.410870833 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.430116245 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.413597236 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231737355 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213190052 seconds)
  done (took 16.422123076 seconds)
done (took 52.062253351 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.209835105 seconds)
  done (took 2.330656777 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.242552254 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.403913245 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.227033384 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.215908275 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.209284101 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.21037579 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.219285094 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.210895048 seconds)
  done (took 11.062174158 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.208530325 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.206343706 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.208130203 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.207603677 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.207686724 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.209754473 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.207318152 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.209466056 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.205631232 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.205910515 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.20941934 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.204144102 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.20501691 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.207848516 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.206295986 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.20601627 seconds)
  done (took 20.436899366 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.207590763 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.205426866 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.206424702 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.206690035 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.207351387 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.208592597 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.206955054 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.205353595 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.205591133 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.205829915 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.207147327 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.206001841 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.205382028 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.207582905 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.205578815 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.206695014 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.205534503 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.206333872 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.210364463 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.205720349 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.206569345 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.206271446 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.20603943 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.20570144 seconds)
  done (took 30.079086649 seconds)
done (took 65.030369156 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.81413827 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.692852713 seconds)
  done (took 6.6280117 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.208386546 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.208165248 seconds)
  done (took 3.539535862 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.20743562 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.209180564 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.209806124 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.208589871 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.207575816 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.208149422 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.208402866 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.210223356 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.20707246 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.208071236 seconds)
  done (took 13.20665388 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.211170973 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.207527097 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.207660765 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.20943205 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.207680884 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.20641548 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.209251251 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.206898839 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.208682404 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.20887121 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.209134792 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.206448539 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.210716858 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.206787177 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.209051885 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.205599842 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.206829684 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.206915126 seconds)
  done (took 22.867571703 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.209897287 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.208094039 seconds)
  done (took 3.541366363 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.20759901 seconds)
    (2/7) benchmarking "second"...
    done (took 1.206220441 seconds)
    (3/7) benchmarking "month"...
    done (took 1.206211701 seconds)
    (4/7) benchmarking "year"...
    done (took 1.207978954 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.20815313 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.209041253 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.209036536 seconds)
  done (took 9.576393245 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.211759833 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.38736339 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.488109452 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.788864498 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.211538711 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.214413882 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.083823208 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.215844102 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.217805623 seconds)
  done (took 13.942035916 seconds)
done (took 74.422521267 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.209622759 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.21386036 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.440378825 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.204923874 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.221257591 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.550669707 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.234676407 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.338552971 seconds)
done (took 37.538730139 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.212853988 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.187410239 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.931027826 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.178022324 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.233544555 seconds)
  done (took 18.654014992 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.192385581 seconds)
    (2/2) benchmarking "read"...
    done (took 1.537958554 seconds)
  done (took 4.851857666 seconds)
done (took 30.842906181 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210489129 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.207745478 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.20690642 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.211437324 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.207947997 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.208040495 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.207885748 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.207706822 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.210176276 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.210735283 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.211709041 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.208640592 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210387286 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207512013 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208220952 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210722217 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.207671047 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20850791 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.214976637 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207458115 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211367507 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.205723641 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.205440663 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.209396159 seconds)
  done (took 30.137730555 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.210235865 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.208512378 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.210542894 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.21068077 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.20801007 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.21088501 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.210546019 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.207100924 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.209153596 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.206584688 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207414788 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.20430252 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.209593191 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.207791188 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210247806 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.207001029 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.210610263 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205028204 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21178992 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.208163851 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.209656084 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207293246 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.207146211 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211558892 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.204087214 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206551907 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.210803237 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.207376013 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209446367 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.20752379 seconds)
  done (took 37.378806422 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.215722651 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.218870186 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.211008718 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.211852735 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.209474945 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.210801727 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.209222568 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.209905737 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.209264062 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.20999522 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.210371153 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.210699508 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.212617311 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.21106857 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.209051352 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.211140784 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.210366426 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.210290758 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.209261201 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.209261801 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.210309484 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.208642996 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.212368797 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.211000762 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.210125103 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.211033817 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.212547355 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.213135431 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.211446932 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.211718695 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.210829952 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.212762924 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.2122682 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.212858973 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.212631621 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.212520254 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.216649355 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.21740284 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.213089955 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.21278491 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.212910872 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.211749919 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.211802029 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.211610986 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.211409211 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.212360231 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.213036171 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.21280156 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.212864108 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.213238644 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.2144079 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.213727096 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.212292678 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.213773371 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.211583795 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.21464447 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.213815424 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.213786031 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.214168191 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.212456945 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.214307681 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.212834344 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.214963728 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.213602054 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.215914975 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.211007895 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.212987962 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.212361038 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.2136004 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.213917527 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.214800475 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.214564508 seconds)
  done (took 88.413346505 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.211874062 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.21128541 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.209774785 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.210180077 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211998399 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.213804238 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.212263327 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214079161 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212499165 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.216693666 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215300464 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.213987214 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212636739 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.215205464 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216502655 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.212131831 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.215802204 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21247188 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.214950232 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.216399526 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215874674 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.212642634 seconds)
  done (took 27.824076058 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2140653 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217095515 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.21440503 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.215635544 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213981289 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.21692776 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.217293175 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.218996898 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218263908 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212008355 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213247124 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216516317 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.212901422 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212688527 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212978978 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.215046099 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217339687 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.214055004 seconds)
  done (took 23.00033674 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.214087098 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.212737053 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.216535481 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.213245075 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.21380743 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.217587246 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214875626 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.216658753 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.215946472 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.214149411 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.217481454 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217247693 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.215938461 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2159446 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217284044 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.214098949 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.216360247 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21511736 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218030867 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214899477 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.214076393 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217254528 seconds)
  done (took 27.871258272 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218710408 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.217779283 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.21477528 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.215719197 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.214863565 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.217727918 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.218750786 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.216321925 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.220426535 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.218995441 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215690264 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.21837111 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.217485225 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.215871511 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.215546126 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215889877 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.218554984 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217175183 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218940374 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.216619578 seconds)
  done (took 25.473107379 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.219207323 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.21925013 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.218148967 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219691577 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21936069 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.218830245 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.219885055 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.219194204 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.219570541 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.221142878 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.222072169 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222777308 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222078668 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.220483184 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.21882316 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220125369 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220658869 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.220033841 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222267376 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220001842 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.220416957 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.220348119 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221683389 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.221283894 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.221080317 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.219822925 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.220999662 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.221016822 seconds)
  done (took 35.300147361 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221413515 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.221499353 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.218656535 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.220075476 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.222540536 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.219264095 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.219780662 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.22151907 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.222536014 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219824357 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.222854104 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.221479218 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.220446596 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.221757568 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220480603 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.222959139 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221628364 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.219182894 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219462426 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218408099 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.222570731 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223361629 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.223207664 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220990703 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220434829 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.22453788 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221191659 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221631014 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223353615 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220610008 seconds)
  done (took 37.770818892 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.24403697 seconds)
    (2/2) benchmarking "in"...
    done (took 1.241637629 seconds)
  done (took 3.619211369 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.22057845 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223586557 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.223884008 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.221295115 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.221238868 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.224677508 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.22290518 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221851629 seconds)
  done (took 10.913658085 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.223041255 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.224593526 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.224048561 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.224177974 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.224368492 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.22316193 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231353725 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.239897805 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.224723205 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.225371807 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.232542191 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.230841008 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.22785194 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.223964251 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.222799731 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.227173286 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.225977141 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.226040916 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.226397141 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.226098321 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228230755 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227859372 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.227561914 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.22382698 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.226950074 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.237255411 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.245702234 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.224927079 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227592513 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.230435606 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.226512246 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.224999147 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.226762595 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.22753734 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.227107589 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.227024077 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236767049 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.245041215 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.233830625 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243900445 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.22767039 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.223183171 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.228358533 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.22794272 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229513296 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.227445209 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.228646305 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.226003479 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.225960419 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.231153776 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.233153281 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.225070145 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.224774818 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230790268 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.227780585 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234150352 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.242902247 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.2291675 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237245824 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.23882441 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.257080617 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.249614688 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230808341 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.228401303 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238687235 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.25063006 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.237097292 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.242981275 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.226236268 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.228759945 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.236819932 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258117194 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.248118725 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.229818674 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228446816 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.230359514 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22918801 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229311417 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237416464 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.247946575 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.230340432 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23095731 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23887678 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250872881 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.229645859 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.229348126 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.230608938 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.230869353 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.230196378 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.238899123 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.246021982 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.230708699 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.229067644 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.230614512 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.231517692 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.229665855 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.226616604 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229584904 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.229031941 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.230837807 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231671582 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234918493 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.239012119 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.22923644 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.230390254 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.236809628 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.246513613 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230140821 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.236534549 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.23021097 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231837903 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.230476976 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.236744537 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.229392904 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.235140568 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.239340743 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.231924414 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.231652725 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.233015999 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.231339711 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241846331 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.256637739 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.230784855 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.232432498 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.235686775 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.242477307 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232275771 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.233190672 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.231960565 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.230159478 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.229131671 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.233272134 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.234140751 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.2338449 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233299513 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233046343 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.230791816 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.230867441 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.231936138 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.232960746 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.22988035 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.230905388 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.231893372 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.232228099 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.232461412 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.232965402 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.239961878 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.249873267 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.232355161 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.232206034 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.23055163 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.232061707 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.233248384 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.23470946 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.232201013 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234270422 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.233941172 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.235156429 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.236362861 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.234939996 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.234728924 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.235546139 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239237765 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.234208993 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.238516808 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.234530202 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.228654418 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.2342528 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.235552921 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.233562769 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.235101776 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.234383143 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.237777832 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.242086586 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.236225744 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.233820344 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.237755689 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234315195 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.233812362 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234262129 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.23648838 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.242616264 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.234267015 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.243033994 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.252251736 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236716228 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.236942678 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.235768209 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.235534752 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.236662558 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.239941355 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.24520392 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248361259 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256000418 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.238863722 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.240938201 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.237705044 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.23822396 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.239689109 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.235488773 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.236823214 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235573786 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.235097936 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235463294 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.237326215 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.235675687 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.23813007 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.23632724 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.235670003 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.234944196 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236580558 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.236558175 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237614124 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.234955459 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.236271108 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236443551 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.236397875 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.234241227 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.235539983 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.235601369 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.237611591 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.238126294 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.244343973 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.234819682 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240551512 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239038642 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.237938278 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.237617153 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.238067046 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238723326 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.23814899 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245295105 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.255545852 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.237913378 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243344344 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.255410021 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.238426244 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.241507045 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.240167713 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.236381083 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.243316528 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.246802077 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.238992559 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.237564925 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.23944269 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24115884 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240516098 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.245387575 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.253231612 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.24005418 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.242489558 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.240656299 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.238540038 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.240290444 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.241972939 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.238349343 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24242053 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243660775 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.242336446 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242140824 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.241528575 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.241556633 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.240576303 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243759971 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.249285566 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.245609123 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.241984694 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.243461207 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.242704405 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.244877189 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.241458975 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.243657345 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.241843836 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255286988 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.261412305 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.249575879 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.257182214 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.243931095 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246463738 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.259322391 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.246006245 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240270244 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241986704 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.241863003 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.242395753 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.239649246 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.242933626 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.242874919 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.2442995 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.245135614 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.248909984 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.24428979 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.243493162 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.243130634 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.241998191 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.24484403 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.243240464 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.242437058 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.246424113 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245357011 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.244208942 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.242896384 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250089783 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262554241 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.244729787 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.243980499 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.244210951 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.243776965 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.244788469 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.242824291 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.246578386 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.25240048 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.245541542 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.251620388 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.245808375 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255143957 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.245776664 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.24657385 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.251365825 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.240840003 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.244016839 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.244003921 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.245732095 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253341477 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.26233542 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.245725407 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.249988676 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244790602 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.244795614 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.243345142 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.245642438 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246361676 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.245444371 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254696191 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.264478916 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.251179346 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247435356 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.244360569 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.247442581 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.24871419 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.245660346 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249762327 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.248431778 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.246782471 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.248113032 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.2464918 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.248522383 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.248304088 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.246537848 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.245555647 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.248486609 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253802826 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.265488959 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251762699 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.249298621 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.255930467 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263898345 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25542774 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.267106693 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.247683354 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.247853208 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.245782105 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.246320236 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.245250178 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.247035698 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.249996698 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.249301914 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.252790449 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.249588361 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.251446457 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.249447089 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.248592652 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.248585682 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25804951 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271322863 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.24704036 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25384994 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.245841966 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.251112431 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.253236829 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.24855103 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.248795593 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.253871748 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260619481 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255715392 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.249054753 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.248639214 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249033564 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250627004 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.250531102 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.250379939 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.248178957 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.252094417 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.249927318 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.250835457 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252638608 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.248313302 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.250918989 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251145789 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.249156919 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.261879997 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.267122321 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.250392844 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250890089 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.250976458 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.25158711 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.251742085 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.252412787 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250179413 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25143856 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.252491834 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259166639 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.259000554 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.254609066 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.249601238 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.252442746 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.251208074 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.251998357 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251700895 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.252595586 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25290491 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.25243918 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.249659739 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.251510743 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.249739632 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.253561737 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.252874992 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253358582 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255568111 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.260320958 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252652511 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.24944931 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.252563338 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251822352 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.251859176 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.253428278 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.260836309 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273484539 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.263076114 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.262257778 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.257640034 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.255091333 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256108818 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.262279467 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.252905387 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.252934812 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.254233324 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.255543709 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.253607582 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.255951772 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25353727 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.260116968 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.26930972 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.254421974 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263986819 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.271853092 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25349738 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.256416628 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.25866303 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.255159201 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.252090032 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.253230816 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.253836407 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262805578 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.270643439 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254262118 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255582915 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.252297205 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.257093519 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25633599 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25619305 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.255421878 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.253517405 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.254436093 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25566289 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256154107 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.253367566 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.25578134 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.253454252 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.257128141 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.262100549 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.252496742 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255552638 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.256533267 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.256403753 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256040006 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255134614 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.252787661 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.252201074 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.253536626 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256825477 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.254667933 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.258503798 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.254740929 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.257216479 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.257028464 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256842409 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257692056 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.265178829 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.26583815 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.253078097 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.25490379 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.255933142 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.257298127 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255950112 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.257738834 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256249645 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.257796229 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.258303081 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258769339 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.256805169 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.260037401 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274451694 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.277014648 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257259172 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.257591158 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260368655 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.258678233 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.25665943 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.259800501 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.260274467 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.259630148 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.268554936 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.258966674 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265201344 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274708133 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.258569474 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.264494791 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.262406031 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.266593382 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.261466358 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259774071 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.259628794 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.264043444 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.275659091 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259670074 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266826708 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288189171 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.276095263 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.258882519 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.259123314 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25658374 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.257874246 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.260350263 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.26103637 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.260395445 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259794406 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.258671313 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.260185589 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266393801 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.260471425 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.263176965 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.260633285 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.259500327 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.261163709 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.259045543 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.261728762 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.261427724 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.260837573 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.259761142 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.261991614 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.260839783 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273474775 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.281801741 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.259947281 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.261953866 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.259309122 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.262832332 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.265229799 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272341775 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.269640459 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.263490998 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.261949676 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.261867091 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260319069 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.261660723 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.261814089 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.261526435 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261717065 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.258604008 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.275016036 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282793235 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.268204084 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.262444559 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263778414 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.262667141 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264755565 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263846915 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264562658 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.262943619 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.264297559 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267184431 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.265281091 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.263118904 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.265411135 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.271299051 seconds)
  done (took 743.905916803 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262338552 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.26052714 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.261625895 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.262377015 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261593783 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260878062 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26200932 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261765626 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.261845427 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.262110535 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.262433137 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261235158 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262402268 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263032818 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260220628 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.262779199 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262989409 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.2632205 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26211899 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261800698 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.261642597 seconds)
  done (took 27.66949895 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.263802104 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.262058002 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.261114678 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.265051301 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262430284 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.265447921 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.262570178 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266539516 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.267662062 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262679296 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.263953427 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265751064 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.261982211 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.260930379 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262383504 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266148802 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.265761822 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261323751 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.265688434 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.263498096 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.266276299 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.262627055 seconds)
  done (took 28.976301398 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.265022121 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.265024276 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.266406917 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.26316286 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.267116231 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.264237967 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.266729163 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.266547071 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.267966328 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.267586662 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.266916702 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.268097888 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.274506003 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.272007553 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.268356498 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.267825324 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.411689376 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.267469464 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.267933608 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.268662202 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.266084208 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.274410413 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.281894373 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.266041435 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.26728222 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.26802398 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.269626752 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.26907375 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.268615151 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.270368369 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.271970531 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.269167171 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.269517215 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.26992884 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.266925557 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.269851547 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.275018598 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.268105078 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.266969584 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.270581557 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.276878804 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.29001502 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.269644943 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.275324946 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.284847598 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.268949831 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.273057045 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.277389481 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.266087488 seconds)
  done (took 63.549213778 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.269063215 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.267195612 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.267866278 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.266092598 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.268581902 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.268356921 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.267396314 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.269117328 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.266159357 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.267733038 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.270367645 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.267391939 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.266760599 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.271194735 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.27031978 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.268562908 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.2675784 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269126582 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.268829906 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.268880108 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.267615781 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.272384306 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.271877214 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.269248186 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.271771386 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.268182987 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.26828014 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.272135556 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.268100116 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.268494636 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.272828176 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.270359683 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.273912905 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.271071044 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.269299361 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.271467708 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.272086672 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.269031461 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.27219269 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.270217643 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.271438418 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.273157376 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.275041019 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.273426472 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.269415619 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.26925624 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.269341368 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.268489965 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.271458825 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.272164267 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.271640566 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.271258935 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.27309004 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.269782963 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.273578832 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.275330052 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.271202149 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.270220488 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.275217499 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.272166566 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.270629965 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.274762884 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.270705922 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.276168912 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.273539309 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.271911912 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.271844896 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.273297192 seconds)
  done (took 87.573381146 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27381908 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.272222399 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272780804 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272248662 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.272738284 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.271054319 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.273562881 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.27148222 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.274439682 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.271114992 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274550373 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.275053273 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.274038934 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.275938993 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.273502329 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.273121174 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274788927 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273367639 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275065508 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275303646 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.275643719 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.271718515 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.274150413 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.27502766 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274761264 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.275354432 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275396532 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.273744789 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274486362 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.274487272 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27562957 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.276215499 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.274990178 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.274624766 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.275573325 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.273553747 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274669303 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274687491 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.275092108 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.276896771 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.276019924 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275765627 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276298395 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.274871402 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277300477 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.275876907 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.274556084 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.275781898 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277662832 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.278680971 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.277719908 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277283711 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276865062 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278504404 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.277439763 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.277367553 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276115558 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276857559 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275521723 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275551825 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.275877548 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.278253454 seconds)
  done (took 80.23405746 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.278439234 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.27745141 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.277039136 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.275987413 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.278535315 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.276134556 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.279264383 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.279398122 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.279333705 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.278945544 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279356935 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275543796 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277703804 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278828587 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.2763372 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276185641 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274647499 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.275412847 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277208823 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.27474296 seconds)
  done (took 26.729624088 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.275473186 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.278125863 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.276802831 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.275601395 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.278710824 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.27791936 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.278457225 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277158959 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276778536 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277491115 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.280010073 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280063585 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277143214 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280060947 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.281427783 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.27810519 seconds)
  done (took 21.633636942 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.275328197 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.281121002 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.27957387 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.279064606 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.277606459 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.276263652 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.278333739 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.277594131 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.27727098 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.282250006 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.279916384 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.280916356 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.279332793 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.280351866 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.278474331 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.280104727 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.277322958 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.278767183 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.281967501 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.28141165 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.278942576 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.279501015 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.282892896 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.281531549 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.279523991 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.27980772 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.278712759 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.280569814 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.279315578 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.280514374 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.279625088 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.280372546 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.278493378 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.277186652 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.279873276 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.278970904 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.281917792 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.279284379 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.279977935 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.280248936 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.278786367 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.279563051 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.281609627 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.280809441 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.27948399 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.281507805 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.277686009 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.281162586 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.280213549 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.278122356 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.28268463 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.281673632 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.282299106 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.281150943 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.283260052 seconds)
  done (took 71.575999709 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282179186 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.283118572 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.279358313 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.283559575 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.282203101 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.278698498 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.283020581 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.281678222 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280825898 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.282471008 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281388694 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283612237 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280925053 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284058546 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.279878147 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284043125 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.281341473 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.281536609 seconds)
  done (took 24.261790469 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.281385309 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281650171 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.283521622 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.281695806 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.280645329 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.283892342 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28123794 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.284609342 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283545702 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.281191367 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282668386 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.28528131 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284936053 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.284332017 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.281554294 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282545196 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.285164113 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283872375 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.281864115 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28268935 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285766013 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283504412 seconds)
  done (took 29.416995377 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.283218972 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.283742219 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.285000613 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.299869337 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.300548352 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.306127574 seconds)
  done (took 8.948251736 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292228868 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285535282 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283440877 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286779264 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283568079 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282699674 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283951122 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281673857 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286109253 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282894159 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284233274 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287348427 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286253089 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283253416 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28829706 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288275725 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284319258 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283576008 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285505577 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286510072 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283227669 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287617979 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284395759 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284075035 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285084831 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284813338 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287071308 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284812061 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284013111 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287616631 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286357085 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283273286 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286769914 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284295707 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287838925 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287580443 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285308208 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288960508 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287590575 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28512081 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287744982 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288580954 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289259231 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285202722 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28906694 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285700587 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284555951 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285611901 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287458421 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288888906 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287622936 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285582594 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288109429 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28837739 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288489686 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290165812 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285618145 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287213674 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290490416 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288688599 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285878865 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288777205 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287392915 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288243526 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288326854 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288975561 seconds)
  done (took 86.116828245 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28641218 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287231595 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287121453 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287923932 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287440815 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287204512 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287920634 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286361109 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287249821 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287365843 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290289901 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286476194 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287849877 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287436141 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289439215 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287385283 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289298348 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28671519 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288136463 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2925936 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288887859 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288416742 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28655995 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288874047 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289770786 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29064101 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288446667 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288580702 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288929739 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29010478 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289522186 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289482845 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289781351 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.2891929 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288121188 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290331902 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288537373 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290261616 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289559082 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29176417 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29023136 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290762704 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288117762 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288468554 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290389191 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291434309 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290955418 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289706509 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289453608 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290363998 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289587032 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290834165 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291147543 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290586391 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290107553 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290793211 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288642648 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291208396 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290217152 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294217664 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291003811 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291998799 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294696033 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290094928 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290194112 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291200566 seconds)
  done (took 86.29339734 seconds)
done (took 1735.710807731 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.452954787 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.408155735 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.29083329 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.288541711 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.28649129 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.284388714 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.29623102 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.286260831 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.291890442 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.29202908 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.292337033 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.480450919 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.344248284 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.285880518 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.29253185 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.385856826 seconds)
  done (took 42.457282347 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.316885506 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.294768883 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.403441815 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.30614126 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.317901972 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.470223981 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.341533991 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.297516058 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.458371945 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.328172905 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.765435816 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.312599598 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.29884293 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.343282634 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.307853797 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.474039222 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.521272718 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.763662804 seconds)
  done (took 29.521201243 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.716595919 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.313477829 seconds)
  done (took 9.229822868 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.314357455 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.295668807 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.298807901 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.295792528 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.287277692 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.285145318 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.295490904 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.290526113 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.765685239 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.409758398 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.29287249 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.307705103 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.315090562 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.297741048 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.296048331 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.334816502 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.444742335 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.297168863 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.293726809 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.300641904 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.296683614 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.382284718 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.330870575 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.291925018 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.415880257 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.756432489 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.295956984 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.303429617 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.427429497 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.29841689 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.294341395 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.297392545 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.295329269 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.156955075 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.760504546 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.314570789 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.316279899 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.304352615 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.293388522 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.456584363 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.295297614 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.302790504 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.297046221 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.756294367 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.418103427 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.401721495 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.414356493 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.309256604 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.300058389 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.358913537 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.295858756 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.297544179 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.336824431 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.04277558 seconds)
  done (took 109.047312448 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.327868066 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.676783038 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.45647831 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.304246135 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.019035194 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.946122082 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.301436718 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.558560678 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.318093597 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.286696041 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.571064616 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.771483215 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.304648032 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.295859847 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.372203237 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.372220113 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.290128275 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.01928432 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.30335427 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.289511711 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.773521388 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.289537083 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.289759121 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.449292284 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.326292272 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.726108001 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.57183941 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.729860926 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.304210144 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.288825332 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.735209371 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.307853529 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.361194946 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.291937765 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.5455112 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.632513684 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.629466196 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.31003917 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.296354199 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.290818518 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.323558128 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.730784076 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.641402996 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.309295301 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.307557829 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.730243497 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.303991095 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.294111269 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.299607364 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.492474086 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.155125448 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.291500423 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.578037829 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.290470402 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.576108782 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.373383132 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.344078334 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.75703416 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305471643 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.366114005 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.346726931 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.291227118 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.292084693 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.296785715 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.294096767 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.620967636 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.694087526 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.294215987 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.618783077 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.744670093 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.305397022 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.809567862 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.172312762 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.302005006 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.357546517 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.295219412 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.854474665 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.777508505 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.31518446 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.291681597 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.618168387 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.312238998 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.566193408 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.306669843 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.294091226 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.797089285 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.293118749 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.321773175 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.302098617 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.291523466 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.928712524 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.308363803 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.552024616 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.321683691 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.293698075 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.296026077 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.336656413 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.295222669 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.310193525 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.30420413 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.798278139 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.317894473 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.397568772 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.309442645 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298792942 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.296279539 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.29757879 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.295215637 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.508852691 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.796851646 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.314934651 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.29522086 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.293525987 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.298192626 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.440514461 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.298822107 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.593070451 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.31503551 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.295883103 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.294029621 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.000982498 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.322178628 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.296885027 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.299306223 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.17236101 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.500372245 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.312169978 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.296487528 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.299387693 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.313854082 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.468824356 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313555709 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.340312646 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.29535314 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.983792957 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.320539094 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.336882504 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.830597474 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.304103865 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.099321093 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.320442207 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.29604636 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.587464459 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.553611656 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.615225452 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.296813512 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.313110037 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.9682769 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.323513981 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.432106525 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.313808687 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.359492697 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.498173187 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.430005481 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.297499439 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.900084345 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.298722546 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.506378137 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.298216019 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.604671943 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.771076291 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.311704262 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.301866555 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.984571536 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.010956764 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.964254491 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.303703745 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.567137535 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.240725204 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.770620876 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.302818137 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.300156712 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.740028569 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.299598546 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.307945669 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.298992198 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.301480875 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.453492027 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.470830637 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.913341552 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.30689384 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.731527906 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.343379762 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299674597 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.306269496 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.302471921 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.646784957 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.390273043 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.302891052 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.306986576 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.304084972 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.309369839 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.753143847 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.162813828 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.299935086 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.451590188 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.911867241 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.313781923 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.301768788 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.946131615 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.6049948 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.792996379 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.356407669 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.592794685 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.314363532 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.337345857 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.859993557 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.38726185 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.755012952 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.317590927 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.299435585 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.876270202 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.314576288 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.362925511 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.301956046 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.303445147 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.810630271 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.315696418 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.303304071 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.469691455 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318460404 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.56332795 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.299914347 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.321031661 seconds)
  done (took 1101.205397297 seconds)
done (took 1292.659605241 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.303286637 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.306390274 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.287963865 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.306041611 seconds)
  done (took 26.421174122 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.319794618 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.306538398 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.308582685 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.305768656 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.312323265 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.307853738 seconds)
  done (took 9.077027862 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.379634502 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.306617361 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.305948727 seconds)
  done (took 19.209757351 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.499654959 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.527935729 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.621261229 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.361478436 seconds)
  done (took 10.227206038 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.312632676 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.30829956 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.311380886 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.313201179 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.323126181 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.325664538 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.311269851 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.313261473 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.321041266 seconds)
  done (took 13.054940552 seconds)
done (took 79.206821274 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.317549483 seconds)
    (2/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.317936531 seconds)
    (3/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.018851366 seconds)
    (4/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.370480119 seconds)
    (5/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.748394558 seconds)
    (6/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.287295403 seconds)
    (7/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.031213384 seconds)
    (8/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.296590006 seconds)
    (9/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.289453588 seconds)
    (10/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.280753409 seconds)
    (11/286) benchmarking ("sort", BigInt, false)...
    done (took 6.34419407 seconds)
    (12/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.330581227 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.552203999 seconds)
    (14/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.297176978 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.362270005 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.332543065 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.321923684 seconds)
    (18/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.882382075 seconds)
    (19/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.288259212 seconds)
    (20/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.323966997 seconds)
    (21/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.69536348 seconds)
    (22/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.385971697 seconds)
    (23/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.354487236 seconds)
    (24/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.362573264 seconds)
    (25/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.739571197 seconds)
    (26/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.314057841 seconds)
    (27/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.284592384 seconds)
    (28/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.325127153 seconds)
    (29/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.662631889 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.866732746 seconds)
    (31/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.449204342 seconds)
    (32/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.129610364 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.218769989 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 6.30553503 seconds)
    (35/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.499578176 seconds)
    (36/286) benchmarking ("sort", BigInt, true)...
    done (took 6.307526883 seconds)
    (37/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.363722711 seconds)
    (38/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.397395888 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.415903462 seconds)
    (40/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.333352656 seconds)
    (41/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.30762718 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.223308964 seconds)
    (43/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.801553686 seconds)
    (44/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.798714508 seconds)
    (45/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.314106286 seconds)
    (46/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.482998264 seconds)
    (47/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.534055091 seconds)
    (48/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.401969914 seconds)
    (49/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.701933752 seconds)
    (50/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.307079216 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.44005064 seconds)
    (52/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.286643377 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.706556823 seconds)
    (54/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.593615413 seconds)
    (55/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.40753888 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.557637267 seconds)
    (57/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.287628664 seconds)
    (58/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.651738047 seconds)
    (59/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.331921552 seconds)
    (60/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.430810874 seconds)
    (61/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.65557197 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.369020545 seconds)
    (63/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.412989539 seconds)
    (64/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.708704508 seconds)
    (65/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.317913429 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.164917351 seconds)
    (67/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.316456657 seconds)
    (68/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.609435292 seconds)
    (69/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.289875116 seconds)
    (70/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.562381907 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.718561133 seconds)
    (72/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.303842376 seconds)
    (73/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.831382994 seconds)
    (74/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.490458204 seconds)
    (75/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.416684799 seconds)
    (76/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.792581727 seconds)
    (77/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.286705716 seconds)
    (78/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.40319844 seconds)
    (79/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.378079261 seconds)
    (80/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.913798245 seconds)
    (81/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.490633384 seconds)
    (82/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.672128174 seconds)
    (83/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.500362497 seconds)
    (84/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.664851357 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 5.482570854 seconds)
    (86/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.288376469 seconds)
    (87/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.572684894 seconds)
    (88/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.566181033 seconds)
    (89/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.408600286 seconds)
    (90/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.307982024 seconds)
    (91/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.174637253 seconds)
    (92/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.118397808 seconds)
    (93/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.890033295 seconds)
    (94/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.291188823 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.325042224 seconds)
    (96/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.103343981 seconds)
    (97/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.062400892 seconds)
    (98/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.651574668 seconds)
    (99/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.042883047 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.206091059 seconds)
    (101/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.410505299 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.531670494 seconds)
    (103/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.010555051 seconds)
    (104/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.140804091 seconds)
    (105/286) benchmarking ("sort", Float64, true)...
    done (took 6.32598218 seconds)
    (106/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.337097407 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.141021157 seconds)
    (108/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.734774827 seconds)
    (109/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.293987842 seconds)
    (110/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.294763154 seconds)
    (111/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.302340624 seconds)
    (112/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.292514297 seconds)
    (113/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.675788586 seconds)
    (114/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.340106364 seconds)
    (115/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.288895626 seconds)
    (116/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.746959517 seconds)
    (117/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.333660526 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 1.822540443 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.34693653 seconds)
    (120/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.336248441 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.569516384 seconds)
    (122/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.395636042 seconds)
    (123/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.290833217 seconds)
    (124/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.497729286 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.050973813 seconds)
    (126/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.672218449 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.610309206 seconds)
    (128/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.326404736 seconds)
    (129/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.32625125 seconds)
    (130/286) benchmarking ("sort", Int8, true)...
    done (took 6.332282626 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.959515832 seconds)
    (132/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.435729825 seconds)
    (133/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.802363248 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.423704513 seconds)
    (135/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.562099648 seconds)
    (136/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.414897935 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.719415976 seconds)
    (138/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.306250726 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.518223318 seconds)
    (140/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.528081761 seconds)
    (141/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.32160362 seconds)
    (142/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.782798823 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.064491013 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.339897359 seconds)
    (145/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.298003853 seconds)
    (146/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.188194953 seconds)
    (147/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.344039044 seconds)
    (148/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.317258343 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.339495991 seconds)
    (150/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.119041048 seconds)
    (151/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.334377532 seconds)
    (152/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.314380509 seconds)
    (153/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.121668583 seconds)
    (154/286) benchmarking ("sort", Float32, true)...
    done (took 6.317881945 seconds)
    (155/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.896497954 seconds)
    (156/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.354652519 seconds)
    (157/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.319184411 seconds)
    (158/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.284562969 seconds)
    (159/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.66246683 seconds)
    (160/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.339384042 seconds)
    (161/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.443292991 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.9496868 seconds)
    (163/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.410250146 seconds)
    (164/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.395335517 seconds)
    (165/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.341681571 seconds)
    (166/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.321399609 seconds)
    (167/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.310649262 seconds)
    (168/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.399261388 seconds)
    (169/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.313371371 seconds)
    (170/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.292874293 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.92821297 seconds)
    (172/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.395602419 seconds)
    (173/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.340874162 seconds)
    (174/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.333834241 seconds)
    (175/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.327576041 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.296201384 seconds)
    (177/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.396304607 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.340438032 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.355773497 seconds)
    (180/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.378428228 seconds)
    (181/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.585432307 seconds)
    (182/286) benchmarking ("sort", Float32, false)...
    done (took 5.324874602 seconds)
    (183/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.294725469 seconds)
    (184/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.857837206 seconds)
    (185/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.328951094 seconds)
    (186/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.061569667 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 5.386028053 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.393416257 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.72222173 seconds)
    (190/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.394745258 seconds)
    (191/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.661355871 seconds)
    (192/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.571363094 seconds)
    (193/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.400860934 seconds)
    (194/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.71908957 seconds)
    (195/286) benchmarking ("sort", Float64, false)...
    done (took 5.609883911 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.957952133 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.522547248 seconds)
    (198/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.084217269 seconds)
    (199/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.876298586 seconds)
    (200/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.414221807 seconds)
    (201/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.047584968 seconds)
    (202/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.677981437 seconds)
    (203/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.293412754 seconds)
    (204/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.285227921 seconds)
    (205/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.294276338 seconds)
    (206/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.429255898 seconds)
    (207/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.324852027 seconds)
    (208/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.782588719 seconds)
    (209/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.425384819 seconds)
    (210/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.299131701 seconds)
    (211/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.448054673 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.338606102 seconds)
    (213/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.148405322 seconds)
    (214/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.312132084 seconds)
    (215/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.298255008 seconds)
    (216/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.069430729 seconds)
    (217/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.425847079 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.358000283 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.227376004 seconds)
    (220/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.631577567 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.670073146 seconds)
    (222/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.317081311 seconds)
    (223/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.42280259 seconds)
    (224/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.49926557 seconds)
    (225/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.315316167 seconds)
    (226/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.344011601 seconds)
    (227/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.363455498 seconds)
    (228/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.359415472 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.528777865 seconds)
    (230/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.106331262 seconds)
    (231/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.570808295 seconds)
    (232/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.348383981 seconds)
    (233/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.331330343 seconds)
    (234/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.710286504 seconds)
    (235/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.348087056 seconds)
    (236/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.324665639 seconds)
    (237/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.296792785 seconds)
    (238/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.702558321 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.672252214 seconds)
    (240/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.085395757 seconds)
    (241/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.401233692 seconds)
    (242/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.301192559 seconds)
    (243/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.356923782 seconds)
    (244/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.667014034 seconds)
    (245/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.380914935 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.872204883 seconds)
    (247/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.340750497 seconds)
    (248/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.347235774 seconds)
    (249/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.158015217 seconds)
    (250/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.846675928 seconds)
    (251/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.421625254 seconds)
    (252/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.394759255 seconds)
    (253/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.403679698 seconds)
    (254/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.323220012 seconds)
    (255/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.381239888 seconds)
    (256/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.301314315 seconds)
    (257/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.440362806 seconds)
    (258/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.023032325 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.423142097 seconds)
    (260/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.302253683 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.429147097 seconds)
    (262/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.53055217 seconds)
    (263/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.303223079 seconds)
    (264/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.147712888 seconds)
    (265/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.298997057 seconds)
    (266/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.818817239 seconds)
    (267/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.75476501 seconds)
    (268/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.338208161 seconds)
    (269/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.189966166 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.385579672 seconds)
    (271/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.3439077 seconds)
    (272/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.030995111 seconds)
    (273/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.190084229 seconds)
    (274/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.325868723 seconds)
    (275/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.291276564 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.952301851 seconds)
    (277/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.42214629 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.34425484 seconds)
    (279/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.350979861 seconds)
    (280/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.503776756 seconds)
    (281/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.336001654 seconds)
    (282/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.404440376 seconds)
    (283/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.30405276 seconds)
    (284/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.311204786 seconds)
    (285/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.124333069 seconds)
    (286/286) benchmarking ("sort", Int8, false)...
    done (took 4.382156598 seconds)
  done (took 930.259826843 seconds)
done (took 931.478435485 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.355781667 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.357493401 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.335098306 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.356456577 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.456035766 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.359567227 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.34786653 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.338639207 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.384133677 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.384760907 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.342240611 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.357695115 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.343261404 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.338221137 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.336314635 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357940451 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.386160739 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.343941414 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.358478458 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.346187654 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.361287428 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.341727063 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.385960908 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.355291095 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.337612017 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.340620989 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.349297337 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.364250276 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.457634941 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.346168084 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.34156503 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.356331067 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.3855813 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.337109603 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.333188373 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.364177985 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.35907793 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.346573949 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.340583099 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.376879746 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.780814108 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.36131997 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.344307117 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.339874759 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.338960398 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.340990121 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.347120855 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.344037384 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357293345 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357900956 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.785461699 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.376939638 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.347660921 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.340728728 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.351433381 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.34361123 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.343303363 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365119391 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.36560714 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363615551 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.371555046 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.345393906 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.339216904 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.361200574 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.353695053 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.773968633 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.346378399 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.341279985 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.780168907 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.356327032 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.823544279 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.372080703 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.341473209 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.358730873 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.378098524 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.382555627 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.335130512 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.335500722 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.351808489 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.342770409 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.349800615 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358993719 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.343683916 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.338970458 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359988853 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.360101251 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.347812671 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.34663853 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.346777082 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.36416837 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.354563359 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.356297 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.346105136 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.33514388 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.349547561 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.342257848 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.34941215 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.348544843 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.344403108 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.35317021 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.750756847 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377988957 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.336346649 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.335704848 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.340243962 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.359599 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.752006293 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.359790237 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.364563139 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.38744278 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.341929829 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.372788793 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.353565666 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364258526 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.349120603 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.344435376 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.337262979 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.37055601 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.745401607 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.374324773 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.345720351 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.34578681 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366296932 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.342064346 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.339002647 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.387300837 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.342900264 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362208561 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.468004738 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.353931278 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.379292091 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.348163536 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.345574564 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.363633464 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367532475 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.382252922 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.345629996 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366347443 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.365043052 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.340022938 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.358664373 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.353892754 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.343466498 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.348545884 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.336846529 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.365673584 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362840625 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363027543 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.365056025 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.470493777 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.343536577 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.375285453 seconds)
done (took 226.854584083 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.401513549 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.338897658 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.425000606 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.340011213 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.438517891 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.444607964 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.337811883 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.336922835 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.336443778 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.721563261 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.337795047 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.337454729 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.339590978 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.336129739 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.423310054 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.337951266 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.335331201 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.679634176 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.34111384 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.408990795 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.335369162 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.337052495 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.339978949 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.728651367 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.332854491 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.339606726 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.410197758 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.338457478 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.692103784 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.332452448 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.33330933 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.691328162 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.430060843 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.357351079 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.34944062 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.348200381 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.441193422 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.363274897 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.421050535 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.424534586 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.424462958 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.379203552 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.340796402 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.333632723 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.345737016 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.340957845 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.337035639 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.368802515 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.334940966 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.34128613 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.683736615 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.353135482 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.348924578 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.340864389 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.340744788 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.362174813 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.339328001 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.342980959 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.432207023 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.343695193 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.4048496 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.727824273 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.72330782 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.345750101 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.338025512 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.34061628 seconds)
  done (took 148.903700933 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.406486358 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.414304956 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.453857641 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.361876453 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.391427851 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.455538221 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.360384721 seconds)
  done (took 11.091574056 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.347240404 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.343994309 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.393593237 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.391343629 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.343251306 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.529132397 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345003012 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.353690723 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.341921572 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.395471395 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.343854859 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.343901793 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.350808049 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.340987674 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.392527862 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.353851465 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.459586851 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.34292816 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.345836659 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.505009667 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.344203021 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.352140734 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.39680277 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.355589528 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.347707437 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.350402918 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.187869144 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.346215784 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.340948877 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.344645125 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.342429105 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.422463242 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.344212696 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.344419144 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.343436786 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.461602537 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.343864351 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.340195707 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.346328947 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.341952398 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.344409585 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.344175523 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.344493009 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.34034113 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.347713712 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.367801151 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.346908218 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.349062165 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.346075712 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.347713155 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.395955958 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.345812452 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.346269399 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.345148031 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.40315549 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353612597 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.347346791 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.343882699 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.347901234 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.343721065 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.508816624 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.395383077 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.350191426 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.395977496 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.34945155 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.348857863 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.34816344 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.347747568 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.398446192 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.347998478 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.399440532 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.345942644 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.533602031 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.370746082 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.350534734 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.350756539 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.350673792 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.349424806 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.340494356 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.355693411 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.345914385 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.348456146 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.353933468 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.34566118 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.34637419 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.518392393 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.455482469 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.345897157 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.362882143 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.355391639 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.34719431 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.401474092 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.351457241 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.346244594 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.398366643 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.467276796 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.404032257 seconds)
  done (took 154.89711216 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.352492479 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.356564574 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.353211547 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.373193586 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.366134052 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.35084792 seconds)
  done (took 9.404399901 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.35144045 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.354484076 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.35196428 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.351089636 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.349130988 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.351652854 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.352247769 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351859884 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.358624353 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.350667588 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.356400076 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.358218838 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.357669395 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.354300846 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.351877365 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.352092274 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.354882303 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.350394577 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.351368248 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.35432674 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.455856839 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.35438077 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350644614 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.351205334 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.356483062 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.353059098 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.358884665 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.35495044 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.356317348 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.361503397 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.374081427 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.352627026 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.353529581 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.361264496 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.359947995 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.353108506 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359559985 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.36046123 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.353157514 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.353412646 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.360504591 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.353352666 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.352566079 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.360176471 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.355297052 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.358796901 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.365785597 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.362799037 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.353637037 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.358087088 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.360693052 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.353080675 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.353401065 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.361526992 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.35779056 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374477231 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.3649422 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.354477975 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.353289928 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.352936768 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.357804282 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.359095128 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.355867179 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.359593834 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.353393182 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.360134353 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.35756822 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.361870363 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355334831 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.355006805 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.363641878 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.355959501 seconds)
  done (took 100.017987962 seconds)
done (took 425.558461041 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.758713976 seconds)
  done (took 8.016244236 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.437331504 seconds)
  done (took 7.697461678 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.049948578 seconds)
  done (took 22.315777267 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.413390137 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.402170756 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.366663437 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.352482708 seconds)
  done (took 26.795240609 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.720384872 seconds)
  done (took 7.97767324 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.345950777 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.346817908 seconds)
  done (took 13.953188993 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.970515784 seconds)
  done (took 8.23176254 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.023820854 seconds)
  done (took 8.290426349 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.375613489 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.361339121 seconds)
  done (took 14.260742156 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.330377091 seconds)
  done (took 7.587189807 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.55392949 seconds)
  done (took 11.813445864 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.353233156 seconds)
  done (took 7.614855039 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.429603918 seconds)
  done (took 7.689270307 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.343104117 seconds)
  done (took 9.602139916 seconds)
done (took 163.105551077 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.34844077 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.352627596 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.348355939 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.346295256 seconds)
  done (took 26.654729769 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.388807478 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.392240659 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.395132033 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.40485227 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.393697593 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.389740501 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.386712851 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.385371533 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.405916549 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.397408178 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.391651605 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.397112669 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.390576328 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.382120178 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.394166771 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.392708502 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.405312221 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.393434461 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.385258639 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.395028638 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.359332692 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.402923676 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.394633462 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.358972893 seconds)
  done (took 34.643126761 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.875747282 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.428421465 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.510902422 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.410502358 seconds)
  done (took 7.487296304 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.407209609 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.413038539 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.426055104 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.463989949 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.49403336 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.422789118 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.382649075 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.381097693 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.366141399 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.412879226 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.484795969 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.428889513 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.511454439 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.359678083 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.542109657 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.361062837 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.359682511 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.411803625 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.464306005 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.475849944 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.362535542 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.413633392 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.41863445 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.429189739 seconds)
  done (took 35.454133717 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.357952836 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.381966549 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.362919502 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.36320576 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.370561177 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.360847968 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.358577776 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.361261753 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.358721013 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.367386156 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.359331972 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.371065882 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.358736567 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.359923234 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.365209991 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.36086691 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.369280909 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.363961829 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.361041282 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.37020215 seconds)
  done (took 28.544493609 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.353828703 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.207413966 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.705399771 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.60970916 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.354649586 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.358304281 seconds)
  done (took 27.853612542 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.426570542 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.582473965 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.364529857 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.714905527 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.812481716 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.382844915 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.367674874 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.604207702 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.917259012 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.90455345 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.422651746 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.431644807 seconds)
  done (took 20.196083429 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.57059553 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.35982804 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.363544159 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.376328831 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.417150987 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.384157583 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.367371698 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.447843453 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.436070336 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.437181318 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.384371372 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.414616462 seconds)
  done (took 39.224527428 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444384252 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401240733 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.342653652 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405963583 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.09721428 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.358446897 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.450876039 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.105329058 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.380081121 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632243576 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356558892 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450251743 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617719651 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359786514 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.3629664 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.307386336 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60599299 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844257936 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363467116 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.304797881 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.386477493 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363278236 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.402593049 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.594987353 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.382010568 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.342739883 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.620565915 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.134400934 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648035746 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376380327 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371614529 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358556366 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632931341 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020589701 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476839821 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.573718348 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383402829 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.919187218 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.352395113 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.309145796 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375067154 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365089532 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374006655 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362556203 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.296412939 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361122532 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120778254 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.390316225 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.074595617 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.361506848 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62555947 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459976229 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.367426874 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.93365517 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447236519 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.372667047 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.36684866 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458859934 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.930409851 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.534294424 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368749404 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.298972007 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360238459 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.314511831 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985212555 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.385695088 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.367987417 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368629254 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385183818 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.315479176 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38189919 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36651069 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.391078538 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.013911097 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063999484 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.384076799 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.297413261 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909270384 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364735218 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.30038473 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589654736 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.13712006 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298426097 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.309003007 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.298548153 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054981621 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373799049 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.779458709 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387999062 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.138917527 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.599026974 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401944916 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.400352912 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.591568255 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.245160394 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364546626 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.363733739 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512779515 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381345213 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.127824875 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390066667 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.372048076 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620975301 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.573689303 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364445639 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.31316041 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886869857 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390841955 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.389244815 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.365126962 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.583030387 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.956097338 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400025734 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.544158769 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38394385 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.144599113 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109596046 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37347061 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.373506704 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.372033738 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64239465 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.136386729 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.252112318 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431867145 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370489101 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.371063829 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.341708699 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.220646988 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.525504854 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.56557458 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389991259 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.378932735 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.365383402 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313653346 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.360338637 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402003576 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.14870673 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.5894216 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379775018 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645481688 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305461346 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369647123 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398206908 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.589129585 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.580372434 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.385051739 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628333063 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383189632 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384990819 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38381584 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385462224 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468208089 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38944058 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.377350169 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.627017353 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.370770911 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.374328706 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.331028434 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.150229973 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37943565 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.378136207 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371971804 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950187656 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365223171 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372988395 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.280119354 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.381335384 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435785086 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373681706 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585122436 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.617206592 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384072747 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.378082225 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.377165383 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595762379 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37626205 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.319184095 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452069262 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.869402718 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.961385581 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40254691 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.304906186 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.079830647 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.062584063 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368823874 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.570937638 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.372709284 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.586151708 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406848 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.369333983 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.967369729 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390648986 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.338093982 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.379465622 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382125384 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.375085452 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370397107 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.596324407 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.568848071 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377814726 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.385227169 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51317719 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.38471663 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304631312 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.886522494 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377327169 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370136911 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.145587416 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405312287 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.344214331 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196462725 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644895091 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387636448 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63773867 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.415000197 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.409104205 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.376322418 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376412055 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381523038 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.378169509 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392930921 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.384446085 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.346470002 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.815072519 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.933313238 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098609478 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917748947 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.688038139 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.400677862 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.275311811 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.131689404 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409244882 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.033874853 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608279803 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.149133238 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340920287 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877145241 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.604051217 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149816652 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640454206 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606127132 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666367661 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.400729665 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64258632 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.589323457 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408858193 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.378085251 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.33264628 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.652012564 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938398933 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393759867 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457957112 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141785297 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393277022 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.174664806 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.425366676 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.095808736 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795405369 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.027836727 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.761138924 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.381451133 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39144928 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197779721 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.415196363 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.901057373 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000016559 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405192387 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.881719172 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331664986 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.595162381 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.408526704 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.371636834 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.910692615 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.39855409 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.635951652 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639053417 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386189465 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.3856244 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907929592 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.251223883 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.382706768 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379639761 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113354179 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394430037 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671707207 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.395499967 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.608192294 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401059108 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.316810051 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312202962 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.070776454 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40176607 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356444752 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869691087 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.386847625 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407145711 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382352819 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398921852 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.639167294 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.390622186 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.956090015 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623662638 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384231807 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406448914 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.386574156 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378930706 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.364016809 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.275566597 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.395801301 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411072071 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.6062467 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.371109515 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.720805965 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.409759336 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597554749 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.275924859 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38677302 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632369832 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.11178473 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.386702492 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100183597 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.448021607 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39193777 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.395457282 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393869773 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396064582 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470506185 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604667205 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.410232362 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.395232878 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800870273 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413032098 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385897491 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.397474097 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478156882 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.613491098 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.615329406 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.173278025 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962773312 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130013531 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.978265213 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66731188 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38107451 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387300711 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320350519 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526414131 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.911869245 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658116367 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513901798 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.383134085 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418371061 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388592043 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389807033 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597748671 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660178529 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.256985294 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392614824 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.044565386 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.269097249 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397568213 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.599255468 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886090566 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952497694 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511870616 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394480262 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.152260731 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679223712 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.478823427 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386553724 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.971809012 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.387982391 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.099436169 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.393351876 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385399128 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534193097 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647078944 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070579611 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.415913085 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.543099741 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.157131844 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.395377848 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643180313 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.023014361 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610293436 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988185367 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.103300875 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652783261 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456871954 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60814618 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.512710925 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535497674 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.397782721 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.293677785 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389740055 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400916645 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.101388943 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.39854698 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971866505 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669123185 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.391605541 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.400596386 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.438673971 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.40012796 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.61317723 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095945692 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606615925 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397379301 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402472154 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.961460506 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973691898 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674199783 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319720407 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.386012097 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635866277 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.417700287 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415078933 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.842126566 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.100419668 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943584914 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.356416643 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411554441 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389813046 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.090804838 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976956921 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.641492856 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898735222 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.041429465 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396703575 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665259505 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.397915747 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394629459 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663342892 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.394865568 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.392364678 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632068 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.990216831 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176589415 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.395046932 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.522733941 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.320701683 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.614036869 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413536863 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329010325 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413864894 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.814368245 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.413449853 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522608804 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397832921 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.392623129 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391627533 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.125504698 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666730016 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.392366421 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.376040147 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.399878358 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402852549 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484288452 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980319297 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41668675 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.08761783 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.744965368 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.649024671 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.387686544 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.392905337 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.392792653 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390394688 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.107063624 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.356624579 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394678246 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95691214 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.404966032 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.404523792 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39158036 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.603734195 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599847831 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391854 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615801297 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412306215 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410096296 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.294114166 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.158513576 seconds)
  done (took 1731.119387967 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.393795156 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.411063167 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.423127398 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.468112813 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.438562567 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.502331509 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.480988353 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.429210807 seconds)
  done (took 52.843404641 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.39187165 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.544641927 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.42004557 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.394935286 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.397806982 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.403976935 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.855138433 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.414458683 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.393491584 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.393803257 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.394830999 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.393655705 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.040601711 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.398155047 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.399031127 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.37430748 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.391784274 seconds)
  done (took 66.304907273 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.510525359 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.420821362 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.179271674 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.462838311 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.41105012 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.400951058 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.99623222 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.403113378 seconds)
  done (took 59.085247425 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.402052705 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.403083912 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.404211619 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.405046757 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.406475729 seconds)
  done (took 8.319242631 seconds)
done (took 2138.990656954 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.390868848 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.392250566 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.393805374 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.397616428 seconds)
  done (took 6.873519879 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.368359082 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.107947676 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.368634442 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.389536708 seconds)
  done (took 18.533152718 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.396133863 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.40046062 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.063003153 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.973627609 seconds)
  done (took 5.333421908 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.139126062 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.153613148 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.137659503 seconds)
  done (took 7.73038064 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.389730888 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.394043311 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.393033117 seconds)
  done (took 20.475874892 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.681504357 seconds)
  done (took 2.981598169 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.536263017 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.58532834 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.706132446 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.713457986 seconds)
  done (took 7.842424074 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.780991441 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.759371533 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.582329837 seconds)
  done (took 6.422903486 seconds)
done (took 90.289813689 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.18569425 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.395682324 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.599618598 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.153977655 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.61723524 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.596142521 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.59625121 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.122646743 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.764010289 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.662912221 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.160441609 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.615418776 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.524781317 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.390086119 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.527172964 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.634433387 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.616064183 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.215801471 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.841103329 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.04499774 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.582306553 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.791507933 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.981347911 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.816925398 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.613651759 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.546177418 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.393738882 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.388352905 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.019304689 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.518845878 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.555718141 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.21516973 seconds)
  done (took 191.988408934 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.388765382 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.416818902 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.391598791 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.407868488 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.388392155 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.390892867 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.410071319 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.403788441 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.395223392 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.392072785 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.386476493 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.386614443 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.406687147 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.411865499 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.38911107 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.395215705 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.385316964 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.417529731 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.385652117 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.40900911 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.389085527 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.404984272 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.410390131 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.399061944 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.397556529 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.388290062 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.390413768 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.409571251 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.389322442 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.389638617 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.389428499 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.391803749 seconds)
  done (took 206.00548876 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.38918863 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.408480094 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.415052831 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.394282515 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.389955355 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.387856976 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.395100301 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.389208325 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.396584044 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.395079429 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.389482718 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.388149454 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.390103451 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.39328974 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.391425698 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.387596853 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.390204898 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.41201541 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.390374678 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.405454176 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.392625048 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.391279734 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.392800993 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.40330568 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.39250247 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.408485805 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.391411579 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.407230099 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.403061758 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.391457932 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.392264469 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.39343805 seconds)
  done (took 205.958466211 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.584480826 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.400825862 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.401467942 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.339009897 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.399665879 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.40142354 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.392910543 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.594792189 seconds)
  done (took 14.815811593 seconds)
done (took 620.069694566 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.756619042 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.436673948 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.598252169 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.420164038 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.191347531 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.447206663 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.42297254 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.589962255 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.336206639 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.606950445 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.676593162 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.435477631 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.815734382 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.417577443 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.674625973 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.523313615 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.275465947 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.401748302 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.732497821 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.964976388 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.687046968 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.85046843 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.608859862 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.343247014 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.837917708 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.854850964 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.149148178 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.274854891 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.443772793 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.751489848 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.115654353 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.392363631 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.488047813 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.485798028 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.54800144 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.529680521 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.380404892 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.488755495 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.623325512 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.618694493 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.947947386 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.153917849 seconds)
  done (took 94.605130943 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.385647846 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.388888081 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.388384156 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.390099151 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.391778467 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.385924411 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.387248838 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.384845725 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.384347496 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.386765597 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.386207093 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.385598275 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.384367012 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.3884442 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.386038841 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.387384239 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.387208463 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.39153068 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.388724516 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.39009731 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.388571431 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.393146732 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.389620203 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.389706536 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.391368655 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.391912954 seconds)
  done (took 37.403443243 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.408921634 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.650767858 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.81703907 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.416123831 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.407351497 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.41423513 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.485486928 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.41484987 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.409935484 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.409289566 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.573463271 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.41066038 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.443482325 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.843978464 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.414450841 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.407704481 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.410803727 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.410093196 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.667525631 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.420600138 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.505704294 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.416450089 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.484638466 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.41869293 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.428837527 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.405806426 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.409439981 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.969074155 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.42599624 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.576987247 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.188600725 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.48753816 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.90765065 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.841386872 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.196048809 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.416502302 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.410439239 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.576027378 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.410076733 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.409773978 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.48917579 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.416813158 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.825434902 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.066667316 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.425900632 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.408306352 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.988922224 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.592235862 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.650298051 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.419891438 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.848942837 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.418217703 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.413918866 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.41068408 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.650129305 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.4197082 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.40812357 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.967500824 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.438103042 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.490483741 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.419308194 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.410786733 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.67345425 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.411849026 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.658878746 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.418799987 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.42021552 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.429004604 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.832075976 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.418473372 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.08248269 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.428122153 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.410264787 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.575171635 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.653685027 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.021055614 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.433887453 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.678722958 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.926964027 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.505622949 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.417586108 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.960791697 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.510755452 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.415660486 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.41261672 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.413309854 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.413570037 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.465500275 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.486063612 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.017702872 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.091331152 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.984654942 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.506541775 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.423577773 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.410266471 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.963249927 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.429204921 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.414261533 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.8194231 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.08596209 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.427601323 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.419737926 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.091379248 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.436747849 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.490493838 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.418043927 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.835497295 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.416916765 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.46455372 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.417245667 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.420511837 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.434779415 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.494914136 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.418722192 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.416080836 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.055780768 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.604134492 seconds)
  done (took 185.500913677 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.41883289 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.40626803 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.411142825 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.42746118 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.409310284 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.416329385 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.407722933 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.412772674 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.413171067 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.409366764 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.410101582 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.412569041 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.409392487 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.412008637 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.437449139 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.4190587 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.064934308 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.410460909 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.420309633 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.406905066 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.204560745 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.416787163 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.411809745 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.40856991 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.413827817 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.408693249 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.412725709 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.427941623 seconds)
  done (took 154.356642021 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.418312043 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.974765853 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.434991773 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.54757703 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.435246663 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.418179798 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.545537088 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.471160022 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.432411397 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.416405577 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.417234767 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.715718331 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.418773108 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.940474549 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.612429812 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.561844154 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.931107159 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.433719146 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.419524095 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.418239795 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.552945594 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.419668671 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.719778424 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.971479931 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.435759043 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.978322205 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.399527761 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.419385666 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.41747575 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.977702201 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.433660674 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.719952258 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.489881533 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.479567265 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.99580351 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.942305297 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.942614338 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.565434064 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.425697206 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.41925295 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.420448372 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.403667845 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.986567864 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.436725692 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.425263063 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.987093115 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.444342539 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.424816862 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.428112792 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.420543994 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.482108122 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.492691987 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.747076165 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.991451412 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.51337756 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.438060453 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.551879417 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.802595654 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.420538224 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.929924634 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.401893693 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.998384588 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.445020574 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.404919553 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.422553867 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.426930171 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.569351675 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.55916943 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.936494717 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.435210215 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.932596278 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.584286165 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.426231762 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.419327181 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.422343666 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.987653008 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.947677007 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.584265757 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.553038438 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.614712964 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.412211275 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.422418202 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.407589813 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.499669919 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.425990827 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.001450026 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.956061184 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.434708533 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.422025769 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.426592411 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.425754262 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.599394182 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.012595662 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.513063909 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.924467778 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.741259496 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.724381997 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.422762139 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.482866447 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.437007101 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.730208872 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.426388949 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.480308083 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.859515145 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.72642777 seconds)
  done (took 168.727691886 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.662524831 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.596203284 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.51002474 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.56545448 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.021465418 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.984518999 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.763091912 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.557964819 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.531057268 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.684396297 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.564018565 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.515937542 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.645709892 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.505293267 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.166936278 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.508272225 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.532507232 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.570691583 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.578918243 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.453970142 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.085819314 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.709047798 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.61433112 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.29992097 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.512897396 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.215120212 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.987104243 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.974742699 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.600392226 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.7202737 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.940567205 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.549043615 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.371640541 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.115371347 seconds)
  done (took 67.941279611 seconds)
done (took 709.843867976 seconds)
SAVING RESULT...
DONE!
