cset: moving following pidspec: 9820
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.585105457 seconds)
loading group "shootout"... done (took 1.180909765 seconds)
loading group "string"... done (took 0.40512412 seconds)
loading group "linalg"... done (took 7.565018565 seconds)
loading group "parallel"... done (took 0.150972801 seconds)
loading group "find"... done (took 1.423363263 seconds)
loading group "tuple"... done (took 1.860990597 seconds)
loading group "union"... done (took 12.195001608 seconds)
loading group "dates"... done (took 1.245614652 seconds)
loading group "micro"... done (took 0.190533769 seconds)
loading group "simd"... done (took 4.140551436 seconds)
loading group "io"... done (took 0.99132091 seconds)
loading group "random"... done (took 8.240772221 seconds)
loading group "problem"... done (took 1.517234374 seconds)
loading group "array"... done (took 18.475050931 seconds)
loading group "misc"... done (took 1.438387253 seconds)
loading group "scalar"... done (took 37.65987431 seconds)
loading group "sort"... done (took 2.887202523 seconds)
loading group "sparse"... done (took 11.355924619 seconds)
loading group "collection"... done (took 16.681075796 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.48508076 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124223596 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.128974212 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117136642 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14489172 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117023528 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125012576 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085334261 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.892791775 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.139491141 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.112228781 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.434095716 seconds)
done (took 5.22490149 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.164192086 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085419674 seconds)
    (2/2) benchmarking "String"...
    done (took 0.077952428 seconds)
  done (took 1.271519479 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063122472 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124119564 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06379708 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.064724257 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063997307 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063613592 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064331111 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063742816 seconds)
  done (took 1.618691956 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.068630075 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065382262 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063526311 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.065403486 seconds)
  done (took 1.374715897 seconds)
done (took 5.616746899 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.236345514 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.101794228 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.28597522 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.390188041 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.454077086 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.089578871 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.072021953 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.06799146 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.12682829 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.309640198 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10457506 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.178959968 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.086671773 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.171200853 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.970522527 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.116440257 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081513266 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.119573 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089153277 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127051352 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.407705757 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.074237815 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071224211 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.06624221 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.065124633 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.646854102 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660068579 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.125787316 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079375714 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.099743019 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.113442569 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.648811191 seconds)
  done (took 10.385918391 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.090832711 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.089432463 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.064825187 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122301614 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.093841179 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068083556 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073323022 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065112638 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090953797 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12466367 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088605716 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.09970623 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064604606 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067853267 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.07512164 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198293854 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07880255 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079378449 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066825987 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078860223 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106191342 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07713869 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076485561 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07558412 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.125239735 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.164779456 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.093208959 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09446132 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063327745 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079228232 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113356849 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125843677 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065088014 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064377918 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.119678665 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093411826 seconds)
  done (took 4.472399337 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.948236201 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08903636 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.102500387 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.617447691 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.062739663 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.149959066 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.242230539 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071771523 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.439331797 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.145214367 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.140342249 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.146382318 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.113181989 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068594732 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.251899292 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.115255507 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.415005116 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067402942 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.06631854 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064006049 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.068125888 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067007058 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062496715 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069674857 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.09136035 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.086911708 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.201443915 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.948727371 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.258134326 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066471314 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.158426636 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.082021166 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.365872289 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.070042342 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.084284253 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.086552221 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.395803007 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.120578329 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.062985001 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169340987 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.068902451 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.116375115 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064493864 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.116568323 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079025438 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.069477743 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.068762567 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070950722 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071616451 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079496914 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.102235245 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.06535868 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.063307922 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163279657 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06216297 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066086971 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064221641 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067184798 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.148965181 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062248552 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.142701459 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06368251 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067830976 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.096232205 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067847092 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.092997811 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.109453521 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.346403393 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.061042873 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065518494 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.204710994 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075073973 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064016519 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069761439 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063632574 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.065622502 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065642873 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.072812901 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067253708 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065875515 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106766956 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063982039 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067316195 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064873098 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070270538 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.101863916 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063425184 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.464526634 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096994763 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06449519 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.077758049 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106227315 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065244213 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.072119534 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.172031728 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066941951 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065518854 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067649654 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070828411 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.093362106 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069281822 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112299169 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.042080497 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066555541 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061886993 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066812139 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.072305612 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070953645 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068731373 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066861173 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070265328 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067868467 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065033428 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.118644367 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066899988 seconds)
  done (took 21.893664686 seconds)
done (took 38.810879407 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.257682488 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084970823 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085392514 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.085302703 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085870615 seconds)
  done (took 1.806058251 seconds)
done (took 2.997065605 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.108249909 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.063203268 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.102098383 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.101393793 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.066865394 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.063888803 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.098879826 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.064259009 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.099197242 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.102416088 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.105014509 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.103801809 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.064810418 seconds)
  done (took 2.350403869 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067962274 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080091253 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.084514699 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062800639 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072763294 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.082581748 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062976436 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081629447 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.089533951 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.083374629 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.082937083 seconds)
  done (took 2.037540011 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067631062 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080917818 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.088143542 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062648945 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.074851827 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.082879644 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062559437 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.083063119 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.08792343 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.082455053 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.082749217 seconds)
  done (took 2.035829493 seconds)
done (took 7.6041742 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.068169621 seconds)
  done (took 1.23858856 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.573968535 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.119689461 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.071632736 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.102021665 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.204807053 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.097173446 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.223288795 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.071565385 seconds)
  done (took 8.820633199 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.09240723 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.067077601 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069999151 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.066044931 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.066739855 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066483785 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.066694339 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066966753 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065914221 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.065476334 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066153662 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066329686 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065684923 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.066680497 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.065644617 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06642285 seconds)
  done (took 2.371461896 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093578504 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092341014 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070165931 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072124449 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070022143 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068417988 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071362358 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070414713 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067729744 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068705291 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071733841 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070318586 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069556399 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060963167 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070537751 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073059533 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067802936 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070731046 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071441841 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071927315 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071697437 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061331819 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070006662 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.071208072 seconds)
  done (took 3.018335318 seconds)
done (took 16.631292601 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110057982 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073809374 seconds)
  done (took 1.371700396 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066643202 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069030538 seconds)
  done (took 1.33582952 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07335778 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.058194576 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083304298 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071377395 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.060289482 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059551106 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.081503735 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059362461 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059316926 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059298157 seconds)
  done (took 1.866356263 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060593618 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.069104683 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.067189279 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.069395169 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.067058561 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060937768 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.06427584 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061182236 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069486465 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059518856 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06566671 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08018121 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064693054 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082166302 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064627954 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065736323 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.068523055 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064691116 seconds)
  done (took 2.409155166 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.05804902 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.05963889 seconds)
  done (took 1.324402547 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.062459832 seconds)
    (2/7) benchmarking "second"...
    done (took 0.059836961 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063913829 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064180778 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060373849 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.05927131 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060644747 seconds)
  done (took 1.633495457 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.34677258 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116172795 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.310514875 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066253548 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076920447 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.243780505 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060602452 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065875948 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065938566 seconds)
  done (took 2.598782035 seconds)
done (took 13.753174084 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075950237 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.080968709 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086844756 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.419808354 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089678377 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064264076 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.110526561 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.164857347 seconds)
done (took 2.313418147 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209527419 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.45430195 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.954696394 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.063621049 seconds)
  done (took 3.682999662 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.317965115 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.082050568 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074487508 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064570037 seconds)
  done (took 1.762773712 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06077997 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068747375 seconds)
  done (took 1.34895211 seconds)
done (took 8.224176826 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060178994 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085705858 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060539762 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06102411 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060857387 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.061167337 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061149555 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.060821438 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060619314 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06050078 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060698697 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.060804712 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.060914639 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061008759 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060967722 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060725743 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060853953 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060934014 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060793017 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.061193098 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060745076 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060553395 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060962155 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061066912 seconds)
  done (took 2.730711556 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.077747809 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06283524 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.064674325 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065152609 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.065174874 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065395633 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06532516 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063419481 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065335944 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063259507 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06540652 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064983798 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062769179 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065384169 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062789107 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064949576 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064906954 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063007548 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063078994 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.065264521 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06461886 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06350901 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065284412 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065058573 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.064915629 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065498792 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062845307 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063786065 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065147974 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065282285 seconds)
  done (took 3.173788302 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060372031 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057004254 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.058752863 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066221933 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057574803 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058279628 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058778927 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057675894 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058285509 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.059545838 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058646211 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057837831 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058814481 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.058035155 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.058177825 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058245311 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061895935 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075587417 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057675224 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057559497 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061332457 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057940884 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057716291 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057656199 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.05892098 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057548322 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057571543 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058495368 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057597376 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058445008 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057861535 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061987589 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062196297 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057472864 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066654502 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.062140423 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057646188 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061414659 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059199143 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.05757172 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057393627 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057723701 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057790419 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.05788971 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06656616 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057780348 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.059366405 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058387573 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057935303 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057280746 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.05760762 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060185926 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062520641 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059384907 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057222248 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059120128 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057307551 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058645867 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057390332 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.056999101 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.05726312 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060216016 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059575176 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058329574 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074872662 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059599145 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066736364 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057719676 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06165559 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060493397 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058439311 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073205021 seconds)
  done (took 5.532999282 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083141379 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085623311 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062794382 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062865389 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059271307 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.0586628 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066678576 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058804708 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062748582 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078380838 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058700041 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062564419 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062988094 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062356167 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059203851 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062779751 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067485885 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058523064 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058218013 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062075398 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058628493 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066176713 seconds)
  done (took 2.661752045 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.134912078 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063987309 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101087988 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075629732 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067263737 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075666352 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064443101 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064389519 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064400272 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064875022 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064789406 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06451069 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067162484 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064425866 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064563299 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064562336 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064514619 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06450841 seconds)
  done (took 2.528121924 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073765333 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063675206 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085437261 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064032969 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064261185 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063263128 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068133546 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069259678 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063732677 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064057917 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.069777986 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06361074 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063523939 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063814203 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063631065 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063882856 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.063343865 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063365269 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069343984 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06790383 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06795173 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069149458 seconds)
  done (took 2.704822625 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071739137 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06220318 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.0758951 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064678295 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058514787 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058717514 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064194842 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062603032 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063826976 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06262343 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062839703 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058903658 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064508998 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06325888 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065057864 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062728653 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062894945 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062723871 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063094476 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058324029 seconds)
  done (took 2.506168438 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082484972 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061141243 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0610705 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079555257 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061209089 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061386256 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079876138 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061610838 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061528819 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083145876 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061763536 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061991092 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079808118 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079779091 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061744799 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079523202 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079492007 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080167981 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061465964 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061806953 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083271828 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.062017828 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079748257 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061373689 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061355613 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061575872 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06148268 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079936945 seconds)
  done (took 3.188728142 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060549839 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069831303 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060669442 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060367028 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06087199 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061153 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061626767 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061174702 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061411075 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06250155 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060850971 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.061179526 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060745377 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.061253531 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061059589 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060821897 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06104756 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06122157 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061019393 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061430012 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060817555 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060828568 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.061227302 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061854738 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061273287 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060794551 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060948002 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061581397 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061174001 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060798943 seconds)
  done (took 3.084427544 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.069869237 seconds)
    (2/2) benchmarking "in"...
    done (took 0.070044555 seconds)
  done (took 1.382349973 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059117597 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074068293 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057644778 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067507816 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067620066 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062021196 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068770785 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067316328 seconds)
  done (took 1.761319835 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064626051 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.087397263 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.06069388 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.061465267 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064887172 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.118418645 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.074233523 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.069655126 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075087061 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061158697 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.060635514 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.072398748 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059812218 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070824774 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062208524 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067918154 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067040214 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07144169 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070288428 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058278302 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072814547 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062992336 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058951206 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061067729 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060344516 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065274713 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073778586 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070627676 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066849381 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057587865 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.080508979 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058553548 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060327412 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067385442 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.06402028 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058773165 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094534713 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059659629 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065302737 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058208653 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070169014 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080286576 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071420774 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.07709763 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061045087 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061566418 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058543724 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061234974 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062148197 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067214582 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058685674 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065296713 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058086793 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.061090718 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068196324 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058937393 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065417637 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066937917 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073284802 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068178857 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065939791 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072702119 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066896778 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.069155493 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059965026 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077497415 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060658871 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.06987304 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071601225 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060489283 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072274936 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058442924 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057277918 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058752252 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090481042 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060286202 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060425249 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058641117 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.058855731 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060483987 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066925696 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065024876 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064830924 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063026762 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074672732 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068286609 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058468144 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067924466 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.075824664 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061274556 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058669617 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.073749254 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060684148 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058649327 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075324584 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066964843 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.061099128 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.061027766 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061577802 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070852591 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060533705 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057112501 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065145713 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060438267 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.062003309 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063609342 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064674702 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057995998 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067730976 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.06427367 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060208166 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057179211 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061732344 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059161131 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056993479 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06607285 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.057560398 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071204958 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.063171311 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.070044602 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072128111 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.066364449 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073963569 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.05789393 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.185765104 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.07747237 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067930702 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061468589 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078279455 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059162433 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06836143 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058611022 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061438279 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067328562 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058701721 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061314326 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059823276 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065727027 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060924893 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060715679 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.062258816 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066395744 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070358757 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.060042175 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066318703 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059274842 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07356019 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067528182 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.061900819 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063795104 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059431962 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070252353 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064703396 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068388477 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.05839682 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.05989052 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059030935 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068437974 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067011943 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.061219803 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068966142 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06265638 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.060282114 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058793487 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060185106 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.060970123 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062642149 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059446303 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066153533 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068067349 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.072006647 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071373542 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066403676 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.058635492 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058660121 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060883774 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058455099 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.063275468 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067915567 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072874114 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.06976208 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077581914 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059269412 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067503664 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060549319 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074212551 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071042428 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059847568 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065778381 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057510957 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06124124 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067758896 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069205035 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.072128055 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072190891 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063124744 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062510454 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058666767 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072352348 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.0598564 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06570952 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.069025554 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065121831 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.059202159 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060850289 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066659137 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062534128 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059523505 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074671546 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.067687961 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058213898 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071154371 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.059134383 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.068574138 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.05837949 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061262118 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063256178 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061164848 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06706153 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075564027 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057647462 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.05993841 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076325781 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060908754 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060422299 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064850838 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.073496395 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062880434 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064999272 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068086858 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.066455231 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.061917981 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066306567 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059615786 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.067832986 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.062510545 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068591754 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058098575 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074912677 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056832452 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.071722226 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058599516 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.068433716 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.059246388 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066329646 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.058575495 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.072620278 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059563152 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058738347 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.069048574 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056400245 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066880261 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.190846591 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062457144 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065175503 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.069283279 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061652357 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068052723 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061421196 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066510153 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062922883 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06691708 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.06883344 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06303218 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058790973 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067000111 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069203621 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065748834 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061175434 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061068591 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059098494 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068242519 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060712375 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060286451 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067761927 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063218662 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063570181 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060828007 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061040983 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060627708 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068950082 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0667799 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075449811 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06660181 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06471867 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068190602 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058480684 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076644707 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058868743 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064805304 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059027768 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.067466542 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068290139 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058885068 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076750212 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06100606 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065600995 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071326156 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065742649 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061491052 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075865035 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.06319135 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067032301 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065622412 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062248004 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064378352 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061069008 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065988378 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068986839 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068724812 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.060228536 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065130304 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066552682 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061109306 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.069622058 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060895786 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067052274 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.061362154 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057615226 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064006986 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069530892 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062991914 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063185097 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.058906751 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057611784 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.059386237 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067928839 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063351101 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066463872 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072309783 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057535643 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059991813 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059205454 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064252521 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075860157 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067735479 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065871366 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063678605 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.058276334 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060995899 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.061468256 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.059277846 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063289761 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058218399 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058949288 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068196437 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061103329 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062183042 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059268079 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060385137 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067297643 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065124431 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.059711766 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064658516 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.059159043 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062532686 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.058262278 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060555595 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062165612 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057601734 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061138061 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.06743626 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.073476997 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.063565315 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066359335 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.060746031 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.064892181 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072680247 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067047754 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060231361 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066222548 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057866758 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078142222 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066315306 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065332942 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066557669 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.060158345 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.072736478 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.061518546 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.066276701 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074497755 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058975894 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.20435654 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.058622261 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07732536 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063116169 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059576869 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066127554 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065480908 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063974576 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07042492 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060112099 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067086021 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065765796 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06143349 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060968741 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061064656 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066157851 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073361733 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059904041 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065108048 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.065833979 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066441709 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063061043 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070169121 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065885888 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059826338 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061524805 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061441077 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.059749356 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070443639 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059106231 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063993736 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062369752 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058413735 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064431372 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07358821 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068724949 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067920525 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058852615 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058887252 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.076892351 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061561846 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.062947695 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065895582 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06714686 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069629059 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067715239 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074366281 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059421551 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063715681 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069494362 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.059978787 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058598625 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061303409 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060684868 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067172657 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067715835 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064726523 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063519383 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064497838 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070418895 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060680904 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062988832 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065309216 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059711073 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067757042 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066014286 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066293939 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.061044934 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058796239 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061206132 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067994133 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065026618 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068178513 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060204191 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.068624598 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.072445851 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065325356 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063354041 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058651383 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063546404 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066864985 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.065215494 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058462486 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062712292 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061316592 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.068237779 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068534035 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062695493 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058768068 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074854057 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06621738 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.066865229 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061189557 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061342577 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059364568 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058307722 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.06952248 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058596521 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.060881944 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062676969 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061288699 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.075535604 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066234382 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.076585125 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060197327 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062430851 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.05869637 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067240991 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062505523 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.05897333 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068023798 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.057671497 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.0752855 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.069431287 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.068865805 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.057930876 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062670899 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.065396957 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072483446 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067053501 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067827623 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062581849 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066827479 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.059608255 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.066880676 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.057306056 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.056753389 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.066446653 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06452944 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.206447445 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059536762 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069180508 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.06210574 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065763323 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066995056 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.060864079 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061063539 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06101893 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067203785 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063063385 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067942084 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062247445 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075154669 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.060166786 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068637075 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06667533 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.068597465 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071590225 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070919305 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.06653836 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060092293 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065598876 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066371526 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060730098 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062672965 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.06350641 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082486046 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.060949012 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060898304 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072723007 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.068533557 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059583734 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068117166 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062871175 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.068046387 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.060079995 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.068367907 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064481401 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060472552 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063291275 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062641816 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057899812 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.05907867 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.058832205 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067805023 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.062236958 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058910283 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076896052 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.060572629 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.065943883 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.06895438 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064361811 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.060846422 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057693634 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061554378 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069856108 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.0733968 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061618163 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066181658 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061154011 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068621305 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.058043946 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066318131 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066362366 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066267521 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058757602 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059508814 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072632763 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07291795 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062809108 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067792779 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067900258 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061233914 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082947739 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06711206 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060652907 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.069437332 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062263076 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.058581659 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058564723 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061596833 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071900983 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.058896928 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062504024 seconds)
  done (took 40.455550742 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09583167 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058430167 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059077854 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058668104 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071276683 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060473259 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058910988 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059805147 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06015217 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062085535 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058643524 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059244835 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071590724 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074849948 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07089235 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063631397 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059176322 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059995593 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058482515 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060237495 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070154264 seconds)
  done (took 2.700197698 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.066300186 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.074456741 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071216221 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077216201 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067525711 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06467637 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071508498 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064749754 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072593569 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069980538 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072658419 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064398134 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069897337 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069898351 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069632244 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064936514 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072572204 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067550344 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06411589 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071702323 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064499289 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071510817 seconds)
  done (took 2.846699197 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059328378 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.058605851 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066075809 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058466682 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058235298 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062592039 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058418186 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.062100417 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061766689 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061475618 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.065976903 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059992854 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058282837 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062806283 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.058396358 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059671706 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.103007271 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060074622 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059243625 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.05844385 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.06530811 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068802171 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058380046 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059114466 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061937205 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062909204 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058312895 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062336115 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059385282 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061730502 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059441364 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058129751 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065817962 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067804672 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.062481319 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061905051 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060457156 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059510847 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058561809 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.05833393 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06670292 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060069028 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.059134744 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061107473 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067733361 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059364037 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058289202 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066333527 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.05806605 seconds)
  done (took 4.367441562 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07147165 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108579804 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064564231 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088256416 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07410343 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067464256 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064254586 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089746961 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060072477 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061585503 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074996664 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075040621 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062646346 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064689436 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064059732 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062586204 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063381977 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061706636 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066191442 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062154192 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066583665 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.065923324 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07361543 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.074222219 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064377469 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061903245 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06207491 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064889364 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073671087 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067219943 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064638411 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065092797 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07452624 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066368867 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062191042 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062712754 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074999974 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063212549 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062638578 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060742978 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062143564 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.064582121 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.065902128 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.075492661 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06360111 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067014547 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06281613 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060112906 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074588838 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06264607 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067666635 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075474124 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064113886 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063388395 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065384467 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074550775 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062760053 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061341781 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.063169857 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073983878 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060594995 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063803474 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074996986 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062204957 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.067083788 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075006211 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066746858 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063894283 seconds)
  done (took 6.069465271 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068009518 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.087605618 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070620196 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070883587 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070754292 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070286898 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070515076 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070574964 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069982075 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071119659 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07033379 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10992907 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06529827 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076098935 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069954418 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069752919 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070395376 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07040219 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07009126 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07036642 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070156107 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071265274 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069925068 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070902227 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074119743 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06597604 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070107971 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069935519 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071166443 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069911756 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.074482158 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070213058 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070182757 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070937094 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07410796 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069652057 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059794032 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069682151 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.06994942 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070123975 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065536039 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070991565 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069993263 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065390695 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070180214 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070039696 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071332893 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.074947907 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079949556 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071191061 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070484929 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071353557 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069861699 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070189223 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071053201 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.079517118 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071040204 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07129868 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070406539 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071294378 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071571204 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.079629843 seconds)
  done (took 5.802191962 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073318294 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066914343 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079644025 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061428634 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059134015 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069239614 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058630255 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058989966 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06739702 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067784149 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069824049 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069291419 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072021093 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069643685 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069168192 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071950785 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069497173 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068962316 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067488511 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069072704 seconds)
  done (took 2.714057682 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.069458651 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076397945 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064552983 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069194357 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064714229 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.0690705 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063654402 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064812719 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065533409 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065228311 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071090462 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071117288 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065245622 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069379102 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070729646 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06924396 seconds)
  done (took 2.433245402 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064211827 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.067062532 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.067761719 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060778329 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06369723 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059510366 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060127481 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058760941 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059267323 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073768432 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060120667 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07151393 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06020731 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058656772 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059884336 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065943152 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059435116 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059966122 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059956781 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065915473 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067090584 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06149767 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063826541 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060080013 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065366009 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067276562 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062178127 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063475361 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060262293 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060443103 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065983141 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06712363 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059990589 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060716193 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058804853 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06011611 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060130345 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060700269 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065722584 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06033399 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058510495 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064739861 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060595411 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061240297 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.05925439 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060580517 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059072006 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06594276 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060574872 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065011774 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060523016 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062356349 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060902396 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.06791035 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063028888 seconds)
  done (took 4.78154914 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072906036 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06348002 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.05846468 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058536219 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.064229883 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064694779 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064230828 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064109898 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064943517 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058525438 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064634441 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06339818 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064663489 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064827743 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064260603 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064402873 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058596099 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063822235 seconds)
  done (took 2.502457734 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068284421 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062668541 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068453069 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063491352 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063107937 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063141948 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059144235 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058875986 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058889198 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063365801 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063794528 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063181209 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060027515 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063080079 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063332944 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063520844 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063276251 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059486232 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063678219 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058913902 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063649024 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059107954 seconds)
  done (took 2.726231853 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.083932985 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080324191 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.120050097 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07613887 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084519085 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068751619 seconds)
  done (took 1.867595941 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086771057 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100592341 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063180297 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064109633 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07533571 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067639019 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067719596 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067767888 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07563119 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073208283 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067748547 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075303738 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075322227 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070190985 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074941198 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078553651 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067812912 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067992217 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063864656 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078810584 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068027223 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075234686 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067912475 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067138639 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067363645 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070192091 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09664088 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073224686 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069948323 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075086746 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078339708 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06774463 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075174929 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073439291 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063881906 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075177909 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067904564 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078637764 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075752257 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070190651 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063860691 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075046979 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075657458 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070065017 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078413387 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067758096 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069918763 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068098259 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068023085 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08187727 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075179465 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070451839 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075313617 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079317756 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078594887 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081531482 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073307646 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070199 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07511421 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073478656 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07038823 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07504792 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070151862 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073981515 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078871375 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070389158 seconds)
  done (took 6.185904542 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093833285 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063114629 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067638243 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073487282 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070105577 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068031446 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06826161 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068399979 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067726192 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064290107 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102804086 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068020844 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070368975 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069861941 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068501263 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067608074 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067818342 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070384124 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064327418 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082033926 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067549792 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070401061 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070309464 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069934174 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073060856 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07811401 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06778813 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067792154 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067785917 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067292304 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070289916 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067991158 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069841002 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063709402 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069856614 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067529538 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067346543 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069940134 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067510241 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07507986 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07005344 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078835438 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067397994 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06746056 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073321449 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067569166 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06729739 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063906964 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067631695 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064150662 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074266219 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073396044 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073570949 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070580265 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067849007 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068130317 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0676495 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067730031 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067756593 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078566693 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069971779 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06796168 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082381549 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067750383 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067764859 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069878182 seconds)
  done (took 6.028738699 seconds)
done (took 123.955300583 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205326855 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.180460183 seconds)
  done (took 1.726875765 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068733771 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.092712942 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.072730203 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130772774 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066233105 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100662257 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099538429 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070682981 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067294472 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067836845 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06799094 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070538162 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133674094 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066252963 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067253437 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070523784 seconds)
  done (took 2.67370986 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099115367 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.177401095 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105243052 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065622852 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101549589 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073994715 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066071227 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076855574 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070034784 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068909374 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073541476 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071864754 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068399766 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071590514 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070120522 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073492081 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068418455 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073451295 seconds)
  done (took 2.841709978 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.089105247 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.081277664 seconds)
  done (took 1.537914366 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.150456888 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.100669369 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.139097909 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.319792369 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.138636487 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.277961622 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.131087903 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127481455 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.106570661 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122685226 seconds)
  done (took 2.97643259 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096602978 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.163119487 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298661582 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116048453 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072784432 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.085170394 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117995598 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078782835 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.07775939 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077497311 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077297582 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076776284 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095038764 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073763281 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073459191 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074078844 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097966082 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072932442 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072650012 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074093138 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097318956 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066650616 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07379871 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072619956 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075543256 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075598503 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067763982 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06663174 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073176482 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072276136 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076439311 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.081718675 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075412876 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.101677242 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070475626 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.102895048 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072426037 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070982794 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072152364 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070886735 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074466088 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075130677 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07523073 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074128083 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067670676 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.071922239 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067508351 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06655529 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076954826 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067782487 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077172233 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076214778 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10175578 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067785011 seconds)
  done (took 5.939668786 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104831661 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104844109 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070724334 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114553505 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105869333 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070625546 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105949335 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098663841 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108452303 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07028759 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067965445 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069707664 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080885684 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082367233 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117621597 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106833812 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070811358 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070756771 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107553714 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108265818 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067789266 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102185388 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096595732 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106780681 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066993737 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069402537 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.0668678 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069637421 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073913065 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075987717 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068294656 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079303944 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086586773 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075627759 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066148257 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06703199 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06765319 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077321149 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077743182 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07655939 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075429894 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066337471 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067049699 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068559353 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069130617 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066145217 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07585576 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078359301 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076126665 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068183609 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069920012 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06723861 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068699125 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077484912 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07543087 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079191481 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077311003 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067089054 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067243157 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072219092 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077982197 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077238811 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077993597 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06975 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076594056 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0674584 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078250236 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082256532 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067639488 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069194167 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067504527 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067815221 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068735429 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074338012 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074580263 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0690655 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06749825 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066843329 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07684934 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075354798 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067101407 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073601804 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066127068 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067657775 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069158095 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068994941 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074083185 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07778318 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069672421 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067505457 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068169242 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067418596 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065711294 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073339102 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075359373 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076935507 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.074049378 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066966782 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07510761 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075824969 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069069607 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.075442912 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066223894 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068444111 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067775644 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074422702 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072896743 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.207106892 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067281147 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067882162 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076584777 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07903215 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068301881 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076005673 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077734777 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076382632 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066904565 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082321948 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068370742 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078299733 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068811581 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077266652 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068159903 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077057141 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067867823 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066277974 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06748376 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076821866 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069636496 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067853345 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068168439 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068571175 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076263218 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08001446 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070436406 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075741871 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.073777616 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068725268 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075970517 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06771404 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07607161 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068570167 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068973293 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066153464 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079140932 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067766642 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067088166 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068493729 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077689019 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067842574 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077700785 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075866286 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066922983 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081292071 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078008539 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075640116 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.0779985 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070564609 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067568761 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066931621 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068285317 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07441288 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077461591 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069779514 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067786919 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074873589 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078162572 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066830235 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075495341 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075463297 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076030052 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067931655 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067948553 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078966519 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078851722 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076897603 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075270386 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076652528 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067781453 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074901862 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075605259 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067616989 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083609919 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066763181 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081096904 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077171653 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074963043 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076088377 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077986306 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077672745 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078029168 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082207315 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067104113 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067229554 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077184992 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067628615 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068203715 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076300595 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069597839 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069435784 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082159325 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066267034 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076458841 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066998764 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077115845 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066271463 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069486767 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080776403 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066837853 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069219653 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07657742 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068042947 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074071759 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075914781 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.071217491 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064044201 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068287877 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21009818 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077084009 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068360454 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067804334 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070392326 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075379048 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074796512 seconds)
  done (took 18.362591589 seconds)
done (took 37.438889294 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.206918313 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157072646 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.191466596 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115189227 seconds)
  done (took 2.138609495 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.09505944 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.094020364 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.078369895 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062212822 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.084334925 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062748511 seconds)
  done (took 1.889518801 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278067709 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.19634381 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172813293 seconds)
  done (took 2.053821255 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.214804685 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.194391801 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.459914828 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.290375257 seconds)
  done (took 2.661277494 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.131526623 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.081084827 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.062208606 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.072913989 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.115301951 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.148584523 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.091184206 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.115380516 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07352026 seconds)
  done (took 2.354741366 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.134891799 seconds)
done (took 12.638566721 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.209562174 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097886127 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109067102 seconds)
    (4/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.073896047 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069684248 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.065777487 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.116446229 seconds)
    (8/309) benchmarking ("sort", BigInt, false)...
    done (took 0.245593108 seconds)
    (9/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.22833875 seconds)
    (10/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074273373 seconds)
    (11/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.197577456 seconds)
    (12/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.193139693 seconds)
    (13/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07675944 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073616634 seconds)
    (15/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.173585426 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.149192874 seconds)
    (17/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102590873 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093469098 seconds)
    (19/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.072671958 seconds)
    (20/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.216350544 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071330136 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.085171644 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071422163 seconds)
    (24/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.19569904 seconds)
    (25/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072029635 seconds)
    (26/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.18254044 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.195225035 seconds)
    (28/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.204595523 seconds)
    (29/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.117858274 seconds)
    (30/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.081074968 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.08785674 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087768888 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074128751 seconds)
    (34/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.204318095 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.189593841 seconds)
    (36/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071078077 seconds)
    (37/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073068893 seconds)
    (38/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.176820123 seconds)
    (39/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076388176 seconds)
    (40/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.063125015 seconds)
    (41/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.200139781 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069624651 seconds)
    (43/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.172341079 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087012289 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.070471384 seconds)
    (46/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.06337188 seconds)
    (47/309) benchmarking ("sort", Float64, false)...
    done (took 0.128427545 seconds)
    (48/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066455907 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061207163 seconds)
    (50/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.136805518 seconds)
    (51/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074467527 seconds)
    (52/309) benchmarking ("sort", Float32, false)...
    done (took 0.129714304 seconds)
    (53/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.061654062 seconds)
    (54/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.074163721 seconds)
    (55/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.071505606 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 0.145998206 seconds)
    (57/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.196059311 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.135358138 seconds)
    (59/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.074843623 seconds)
    (60/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.228162827 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.083065514 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.063744511 seconds)
    (63/309) benchmarking ("sort", Int64, false)...
    done (took 0.063152386 seconds)
    (64/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.164247263 seconds)
    (65/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.063637661 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074375383 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076013746 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.190912053 seconds)
    (69/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071503178 seconds)
    (70/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.18648372 seconds)
    (71/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.061986902 seconds)
    (72/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071491503 seconds)
    (73/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.062740896 seconds)
    (74/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.061478397 seconds)
    (75/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.073048779 seconds)
    (76/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060875054 seconds)
    (77/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067782173 seconds)
    (78/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06263088 seconds)
    (79/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069691359 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.084071656 seconds)
    (81/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.072442455 seconds)
    (82/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067343463 seconds)
    (83/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.150736233 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.270229249 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.074143531 seconds)
    (86/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.224065721 seconds)
    (87/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088861363 seconds)
    (88/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077372974 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.157695404 seconds)
    (90/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073384455 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.063140065 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.120164661 seconds)
    (93/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073459609 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.117275719 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.083896216 seconds)
    (96/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.064196667 seconds)
    (97/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.135693775 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.079332544 seconds)
    (99/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068650087 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.063417026 seconds)
    (101/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.137559812 seconds)
    (102/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.061887195 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173030104 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107664157 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173333095 seconds)
    (106/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.212172566 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120881611 seconds)
    (108/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.062191522 seconds)
    (109/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071333767 seconds)
    (110/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.064011138 seconds)
    (111/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071651903 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139816764 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069053328 seconds)
    (114/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.185948358 seconds)
    (115/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.075653935 seconds)
    (116/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.140437532 seconds)
    (117/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072880585 seconds)
    (118/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.159469004 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072557642 seconds)
    (120/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.157442548 seconds)
    (121/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.061895586 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.061633265 seconds)
    (123/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.200522675 seconds)
    (124/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066202527 seconds)
    (125/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066866423 seconds)
    (126/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073555992 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123848318 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074102731 seconds)
    (129/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070273557 seconds)
    (130/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071581259 seconds)
    (131/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.141298151 seconds)
    (132/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.064636144 seconds)
    (133/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.077052972 seconds)
    (134/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.137044551 seconds)
    (135/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.161061449 seconds)
    (136/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.195254016 seconds)
    (137/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.062946756 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072507273 seconds)
    (139/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.164083438 seconds)
    (140/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081401729 seconds)
    (141/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.064271179 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129757012 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074175937 seconds)
    (144/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.064947162 seconds)
    (145/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.064956584 seconds)
    (146/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.062898609 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073005165 seconds)
    (148/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.062516626 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070244377 seconds)
    (150/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.068907094 seconds)
    (151/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.063836355 seconds)
    (152/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.0618868 seconds)
    (153/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.061964569 seconds)
    (154/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063793924 seconds)
    (155/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09070693 seconds)
    (156/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.182770145 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07107008 seconds)
    (158/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.125654302 seconds)
    (159/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.061973257 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.062460306 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.130403562 seconds)
    (162/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.061818646 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061271163 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.062349852 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.062292957 seconds)
    (166/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.062102605 seconds)
    (167/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.20282891 seconds)
    (168/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070962524 seconds)
    (169/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06371584 seconds)
    (170/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.136657056 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142857881 seconds)
    (172/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.063356606 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.062593592 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141002399 seconds)
    (175/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.063732739 seconds)
    (176/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.062277038 seconds)
    (177/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.0632031 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.078164028 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092353843 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.095186508 seconds)
    (181/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.137106735 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.086944911 seconds)
    (183/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.064630125 seconds)
    (184/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.198568087 seconds)
    (185/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.061877504 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.128527804 seconds)
    (187/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.061321883 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.082575603 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08447808 seconds)
    (190/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070531802 seconds)
    (191/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062555589 seconds)
    (192/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.231522919 seconds)
    (193/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.140777515 seconds)
    (194/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.078474127 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064136985 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091439131 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118103955 seconds)
    (198/309) benchmarking ("sort", Int8, false)...
    done (took 0.16935766 seconds)
    (199/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.062995927 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063967744 seconds)
    (201/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076420254 seconds)
    (202/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.064464377 seconds)
    (203/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063925879 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145077777 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070935521 seconds)
    (206/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070756396 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070009482 seconds)
    (208/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.13652709 seconds)
    (209/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.062059717 seconds)
    (210/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062747666 seconds)
    (211/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118515888 seconds)
    (212/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.062422143 seconds)
    (213/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.071907904 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.074708542 seconds)
    (215/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.062095903 seconds)
    (216/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.078103518 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069497117 seconds)
    (218/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.061897134 seconds)
    (219/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.062428396 seconds)
    (220/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090854699 seconds)
    (221/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.065312022 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074106017 seconds)
    (223/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.062181803 seconds)
    (224/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.156986439 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.062982225 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074628684 seconds)
    (227/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064494909 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137920476 seconds)
    (229/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.07873617 seconds)
    (230/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.063254902 seconds)
    (231/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.062239162 seconds)
    (232/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063652236 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06248692 seconds)
    (234/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.061996041 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071236033 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110698579 seconds)
    (237/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.062474742 seconds)
    (238/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.194720253 seconds)
    (239/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.065561445 seconds)
    (240/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075487838 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.065091652 seconds)
    (242/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071395907 seconds)
    (243/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.061771627 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06250908 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.16204391 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.063916648 seconds)
    (247/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.063205412 seconds)
    (248/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.062967302 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.062723884 seconds)
    (250/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.062086428 seconds)
    (251/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.062993837 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.063464583 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125351115 seconds)
    (254/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.064038188 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.084946329 seconds)
    (256/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070402992 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.128817759 seconds)
    (258/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065852053 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.061906647 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.062634111 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122171541 seconds)
    (262/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088569976 seconds)
    (263/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064515588 seconds)
    (264/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.061929213 seconds)
    (265/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.069202783 seconds)
    (266/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088391004 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.064969389 seconds)
    (268/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.167122032 seconds)
    (269/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.063598833 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.1311447 seconds)
    (271/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.071305316 seconds)
    (272/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.063392598 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088126508 seconds)
    (274/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.064060535 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.062427878 seconds)
    (276/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063746025 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.06998782 seconds)
    (278/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.063039524 seconds)
    (279/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069518488 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.062655584 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.122036278 seconds)
    (282/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.062500035 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085658389 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.15927945 seconds)
    (285/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.164763193 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.063004241 seconds)
    (287/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.067109986 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.062235617 seconds)
    (289/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063529982 seconds)
    (290/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.069203678 seconds)
    (291/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.158092069 seconds)
    (292/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.062037095 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073650812 seconds)
    (294/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.063996708 seconds)
    (295/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066037335 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.063669007 seconds)
    (297/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.062271596 seconds)
    (298/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.061755497 seconds)
    (299/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.070790846 seconds)
    (300/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064265968 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.069464357 seconds)
    (302/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063402763 seconds)
    (303/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.165911358 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.083249304 seconds)
    (305/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.063936768 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.061641545 seconds)
    (307/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.061397749 seconds)
    (308/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.063179019 seconds)
    (309/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.062982926 seconds)
  done (took 31.910930392 seconds)
done (took 33.332122108 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081147257 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085119619 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.070788355 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.083229657 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079321735 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095460235 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070966485 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076014392 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078158316 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077468104 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077512623 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070049763 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072562511 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073367815 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07044162 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086598937 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077306748 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071873281 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071302004 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062552231 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071401444 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062924838 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062204486 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069529234 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074417133 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070130311 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073518616 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07232345 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063093173 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063329771 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068079687 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072276635 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065314388 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076679366 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072141173 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071715933 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073070281 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075496725 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062915796 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063584788 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073174075 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063131132 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07142859 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070110524 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.067670287 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069323433 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07158032 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075430826 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086449641 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066911328 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073505886 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074747587 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075404937 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068019797 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068365804 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071467985 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.068884839 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086298143 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07182836 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067614125 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073200344 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071960083 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069241895 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071415461 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071767781 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07368515 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.0760406 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069218959 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073252221 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.0699085 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062727055 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071332918 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06761433 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063227127 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074087073 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076116093 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061975771 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067003446 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071095886 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071403335 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.0629833 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067014438 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062158741 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067596351 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066695281 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069070736 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067897941 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070473327 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062801211 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07184602 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070297719 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071294001 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062234898 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076669714 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062845322 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068763346 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.063263345 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062879932 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062098587 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068179494 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062758481 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06741345 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071579136 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062054652 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.06735167 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.076319541 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063107688 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070445582 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062266469 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062872175 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074760149 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073807909 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063064166 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067233651 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062614271 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068516221 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062399005 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062876866 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06305266 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062663749 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067189756 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06268072 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0671015 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.06773318 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076010599 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062305437 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066878845 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066007829 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.061858307 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068266088 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063011176 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062221925 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.061466764 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.075836969 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06581078 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.061717062 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067404532 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065906169 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070469105 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.061063781 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.210419201 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067675985 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.067423748 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070022342 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062502128 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074407169 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06724876 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066815912 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062405954 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062805396 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06199725 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062789175 seconds)
done (took 12.242419957 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06197111 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.104768583 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072543254 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080109547 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076071796 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063679015 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068877928 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.083002407 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066549396 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.084041526 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085118671 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084141782 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.092691592 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06240245 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.063429977 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.064273818 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.061918588 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.070093633 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.07954044 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084765174 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.094069826 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063425755 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073256661 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.079301386 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.075152681 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.08188201 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064333102 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064238681 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065922711 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082597369 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086977189 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.063058396 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.064026281 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.079379427 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.078344128 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.073253187 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.064280097 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068613723 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.064109099 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063091667 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.065007798 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079033122 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068421767 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.070983823 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.064499088 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064889211 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064243718 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.068629999 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077826254 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.06815368 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072622166 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.077185786 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066146738 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063717685 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062151921 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.06913119 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063645764 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064566247 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063859746 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063828323 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06326279 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065467485 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064436746 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.064502852 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.067133675 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067959718 seconds)
  done (took 6.184357944 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079028383 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089161286 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.077965092 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.080320114 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.061474684 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.062526398 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063066659 seconds)
  done (took 2.034930608 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.062067912 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.0751589 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077506038 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078124295 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.070890376 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.081773704 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063810767 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093678103 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063494165 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.076486179 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.111946959 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081458958 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067376844 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075837639 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064088404 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.071963757 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063794693 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072057619 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073024639 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080093534 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068168493 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.091260584 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077075354 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.064235321 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.085155718 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069494754 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063515009 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.064310321 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065992509 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065302548 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065066805 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103331911 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.069233171 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076449738 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065520929 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.063579627 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070365138 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067432503 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067589213 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072248487 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069844367 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065227194 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062866042 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065326692 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066885518 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.068323262 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062864096 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065290743 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065184799 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.076109142 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06270193 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.069040547 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067176678 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069731994 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070185649 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069105222 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071851591 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065276202 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.076067398 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.072390262 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065312344 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073194579 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.072963711 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.070037338 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072779201 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.068346362 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068924657 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069929065 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.064708448 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.066049024 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065700158 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072958369 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.063860843 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.066010183 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066969736 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065796136 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068388232 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.080534128 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.080317017 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076692287 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065369481 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065501576 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068347032 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.080552501 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068968718 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065169933 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067074562 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063031695 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068901079 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065342273 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069853978 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065520039 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.072299388 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.06644639 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067498354 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073211054 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064154276 seconds)
  done (took 8.362327172 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06468987 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.063320675 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066866527 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065044238 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064765964 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065442774 seconds)
  done (took 1.937975184 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.085988213 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.063697561 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077159061 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065483314 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.099840297 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072385601 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.073063033 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074554151 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.078097703 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078401969 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072945055 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.076068565 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.072296259 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.066913895 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.072735719 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066859465 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072915028 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069270216 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077367588 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06758222 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.079902416 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067072032 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067464751 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076421222 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068131011 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066566463 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064788054 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077625917 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077023167 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077089679 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066774795 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067987797 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072153718 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07203104 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.071049283 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070668998 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064166371 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071142196 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066996917 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.06803732 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074893131 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067338375 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.068560517 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070975956 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07412485 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072363372 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071450088 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069569081 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.07269817 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071091778 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07095882 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066642369 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068029009 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070893603 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072462652 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074433612 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07073162 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.072882695 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.066940698 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07250679 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065304113 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067752467 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073846522 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.067548814 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.071791774 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070817272 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072948703 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067022911 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067589009 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065903938 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070949079 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065582564 seconds)
  done (took 6.662336751 seconds)
done (took 26.687764969 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.99618885 seconds)
  done (took 2.495716795 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.562567423 seconds)
  done (took 2.097123602 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.699949849 seconds)
  done (took 8.232424929 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.30292791 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.34508898 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.716779475 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130174646 seconds)
  done (took 3.066949211 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.70577542 seconds)
  done (took 2.244772072 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232413688 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224593765 seconds)
  done (took 2.008360036 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.344942043 seconds)
  done (took 1.875828209 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.080720499 seconds)
  done (took 2.611150662 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.230758699 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157986573 seconds)
  done (took 1.928402324 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.450395286 seconds)
  done (took 1.984960457 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.268588311 seconds)
  done (took 5.810625141 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23307806 seconds)
  done (took 1.811878773 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.230597981 seconds)
  done (took 1.77276869 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.727659654 seconds)
  done (took 3.266180159 seconds)
done (took 42.752249703 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078115305 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080919238 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082041544 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07863135 seconds)
  done (took 1.836948306 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.07049869 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.06633981 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.072429695 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072268756 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069320236 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070726774 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.07131515 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.06798336 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069721944 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.06823706 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067085801 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.068472672 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070782036 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.068407971 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.07068595 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072240837 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068171863 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.06805098 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070679916 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067840899 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070702384 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068338351 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.066061042 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.067067079 seconds)
  done (took 3.204768809 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.073786448 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.068936749 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.072850226 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069255304 seconds)
  done (took 1.83363283 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072143833 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.083493415 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.086586725 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.090829217 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074637596 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.075029466 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.083035016 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.08396582 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06346801 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.087684075 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.06587779 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064329611 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.065075957 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.085413087 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.082816558 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061181907 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062680832 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.075547669 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074067048 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076631175 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065979876 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.0634446 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074616542 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074420432 seconds)
  done (took 3.339721305 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075725032 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.062644902 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078195706 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090186911 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092053306 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063364364 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079821852 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092015919 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.140626763 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063680975 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069139956 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063620147 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105102112 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06340388 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07997697 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11015221 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113883789 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067293126 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097499212 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063583375 seconds)
  done (took 3.227584235 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073486416 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065082884 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066317126 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.062478693 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075032009 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071039069 seconds)
  done (took 1.968409952 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.063736827 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064031107 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064687311 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.064383633 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069471276 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.064716439 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063654376 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064848001 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065427949 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.064695252 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064050774 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.063601307 seconds)
  done (took 2.328380274 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.157728682 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065332467 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066292714 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064693832 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067576552 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064460266 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079565783 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066683901 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.083729637 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.064633257 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064804882 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067324564 seconds)
  done (took 2.46555135 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098532511 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128449778 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09461162 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071724922 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171798698 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095359311 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089776409 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.123503105 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095065128 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.067445388 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091678736 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133591726 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092339875 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.095691239 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0790654 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12325864 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107204614 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084909453 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111404974 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079052027 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.06788398 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130823132 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067112429 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089777867 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098511981 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.09436765 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106934286 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13060108 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083775097 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.088956039 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082159056 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07378112 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104957834 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.084495724 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.09778944 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093022608 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097171973 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085473295 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085458907 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120307145 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159888887 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101130005 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100193811 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134896668 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077953331 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.108727833 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079414322 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097666849 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103822723 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094390037 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075146887 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091115149 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.103793153 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100682912 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.081570123 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081467987 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119103357 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.097866249 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093406502 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076781136 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103605752 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.083234178 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248290989 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12084278 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141417637 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102801841 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139469534 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125006933 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097228947 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.089163019 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.092237469 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074554855 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109759034 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096351449 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134170335 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10815711 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096621171 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.091889829 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080056109 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104950199 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115065476 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095576769 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095796274 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148420858 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109140438 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091514043 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096059063 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.140580796 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071062769 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149234289 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089223802 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121249276 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098107633 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13812082 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088831698 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.080751605 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103518981 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102354622 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086800961 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100502922 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082146163 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112088879 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089651113 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099777979 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079595698 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087917667 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083894142 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.093827364 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.072426769 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10218995 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113130391 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112265475 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.071968444 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105892858 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086215413 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076574443 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092903214 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140451613 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081246047 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072576498 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1452471 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.089006295 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.112469157 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255621159 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.08289363 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116425135 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136244446 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089927139 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088358553 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073521408 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152201013 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073591452 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116150635 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079085552 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099320507 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103520038 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134164129 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137073384 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094376377 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076054923 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089121799 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.106770193 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086765109 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085039147 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076217577 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.109157899 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126337538 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.100665876 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080095898 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.092466517 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068711988 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115064992 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076308357 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085047756 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096995092 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.088519563 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.088550894 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142228094 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.083949085 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107388372 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095503481 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.064742602 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08955208 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156445845 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081367433 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.109284501 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117605382 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081624729 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065588959 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.094066165 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07092064 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106584639 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.089974341 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105392122 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077920928 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108393837 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068055166 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073544614 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133205039 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098831357 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086662349 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.129750959 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101210029 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.084992295 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.100763287 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.239939717 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096931306 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101721497 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.105626868 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10496661 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.072011013 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128447163 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088984748 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.075111786 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085906842 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076905593 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.075305916 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09787254 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113341788 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086188176 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098165597 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100379015 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08900998 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.107011942 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08697709 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077006004 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130873071 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073499421 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073594597 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087204848 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.103918969 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085938104 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.132409384 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.076838276 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135114019 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092557559 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081828387 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116592259 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.066273194 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.067628236 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.079426924 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089549832 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114487766 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077365871 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075877465 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117257898 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13107286 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095326509 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101878549 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.065964801 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088650161 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1339836 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.11090741 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079336494 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108557665 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082125712 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128322282 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094850781 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118223213 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104363163 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108745696 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089245197 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.078508195 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07133255 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085280813 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108416165 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08305629 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079157008 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064598009 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071473695 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090962964 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088087011 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107865963 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085072419 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284053206 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073966892 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10487433 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108445762 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108593982 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091779119 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096178436 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.092230477 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092046528 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092510661 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091994002 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.072831604 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124485237 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101392817 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075942615 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086455107 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094161765 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104137173 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107422557 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108252802 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091483335 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104710189 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119911548 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096847845 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080515383 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082311035 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.092948485 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.082961213 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079602089 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.102703947 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111502103 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096949076 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107719244 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.092058545 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.092693323 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108737402 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093786757 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08935872 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.119936085 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152874829 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.103201084 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103478413 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085880631 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109114412 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107097758 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114306894 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.113208604 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110138354 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070935792 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075948188 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.070183372 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107656616 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079781344 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120067018 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075926196 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106597359 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098461989 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080489791 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06711273 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102820404 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092638133 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.079713682 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121154385 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.110317905 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.070937315 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087691499 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102748964 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.231051745 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123907235 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.1011292 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099621029 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070666444 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090008563 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.072426246 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108776889 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.099277979 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.075608006 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.074635181 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.06816978 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105391612 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081419462 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107671862 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087467632 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098254948 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118046122 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135320533 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085217278 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094216501 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116186679 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111250665 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.079681622 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110905741 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133990414 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.118928484 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.079219524 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.082368694 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104293781 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103850236 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099341805 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07482959 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076817982 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107315311 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113581345 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065729899 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0829973 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068986329 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.082543086 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111943916 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095118489 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081700726 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116777049 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072510974 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106696768 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093995915 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122119487 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12082268 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144849734 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094879762 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083131811 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074814538 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123078665 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.068837365 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115773321 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112267033 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085762454 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.066591759 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081910482 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.093477451 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.624915903 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105225935 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.072368578 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130473271 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083207421 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264466002 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083817412 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.11947004 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092046319 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103756242 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09320861 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134171531 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083245845 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110278754 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.174139899 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113445263 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.108030288 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074215422 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.086030501 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074121852 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.079125751 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.082484396 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087423265 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109713174 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085464366 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106169047 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.080159727 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.108126558 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092009201 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089461213 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.099295179 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081384645 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140110633 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088269888 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125240368 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107756689 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078706215 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075092664 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.087650251 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102500384 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082801855 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09571651 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079015886 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.076931895 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154126692 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101411617 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083365584 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102682966 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.091526973 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.088775043 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092849723 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119379318 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110761992 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072502646 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.08841035 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104727192 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079526725 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075250299 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097947898 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.06988634 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090859831 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102018281 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098071768 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092023707 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.104583599 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07850935 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088517807 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110350138 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084002997 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.073889431 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073525775 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.073803919 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.073145127 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.253096173 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110150724 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117328738 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11081337 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092587084 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097266044 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.079208875 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.220221839 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080688745 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097415444 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.105586197 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076629886 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.131177566 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089028153 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089699491 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097021277 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10236407 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154905036 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074182543 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109969466 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093704132 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111196155 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086940172 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108687058 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097149689 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093158236 seconds)
  done (took 50.105015816 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.09063121 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.144329256 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.155567512 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078285628 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091589119 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11642385 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206337495 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188957951 seconds)
  done (took 2.749789477 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071957982 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077311011 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099763545 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.079320671 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065096041 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073041479 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.206394125 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080027766 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.064358988 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094200615 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.075046054 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.066295058 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.417798335 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.061940181 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.063435945 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.072453995 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.062812545 seconds)
  done (took 3.387800038 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.362175043 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.597217912 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.345008025 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073834651 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.034827483 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084459965 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.236462007 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132269046 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076959851 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534456497 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370730802 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.13074559 seconds)
  done (took 18.646918071 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071261567 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070533569 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.074689485 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.074385182 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070928626 seconds)
  done (took 2.028030273 seconds)
done (took 98.677292173 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.076365772 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.163169777 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.067141016 seconds)
  done (took 1.928764748 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.079528373 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.077301628 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.077829283 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.074945252 seconds)
  done (took 1.980912028 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.06955213 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.0719013 seconds)
  done (took 1.804640702 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223299729 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16090011 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090798924 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078594436 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075892342 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076354082 seconds)
  done (took 1.900424967 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.067960234 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.068167092 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.067918527 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.068966614 seconds)
  done (took 1.935433362 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.063833882 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062318368 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.064814185 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.067584749 seconds)
  done (took 1.922861755 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08003208 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079493145 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.074280944 seconds)
  done (took 1.897999013 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.091791399 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092550588 seconds)
  done (took 1.848705854 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.076178609 seconds)
  done (took 1.739735793 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.08391753 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094334639 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.116472936 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.098050401 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.1171864 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.098174956 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075423883 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076150986 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.070909322 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.0687356 seconds)
  done (took 2.56396051 seconds)
done (took 21.738249018 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073890018 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368061733 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.354722116 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081292626 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667939457 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.352332208 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986104269 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086859562 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.094802203 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064358396 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080522852 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.644748211 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.978537967 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326601699 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965753265 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325810391 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.646486149 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.063902001 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063038076 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064628761 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.972473336 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065840374 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066669719 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066576889 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.684152392 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372509493 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068432516 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328692252 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067186412 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070014223 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355451212 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069212425 seconds)
  done (took 16.11917064 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.066365969 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115931257 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068873033 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08004304 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.067677098 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066826137 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.06990603 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067327202 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108587091 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067247662 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083992311 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066159162 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071323873 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068124719 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084602723 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066448623 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069200627 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067452054 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067123212 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071404113 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085466491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06657949 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068066747 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068036003 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068035334 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080378105 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069202708 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066723288 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068081713 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070424331 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070617442 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069322656 seconds)
  done (took 4.025657754 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115975376 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125638851 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072598969 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105580722 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118364094 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068686211 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148326722 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091227057 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112975602 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068061081 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084291526 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067226875 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10283008 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069461491 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088345425 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067856468 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069391518 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068106361 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066329611 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065856242 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082931494 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065012722 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065566337 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065355339 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065626115 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080011565 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066159466 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064950933 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065464464 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067376938 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068979897 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066659451 seconds)
  done (took 4.284222258 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.066068929 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.068545329 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.07762155 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079242671 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.065424395 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.06789177 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068127031 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065272271 seconds)
  done (took 2.241006568 seconds)
done (took 28.342995232 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.074501373 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065830103 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069331605 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084524304 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.0697463 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.067145 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.061017253 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.070398141 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.067850367 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.067845404 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.068579188 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.062572045 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.066248058 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.061840883 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.069030789 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.062809 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.069674681 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.066992242 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.067880201 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.068307791 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.065128807 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.068303363 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071061512 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069013486 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.068874398 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.067417775 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.072075293 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.068303422 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.0642898 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.066094648 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.064961059 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.073568487 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069211988 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.070002278 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.062770058 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.062679784 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066950463 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.065292373 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.0695484 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.072093348 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.064605321 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.071681388 seconds)
  done (took 4.507646903 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.080374386 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.085378011 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.078089172 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077514597 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095644297 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.077279613 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.082926564 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.074169823 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.072715371 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.081629747 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.068856544 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.076241916 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.074407213 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.068013771 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.072410784 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.069857592 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.074503086 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069451248 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.073271348 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073542983 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.083322674 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.06775303 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075880594 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.074540024 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069703757 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075873598 seconds)
  done (took 3.669074437 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.069104663 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.080306549 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087211948 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143835528 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109331755 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075350723 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076874328 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087261611 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.093458113 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.064624415 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.067739691 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.089040117 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088000724 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.070077203 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.103629397 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.079502647 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079204765 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066083825 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070681445 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092283671 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083532357 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08068746 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.089843878 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079429385 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063165933 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.065597398 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069628354 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.076708795 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071111726 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07709651 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070158844 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.068307346 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066225656 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077658426 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069688383 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06497326 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089604748 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076015761 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076768398 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106231562 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072172631 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.064516115 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090729406 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125245641 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065107101 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.067767309 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067494535 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.074886423 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065303979 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091879589 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07729558 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.063512685 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.064260558 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.064635394 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064404798 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078436138 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.065359275 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.065614089 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07421149 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069089178 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084456526 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068535102 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08261312 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.063178165 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073339419 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.064279773 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06493427 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.062103088 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093776367 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069768198 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111028042 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.064508557 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.062496284 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074795117 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073535931 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.069131129 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.062907957 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08035891 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073752479 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.066795848 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07400072 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.066173722 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.066602276 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.094231441 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.064080032 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.063883671 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.062843897 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.06669022 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.066084327 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.063850569 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076598599 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.062615036 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.066272327 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.077136387 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063782072 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.065015183 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069167808 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067586735 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.064528008 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07748586 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.068190248 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.064662893 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.074776199 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.064280615 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.065944357 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076884827 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.070370212 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06308645 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.064935785 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.066639004 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.064434776 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067501435 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.066410484 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066173895 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.070179628 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070144018 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.06872007 seconds)
  done (took 10.381153369 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.155943184 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.147451466 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.065041323 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.141157811 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07196223 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.069356027 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.142742201 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.084600815 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.065607953 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066112997 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06533127 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.095689064 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.09159829 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.10353384 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068514687 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.063788845 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087522983 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.09577438 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.143246867 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.13981277 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089338223 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.072978288 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.066532261 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06500529 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.065074611 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.072086233 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.0790908 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.071583365 seconds)
  done (took 4.274862423 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.074825713 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.087582448 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070199567 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.076156071 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086416445 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066765889 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067436669 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067794638 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080530174 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076375746 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066576948 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07067138 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.070043906 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068939176 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066907159 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.072340073 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.072437399 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.065518532 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069664003 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071313353 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076248414 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092007674 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070760093 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065398134 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.067998085 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065453054 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076037197 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.078683661 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065480848 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.079687723 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.061698126 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.068995684 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078087877 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.064923733 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.063236884 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.063812532 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06378688 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.063770861 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.064081315 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062582846 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062349477 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06840786 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.062697172 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073308597 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077330282 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070664595 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.06680003 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.068490798 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.067793572 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063554353 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068401749 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.068382317 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.06890488 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.072751235 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069417373 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.067512569 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.065272309 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091387365 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.069764666 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06289414 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063292998 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062402269 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.0667579 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.07690509 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.082430192 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068209693 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064500837 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06577432 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070787465 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077439647 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064319025 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.068573448 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.061655386 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.064666309 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.066326456 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.066337811 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.064977294 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06254381 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.063507606 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064098499 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064540776 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.063624833 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.063680833 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.066497405 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062162375 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062622076 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.064242003 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.065789672 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073637595 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.063311667 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.067733446 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06485547 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.062662176 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.066635988 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.069061008 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.06660816 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.077075502 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075680787 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064781289 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06265193 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.076802208 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.066332174 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063008822 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.069733357 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.068125034 seconds)
  done (took 8.962166777 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086192111 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.065700607 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.081269759 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089491485 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.076901817 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071379115 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076649811 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067141537 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082298276 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065282834 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074197589 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06527691 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077248483 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076432743 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067851053 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076331349 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068387927 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082933631 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080748283 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065148044 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074679618 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.077942509 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.077858195 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079184976 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077269127 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.078332617 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.075676045 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.066601442 seconds)
  done (took 3.841495664 seconds)
done (took 37.313336105 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.771700925 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.019223637 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.758951073 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.982256051 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.993420596 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.772858694 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.867354084 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.752100625 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.863540456 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.810329136 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.077367119 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.23524964 seconds)
done (took 65.653411948 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.774212067 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.91733682 seconds)
    (2/2) benchmarking "String"...
    done (took 2.007986951 seconds)
  done (took 5.616479014 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.028358883 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.402424416 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.018068891 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.753543508 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.760471541 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.181726652 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.549583073 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.204562182 seconds)
  done (took 30.562086867 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.899020973 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.988191307 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.442944992 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.478491286 seconds)
  done (took 15.544435288 seconds)
done (took 63.309687507 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.760300004 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.754771707 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.79906214 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.780459607 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.757964987 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.757513475 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.755670137 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.757490294 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.77247275 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.782667096 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.755655872 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.771596137 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.756742284 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.791961792 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.236065181 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.805024607 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.767143318 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.759244543 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.771433753 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.785343505 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.756810908 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.756315723 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.227299216 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.910546836 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.370681861 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.839050302 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.018791542 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.147874589 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.760348778 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.75591686 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.821764734 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.832711091 seconds)
  done (took 202.769655301 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.757249267 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.647911215 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.724244548 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.769577192 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.216875562 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.938614655 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.858773824 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.263593523 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.763805708 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.769158768 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.968438416 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.757984505 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.981909764 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.701188322 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.79453727 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.79318161 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.850667363 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.008424628 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.7944765 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.915653757 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.775136827 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.779603811 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.71753237 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.972606981 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.783973118 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.859276152 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.904655442 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.759543713 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.937729361 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.839570486 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.76174698 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.791406298 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.974450866 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.628081979 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.771256162 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.771538521 seconds)
  done (took 168.999836124 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.945096101 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.770480807 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.757182962 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.812100087 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.881508129 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.760563047 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.423153165 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.76662366 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.443439496 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.764039898 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.757022895 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.758073566 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.757674363 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.769821479 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.85419259 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.760394916 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.773205275 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.758196669 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.783793568 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.762734148 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.757080718 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.757762697 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.75911251 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.758690311 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.757361547 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.757693222 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.029979609 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.016420319 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.760431512 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.760185437 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.290002684 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.771781626 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.7908722 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.764810096 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.849919382 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.759915626 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.815720334 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.871412158 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.759542918 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.978147332 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.760891208 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.843697297 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.761102728 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.759446662 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.823341123 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.772559716 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.764413778 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.760695309 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.765748585 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.826102079 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.005308141 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.76137066 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.883125461 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.24652829 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.759764855 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.759677854 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.76051445 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.760067341 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.349622598 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.759671068 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.760957076 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.76593105 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.766805 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.759549381 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.760668046 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.149736349 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.83287394 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.818689308 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.921481767 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.762430081 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.836813622 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.998713991 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.760731071 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.761129264 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.76139155 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.761697878 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.75983594 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.764385387 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.884025988 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.772715563 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.889653037 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.84629071 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.886930233 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.767347234 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.77007857 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.602250941 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.833741748 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.799007803 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.580813907 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.763548101 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.138633822 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.542936649 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.767006957 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.761264291 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.776273119 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.762753185 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.761029937 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.763538708 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.84454446 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.763290805 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.88707764 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.490208997 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.926914056 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.762894091 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.76272577 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.763029195 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.77035205 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.84392346 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.885968688 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.765995927 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.82699433 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.769854317 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.764429644 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.855444746 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.763489067 seconds)
  done (took 398.299258284 seconds)
done (took 773.769533757 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.337731149 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.308712503 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.416622103 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.326917503 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.308275943 seconds)
  done (took 13.397952323 seconds)
done (took 15.101104831 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.778743333 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.769970297 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.822660827 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.852978107 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.784540062 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.782642555 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.844262183 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.787104493 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.817499099 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.816318558 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.849653118 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.854975909 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.793626104 seconds)
  done (took 25.256815614 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.773059112 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.916565183 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.995381964 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.803896515 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.773786904 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.00084432 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.829784601 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.908839971 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.924039815 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.001915281 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.009716858 seconds)
  done (took 22.641743454 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.773312916 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.921374796 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.000196804 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.808799809 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.775092751 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.003980512 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.837230928 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.914075346 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.925798558 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.008638373 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.013012451 seconds)
  done (took 22.691836816 seconds)
done (took 72.29245261 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.768099986 seconds)
  done (took 3.468949812 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.79438994 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.932409823 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.767822504 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.766615684 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.768122527 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.770201395 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.766848502 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.76846062 seconds)
  done (took 16.037658614 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.77012245 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.767089388 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.767272476 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.76812662 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.767865752 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.769343446 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.768358069 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.767960392 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.768754381 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.768479042 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.768886923 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.769396766 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.769301139 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.769400338 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.770155701 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.770778813 seconds)
  done (took 30.005431274 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.771044297 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.769594609 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.770964099 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.76938332 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.769698568 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.767869989 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.771087732 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.76940516 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.768801957 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.769313521 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.769332216 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.769532968 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.768721549 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.770876674 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.769465557 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.770474301 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.77045644 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.771015442 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.773916492 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.769830762 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.769539571 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.7701578 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.770613547 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.770201145 seconds)
  done (took 44.186920461 seconds)
done (took 95.412149835 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.504318894 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.515669396 seconds)
  done (took 9.723733947 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.7722183 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.770976203 seconds)
  done (took 5.252096308 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.769615997 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.770731794 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.771258483 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.771178262 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.770265558 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.772763226 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.77074117 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.769761394 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.77098165 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.771432837 seconds)
  done (took 19.415082248 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.772631519 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.77060275 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.77183028 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.774134303 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.772015218 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.774333096 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.771669366 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.772096613 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.772855104 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.77166997 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.774275917 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.772026876 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.772980822 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.77171798 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.772557274 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.772391696 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.772136183 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.77260058 seconds)
  done (took 33.611608913 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.773493885 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.77191787 seconds)
  done (took 5.253025789 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.773632318 seconds)
    (2/7) benchmarking "second"...
    done (took 1.773607563 seconds)
    (3/7) benchmarking "month"...
    done (took 1.773376969 seconds)
    (4/7) benchmarking "year"...
    done (took 1.7728861 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.773429594 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.773864316 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.773103515 seconds)
  done (took 14.122631509 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.774105447 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.936793512 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.992080069 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.621484145 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.773628705 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.77476075 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.112895544 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.776055956 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.777401806 seconds)
  done (took 20.246782798 seconds)
done (took 109.3309386 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.585804984 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.772622099 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.025421263 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.82935312 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.806773574 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.066156308 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.771971454 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.052042222 seconds)
done (took 42.617517005 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.781448848 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.770281379 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.798342863 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.800601272 seconds)
  done (took 22.077435801 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.774247285 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.155225138 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.800306033 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.579342715 seconds)
  done (took 22.032539488 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.156975346 seconds)
    (2/2) benchmarking "read"...
    done (took 2.119527362 seconds)
  done (took 5.988592161 seconds)
done (took 58.589931652 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77463798 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.773933289 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.774825604 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.775160395 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.774820603 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.774939867 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.775172962 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.77482281 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.773697509 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.774353655 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.772701062 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.774429898 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.773972539 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774211568 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775421234 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77660536 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773946624 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.774638445 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77395212 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.774462431 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775878142 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.775324985 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.776177621 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.774735062 seconds)
  done (took 44.302763689 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.776155332 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.77604915 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.775921776 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.77702007 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.77558433 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.774591727 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.774518112 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.773874589 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.776541005 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.776915493 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776455951 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.777415265 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.775660499 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.777864057 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776895308 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.775940077 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.775082809 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776040593 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777586057 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.776918989 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.777172417 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776545005 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.777528353 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777114225 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.776349645 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.777474914 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.778096036 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.77641076 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.779157125 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.777588681 seconds)
  done (took 55.007741844 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.778048485 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.778446404 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.778319698 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.776407413 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.777768889 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.777398215 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.779221126 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.777557077 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.778724969 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.777311382 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.778122062 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.778702186 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.777123955 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.777406228 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.777872356 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.778998607 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.779629389 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.778765835 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.779682462 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.778440591 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.77862297 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.780343256 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.778799397 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.778555542 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.778822623 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.779875614 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.778884603 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.779729671 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.78053322 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.780720138 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.779795386 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.779639403 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.779567924 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.780863959 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.778911055 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.778276415 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.779528062 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.781546389 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.780300551 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.77993761 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.779783948 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.780151128 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.780283483 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.779180606 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.780210979 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.780752301 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.782165479 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.782639819 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.780309302 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.782003017 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.781191124 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.780935995 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.781430505 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.78222861 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.781640834 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.78167352 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.781043526 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.780102146 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.780892918 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.7814029 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.7809565 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.780306152 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.780812561 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.779174953 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.78239932 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.7812838 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.781465053 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.782089337 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.781813813 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.782534881 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.78128723 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.782336124 seconds)
  done (took 129.867573642 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.781575768 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.782431358 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.782224688 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.781633354 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780585944 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.782813461 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.782390962 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782936679 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78164721 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.782653759 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783350799 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.78195316 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783107254 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.781959998 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783112391 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.783200615 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.782740346 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.781771214 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.782248539 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.783069551 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.782646103 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.782974724 seconds)
  done (took 40.92883221 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783516191 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.783357877 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.78304593 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.78393336 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.78202746 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.783993966 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.783455567 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.78422707 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783984423 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.782797007 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783482503 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784863674 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.782105941 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783672342 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.784078418 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.783719876 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784049487 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.783908767 seconds)
  done (took 33.821129275 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.782510701 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.783855269 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.784803584 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.784207919 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.783422401 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.784843485 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.784984657 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.783824886 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.783291018 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.784487015 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.784603138 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783701644 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.784307524 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784702323 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783612386 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.784811393 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.784987564 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785113381 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786191764 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.78627198 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.786089596 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.78412463 seconds)
  done (took 40.977812742 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784872909 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.782746928 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.784721469 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.785920688 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.785722583 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.784496887 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.784956438 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.78612906 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.78521605 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.785146841 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785432598 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.78514371 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.786644981 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.786256286 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.785454249 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785551947 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.785662812 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.786835649 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784821059 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.789785445 seconds)
  done (took 37.42974439 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.785263167 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.786622751 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.787870512 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.785664003 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786634875 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.785471634 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.786887426 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.786294013 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.786263322 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.786737836 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.786712614 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.786616545 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787019107 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.788156977 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.785372808 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787203974 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.787812748 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.787015738 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.785335932 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787277159 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.788069604 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786454787 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.787616625 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.788051992 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.787663829 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.787515371 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787799054 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.78633534 seconds)
  done (took 51.75284558 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.789154086 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.789143867 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.789009613 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.786788925 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.787291738 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.789239883 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.787678278 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.787857757 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.789886529 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.788196054 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.789234986 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.789510742 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.78948237 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.786421068 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.788841996 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.788477592 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789476471 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.790269871 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.78806587 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788583732 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.788330341 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78970968 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.789032279 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.788932482 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789693963 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.788443669 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.788043337 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.78823358 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.791110661 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.788088417 seconds)
  done (took 55.384940425 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.809149174 seconds)
    (2/2) benchmarking "in"...
    done (took 1.80840659 seconds)
  done (took 5.340280506 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.790917562 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789434929 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.789433151 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.790534203 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.789585867 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.789314127 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.790564144 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789138794 seconds)
  done (took 16.041306629 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.789184178 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.794312609 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.790891602 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.790245233 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.789294262 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.794865123 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.791553548 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.789922148 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.792043413 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.790909966 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.7922688 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.794442058 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.797913954 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.795231531 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.790820269 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.79203142 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.791189007 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.792778561 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.790673405 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.789837446 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.793540559 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.791144683 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.790433448 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.790088004 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.791968201 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.792022363 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.800069145 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.791161546 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791881822 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.790385184 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.799385227 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.792662763 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.791451524 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.793841045 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.792594108 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.792328489 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.797123129 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.790524234 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.792411999 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.792300775 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.795148323 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.793570524 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.79455586 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.798136029 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.791130958 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.79079857 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.794739235 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.792444325 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.792421143 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.795788507 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.800424658 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.792843876 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.792441493 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.792969904 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.796600773 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.793452248 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.792915923 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.795018841 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.797938566 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.798834193 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.79493736 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.812651838 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.800661687 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.792180943 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.792874093 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802445396 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.816473035 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.796386216 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.793728393 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.793723934 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.798962376 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.793938609 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.794389932 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.793984738 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805532541 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.800074271 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.793104785 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.795187871 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.794400221 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.794398006 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.795205134 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.792828371 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.793124076 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.793882821 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.802335187 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.818227124 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.793145618 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.795457364 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.796811526 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.794567481 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.798776027 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.795951859 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.795536152 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.795326013 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.797914834 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.796150612 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.794406207 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.793486827 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.794892942 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.803715049 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.795053206 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.793897016 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.797839581 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.803009262 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.7953837 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.794803427 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.79652511 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.796115454 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.803404353 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.794849534 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.795228682 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.796201832 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.797492515 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.798795361 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.796310808 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.799171284 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.802319459 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.802393202 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.797270467 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.798715981 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.799881249 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.798446406 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805656281 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.819113838 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.796274039 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.799676544 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.801279052 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.808766703 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.799896964 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.797498551 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.79946467 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.797089053 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.798960163 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.798705207 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.798307656 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.797182524 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.796464416 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.797978111 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.797978876 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.796022137 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.799487339 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.799391523 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.799502233 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.795189443 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.800924859 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.798263534 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.798247322 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.8034504 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.797896305 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.796193146 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.797976957 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.800815592 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.800533584 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.796768387 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.79887463 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.797330422 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.798953993 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.797880149 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.800979418 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.798117432 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.798025809 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.799364195 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.803300618 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.797673256 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.798772838 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.799024141 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.797468399 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.797042186 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799823732 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.798577199 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.800481406 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.798836288 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.801652007 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.798480241 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.79812064 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.799298215 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.799515114 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.800920293 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.803297698 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.810544914 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.802626853 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.809195996 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.800916719 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.804548847 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.800228425 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.800658752 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.801123996 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.799029138 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.800612702 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.79918785 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.802015611 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.802732271 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.821627674 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.812174261 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.802836896 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.801992657 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.805272717 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.805603775 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.805159311 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.800777267 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.802205609 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.804156865 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.798862002 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.800910627 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.801109959 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.803438546 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.802112381 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.799927597 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.805439039 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.800910401 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.801668235 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.802488059 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.801626061 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.803280582 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.802879263 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.8011228 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.802655492 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.801118998 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.808436496 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.803110013 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.799896632 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.802058464 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.804134959 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.801495713 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.801268118 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.801644831 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.803271567 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.801138106 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.802435751 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.809207775 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.802634324 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.803154123 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.80310611 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.803545754 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.804058525 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.802520855 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.803587277 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.810516705 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.805646621 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.801957929 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.807259522 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.802615783 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.80415672 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.802606644 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.80477568 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.802967405 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.804670678 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.802693928 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.803752557 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.810158757 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.803316496 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.803487778 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.804503314 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.804569919 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.805518669 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.805288013 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.802173204 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80625925 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.81027473 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.807884587 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.805589819 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.805974997 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.806404367 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.805481191 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.808019011 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.80529186 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.814797486 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.812678594 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.805290549 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.804741442 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.803035116 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.807314498 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.8023705 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.804125307 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.81022549 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.805968378 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.806277399 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.808467866 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.804382379 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.803539182 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.810265245 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.806311129 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.807179676 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.806691824 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.805858629 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.805176818 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.804295794 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.806345615 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.805874404 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.807446994 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.809140891 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.805178536 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.805642076 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.804270588 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.813151431 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.807915213 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.805618184 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.812100565 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.806805775 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.806022484 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.805842018 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.805896271 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.806466233 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.805799987 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.806382018 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.807990868 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.804040212 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.81002562 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.816339603 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.809520922 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.814187323 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.811142497 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.815721271 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.80603931 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.806615604 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.80555585 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.810249129 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.813187841 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.805690357 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.806527187 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.813857663 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.808403806 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.806466348 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.812119808 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.808138359 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.805813909 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.80516979 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.808980943 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.81189844 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.80944194 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.80835704 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.807529194 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.808594189 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.808879468 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.811368271 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.810485533 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.808337418 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.808183121 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.808656209 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.807764741 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.80837264 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.809402362 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.80696358 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.808219225 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.81024311 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.815270748 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.807397034 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.809655095 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812905795 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.808492612 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.816957063 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.807978703 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.808688486 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.810749526 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.808182543 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.810477514 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.809616489 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.808449225 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.812190024 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.809933006 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.810757672 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.82064012 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.816540348 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.813550544 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.812803156 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.809780694 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.81035579 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.817834705 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.833507609 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.808602856 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.812108668 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.814095274 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.817638716 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.811927981 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.816183975 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.813240938 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.817455284 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.810515979 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.811046377 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.813303724 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.821584681 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.809706052 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.811230747 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.810956847 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.817140545 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.812803427 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.809236617 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.813099648 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.81288462 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.812943166 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.822609015 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.811911266 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.813902204 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.808722603 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.811250236 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.810083023 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.811894421 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.813203096 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.811338766 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.811172935 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.813259874 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.811472134 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.815803688 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.812036257 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.813826238 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.821904712 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812534812 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.810611859 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.814605029 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.811839154 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.815282087 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810995419 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.811636008 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.81316356 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.811593948 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.813616436 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.814371873 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.821107672 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.812964627 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.812158241 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.812419823 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.815905115 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.813343281 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.81305464 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.814640923 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.820955974 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.816866163 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.823064205 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.821349202 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.812617757 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.814860478 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.819093735 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.818960573 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.81230901 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.813199813 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.814373146 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.817166425 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.815531987 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.814175101 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.813372826 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.814991258 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.819588267 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.813775464 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.815217436 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.81400888 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.816112481 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.81659675 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.815693894 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.820401962 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.815089938 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.813963488 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.813077334 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.815932718 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.815281453 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.817029187 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.813600974 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.813817097 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.816537549 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.815031989 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.819736304 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.815071266 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.81567353 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.815594147 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.81599609 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.815744178 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.81610641 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.814496425 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.815566549 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.817945525 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.823126962 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.815727237 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.818196486 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.815650384 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.816979966 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.815729459 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.815451416 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.815679885 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.816739582 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.820826789 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.814852406 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.81595067 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.817369486 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.817115288 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.819350639 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.816677279 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.820382753 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.816531381 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.817811821 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.816956665 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.818633656 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.824349791 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.821040309 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.820654071 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.824486047 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.821828384 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.816533532 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.816014775 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.817593561 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.817626996 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.818801063 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.819471919 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.816141623 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.819225163 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.81794303 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.819004035 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.817095109 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.819264946 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.817390622 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.816677329 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.820301529 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.826549369 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.825335357 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.816355159 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.819670639 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.817781712 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.821713096 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.830629051 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.816727013 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.818729181 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.81882251 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.820377034 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.820400331 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.825367042 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.82787245 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.820287495 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.81874474 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.823618217 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.835859958 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.821685715 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827350425 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.847175887 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.821869099 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.817117304 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.818067883 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.821560316 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.817920426 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.821137058 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.81780318 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.825455053 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.818619943 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.819986256 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.826024142 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.817703492 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.820179093 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.818093411 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.820177659 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.824849559 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.819032495 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.826547959 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.820196192 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.820506678 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.821917031 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.821497185 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.821731074 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.819597274 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.819826071 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.821767846 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.820125435 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.818594153 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.827715044 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.820305148 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.823435613 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.831626255 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.83042004 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.819896715 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.820579527 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.819377199 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.824276728 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.823519447 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.820701401 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824767296 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.831280332 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.822994554 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.829835354 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.821659108 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.8212026 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.821505898 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.820651028 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.820723257 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.832176069 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.83225356 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.82327487 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.823217474 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.828922523 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.823531592 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.826832724 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.827066196 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.82203282 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.822867829 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.821264292 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.823432485 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.822261263 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.821796949 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.825547149 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.830183043 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.82295441 seconds)
  done (took 1079.419656908 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.822490124 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.822229611 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.822633464 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.822070128 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823695146 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.823051479 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.825001778 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.822615359 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.823542976 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.822590462 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.821936958 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.822422914 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.821416966 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.823488831 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.823404374 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.824471677 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.822428815 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.822504987 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.82340407 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824021682 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.822393235 seconds)
  done (took 40.035222785 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.823510271 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.82374037 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.824762095 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.824706211 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.823878291 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.823537745 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.82257745 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82261407 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.824159583 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.824997428 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.82454794 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824643483 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.825308554 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.826412284 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823294134 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.824808174 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.826351002 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.826051844 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.826287443 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.826118461 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.824586799 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.824537241 seconds)
  done (took 41.898043769 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.825096759 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.823589673 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.825793482 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.827472322 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.826531047 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.823772155 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.823926157 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.82300595 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.825116429 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.823836814 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.828204369 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.832423499 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.82359816 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.82628591 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.822132843 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.825259638 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.97145193 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.82233603 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.822654757 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.825188419 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.825219036 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.829390446 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.823593702 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.824114445 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.823688602 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.82207998 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.82146575 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.821352454 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.82192751 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.821648726 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.824372185 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.820971197 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.823528033 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.822384946 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.821500692 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.820561711 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.824591177 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.820787239 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.82243434 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.822797267 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.831704118 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.845825608 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.823543877 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.819254554 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.826493419 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.821078109 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.81982814 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.82308668 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.827935212 seconds)
  done (took 91.304219581 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.819294017 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.820262539 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.81779445 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.82034106 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.822311528 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.820125341 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.81750951 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.819053505 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.819143401 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.819494321 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.815169787 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.814471292 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.815292313 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.81495866 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.814914 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.812467843 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.812178975 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.815026503 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.813880326 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.81403318 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.815274746 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.813666502 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.812526744 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.813380351 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.814427262 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.81463254 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.813743469 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.814689488 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.811458836 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.813780105 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.813436605 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.815869135 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.813023084 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.814026537 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.815612398 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.813206472 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.815937979 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.814231834 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.816661811 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.814301042 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.815486619 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.815746899 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.815694149 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.815286356 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.814639398 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.815441001 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.815624396 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.815862642 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.81698223 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.815034347 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.815588837 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.815390746 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.816740418 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.81745854 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.814906896 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.814502146 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.814119727 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.81431542 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.816149394 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.812245006 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.812996587 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.810455475 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.810662157 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.810840487 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.813249923 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.808379497 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.809156328 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.806671651 seconds)
  done (took 125.16599955 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.806849588 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.807244544 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.809784155 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.808016047 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.809022798 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.808521374 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.809196026 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.807335724 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.807316308 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.808625563 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.807585789 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.808881602 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.809015185 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.809863252 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.808467966 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.808071707 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.806878439 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.80871891 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.809803223 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807476122 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.807903814 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.807959148 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.80940961 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.80886132 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.8095522 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.807951011 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.809666872 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.807917235 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808228684 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.80692758 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.80905675 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.809342447 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.810294457 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.8076948 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.809036737 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.808505087 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.809075366 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.809650248 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.809637218 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.808834297 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.808422148 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.810167191 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.811704533 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.808032909 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.809111309 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.810095363 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.808463704 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.807501073 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.810550556 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.809004111 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.809459401 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.809107453 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.810259473 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.808778967 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.809785298 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.810779505 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813458978 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.810071268 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.809641944 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.809049026 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.810006693 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.810025249 seconds)
  done (took 113.897425219 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.809803157 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.810232332 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.809397777 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.809799184 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.814305127 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.810318437 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.808513218 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.811252467 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.809296665 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.810313431 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811436135 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.809105286 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811971517 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812389938 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.810288813 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812733778 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.80993037 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.80943834 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810914212 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.811041027 seconds)
  done (took 37.954100338 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.811192019 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.811379545 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.810773942 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.809825612 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.811506861 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.812145015 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.810443117 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810571378 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812039446 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81377058 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.812138747 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.810919158 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809383458 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.808585376 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.810287761 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.810759907 seconds)
  done (took 30.717373127 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.807963833 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.807362348 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.808531913 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.807520337 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.8079226 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.80993841 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.805508506 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.808096127 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.80737259 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.807530808 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.807968983 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.80852231 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.808448327 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.808373945 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.810056658 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.807349915 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.807452523 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.807637482 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.806889128 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.807809083 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.806940431 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.805637094 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.805638064 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.806715622 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.806815674 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.805672075 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.80688688 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.811493622 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.810656328 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.805741994 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.809158839 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.808379861 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.808515773 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.807262206 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.807820496 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.806209732 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.809162362 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.809039137 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.80801761 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.808539132 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.804903958 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.806045581 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.806764685 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.80794418 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.805459252 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.808971881 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.807842442 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.808329435 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.810223504 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.807194546 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.807595596 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.805376815 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.808669984 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.813760467 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.806192194 seconds)
  done (took 101.176467819 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.805165724 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.80354817 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.806107733 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.806323938 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.804667735 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.809387231 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.808171617 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.809812065 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.805378315 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.805978167 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.806124941 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.804824099 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.807138947 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.806211851 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.807276673 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.805953503 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.806060235 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.803201808 seconds)
  done (took 34.25137299 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.807285527 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.809145397 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.810797324 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.804724255 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.806484404 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.806552965 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808029654 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.806577023 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803636755 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.805475905 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804826195 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.807090385 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804195621 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.806601826 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.805451868 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804904064 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.803491765 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.806407201 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.805581229 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.808242907 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.808955238 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804721319 seconds)
  done (took 41.478485646 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.807645075 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.812964322 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.818346324 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.828252273 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.825423622 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.840778516 seconds)
  done (took 12.669447635 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805142683 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805424238 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.805600269 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806867882 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807286542 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804126372 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802137081 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80859326 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808373998 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806572345 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803612207 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803894456 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805610662 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808130422 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807229998 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805331464 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807082204 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806064261 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807891069 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807184558 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803937683 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807483646 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804146463 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805363232 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804727198 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805997917 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803658871 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80741692 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805237396 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805504081 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806316708 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805036448 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808685717 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810349557 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803912776 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805027013 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806545475 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803950287 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810311373 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805413502 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.804031253 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8029359 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810150401 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80270518 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806601393 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803509832 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807238189 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805208732 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805487367 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80480054 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807922443 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805304846 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805356534 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806542357 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808429186 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807957273 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805034617 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806077562 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804597142 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807386052 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806151667 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804337813 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810820444 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807964521 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808864503 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806433725 seconds)
  done (took 120.947879603 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810780345 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.807580936 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805354273 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809492984 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812142697 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802875541 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803222462 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807849582 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806268034 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806447275 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810499611 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80556121 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806555556 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806658933 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810807455 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806853645 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809386687 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804633356 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804793261 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809355347 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808417578 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809958435 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80808911 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80634455 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804689002 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805401962 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802130626 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806679535 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803917479 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805137528 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806931683 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80739818 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807063151 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.807461449 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804528519 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80986572 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808053188 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807978832 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807345404 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808443154 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807581439 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809578593 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807582835 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810719527 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807598949 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806280901 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806147413 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808438294 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806895076 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810316586 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809451664 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810853832 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805085742 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810155894 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810144447 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809274865 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802573897 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806599259 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808106474 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807497841 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809183636 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808257303 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807095023 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806085368 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812115766 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808128174 seconds)
  done (took 121.031298742 seconds)
done (took 2504.516415165 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.834687556 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.824907229 seconds)
  done (took 15.399650648 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.982189246 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.93700335 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.826656505 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.84409457 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.82329288 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.854021702 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.828179836 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.82229301 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.828044563 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.823296217 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.824082025 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.010841619 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.881666544 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.826803543 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.827037915 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.915949142 seconds)
  done (took 51.759560404 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.826896757 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.826102386 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.836203315 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.825699087 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.828236183 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.84182031 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.853764728 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.831618464 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.884715753 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.838095504 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.949336072 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.83943748 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.821840444 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.888715785 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.840472782 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.842365671 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.919842318 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.901175751 seconds)
  done (took 35.146618101 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.904414148 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.828844017 seconds)
  done (took 10.492903336 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.831394493 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.826130651 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.855535665 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.841130995 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.833292715 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.838727898 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.836766173 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.831227891 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.850946009 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.827486905 seconds)
  done (took 70.12552578 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.828539682 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.827659102 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.824813047 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.825619775 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.823503121 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.824797016 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.824460177 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.8251832 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.516502921 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.86684838 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.833135779 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.83190952 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.825483007 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.821818191 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.824098359 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.849187967 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.929871976 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.822343492 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.819224144 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.831279378 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.827294413 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.885397893 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.83929198 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.829065057 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.855878172 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.51007259 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.833459924 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.830749441 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.948757104 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.821100991 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.824661206 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.034455432 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.830383571 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.290495609 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.104618007 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.830880733 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.837530984 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.834900594 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.824344503 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.944805925 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.824709109 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.82666562 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.79469287 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.082399052 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.922449045 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.870692095 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.170298725 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.828370968 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.826207682 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.858657736 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.829892978 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.825146232 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.845837444 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.345128619 seconds)
  done (took 130.51841783 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.823816857 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.167117598 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.990018669 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.829757971 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.106092879 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030388585 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.822739161 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.869317977 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.823658149 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.05094666 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.074144778 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.932294409 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.825190722 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.823848468 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.823620537 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.820766904 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.980249284 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.891314627 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.823625377 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.821252726 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.84923011 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.065079148 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.943851075 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.824802959 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.847269909 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.033751244 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.943050152 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.923659529 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.595518761 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.82042986 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.886248096 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.825848764 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.821554488 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.821889296 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.977249571 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.915720785 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.908134219 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.827232042 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.82670523 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.823765765 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.567389872 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.025495933 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.919588318 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.95023586 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.072453899 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.02764697 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.603747406 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.820756589 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.557506583 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.985085451 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.0547811 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.057795069 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.942983703 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.830297324 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.159325113 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.823070033 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.824752376 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.071435664 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.04240365 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.922895123 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.826908744 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.830863172 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.821259286 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.110805368 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.82706682 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.915461023 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.826943006 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.824714025 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.918698913 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.92951766 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.053682016 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.032908658 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.854893761 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.166523755 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.336631233 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.070125356 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.886912699 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.0750549 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.82571167 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.820873621 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.898902282 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.664299566 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.078632375 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.104022813 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.067384676 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.859345015 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.543132375 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.826309098 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.04788369 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.047558479 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.08579621 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.071620216 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.064151 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.154422501 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.824791666 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.82394171 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.159024616 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.95234675 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.827717529 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.169553766 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.055701554 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.386680257 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.851245871 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.131284393 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.956296372 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.831137414 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.469675229 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.828717009 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.053439462 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.862660115 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.826517719 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.825492681 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.047729374 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.81827726 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.827451963 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.466468589 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.885350087 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.833036237 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.057596963 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.831890957 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098729316 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.834007533 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.06492643 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.418074421 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.85735717 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.001986092 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.076539937 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.832683776 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.070579263 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.072408399 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.944287311 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.047239821 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.519895295 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.830599206 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.116963754 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.832468445 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.827439399 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.996625382 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.828762669 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.968564499 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.831284157 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.120997913 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.850128 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.065404462 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.828569303 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.081465462 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.859517728 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.87903343 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.837434264 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.96077902 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.833866707 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.745271987 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.984835865 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.833613549 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.829844151 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.39319616 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.829353578 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.97434783 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.056418709 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.851998778 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.901335636 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.498659629 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.832901996 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.913305213 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.855702392 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.220928329 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.829791804 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.082012132 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.83257619 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.831447046 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.830685115 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.1136668 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.013337769 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.835146985 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.830682151 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.736297171 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.829458583 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.827078173 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.012248325 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.182736927 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.8335215 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035150539 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.835938725 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.956158729 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.833203683 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.900089227 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.166484921 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.832080403 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.83023262 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.832002859 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 7.27327299 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.833388723 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.042593747 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.858053978 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.376877383 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.970647108 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.104904517 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.142739358 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.072148749 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.87575385 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.837981225 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.091999065 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.841753128 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.894417428 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.839570486 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.853365384 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062900163 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.839385069 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.038698917 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.103397535 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.706062259 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.880233047 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.83603277 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.833080931 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.835808061 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.979612084 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.917357615 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.840536511 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.834475264 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.947350164 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.952099172 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.043132555 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.835384789 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.950295373 seconds)
  done (took 894.208069754 seconds)
done (took 1209.388891552 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.829476513 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.836524212 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.838706738 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.83717535 seconds)
  done (took 29.105084706 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.833445658 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.834216237 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.837259754 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.834263742 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.834172367 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.832766872 seconds)
  done (took 12.773792044 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.923759574 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.835563944 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.836671187 seconds)
  done (took 21.363113348 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.914350768 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.243491707 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.975707852 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.272998621 seconds)
  done (took 10.167881345 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.836005798 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.836821703 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.836449125 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.836062665 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.836253257 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.84376171 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.841283654 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.838566279 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.83821957 seconds)
  done (took 18.314369587 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.626254658 seconds)
done (took 98.120011294 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.983725444 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.925352414 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.181757865 seconds)
    (4/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.226350642 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.901126967 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.926856861 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.67989999 seconds)
    (8/309) benchmarking ("sort", BigInt, false)...
    done (took 6.840298241 seconds)
    (9/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.697866803 seconds)
    (10/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.437307429 seconds)
    (11/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.680718659 seconds)
    (12/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.020212381 seconds)
    (13/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.83924084 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.896948321 seconds)
    (15/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.910188087 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.44460435 seconds)
    (17/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.484318068 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.473730261 seconds)
    (19/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.924640642 seconds)
    (20/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.932419934 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.996335496 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.829056678 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 3.576319393 seconds)
    (24/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.162734477 seconds)
    (25/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.32890304 seconds)
    (26/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.429220571 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.217109441 seconds)
    (28/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.641709151 seconds)
    (29/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.941077061 seconds)
    (30/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.526072636 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.168838022 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.579832885 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.926088365 seconds)
    (34/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.14993951 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.832460611 seconds)
    (36/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.344801267 seconds)
    (37/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.936617062 seconds)
    (38/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.131548697 seconds)
    (39/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.918853883 seconds)
    (40/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.318900961 seconds)
    (41/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.274191937 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.016981936 seconds)
    (43/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.938837128 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.871901471 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.012428614 seconds)
    (46/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.93283185 seconds)
    (47/309) benchmarking ("sort", Float64, false)...
    done (took 5.622536841 seconds)
    (48/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.897190538 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.935853086 seconds)
    (50/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.936653801 seconds)
    (51/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.068236605 seconds)
    (52/309) benchmarking ("sort", Float32, false)...
    done (took 5.523749276 seconds)
    (53/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.937788723 seconds)
    (54/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.258680358 seconds)
    (55/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.91236445 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 2.050508085 seconds)
    (57/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.078933548 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 1.97153119 seconds)
    (59/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.837080167 seconds)
    (60/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.22141329 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.839344737 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.84373819 seconds)
    (63/309) benchmarking ("sort", Int64, false)...
    done (took 7.228221705 seconds)
    (64/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.717868837 seconds)
    (65/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.147598185 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.182364886 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.147116664 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.136642246 seconds)
    (69/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.932893439 seconds)
    (70/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.221501943 seconds)
    (71/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.993308743 seconds)
    (72/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.857896084 seconds)
    (73/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.913078394 seconds)
    (74/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.234844188 seconds)
    (75/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.842826476 seconds)
    (76/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.954712655 seconds)
    (77/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.916291941 seconds)
    (78/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.838625916 seconds)
    (79/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.034317877 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.688950521 seconds)
    (81/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 1.977149803 seconds)
    (82/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.855773063 seconds)
    (83/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.97814447 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.843849821 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.879054205 seconds)
    (86/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.838839619 seconds)
    (87/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.874047669 seconds)
    (88/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.843592094 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.934131501 seconds)
    (90/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.866992631 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.016820748 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.580273769 seconds)
    (93/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.939678092 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.967064125 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.170637689 seconds)
    (96/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.638029923 seconds)
    (97/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.913661885 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.157042899 seconds)
    (99/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.919308673 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.838051765 seconds)
    (101/309) benchmarking ("map", abs, Int8, false)...
    done (took 3.711612765 seconds)
    (102/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.990524813 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.838344559 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.968088927 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.837341426 seconds)
    (106/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.84082377 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.964385941 seconds)
    (108/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.838792481 seconds)
    (109/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.865593657 seconds)
    (110/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.142925719 seconds)
    (111/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.868302173 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.837325179 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.857326445 seconds)
    (114/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.006467731 seconds)
    (115/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.012859338 seconds)
    (116/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.925317096 seconds)
    (117/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.863991461 seconds)
    (118/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.935417589 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.845675173 seconds)
    (120/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.944004864 seconds)
    (121/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.105093423 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.977519966 seconds)
    (123/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.83910165 seconds)
    (124/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 3.88131753 seconds)
    (125/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.918201578 seconds)
    (126/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.380883832 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.090603802 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.134311543 seconds)
    (129/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.930239748 seconds)
    (130/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.855527494 seconds)
    (131/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.836223629 seconds)
    (132/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.117268841 seconds)
    (133/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.642241486 seconds)
    (134/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.927728253 seconds)
    (135/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.953443686 seconds)
    (136/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.234637915 seconds)
    (137/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.842574227 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.898624238 seconds)
    (139/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.280883188 seconds)
    (140/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.320668187 seconds)
    (141/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.649783654 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.874484921 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.120723119 seconds)
    (144/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.654978453 seconds)
    (145/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.302846945 seconds)
    (146/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.970972015 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.127316921 seconds)
    (148/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.208136824 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.156988369 seconds)
    (150/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.840152868 seconds)
    (151/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.143246059 seconds)
    (152/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.589643555 seconds)
    (153/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.097849344 seconds)
    (154/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.986898185 seconds)
    (155/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.842664985 seconds)
    (156/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.086182634 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.862480137 seconds)
    (158/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.75347553 seconds)
    (159/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.975605705 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.231875984 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.83889692 seconds)
    (162/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.982712654 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.859045128 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.103136281 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.103370679 seconds)
    (166/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.470179582 seconds)
    (167/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.314929897 seconds)
    (168/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.865873149 seconds)
    (169/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.1701414 seconds)
    (170/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.12522791 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.845565767 seconds)
    (172/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.428469336 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.163345981 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.841743234 seconds)
    (175/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.961123907 seconds)
    (176/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.312858114 seconds)
    (177/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 1.973664976 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.235500308 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.719523402 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.834684946 seconds)
    (181/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.324686597 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.47854598 seconds)
    (183/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.945572822 seconds)
    (184/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.140210821 seconds)
    (185/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.23874434 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.966815972 seconds)
    (187/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.989340995 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.751898123 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.996510964 seconds)
    (190/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.855530994 seconds)
    (191/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.982529221 seconds)
    (192/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 1.994215383 seconds)
    (193/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.139234543 seconds)
    (194/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.834556422 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.246115437 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.622739685 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.848717309 seconds)
    (198/309) benchmarking ("sort", Int8, false)...
    done (took 4.720858222 seconds)
    (199/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.953654794 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.162637369 seconds)
    (201/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.330300104 seconds)
    (202/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.247701144 seconds)
    (203/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.04194458 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.842043816 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.908610005 seconds)
    (206/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.862804105 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.158147894 seconds)
    (208/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.145313008 seconds)
    (209/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.179741267 seconds)
    (210/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.841572819 seconds)
    (211/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.883157136 seconds)
    (212/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.00569619 seconds)
    (213/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.870765625 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.512644256 seconds)
    (215/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.750921945 seconds)
    (216/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.775206113 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.073204625 seconds)
    (218/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.045288951 seconds)
    (219/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.534068724 seconds)
    (220/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.865126941 seconds)
    (221/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.839816283 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 4.153715526 seconds)
    (223/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.161040106 seconds)
    (224/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.957777911 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.244199368 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.528709219 seconds)
    (227/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.33019596 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.845105976 seconds)
    (229/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.644520724 seconds)
    (230/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.848401935 seconds)
    (231/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.0391813 seconds)
    (232/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.134583704 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.104433782 seconds)
    (234/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.0377889 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.87457407 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.966505783 seconds)
    (237/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.107289093 seconds)
    (238/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.126127883 seconds)
    (239/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.988008631 seconds)
    (240/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.502143737 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.85069481 seconds)
    (242/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.885669898 seconds)
    (243/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.922789282 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.119575684 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.98543943 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.848009071 seconds)
    (247/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 1.979063914 seconds)
    (248/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.866539885 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.163940509 seconds)
    (250/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.23968068 seconds)
    (251/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.115741467 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.951189117 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.948618416 seconds)
    (254/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.26481826 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.024979824 seconds)
    (256/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.859369849 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.870356141 seconds)
    (258/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.844842499 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.527161875 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.17949805 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.974164302 seconds)
    (262/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.858141217 seconds)
    (263/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.061680057 seconds)
    (264/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.933892703 seconds)
    (265/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.856221171 seconds)
    (266/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.604700968 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.955127955 seconds)
    (268/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.070158563 seconds)
    (269/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.489999638 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.94006649 seconds)
    (271/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.977826862 seconds)
    (272/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.847741286 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.542067458 seconds)
    (274/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.851983874 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.244583932 seconds)
    (276/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.114873023 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.866570757 seconds)
    (278/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.149779225 seconds)
    (279/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.870278041 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.099736643 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.950308671 seconds)
    (282/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.093329046 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.811014558 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.85456342 seconds)
    (285/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.849468077 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.185112675 seconds)
    (287/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.929145349 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.163667219 seconds)
    (289/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.043512204 seconds)
    (290/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.862695028 seconds)
    (291/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.925724851 seconds)
    (292/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.935803305 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.68827867 seconds)
    (294/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.047412582 seconds)
    (295/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.906833752 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.846692906 seconds)
    (297/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 3.572658782 seconds)
    (298/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.035394255 seconds)
    (299/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.879056483 seconds)
    (300/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.847582704 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.952702096 seconds)
    (302/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.053929989 seconds)
    (303/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.859444633 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.842128051 seconds)
    (305/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.098694843 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.063359593 seconds)
    (307/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.114529209 seconds)
    (308/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.137135237 seconds)
    (309/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.275567909 seconds)
  done (took 1003.257761686 seconds)
done (took 1005.105694386 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.873916536 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.867369908 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.850629488 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.872177817 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.963333056 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.893640304 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.86481368 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.854264819 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.900791988 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.901260711 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.847420576 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.892584314 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.853401075 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.851965155 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.851179422 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.866718617 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.153442215 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.877172824 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.869957522 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.862563714 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.870307077 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.849919029 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.902263643 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.89278588 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.856126902 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.857164518 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.854109936 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.871457925 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.965664872 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.857088509 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.858209505 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.866381803 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.154176791 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.874774565 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.851955327 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.872305173 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.86582816 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.866298239 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.856977759 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.887507859 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.29251666 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.858302877 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.852988988 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.853486052 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.85269113 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.861001274 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.854847991 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.862916499 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.868658531 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.869743557 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.287305473 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.874146799 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.856714224 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.853816768 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.866603394 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.854834983 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.859578246 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.869473528 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.873672903 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.869315868 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.146464826 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.884428389 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.858316473 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.872039795 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.863705172 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.320730218 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.857991629 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.861692418 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.291888092 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.867375071 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.321930522 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.869987878 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.857717276 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.868200001 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.88671717 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.155601433 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.875895079 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.854175974 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.865376951 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.853670705 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.868219415 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.87101022 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.861300208 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.855792579 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.873308598 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.900391905 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.868526952 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.857124928 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.868553498 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.875914139 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.866216395 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.866521306 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.861605188 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.854881027 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.869445868 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.860792051 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.858921073 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.861310756 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.860722747 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.870133949 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.291215809 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.878052983 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.854162941 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.854867316 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.85453242 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.870192845 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.290398324 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.863502476 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.880751 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.905912285 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.857672493 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.146352931 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.883575674 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.873498097 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.869846102 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.859342427 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.856202143 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.14633795 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.312436192 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.877961777 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.858506925 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.855641363 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.873833316 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.859919507 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.855372356 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.159795701 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.884515411 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.872932136 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.981477865 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.870024764 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.891911679 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.855978281 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.862141864 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.90435743 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.875007916 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.891166697 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.862783439 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.874010686 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.877266958 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.855510677 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.87228693 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.871288136 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.858721782 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.867701782 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.856839414 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.905285149 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.873988232 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.874770299 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.87988456 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.982095495 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.857067867 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.148145226 seconds)
done (took 291.842409712 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.934965201 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.8578566 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.973297572 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.857677477 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.949413102 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.927682786 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.858139984 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.857999785 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.85689952 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.351669432 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.857622911 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.865064574 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.857231265 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.858902786 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.931588353 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.856979727 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.859709829 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.298700718 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.859314604 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.945350248 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.859040244 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.858614889 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.860668215 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.373796193 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.857005579 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.859954506 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.938823204 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.859515812 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.303571556 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.857602375 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.858892244 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.317810862 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.938801739 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.887021946 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.867191123 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.867011511 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.946662404 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.865994255 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.924927741 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.930675417 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.977835474 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.891511908 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.857673115 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.858102027 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.86219894 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.859656034 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.859741759 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.892597674 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.862057143 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.865992768 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.298728714 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.867831247 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.865340849 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.859668005 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.860533458 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.887947541 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.861300541 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.860079772 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.947437184 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.859925193 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.926304892 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.359388551 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.35369706 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.860703068 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.860999248 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.861834443 seconds)
  done (took 184.617610445 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.927160627 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.936842826 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.926145876 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.867843462 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.911535374 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.928416603 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.865798151 seconds)
  done (took 15.154688812 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.868722693 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.861311203 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.918592469 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.911354075 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.861016546 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.040989216 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.874567558 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.866537929 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.889175362 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.861777697 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.527676652 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.911569062 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.869881868 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.860662223 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.874178312 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.91792387 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.864262201 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.862976938 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.978554614 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.012120295 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.867574821 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.870694087 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.89097141 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.874111474 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.862885664 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.862887157 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.862663058 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.871252799 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.863829818 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.862981325 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.862298547 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.915130247 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.863274575 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.862425328 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.864326552 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.865493094 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.864555285 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.865102962 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.863202461 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.862500659 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.864236485 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.863650979 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.86494761 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.863398462 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.864225241 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.888351947 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.864000575 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.863647464 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.862942169 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.864044901 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.89102185 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.864260412 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.864758264 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.868320188 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.904664448 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.871555839 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.864545421 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.866315342 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.866541009 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.865519224 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.865827478 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.013500526 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.913669603 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.866675372 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.914339998 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.020155457 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.865648954 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.864965641 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.865310329 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.954054109 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.866018937 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.914064268 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.864467784 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.980236414 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.86544748 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.045165707 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.888722851 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.870015924 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.869856276 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.864870695 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.874234383 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.866298431 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.867974153 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.873272439 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.871759819 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.866545484 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.864807099 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.866550233 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.872820818 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.866275306 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.917700438 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.867786158 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.864948074 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.00751518 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.866622173 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.981773922 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.892344476 seconds)
  done (took 205.459256792 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.872383872 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.875308983 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.86790864 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.883035351 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.865168873 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.866647482 seconds)
  done (took 13.025692962 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.869155665 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.871346569 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.866540419 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.86613864 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.8666306 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.865845298 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.866620711 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.868912586 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.870570344 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.866550977 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.865832291 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.867317219 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.86914897 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.865729178 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.86614689 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.865952973 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.867565531 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.867814505 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.865624035 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.868470944 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.071830647 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.867288718 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.867272048 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.87220101 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.871338512 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.868793818 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.879412003 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.868714684 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.867312302 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.878955996 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.872398163 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.869104285 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.873499692 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.87717362 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.87262434 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.873202024 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.873540694 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.869237316 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.868765505 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.868965237 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.868936712 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.869619522 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.869116353 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.869717211 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.871807901 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.876936039 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.873628518 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.886234239 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.869766098 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.870602353 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.870508281 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.870343625 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.869362358 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.869900371 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.874428221 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.876193046 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.871439732 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.86906854 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.868434934 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.872996362 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.873206574 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.868920566 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.873286178 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.873917736 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.877796045 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.870919833 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.875059583 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.873646963 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.870132956 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.869196281 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.871562887 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.871202334 seconds)
  done (took 137.685249141 seconds)
done (took 557.745589953 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.014144019 seconds)
  done (took 8.813684998 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.023926488 seconds)
  done (took 8.919100012 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.43375415 seconds)
  done (took 10.235971682 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.887840224 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.890213907 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.882319077 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.880579818 seconds)
  done (took 29.349648044 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.205044891 seconds)
  done (took 9.004598623 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.882404707 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.874481978 seconds)
  done (took 15.631401239 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.947192048 seconds)
  done (took 8.74700325 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.223093411 seconds)
  done (took 9.043561025 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.886632427 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.873407103 seconds)
  done (took 15.582373299 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.871044201 seconds)
  done (took 8.666903132 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.126981229 seconds)
  done (took 10.014575015 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.877425347 seconds)
  done (took 8.721183655 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.898221943 seconds)
  done (took 8.697932963 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.088688038 seconds)
  done (took 9.888684266 seconds)
done (took 163.116377092 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.875586419 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.872473447 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.87555129 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.872384818 seconds)
  done (took 29.294644132 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.90522608 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.904649033 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.914629461 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.90567266 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.896791794 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.895722294 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.907136724 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.906745636 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.896588026 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.904420939 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.910299936 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.907737796 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.907784905 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.91745313 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.917050266 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.904980267 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.910047156 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.906536466 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.900085708 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.918752029 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.90639893 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.906097272 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.873973615 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.875884979 seconds)
  done (took 47.502438263 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.063216514 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.946048463 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.025847938 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.927369031 seconds)
  done (took 9.765435414 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.873476439 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.936802593 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.926660593 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.922467203 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.92757176 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.974867423 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.926247244 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.014877387 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.003852055 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.001576443 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.881666613 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.89332454 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.894806951 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.919613223 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.981875847 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.87356562 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.873295478 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.99239355 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.93626434 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.056152198 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.875108396 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.931061279 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.928260484 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.927099729 seconds)
  done (took 48.275874431 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.875904819 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.885070385 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.88259658 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.877661762 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.876862294 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.876588626 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.882942954 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.875695664 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.899084052 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.877965185 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.876567924 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.879993148 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.883214453 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.878434882 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.878172409 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.890299764 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.88987912 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.878049846 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.881248437 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.885544303 seconds)
  done (took 39.434192574 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.874859394 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.723596643 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.222149718 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.126171775 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.877967585 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.879497691 seconds)
  done (took 31.509691053 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.886464127 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.880415825 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.877060387 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.932136622 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.015090336 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.88074267 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.87789695 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.887429809 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.919760408 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.938152267 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.895503831 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.907084549 seconds)
  done (took 24.702103011 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.878924164 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.883205655 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.880520443 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.894297401 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.888186935 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.884974154 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.886369548 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.878740625 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.890828327 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.895411507 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.885317019 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.889602902 seconds)
  done (took 44.444374218 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.584645509 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952250703 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.87881066 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.75407366 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.341831005 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.431602183 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.77532987 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.591000156 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.349157719 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.80609596 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.08284457 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.879863002 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.961911097 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.880500403 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150514732 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.272131379 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074653801 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.123053075 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.550843173 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.911041805 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.082313615 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102862781 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.16956948 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8809574 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884425373 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.999536035 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.322124819 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.641841582 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.91491182 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.211399221 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122191932 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.835903682 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936702172 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.885129658 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.895688909 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883674201 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886317432 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152640006 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.003263972 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015002475 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956153627 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129849072 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886419536 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.302106564 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.585096082 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.20631339 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.996287612 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.881875149 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886073523 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882227401 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.807919418 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964645671 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.885678283 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888658445 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.582039689 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.882070827 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956966211 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.883695587 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084626589 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.688774183 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.567937243 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.884278007 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884040922 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.430740298 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.985454117 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.996287958 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.61272868 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266827292 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.30771674 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.979852157 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.884035839 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.883706147 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.025371659 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84519058 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.660065719 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922531893 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.020273253 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.900273755 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.523048239 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172667391 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.331181687 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.444741055 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.801726929 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168415927 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.598234927 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.866269948 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099421384 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.721364867 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.808901095 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105574141 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918346969 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887360105 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.147161751 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.661850183 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.993870896 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.895737702 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317342101 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900622864 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.889775755 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886211524 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.099618857 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288072457 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913833258 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.00479627 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90137088 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.969273885 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811297031 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.898633396 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.886329278 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.790125232 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.891671828 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834032259 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.930221144 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.570345312 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.923086348 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.825131158 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888008296 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.994272551 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927519682 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.843937864 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139161043 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.191971885 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.573188361 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86154165 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.015880319 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.281909619 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112883039 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.889124527 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.099219195 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419492752 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.317172525 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.933405372 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176255396 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.945515793 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.178017906 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315413405 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961898461 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.681479237 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.511867576 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.102331953 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899273002 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.886977026 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.889161175 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892219171 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822938868 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.535244996 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.284653724 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.055106873 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.100836786 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.228527695 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.867163738 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.849448903 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193138593 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.024797752 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.880441501 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.542967753 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.311851893 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.697987625 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.913726656 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.028247034 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.06590992 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.847122461 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90157781 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963515084 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903013406 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.899357425 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.254085933 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.251130042 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.888028079 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.889351196 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.83614909 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894698574 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.889364881 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.421430962 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.855477781 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.89339699 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.899354534 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.761887407 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9622357 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.89109351 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.891434712 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.424970158 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.392363035 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.892315256 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.552532986 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.02635416 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966779216 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164536318 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.280752084 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018264354 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.590022943 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.323815266 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.002698459 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.589950593 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.815766254 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.8901332 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.827677922 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891662917 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.894414872 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894554496 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.075227071 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.166049468 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189762568 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.36526229 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956588913 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093138044 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.622937636 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844675241 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.891958597 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895912206 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.893306393 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891520037 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.403333602 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.184761744 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.989447158 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920790076 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.895290161 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019331106 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.901980959 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.81694681 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.891026435 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.893211784 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329225948 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.9184141 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.838323048 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.221671993 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.787663362 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011798851 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939500551 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.903530375 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897123619 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.615656487 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.933373199 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818712324 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332206572 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925833452 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.659566483 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382342142 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.45286991 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184194356 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215238777 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.22147412 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.964417428 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.10454317 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.976790698 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.948413401 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.980350997 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827692563 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.820781726 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.549171838 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.228528652 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16052646 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90362207 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109481046 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.610413339 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123732429 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923168463 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.575867003 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196678997 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.867704963 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910503516 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.237780577 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999210943 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972887765 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89773148 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.843294053 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.233257372 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93421474 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.594611938 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909137405 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.244308436 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.328095763 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.107741094 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.283940106 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101750595 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.903074459 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249137047 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.103256004 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.930831978 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.901387751 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.882382838 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.109136033 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.472014805 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.75522348 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899714056 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.053345647 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1890081 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.800301917 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.897660719 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.049503089 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150833444 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895750797 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.278994117 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266848273 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.002461933 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951504578 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121353867 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.586894388 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19793085 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.447959334 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.383441967 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903154478 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.821655908 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.597241531 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.098829554 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.900110103 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.860689097 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116961733 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133579193 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.577876637 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117338034 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.140130504 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.907946165 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.167082517 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972817557 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.994866255 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.239500867 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.331486256 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.145168909 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.123805238 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436639025 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.114275545 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.355560887 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.061296982 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.898073398 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101178088 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114490678 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.112394872 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.291273482 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069983795 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.607941972 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.902538887 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.104709281 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194816148 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959573022 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.296992504 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.066839076 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.98121543 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904978235 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963006218 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.904489896 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907982207 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.296965874 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.427787727 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.910225121 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975972794 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.011428955 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.409122008 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.901555954 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.904532734 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169571741 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250070676 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.231723948 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885918952 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.898117976 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904180408 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026879156 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.823624798 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900401918 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165888012 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.897822862 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309769721 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.040675568 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909923992 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.229539304 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.289393734 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.581188657 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.86073884 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90490654 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124233105 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209826119 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.083042881 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.011296434 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168049587 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.238028622 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.931309204 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.292156173 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1449254 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90471383 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.776685993 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.905008253 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038323895 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.105105261 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182885182 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.410585 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.680588913 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.169801832 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.747577258 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.905747981 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.630074025 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172930027 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.174683398 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.955212771 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967249337 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907604022 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33490872 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.620623793 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034481291 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.761949765 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830447231 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.901148595 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.237463208 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.144520754 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.613959505 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.906644155 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18418985 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207286191 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176754149 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.958961124 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.762250214 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118941807 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906070555 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.914218865 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139746966 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132857086 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150523997 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907127536 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.90835064 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.710472404 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830758041 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.906014885 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956654701 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.130590366 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924945606 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.417973332 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.603895221 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188910323 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953235754 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907718437 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.177300214 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.433352408 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.461904161 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911303686 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125159562 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.905986566 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204022181 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.907007013 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.340974493 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206604078 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.907617672 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.446964085 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.148771965 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170574257 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838154597 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915376412 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119959625 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.769843987 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.907487711 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.887992478 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34304998 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136454566 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.640645308 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.463334485 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.909738877 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.910594248 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.346681191 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936242256 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.348724504 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933060819 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923630508 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.427360233 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.620181504 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.19519809 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.151019492 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.445811358 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.490348898 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.908488695 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.907556571 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9091169 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825704976 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.09022877 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.093215756 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191995508 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.942028963 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349206351 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93974211 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.315840563 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025374654 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.070562269 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943274992 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.429092355 seconds)
  done (took 1670.977002291 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.910574325 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.949569844 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.927889353 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.915810112 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.917453988 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.930417117 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.987684108 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.913154774 seconds)
  done (took 57.288664382 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.90923068 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.924676146 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.914198787 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.909948749 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.921409804 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.909023212 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.067765022 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.915217521 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.912025887 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.912245737 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.905942509 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.906376285 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.186333957 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.920192127 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.904836183 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.901478069 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.905200167 seconds)
  done (took 74.76864119 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.902129997 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.13808412 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.963840502 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.905905447 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.852969079 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.913255758 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.853250169 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.920781791 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.894845201 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.126908679 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.188943162 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.913698149 seconds)
  done (took 90.405847628 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.890227347 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.885868113 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.882964796 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.883113268 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.882826781 seconds)
  done (took 11.243068841 seconds)
done (took 2181.450143755 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.11085887 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.939637322 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.977114575 seconds)
  done (took 5.726608669 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.028882089 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.070441918 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.182831478 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.943065531 seconds)
  done (took 10.041360446 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.181866205 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.25343616 seconds)
  done (took 6.242369252 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.225846692 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.877396914 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.244012382 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.876735069 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.879129208 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.880645965 seconds)
  done (took 22.446583221 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.876838428 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.875728584 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.877017185 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.875876704 seconds)
  done (took 9.310293548 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.874420655 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.60137085 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.879005505 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.890114592 seconds)
  done (took 21.050073382 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.021885558 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.988972213 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.018018446 seconds)
  done (took 7.834323274 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.015954653 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.718177083 seconds)
  done (took 6.540152474 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.0228646 seconds)
  done (took 3.826298915 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.901398024 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.143920713 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.370055026 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.802739827 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.551049162 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.978593722 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.25019088 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.129362063 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.29663393 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.331927894 seconds)
  done (took 25.560194384 seconds)
done (took 133.849827357 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.39250311 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.904610525 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.078877236 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.254472034 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.110182455 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.07696498 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.093970168 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.257009199 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.944724352 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.923295682 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.243188265 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.106640597 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.04106922 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.891449263 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.046723776 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.888663266 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.09669464 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.246189645 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.91504651 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.138318642 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.090306618 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.879705672 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.075667708 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.89401557 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.092258714 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.011185989 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.417791755 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.879543967 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.048347394 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.433148766 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.009523366 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.27452167 seconds)
  done (took 168.564163684 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.854058717 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.852867003 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.852683684 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.851677439 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.416090196 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.850283048 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.848296178 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.850387213 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.331104472 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.310387172 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.845054568 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.392319724 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.846125044 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.845293761 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.845192369 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.842748782 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.486120247 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.839999237 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.839650492 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.837706855 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.837741288 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.239436918 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.836802284 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.253126253 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.489246112 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.83467671 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.833360873 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.832733702 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.831905262 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.83176437 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.832730359 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.832767434 seconds)
  done (took 208.911598434 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.832872417 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.83316352 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.833105464 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.833857704 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.833464489 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.833303489 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.836396292 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.832972653 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.663235454 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.647549102 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.829850655 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.83006124 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.832094114 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.829143472 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.8285625 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.829144079 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.827512927 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.829961831 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.830283058 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.828911244 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.830862215 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.520806729 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.827547685 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.54554669 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.824217595 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.823592449 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.825246248 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.822064622 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.818345966 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.820247026 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.821804883 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.818716297 seconds)
  done (took 219.339972408 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.059494061 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.819634474 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.821211197 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.737902265 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.824189069 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.819099753 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.805473178 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.065652607 seconds)
  done (took 18.704918708 seconds)
done (took 617.344096007 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.176077402 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.014954162 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.994729937 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.839835881 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.064122752 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.881401438 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.829773569 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.899456073 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.668373289 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.911245266 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.469489319 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.853602587 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.569899578 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.857338729 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.952097132 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.885060063 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.409454378 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.514211738 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.971123809 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.883448076 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.011881457 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.755972997 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.90802189 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.697491142 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.480957865 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.792328376 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.873962394 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.411820122 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.832879263 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.983246442 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.512348702 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.145607434 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.842191285 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.824317519 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.877156358 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.857568634 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.065336095 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.838564921 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.956275777 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.540209896 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.878592365 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.567080493 seconds)
  done (took 100.050845408 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.810308176 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.806799694 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.806834561 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.807874835 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.816194188 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.80773338 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.807415546 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.807248213 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.806989744 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.808296935 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.807224485 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.816346533 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.807771973 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.816782956 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.809212731 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.808147303 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.808559572 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.815789295 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.808963669 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.809961638 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.810082055 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.809362947 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.804376249 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.810262903 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.809363383 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.809045612 seconds)
  done (took 48.797161568 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.804428099 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.975234654 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.05175985 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.825533565 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.805764299 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.807129875 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.822791498 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.812743512 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.806169243 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.806914643 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.908462729 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.813409505 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.823511284 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.050828513 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.824186114 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.804830638 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.8057363 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.805876541 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.985783431 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.825618476 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.825122745 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.814922611 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.825812725 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.823768708 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.808542623 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.807495833 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.810537238 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.254098433 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.820088955 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.912273644 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.883495317 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.832438714 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.200152858 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.06295392 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.861167992 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.817599145 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.805559731 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.914978147 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.817116882 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.805529672 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.8229539 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.816641672 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.050415895 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.340360135 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.824865345 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.806000446 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.263895223 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.929631828 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.850976752 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.819874964 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.055916401 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.82417876 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.807041373 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.806691199 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.842593278 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.821470663 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.806951218 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.123975829 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.824300375 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.824981692 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.815424879 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.808217207 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.990978099 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.819968449 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.980489756 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.818758662 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.813416015 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.808210061 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.052352099 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.823683351 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.351044285 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.823011588 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.806585523 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.912767361 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.989463135 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.291566215 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.824104869 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.990808931 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.213427189 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.834523602 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.818259664 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.242192951 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.83907874 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.81801398 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.808263896 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.808617423 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.806742698 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.850138165 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.823295132 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.261283238 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.348804669 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.139588898 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.83812748 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.822779334 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.808519407 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.121306686 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.81994615 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.8078038 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.042794752 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.359371519 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.826677782 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.814413767 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.329050352 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.826225731 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.827158715 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.820863298 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.062102883 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.82574207 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.851388823 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.809170456 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.8158558 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.812179834 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.8269284 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.820552648 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.809422455 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.320105215 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.933971904 seconds)
  done (took 225.15953436 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.811049243 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.808654768 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.808228714 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.810008636 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.808079054 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.809461538 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.807518098 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.806187222 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.81027204 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.80809384 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.809362954 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.810552055 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.811772468 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.813149136 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.857038648 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.812059868 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.410182258 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.810590425 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.809020694 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.811017587 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.450758424 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.813069038 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.80818347 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.809608252 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.810661793 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.80974784 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.816967965 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.852897162 seconds)
  done (took 165.759004519 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.811541314 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.924581697 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.832892426 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.839571318 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.819655456 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.810880904 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.908543867 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.832663767 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.821376166 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.810889023 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.811486303 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.871925309 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.825357762 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.909904101 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.846067533 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.923012798 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.920729676 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.823092746 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.811736582 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.81154431 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.840269936 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.825474801 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.872538729 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.939280387 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.831230303 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.925457476 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.836440249 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.813314566 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.812602115 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.925017258 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.829711519 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.873284101 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.843193746 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.833849816 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.934604908 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.932577267 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.920799495 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.920806888 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.822561883 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.813608583 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.814051018 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.816577288 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.9263485 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.835709784 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.814498913 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.930353432 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.836818613 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.81365961 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.813243321 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.814865398 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.826872059 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.836234427 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.882801921 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.948336346 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.850000599 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.839664394 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.912694021 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.951339569 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.81503577 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.913390829 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.82776159 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.927644831 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.838658984 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.817618213 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.816797276 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.819633485 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.84502584 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.922232577 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.924043328 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.826654157 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.914199427 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.854310367 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.823706527 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.815864486 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.815269423 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.928563204 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.936325372 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.854313953 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.851397701 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.845600922 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.825350479 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.815843984 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.817866471 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.832345333 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.824124048 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.928746798 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.93676481 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.822187884 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.815844877 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.816522664 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.815953257 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.840689682 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.936773891 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.855074696 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.927305873 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.88260945 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.891977015 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.830183347 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.828900075 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.822579872 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.878890821 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.830284844 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.828278923 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.126946986 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.87664456 seconds)
  done (took 197.067109302 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.195590243 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.867361356 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.876833966 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.136052367 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.203226962 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.762014698 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.862368505 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.869667161 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.903490269 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.092669307 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.935964708 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.883802985 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.851254064 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.837988234 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.862589043 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.898837766 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.872435452 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.21124488 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.078084252 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.368707071 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.859619425 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.145815872 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.197602746 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.46476331 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.913221427 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.284324538 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.456141744 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.032592992 seconds)
  done (took 61.680102835 seconds)
done (took 800.265325739 seconds)
SAVING RESULT...
DONE!
