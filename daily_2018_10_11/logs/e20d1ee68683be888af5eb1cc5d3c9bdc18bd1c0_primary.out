cset: moving following pidspec: 28935
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.237063126 seconds)
loading group "string"... done (took 0.462800654 seconds)
loading group "linalg"... done (took 7.58189333 seconds)
loading group "parallel"... done (took 0.174112728 seconds)
loading group "find"... done (took 1.169546482 seconds)
loading group "tuple"... done (took 2.11272035 seconds)
loading group "dates"... done (took 1.345449321 seconds)
loading group "micro"... done (took 0.247949769 seconds)
loading group "io"... done (took 0.661309011 seconds)
loading group "scalar"... done (took 42.222453036 seconds)
loading group "sparse"... done (took 12.700599667 seconds)
loading group "broadcast"... done (took 1.139265463 seconds)
loading group "union"... done (took 14.221288924 seconds)
loading group "simd"... done (took 4.9182048 seconds)
loading group "random"... done (took 9.733947452 seconds)
loading group "problem"... done (took 2.003311591 seconds)
loading group "array"... done (took 22.482714531 seconds)
loading group "misc"... done (took 1.441512951 seconds)
loading group "sort"... done (took 3.587647566 seconds)
loading group "collection"... done (took 19.445112186 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.514219264 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137512191 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.134097958 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148151265 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203280452 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143010611 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157081571 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113780447 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.986928004 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181860964 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15361841 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.512201553 seconds)
done (took 5.134983412 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.229409812 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09579312 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105199392 seconds)
  done (took 0.879188426 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07847964 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146551282 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095315399 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078890084 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097112109 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07859989 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096627358 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077662324 seconds)
  done (took 1.355643553 seconds)
done (took 3.229190529 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.731923065 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.276553735 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203235464 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461243 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.197406311 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.21337285 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685787023 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.350941696 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252018821 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099585932 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143947353 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388094429 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136307321 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.688644744 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091067254 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124047485 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177146885 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.453456675 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082107493 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110098567 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117244729 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141477622 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.12821891 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090576305 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184529136 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081392933 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194469908 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108804298 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080678049 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.291073883 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.2013844 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692440018 seconds)
  done (took 10.903065028 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111687169 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133431698 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097257201 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138202 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133793689 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099299856 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08455433 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095970131 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12121416 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175473138 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130527163 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121933146 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094905999 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082585459 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115637791 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.242689141 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119096797 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103420334 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100481856 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103193044 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121825936 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112843993 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108250275 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092933363 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167467205 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220916105 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111782786 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125197884 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095541673 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115012375 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144670574 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143315116 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095880966 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079905417 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170866976 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123915503 seconds)
  done (took 5.124523994 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187424289 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120005399 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167845617 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.16240656 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140978719 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158510566 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112366259 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245197583 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.122562574 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165004452 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141849779 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115226991 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080418218 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098501694 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094996868 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.644227441 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163924174 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134526637 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114366843 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103657574 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083414835 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.372706788 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103136107 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079596258 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098362184 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065356602 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158083323 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098762714 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.142251701 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.1206893 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082027128 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139519175 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.208520235 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10991827 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.129375686 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137311828 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078673293 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098427262 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179334775 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10409541 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080028817 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121234567 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133631899 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117972374 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099653447 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096760521 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204254912 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095548914 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09787705 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.976275224 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181446634 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089081571 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095244513 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323649791 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09839088 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100344123 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077311571 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.293845739 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.185244491 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09853978 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080020681 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097268901 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080788716 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.406116139 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080584894 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.850920187 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087228637 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106136951 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082140563 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096301735 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103776356 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086772606 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114208624 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079712808 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098847298 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078861702 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096272636 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080582396 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094597469 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106766629 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085412913 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097720624 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147677816 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.094237493 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097941787 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128464231 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.09928355 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077131378 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131231174 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099444076 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080944881 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132915159 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098654649 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090906703 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.121762742 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099105782 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142721138 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080604635 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.201338289 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080589439 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127240433 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.07870005 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100174939 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129833887 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11358286 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098231413 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085763895 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094818647 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07777859 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164762468 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080018322 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097890326 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081568283 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110711054 seconds)
  done (took 22.78578666 seconds)
done (took 39.497488452 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.327816956 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101787857 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101705613 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101606058 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099696578 seconds)
  done (took 1.485098278 seconds)
done (took 2.214153373 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.290045329 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173064628 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095326844 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166486357 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093581457 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17411259 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158641277 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111295211 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.21878745 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077158649 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163065118 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093443129 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076205639 seconds)
  done (took 2.64301304 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09482033 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114224465 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081962688 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111576031 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077276086 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110629922 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091681951 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116167317 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108628415 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084765193 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0933243 seconds)
  done (took 1.807522589 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093546402 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111914985 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081095657 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10951652 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07683647 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109888418 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092229243 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115198157 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109171887 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085728753 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093447137 seconds)
  done (took 1.800546587 seconds)
done (took 6.967681066 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090756939 seconds)
  done (took 0.806923869 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.925339564 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.043780262 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112182483 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149906443 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.299239947 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.19332667 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.477586016 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125545775 seconds)
  done (took 11.251359124 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.143780761 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083801983 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104404919 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082475673 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100087566 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086620673 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098622149 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100800172 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085558459 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099212626 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081497215 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100523421 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101501672 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.082932001 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099767807 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086076202 seconds)
  done (took 2.317681859 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118964309 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117950642 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105896089 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109228563 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087468201 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104294627 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105502884 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089185499 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101297282 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103042654 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090497474 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105288152 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10393142 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08015903 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104802637 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106975793 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086087901 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105307861 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105758385 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089679555 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106070536 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095350136 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087512335 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105992686 seconds)
  done (took 3.247483044 seconds)
done (took 18.346975053 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159748286 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107990673 seconds)
  done (took 0.994071761 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09485145 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112807709 seconds)
  done (took 0.938025646 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096807497 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095123322 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122223919 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109519951 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080539765 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095953699 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119992095 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.08027454 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095922559 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079767309 seconds)
  done (took 1.70562684 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082811241 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10897357 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101322944 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095552439 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105165814 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094593929 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087314395 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098930492 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109911896 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077369477 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101907447 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114715472 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085898454 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115632025 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104795785 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083272902 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102322712 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098238123 seconds)
  done (took 2.503573544 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078994402 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09707365 seconds)
  done (took 0.908436011 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08180426 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093972389 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080643738 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097385217 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094117296 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075937441 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094828269 seconds)
  done (took 1.35196006 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.471702423 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134901388 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.252474295 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084810759 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118720912 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302719586 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097978573 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084211144 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102267419 seconds)
  done (took 2.436195471 seconds)
done (took 11.569029807 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09298328 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118176959 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112635334 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.467992816 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106761263 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097406453 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159867285 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.251694042 seconds)
done (took 2.141346869 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.15168032 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325968034 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113413296 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06701998 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095013638 seconds)
  done (took 1.34703467 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.0796914 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099969335 seconds)
  done (took 0.921883688 seconds)
done (took 3.165111109 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081274964 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097108617 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078088369 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097633284 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.077876427 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094689602 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.111119394 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097989933 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080175687 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096298808 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.098558152 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080103307 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096864351 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077567278 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094643289 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079510993 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09528322 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077373787 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096364166 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077936335 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097195706 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079970428 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095014701 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077294451 seconds)
  done (took 2.910087517 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099076205 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098732289 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102745955 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085193359 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102132927 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086369544 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102367114 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097117026 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085846473 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099372246 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100200514 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085058434 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099885556 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084322714 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099247422 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10183339 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086223273 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097350189 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083612074 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100309451 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102810917 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082310685 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101428545 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103319377 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08391953 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100860684 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083440703 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097494392 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102550846 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084744301 seconds)
  done (took 3.577535398 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086441675 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094737827 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077964032 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102270187 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077884178 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097272496 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078145228 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096127815 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079091066 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095292205 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080346758 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095265954 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077521185 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09621801 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080098687 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098803357 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108311125 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078269439 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095014369 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079089913 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09952191 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078141458 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09582525 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078039626 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095127759 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077988195 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094966573 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078737299 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096275318 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078134723 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098420024 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082210648 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095318109 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08506911 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099058206 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077869891 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.0993484 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095014788 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078675662 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09452233 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07765556 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095510881 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077938262 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102036353 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078872714 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097939436 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078461747 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097130885 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079519223 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098282364 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078122639 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095091602 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079850935 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095435985 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098984909 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077831047 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09670348 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077852116 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096448128 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077049053 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094419782 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078080557 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098158872 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078406513 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110750822 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084954465 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094818239 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079542115 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095901059 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08056932 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097661013 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108783955 seconds)
  done (took 7.159941321 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082692616 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10726368 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08075394 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097983633 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076018826 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096346963 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099476568 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07904226 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097139261 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085256592 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095700836 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079305928 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096696939 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107844065 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078891733 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096811865 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084543181 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093016894 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078929811 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100117993 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079244671 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098830387 seconds)
  done (took 2.741531824 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211407244 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104354047 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142080826 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107582124 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083176841 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106993624 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101908367 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086632205 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102037088 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083638084 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100914096 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102093025 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083531591 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100708291 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100174023 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084330483 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101976663 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08471955 seconds)
  done (took 2.6457468 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093993885 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09838454 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102521196 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097907654 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099779936 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084079947 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104866074 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107564795 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083873515 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098786272 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090208851 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100708121 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100606476 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081035345 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101070886 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081653375 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100243917 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081761133 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107476823 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10431019 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103929748 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090897744 seconds)
  done (took 2.868507401 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097544985 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100631653 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117494662 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083501694 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094403784 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079639414 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105618815 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081922983 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106794741 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100802212 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081220696 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096744146 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088688676 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098109791 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103290374 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081657382 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101064911 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082174021 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100524154 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077329947 seconds)
  done (took 2.637211139 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103533979 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099930043 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099915361 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092457682 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100295899 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082952417 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109281495 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100613889 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082800894 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12515737 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099818017 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082433706 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109810805 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105926692 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099656318 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092224836 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108119115 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109076554 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082951995 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100994564 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125561952 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083084335 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109192658 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.208898101 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083014776 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099237982 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099940505 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088467901 seconds)
  done (took 3.639593246 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081825184 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09961481 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078915214 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096684946 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07858055 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096734202 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078768438 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097019564 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081495522 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0964456 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08107164 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097979459 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080954097 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099203141 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082220714 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099247943 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083912145 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096336307 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078652601 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096765128 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081537825 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099627388 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080961351 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096219935 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078958631 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097980172 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078588091 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096199329 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081074393 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095605416 seconds)
  done (took 3.428527913 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091783185 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105921509 seconds)
  done (took 0.954848339 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078741085 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114900296 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078497104 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103034472 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086088144 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099921628 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107570811 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086912484 seconds)
  done (took 1.514043934 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096399972 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109926459 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083023275 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112517871 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110159205 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095078906 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160279968 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101225743 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087669628 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097459248 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113035777 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081361778 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105479832 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081734403 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104788095 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087834237 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097307303 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087751995 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102154007 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098013685 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084482686 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11042338 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084253178 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097121341 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083350555 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110176108 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108955767 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083967804 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103820578 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108404975 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087891528 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093857613 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081997877 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101142282 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079586087 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108253983 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112495163 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085127802 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109297756 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082545407 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110794933 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095107863 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087120433 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105246835 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0927634 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100760833 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083532369 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094627331 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097326302 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083856261 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09455333 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082296379 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093860334 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089414968 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104477842 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113558737 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080691183 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.1009034 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085697452 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102224095 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088527424 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101946501 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084833149 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097989867 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106539579 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086103029 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107291197 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07763832 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093600398 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080708888 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107965151 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123305453 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090043787 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101603043 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083139786 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097092796 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103456433 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084997144 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106719975 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09085207 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099997176 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106811634 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090294571 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100336397 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084532009 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10715181 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098071271 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084836908 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097003674 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097960014 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098626152 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079667951 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097147587 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108215233 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.0858259 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100022155 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080000753 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107984759 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079679672 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101148293 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083500783 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101767369 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109142753 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088065436 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106688052 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107679344 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089542662 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100425147 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085415504 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09632182 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083488233 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.10294035 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106215139 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07608113 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103049752 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083995089 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101400848 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089556669 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098327767 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083010077 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107860506 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107074953 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081402023 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096400441 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085887704 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100153648 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086681932 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107335198 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098677445 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077624563 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095186199 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085937378 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100312983 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087380848 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105977663 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102821764 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076434604 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097960321 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087140041 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107178647 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.09987246 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08275314 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104647296 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083172717 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100963636 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087990438 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102564554 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081546876 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103921973 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102471771 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077317922 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104689901 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085709954 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099316815 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086216729 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104869122 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103472702 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082951956 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098957594 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087540355 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101922029 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080836771 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099630538 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099190661 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092580818 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102471077 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078283089 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097746242 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089402609 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098200321 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08211095 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098849539 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10296312 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082899384 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098768174 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081854609 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101077421 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112521642 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087475398 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102258342 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087855466 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111903063 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082059086 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10259066 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100910408 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084231587 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101333392 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089627742 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10631416 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106307711 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085734533 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097843829 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088491181 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108559934 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082118401 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09793583 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081554725 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104585026 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106959489 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086623193 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101413703 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081016477 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102031468 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104519702 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085943831 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101037221 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081556951 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106088477 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082127465 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107076484 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103130805 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092472273 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104157331 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077806423 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106201072 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098931761 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088772728 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096473233 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081203473 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099535074 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083638513 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.1003113 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086680414 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095734057 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090230063 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110029765 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100860913 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081539058 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101772893 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092113005 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.103047223 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086841711 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105142531 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106867083 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095523903 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.10025657 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085636626 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109868758 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101145629 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07673802 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106784777 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081258017 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100595682 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082833159 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099595097 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085815675 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110116978 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105833414 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077252374 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103788352 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.0814734 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.10010237 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078584868 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107107135 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105106874 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083934956 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109675628 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084107668 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102181603 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105052628 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082733282 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102314625 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083844159 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104057111 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083667965 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103097185 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082031222 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103320425 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100162813 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081096444 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103059412 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083151209 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.10079044 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088858411 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103008981 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082822783 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103594319 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102903897 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084074569 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101453028 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082475392 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104211151 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083669137 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101951036 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086027327 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096253862 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109259075 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083840734 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108634307 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082828498 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097710674 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088543385 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104766044 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107509054 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085097179 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10323203 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085032245 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10073252 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086046728 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110073425 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099205235 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091737966 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107092587 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083397881 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103998757 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083234093 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103717553 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099756418 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084882445 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102462256 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083425667 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101215994 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088247268 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103466253 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083057264 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102682746 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103430683 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083235201 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10294905 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077769353 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100654263 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082511377 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102676038 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090257042 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103196048 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104474956 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081780117 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102383117 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082379923 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098662448 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09203548 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112266968 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103052266 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09149894 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100691986 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085137229 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111425644 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096620847 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082171785 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099644712 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081304576 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109583176 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084657281 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112074192 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101710027 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084148498 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098865895 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084551801 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100263512 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077287054 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098991774 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087270887 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104378544 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082407132 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101865029 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086366642 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103468421 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10882826 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083109034 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103563742 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084448546 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099389467 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082366294 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100827406 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105094379 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084718977 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099409403 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080952226 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101953018 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084799379 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.111320043 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083294262 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104388116 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090386236 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101533825 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104567629 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086919739 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096273649 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087275736 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102748805 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082892911 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101339434 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105501692 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086415877 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103664852 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.08986151 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102824585 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083970809 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101930532 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099632634 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083022961 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101422874 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084150737 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101059953 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085048469 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110673247 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081830159 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104734799 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101323378 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084085331 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106710559 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085166472 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104973647 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109895232 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08747622 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103365216 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089845543 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106365484 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087110621 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103169017 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103089795 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089624541 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101518266 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091242795 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102024643 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08441086 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103893621 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080852067 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101520764 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100805588 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083006461 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107466221 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085150259 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101598002 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082800432 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100467533 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08466085 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106790986 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109855114 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086473836 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105541425 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078867869 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099651763 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085104154 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100030157 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085385131 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10486491 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108831805 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08615369 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102859152 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082846369 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109626811 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089400974 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107003666 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100655095 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088455843 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103339683 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086093161 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103773207 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083497444 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104052436 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108000026 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085277171 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100764299 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091795823 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105650048 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085259517 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103504746 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102280688 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083407458 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097639128 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085449343 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104860994 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089913042 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104938248 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10324105 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093030283 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101291852 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084092326 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107210436 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084263911 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109154903 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097534383 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084532692 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104034527 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085472719 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098097018 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083498386 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100919044 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085908013 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101811545 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079690027 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110846226 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109768575 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08649433 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101261948 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082866723 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097454919 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078738049 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102047791 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084883425 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104897997 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111543644 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083396157 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101860826 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079201449 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103010713 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08709143 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105642907 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080947731 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097597012 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100681429 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086241267 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109737611 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083055268 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102800656 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087134776 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105032438 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081020523 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107741551 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099281757 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087698986 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113053335 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085165893 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104436322 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107903921 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093773309 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104054294 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080182977 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104051243 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085825954 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.104001522 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103430711 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084941174 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11686294 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086907675 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10193877 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083668833 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10510893 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102624544 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091322159 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104523792 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084730971 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107608721 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085430596 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113323219 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105216144 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089580549 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105332316 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086095241 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102375613 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10251527 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081615126 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.101358042 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085145425 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103987355 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09030585 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111793683 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102763276 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093925757 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111056203 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088914784 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099630808 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083513711 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102188917 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079347437 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104484088 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100769072 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.083143831 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101083875 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08297186 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103441956 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090544909 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104768822 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084904767 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103737437 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09644125 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085508697 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104980612 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084928649 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099357442 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084290477 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.1041605 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09041461 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11010039 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103292257 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085235898 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.10494381 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084331632 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098294337 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090669214 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101960956 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087710542 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102269053 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084058539 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104841909 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106697995 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089411329 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104763632 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085890177 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11607397 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105630971 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081945888 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100665737 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089483216 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101837532 seconds)
  done (took 57.771225307 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147264616 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080592687 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098714653 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079922142 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113420277 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098698778 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080464246 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099859329 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080714359 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102707328 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08000314 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098731151 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109364862 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125052877 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093807582 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104359387 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098206178 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081412427 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098438575 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081290113 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109245929 seconds)
  done (took 2.876577234 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104970277 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117299796 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115111504 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119770404 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090166724 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115144279 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114409491 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115725823 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100218007 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110998247 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11917462 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11554771 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092245636 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110643576 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110661556 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093875805 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118418147 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109445433 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11681563 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096081326 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113739592 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114018486 seconds)
  done (took 3.222132317 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084644219 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102639041 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085307719 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098676597 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083265991 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097844642 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088562371 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100693023 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08747399 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102402945 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082192767 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101903106 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.105213819 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079626867 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102681363 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081089212 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152904395 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.1081216 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084203679 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104612132 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097963312 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08620864 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098330824 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079448207 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102328268 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087836764 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103756973 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082460442 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103497105 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082349024 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103156651 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081297566 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104527653 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10368301 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082852348 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101773814 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083823652 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102595884 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079580362 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100854417 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084090081 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098317458 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083864488 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105231175 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081889972 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101317659 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084633098 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103590213 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098226788 seconds)
  done (took 5.454375346 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105136501 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160340678 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085880153 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14274588 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120750803 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112398452 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088655719 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141953494 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102433658 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083433609 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122852999 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120595093 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103969623 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090055608 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107509275 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104655507 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08685255 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103160445 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.08927938 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103797248 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10888658 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090777986 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11901817 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117754205 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107703417 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083206198 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103954797 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109103161 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097816746 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109990458 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108973326 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090137701 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119979217 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106033157 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08400851 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106746901 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12187151 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084202118 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106569082 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101300356 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08691187 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108874012 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110648859 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102132354 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104810182 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10886398 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085058183 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101044774 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.1184114 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086879671 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114295949 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119675981 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088179954 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105888672 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108429596 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120626955 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085907699 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102354127 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087270998 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117874393 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101626373 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088591247 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119106005 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105733201 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111947493 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099755146 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109546991 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108340864 seconds)
  done (took 8.120339461 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09462405 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111683816 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121297989 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121171222 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091923886 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111416697 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110395868 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091071591 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110764337 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116422473 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11127052 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133670858 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086562129 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11548527 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111709823 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092038416 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110874333 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111144483 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09154099 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111178045 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111499836 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120340786 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091436218 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119374492 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141528647 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106309559 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090798395 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111377642 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121880304 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111901398 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124157274 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091174765 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111839545 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121506919 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124456345 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.0909684 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103272888 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112023726 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091990501 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111193119 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105228432 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120543571 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091627276 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10532178 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111131752 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091038718 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121339987 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125160319 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113739417 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096312282 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111665543 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120833166 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110853151 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09152185 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120279849 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148006753 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120283341 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121171185 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111225068 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121120214 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100743723 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12885739 seconds)
  done (took 7.680010476 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109026075 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115364582 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118132376 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100477935 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082831247 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108310723 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083443455 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103089773 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113952912 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094658493 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116818106 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109280745 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112535599 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098169374 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109522618 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11231767 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088391451 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109120026 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115490715 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109188925 seconds)
  done (took 2.941009708 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094202095 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123946144 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085434452 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111954007 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10844507 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091184507 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107597942 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107724746 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085945837 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108290405 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095968785 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116962088 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105697214 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09084081 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115653286 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111313198 seconds)
  done (took 2.484038224 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096633535 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117239711 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120112796 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084233628 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103934179 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080432058 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105441285 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100928949 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080701361 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120893072 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084370164 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108088381 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104484053 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083388974 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101279827 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087870619 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101719085 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082344331 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106091723 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.12180627 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095291764 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103825068 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10639329 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086796662 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104588823 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090492127 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106288738 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103346295 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083777413 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105347566 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085215402 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113077723 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101173343 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084124261 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102724088 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082720178 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104864417 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085693619 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10883704 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104143143 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082749824 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104912649 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084832933 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106262715 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080525229 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105809069 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100497851 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090968014 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102667843 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085950098 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105513186 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106516681 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086360909 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115581195 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089573554 seconds)
  done (took 6.22858109 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098952134 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108799965 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080412503 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10304855 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087594815 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108169948 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108358256 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088183185 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106446795 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082966356 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107551145 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089188744 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107046242 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108947756 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087156166 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108739398 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081260319 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106277298 seconds)
  done (took 2.608599844 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092424211 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105208567 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092384867 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105738631 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085495135 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108344382 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080187102 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104144781 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102901335 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085205849 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104900308 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088662281 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103129832 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087641654 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105329554 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084358541 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108097882 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103134497 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086167708 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101288978 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088390517 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103797313 seconds)
  done (took 2.964144216 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118597573 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124392385 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092607944 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228522478 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104588415 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13192665 seconds)
  done (took 1.636701627 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112138163 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122114965 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105849329 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10759778 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116085362 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107247796 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088438744 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108009068 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118236846 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102376463 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108183649 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118495364 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118043605 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097637037 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115517005 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114835376 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107448109 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08802023 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106140755 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128798408 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088874437 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118916383 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10787288 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08797899 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108327549 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117786111 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119452747 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121817066 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088914559 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11868294 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114485195 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088289701 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119001618 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122759649 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109618167 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097987159 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109012865 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129930818 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115336185 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097707517 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109203197 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115844571 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097818023 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114819602 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118743249 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108682345 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094470129 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108890334 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107766797 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136151422 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095342904 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117134806 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114980693 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119154957 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118806675 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135897057 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103997146 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11828312 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115035493 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123881715 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117883777 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094834997 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118111852 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123199893 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115537026 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119497187 seconds)
  done (took 8.182798077 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105961316 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126527861 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109023978 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122568215 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098388235 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108507227 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107271783 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088439119 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108966187 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107162981 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152917821 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089000589 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117996708 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119053248 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108274812 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088773834 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108201 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11770293 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087668329 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136555315 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109585105 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118621932 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118827386 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097664049 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122059754 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116430074 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10841562 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089452969 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110131402 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108584916 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094797711 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108968895 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117751194 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087660319 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118381792 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109669749 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087993925 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115372272 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107776043 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115495783 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098398131 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128611033 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108835981 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107681714 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123593911 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088791679 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108369752 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086771428 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108660179 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107292281 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123228167 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102988903 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123589475 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118137311 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10874926 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088120147 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108830275 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108706832 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088242194 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116640777 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118417941 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108172094 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136350764 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088165321 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109252312 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118633366 seconds)
  done (took 8.054152927 seconds)
done (took 155.041069185 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.101135669 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13629228 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096753805 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169421077 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107052014 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120133764 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138648767 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098303224 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107210265 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086105192 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107250378 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087927044 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171176811 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085588034 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107300968 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108749619 seconds)
  done (took 2.676226497 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.203300933 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254086483 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102890696 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10627598 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089310302 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110632075 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105434884 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091763621 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109665419 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086103661 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109246518 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087950323 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105996116 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086739954 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111810841 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088066772 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106831057 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088316925 seconds)
  done (took 2.891365539 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113601225 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148341716 seconds)
  done (took 1.116113925 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120500243 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180107504 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.29563533 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155339908 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118527431 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127573029 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15755175 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131144196 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198071128 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123586802 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123401046 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097887449 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140614747 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115499281 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094272371 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119083696 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143064899 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093333264 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11593337 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11650452 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116721902 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106541711 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115877888 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093479574 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182720949 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119949834 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085303186 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107460008 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116231644 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095165665 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113621001 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125686418 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099032622 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176406395 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102193629 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177933524 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098982149 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112537699 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115007663 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091576632 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119897225 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119099214 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105207445 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11897342 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087565674 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118821564 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106162544 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086120529 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114939001 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.098721027 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115710701 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11391666 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157637542 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119046326 seconds)
  done (took 7.553340231 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795281024 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164872574 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091250434 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.884147301 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139595594 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104560133 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.782150174 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133683236 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236136654 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762669684 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134909808 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122196805 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228661595 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237971168 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.928500406 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.309763845 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.672245433 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103985869 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150958196 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154549541 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120585631 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139194914 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13164941 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.454659488 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095464215 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112809361 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117413625 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100386385 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159135708 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125605562 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114804009 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180325225 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.268923719 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186566348 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117294049 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090265581 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1117323 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170039306 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267163806 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217883005 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182365955 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086690251 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112288107 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122891803 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111539243 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109980607 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164785747 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195574795 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173564161 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093235116 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122517265 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120842019 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121227646 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167150872 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121007163 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289284605 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.324337727 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113261916 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121802881 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106001268 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263857055 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124111142 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224733173 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1183308 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215455639 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111365198 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771173188 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.19134271 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090540778 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119289759 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120506556 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095443028 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122393958 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171529538 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393599168 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12558334 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093066402 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112658475 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20609432 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126656448 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112507943 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164127707 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117107381 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100146143 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126508 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125008729 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172489723 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.227318078 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125100916 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120241903 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09368254 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126953791 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.118031611 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215874504 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220645977 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164134228 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209852355 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124128481 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186921689 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168987144 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098730773 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194902175 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098350342 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12757685 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122922784 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218598722 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146513765 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123755215 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095921758 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119296569 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149780572 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127161334 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097991806 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191960599 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483383483 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169482895 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.10918046 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129006007 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100310074 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183423733 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097325789 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261077337 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121729983 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171429445 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120272686 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088475089 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121954864 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165782303 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124301544 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12185597 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102415791 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120113272 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234881926 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219955966 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124161779 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22361773 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185715352 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120288293 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174363958 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123706839 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168560038 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121141632 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121625983 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096297788 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788296293 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125842975 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099513388 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117242872 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.197434422 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111778162 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102643789 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126190019 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109969544 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75591723 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127824894 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122069706 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102317931 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12007964 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122071661 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118136764 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095635035 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163328376 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233069058 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123317541 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120502433 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103772321 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182806702 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096071811 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126977135 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12549295 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125877467 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102107556 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11605537 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125856947 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172782875 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164303132 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222669806 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.597964593 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091197715 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126383358 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231045823 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089925479 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290345868 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119890374 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.22757968 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166233841 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121716984 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319006086 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167726881 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.198614256 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.129288784 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.176417659 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087755455 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119951513 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164614192 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113329436 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117982765 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164810567 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12618485 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103440956 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.962933963 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113280963 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227930803 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108471848 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173090235 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11807993 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1000987 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289098083 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112653688 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108216377 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.188465514 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09392765 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126772156 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.754471993 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105322003 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123376137 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118868982 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224383349 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166916814 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119334998 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098405344 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122442971 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.165476348 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209989798 seconds)
  done (took 44.314480304 seconds)
done (took 59.403878341 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275452173 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213317356 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258493221 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168446792 seconds)
  done (took 1.860377827 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.176245863 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148787635 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120173936 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107851763 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149047575 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.0855884 seconds)
  done (took 1.663500173 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.353607596 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270609301 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239422229 seconds)
  done (took 1.747238646 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288923966 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252449154 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356402811 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.421631834 seconds)
  done (took 2.322089679 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209393426 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132033873 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111828996 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104196343 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.19807458 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251020922 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141075973 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203318831 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121383302 seconds)
  done (took 2.40308322 seconds)
done (took 10.877806746 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.282395225 seconds)
    (2/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.232272105 seconds)
    (3/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.161109234 seconds)
    (4/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.095031554 seconds)
    (5/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.127034894 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102284141 seconds)
    (7/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.225334359 seconds)
    (8/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.201125584 seconds)
    (9/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.125802878 seconds)
    (10/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11715533 seconds)
    (11/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.192611038 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124497362 seconds)
    (13/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.22382069 seconds)
    (14/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.177456953 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094098386 seconds)
    (16/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.168106873 seconds)
    (17/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.173328139 seconds)
    (18/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.194718824 seconds)
    (19/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.156390557 seconds)
    (20/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09077987 seconds)
    (21/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.122390026 seconds)
    (22/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.227950015 seconds)
    (23/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.186672753 seconds)
    (24/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.208408276 seconds)
    (25/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.219857983 seconds)
    (26/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.12312838 seconds)
    (27/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117421482 seconds)
    (28/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093980028 seconds)
    (29/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.217804886 seconds)
    (30/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.19967058 seconds)
    (31/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096364583 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.226366263 seconds)
    (33/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.169057036 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.119015 seconds)
    (35/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.089289144 seconds)
    (36/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116962243 seconds)
    (37/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.217274538 seconds)
    (38/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094793132 seconds)
    (39/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.120909139 seconds)
    (40/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.135504303 seconds)
    (41/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.142167108 seconds)
    (42/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.116194134 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094485949 seconds)
    (44/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.211141389 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.179697022 seconds)
    (46/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.13630627 seconds)
    (47/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.175349112 seconds)
    (48/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.140745974 seconds)
    (49/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.09420013 seconds)
    (50/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122219092 seconds)
    (51/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.194201058 seconds)
    (52/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086184576 seconds)
    (53/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067316268 seconds)
    (54/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.09920695 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.089395332 seconds)
    (56/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115631028 seconds)
    (57/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.183641078 seconds)
    (58/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.127399869 seconds)
    (59/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.120871838 seconds)
    (60/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.156898675 seconds)
    (61/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.251318866 seconds)
    (62/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.146253879 seconds)
    (63/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.131786888 seconds)
    (64/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.159603877 seconds)
    (65/286) benchmarking ("sort", Float32, false)...
    done (took 0.174142383 seconds)
    (66/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.142811464 seconds)
    (67/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067838625 seconds)
    (68/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.167094722 seconds)
    (69/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.08678672 seconds)
    (70/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.118378262 seconds)
    (71/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.100618316 seconds)
    (72/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.177464454 seconds)
    (73/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.123630384 seconds)
    (74/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086651108 seconds)
    (75/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.119166355 seconds)
    (76/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.06761411 seconds)
    (77/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.119832276 seconds)
    (78/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113069063 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.113502046 seconds)
    (80/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090779002 seconds)
    (81/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.127915238 seconds)
    (82/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.16297056 seconds)
    (83/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.10768563 seconds)
    (84/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.110707781 seconds)
    (85/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.173135459 seconds)
    (86/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.112280547 seconds)
    (87/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.138280699 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.135206948 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.085931698 seconds)
    (90/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.143385722 seconds)
    (91/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095211618 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111856622 seconds)
    (93/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.139301887 seconds)
    (94/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.0668821 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.119434675 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.116043296 seconds)
    (97/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.152490685 seconds)
    (98/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125802019 seconds)
    (99/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.082212233 seconds)
    (100/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181476936 seconds)
    (101/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068591377 seconds)
    (102/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.181777402 seconds)
    (103/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.161498993 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.133844852 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.120597483 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.113189791 seconds)
    (107/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.186728428 seconds)
    (108/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126010038 seconds)
    (109/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067896377 seconds)
    (110/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111839409 seconds)
    (111/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.160933616 seconds)
    (112/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116771561 seconds)
    (113/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.174967803 seconds)
    (114/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093030267 seconds)
    (115/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.138076397 seconds)
    (116/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067142012 seconds)
    (117/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.173628304 seconds)
    (118/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.189663549 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.087254005 seconds)
    (120/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.123323035 seconds)
    (121/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135785587 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 0.181549324 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.097675343 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118585797 seconds)
    (125/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.170482031 seconds)
    (126/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.151532827 seconds)
    (127/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110481886 seconds)
    (128/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067825107 seconds)
    (129/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.172439289 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086682706 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115697944 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095581458 seconds)
    (133/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.100280108 seconds)
    (134/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.095529059 seconds)
    (135/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109531117 seconds)
    (136/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088117736 seconds)
    (137/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.100271595 seconds)
    (138/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.077578821 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118344068 seconds)
    (140/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.067446288 seconds)
    (141/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.077232465 seconds)
    (142/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.110536795 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086310661 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116513118 seconds)
    (145/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066819564 seconds)
    (146/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.157218702 seconds)
    (147/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.111793069 seconds)
    (148/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.137114456 seconds)
    (149/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066683243 seconds)
    (150/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.172589499 seconds)
    (151/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117235299 seconds)
    (152/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.119918878 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119847561 seconds)
    (154/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.087250951 seconds)
    (155/286) benchmarking ("sort", BigInt, true)...
    done (took 0.233893176 seconds)
    (156/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113258779 seconds)
    (157/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106618472 seconds)
    (158/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.117870897 seconds)
    (159/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111313698 seconds)
    (160/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068759272 seconds)
    (161/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069605119 seconds)
    (162/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135307915 seconds)
    (163/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.070642478 seconds)
    (164/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.111474331 seconds)
    (165/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093947246 seconds)
    (166/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.124798995 seconds)
    (167/286) benchmarking ("sort", Int8, true)...
    done (took 0.222245061 seconds)
    (168/286) benchmarking ("sort", Int8, false)...
    done (took 0.190543415 seconds)
    (169/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117559745 seconds)
    (170/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067747211 seconds)
    (171/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068212998 seconds)
    (172/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125713246 seconds)
    (173/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.079064029 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120586471 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086669095 seconds)
    (176/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.111417975 seconds)
    (177/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.085384211 seconds)
    (178/286) benchmarking ("sort", Float64, true)...
    done (took 0.233177764 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110638369 seconds)
    (180/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068042277 seconds)
    (181/286) benchmarking ("sort", Bool, true)...
    done (took 0.223130274 seconds)
    (182/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108902086 seconds)
    (183/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068023311 seconds)
    (184/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.123076064 seconds)
    (185/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.099626937 seconds)
    (186/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.121107873 seconds)
    (187/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090849627 seconds)
    (188/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.171829916 seconds)
    (189/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136735608 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087471322 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119360029 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.110246361 seconds)
    (193/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126105022 seconds)
    (194/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067901881 seconds)
    (195/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.120961402 seconds)
    (196/286) benchmarking ("sort", Float32, true)...
    done (took 0.233919332 seconds)
    (197/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.09822956 seconds)
    (198/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.09148724 seconds)
    (199/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067395436 seconds)
    (200/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.114047184 seconds)
    (201/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.094196904 seconds)
    (202/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.12312013 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.09803273 seconds)
    (204/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.174365369 seconds)
    (205/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.108887635 seconds)
    (206/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067919289 seconds)
    (207/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086899394 seconds)
    (208/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109244746 seconds)
    (209/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.127228939 seconds)
    (210/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.113444432 seconds)
    (211/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.08366202 seconds)
    (212/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091996006 seconds)
    (213/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068387994 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111767633 seconds)
    (215/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067797116 seconds)
    (216/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.316223562 seconds)
    (217/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.232628699 seconds)
    (218/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114858471 seconds)
    (219/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174363088 seconds)
    (220/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096799668 seconds)
    (221/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.100423661 seconds)
    (222/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067729463 seconds)
    (223/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088780427 seconds)
    (224/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.091696962 seconds)
    (225/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.067804426 seconds)
    (226/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109435775 seconds)
    (227/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067739817 seconds)
    (228/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067964985 seconds)
    (229/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123366549 seconds)
    (230/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068474176 seconds)
    (231/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.090176588 seconds)
    (232/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.151839871 seconds)
    (233/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110171925 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087181692 seconds)
    (235/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.11152218 seconds)
    (236/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067178168 seconds)
    (237/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.13546108 seconds)
    (238/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.089292986 seconds)
    (239/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.106872327 seconds)
    (240/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067452831 seconds)
    (241/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.16680943 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09338967 seconds)
    (243/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.184177519 seconds)
    (244/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.110748469 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095494712 seconds)
    (246/286) benchmarking ("sort", Float64, false)...
    done (took 0.171858467 seconds)
    (247/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067857823 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111230038 seconds)
    (249/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066866767 seconds)
    (250/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.098976068 seconds)
    (251/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.089184233 seconds)
    (252/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116982832 seconds)
    (253/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067029987 seconds)
    (254/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068904826 seconds)
    (255/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.091219014 seconds)
    (256/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093747932 seconds)
    (257/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.091832853 seconds)
    (258/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.076492554 seconds)
    (259/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068198768 seconds)
    (260/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.090800939 seconds)
    (261/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067168233 seconds)
    (262/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067983914 seconds)
    (263/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.139358178 seconds)
    (264/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068209855 seconds)
    (265/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112494838 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095634292 seconds)
    (267/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.092677633 seconds)
    (268/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093638067 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.10943349 seconds)
    (270/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088258294 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109640714 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087116093 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118095961 seconds)
    (274/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069468158 seconds)
    (275/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109790243 seconds)
    (276/286) benchmarking ("sort", BigInt, false)...
    done (took 0.221793253 seconds)
    (277/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067830056 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.11701382 seconds)
    (279/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135927685 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093392227 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110412287 seconds)
    (282/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088320822 seconds)
    (283/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.090959527 seconds)
    (284/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092927007 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.109692552 seconds)
    (286/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093976005 seconds)
  done (took 36.183297636 seconds)
done (took 37.070390897 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104366504 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148612684 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096312868 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136791345 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12381124 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092062301 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.11845206 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097747031 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124142335 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125229822 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099190137 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094373509 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097696771 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119852767 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096414457 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139491223 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123051518 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094214979 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118467187 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086192996 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118667436 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086674966 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111094668 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070101449 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121479124 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094440282 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116883084 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.12116584 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086728055 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110459362 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093503188 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117850381 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087511496 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124053126 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093691384 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118482834 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097128421 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120949669 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112377213 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086877258 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117945535 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086605976 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11701561 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094642376 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116971241 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092565908 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118995189 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.10038937 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.14012285 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115607238 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095967832 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12219382 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097032979 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118520703 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090980537 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120190749 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09229791 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140128005 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.11951421 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092970964 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117934618 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094073503 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116659849 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095818726 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118654735 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120922424 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098539534 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115722468 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097210747 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116914118 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086671533 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118676004 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090216836 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110575919 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09625834 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121094317 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109632109 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092528589 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117907681 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091707291 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110850862 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089900094 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111967787 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093545831 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112666467 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069652416 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114560794 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093257784 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.1107514 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097241239 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116892669 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094568608 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11351662 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099377706 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111469224 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092813713 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112392998 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087219279 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113350362 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.092007914 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111167145 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090027362 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120262625 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112667458 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094494182 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123380322 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086935188 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117442695 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087172754 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110183657 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102006178 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122337938 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087498931 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117415985 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086304093 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118287485 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086039879 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110968513 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.11156848 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087587497 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117351964 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.08732111 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113302628 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.09480143 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125527425 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087681539 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11464162 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090269615 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111281031 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093172088 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111495821 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088073702 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113975482 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078010602 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11497204 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088331662 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118795982 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090018643 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120911503 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089622595 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120298319 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092693649 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117731294 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116877117 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086827171 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074381342 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117152536 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090515649 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113813806 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087405734 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113599137 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087248879 seconds)
done (took 16.977788126 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.08990472 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18478183 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151377926 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142106376 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108392648 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112856909 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12270179 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118329179 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114211266 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143135959 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110095215 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131451417 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148461802 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087296447 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112787788 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092105675 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114081693 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103204051 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146337806 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13296242 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164718199 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087364814 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147899367 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135579934 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121215582 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104983809 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112433649 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091880859 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115608101 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112681525 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.13287452 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115489067 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088224402 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134574886 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10516605 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119770702 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088180256 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118493789 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088436217 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111633772 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143125819 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134273533 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093155585 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117892581 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091867048 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114453742 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089092219 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121826784 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098131411 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116831447 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127078583 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156408958 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09213707 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121875996 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.08753514 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123305264 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122577651 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091079849 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112570633 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091064543 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112472412 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091834187 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127422853 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141693133 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.0916765 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12154342 seconds)
  done (took 8.632467085 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106150164 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140114002 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105743014 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131598451 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111716598 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088750531 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113310111 seconds)
  done (took 1.744952978 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090636733 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134747176 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111435084 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135970983 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133520956 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112614179 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123742827 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089270719 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133300793 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089594592 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134985607 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150027952 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091056266 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121521285 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138126867 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089574933 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138917987 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088762477 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117542557 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112382542 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117081005 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135449891 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092076793 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113482544 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103690307 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114024052 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162374968 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094610779 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114942357 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092903529 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11236598 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152021773 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103088028 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125674892 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08890639 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12999828 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129058464 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087148248 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126500153 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094485587 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.12823952 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090313076 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115027265 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087740816 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118917352 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099222383 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117585888 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.10703068 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117316044 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134327934 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089777031 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127896481 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089946725 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118007153 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090817221 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120065893 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099358105 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114951252 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133851099 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09048253 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131228357 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106324261 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128310994 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130952843 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09268341 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128272299 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103316683 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117607896 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091093272 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118110694 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105972823 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112553949 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.0907847 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.124566086 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116295465 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113537401 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137867418 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091112572 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125480863 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089058236 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115428736 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11468757 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113046596 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118439697 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089743532 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118101577 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092786288 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112861715 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088618893 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11843309 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087798352 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115453524 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09257909 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115262742 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091860821 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.13193785 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115240124 seconds)
  done (took 11.857161066 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091709963 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115369961 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092835263 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115796579 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091314304 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115170641 seconds)
  done (took 1.57656821 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.118957849 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118266584 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104127707 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121450059 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156673292 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103743608 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130337403 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124176538 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108290896 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127488392 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129902156 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105921209 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136333721 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122312905 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105137688 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12083187 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.128819945 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100430962 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127350334 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097005194 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136981983 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121534292 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097313752 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132559961 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118647631 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096124563 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126716738 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104908074 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128009608 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123750801 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097270908 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118462346 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096623951 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123895476 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130187356 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096072189 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12152509 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119236189 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100912113 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118824968 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105017255 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122339199 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128088125 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094947528 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125048355 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122267521 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095095846 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125128968 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104624429 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119836373 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122661757 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096557419 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120803175 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094164807 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124191647 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123993529 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095347947 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130640716 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122054032 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097686572 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119123075 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094642919 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124814853 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118713686 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106184137 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120336633 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122680939 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097237627 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12202931 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096765709 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119775293 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09325379 seconds)
  done (took 9.260273197 seconds)
done (took 34.017962525 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686655945 seconds)
  done (took 1.639709948 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.818935949 seconds)
  done (took 1.775243687 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.755234104 seconds)
  done (took 17.742526399 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.493687956 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.577218618 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.983224006 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179966401 seconds)
  done (took 3.191622534 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.949552237 seconds)
  done (took 1.933285022 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284029336 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235405526 seconds)
  done (took 1.482584041 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.770310774 seconds)
  done (took 1.744300577 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.426660156 seconds)
  done (took 2.387980097 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327223729 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18480937 seconds)
  done (took 1.493078335 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.553019061 seconds)
  done (took 1.531305841 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.964844217 seconds)
  done (took 10.942794403 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267746943 seconds)
  done (took 1.250154094 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303188714 seconds)
  done (took 1.276675744 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.464927092 seconds)
  done (took 4.440444725 seconds)
done (took 53.799668779 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100822291 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127152283 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102409879 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124630017 seconds)
  done (took 1.422521905 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.103395367 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121625999 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100927447 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120386882 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126296888 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096485271 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123384677 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101655943 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120726804 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096709061 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120274432 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119940162 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09863078 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122587903 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093716004 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123872391 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124392914 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096175405 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124043155 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096582643 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118232544 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098976645 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123954374 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094037911 seconds)
  done (took 3.643238175 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102291453 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119242371 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096745704 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118504384 seconds)
  done (took 1.423446393 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103171698 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131526445 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.10597967 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12574628 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131325829 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105885449 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117273148 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092756302 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119484774 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099620388 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115222095 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139433056 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106580752 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124055796 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101793208 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115080062 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091476401 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130995014 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124778161 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10099687 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117714354 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099207344 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115437789 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109909749 seconds)
  done (took 3.70944567 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173280376 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126502312 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13811555 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096236955 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160465502 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140307394 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088276755 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140549614 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087705586 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131709798 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118532678 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133853894 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129331969 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088735728 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113842815 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088148754 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129397586 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129132359 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09149645 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127439101 seconds)
  done (took 3.423119691 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.101600459 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117369898 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089175902 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115979793 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099561907 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121875996 seconds)
  done (took 1.631001936 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094157433 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115137216 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090291754 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11448418 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094204177 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114418829 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088873873 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115132254 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090103045 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115431108 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09027968 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113191735 seconds)
  done (took 2.222324521 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.508745323 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119995994 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120091178 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089445862 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121540834 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089871202 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129483427 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092918439 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140983422 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089903248 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116228305 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.094030702 seconds)
  done (took 2.698259298 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241004218 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125668066 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282878497 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.36438525 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156468247 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165157701 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278547982 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160756587 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198815151 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149984307 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230298929 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197758586 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152197358 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191476901 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137670259 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145869686 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19054926 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249841213 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1532482 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211316981 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206464268 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16566518 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180176023 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152765671 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112704359 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192754023 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095265222 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129283807 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234373338 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179920723 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189856919 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161502309 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146917393 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235471844 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248565583 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196299904 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278422774 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133822835 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166204319 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.143079679 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264233862 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139272561 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233621548 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155626316 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105050228 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22084439 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167306204 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177208849 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146254903 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139222158 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198130713 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244126971 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194048111 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138309672 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300723255 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147577091 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.159019176 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188874283 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252528686 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227324017 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18956478 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12068379 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188293396 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190068372 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21214243 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153200181 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183341995 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147864886 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18454792 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18881629 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166755773 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204383563 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179960898 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139187526 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170592257 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17347851 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174135622 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259077258 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187209874 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12245957 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1705991 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149741834 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131361621 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169788288 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12495061 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215465825 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143646426 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163535068 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208246653 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158778533 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161307391 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221998431 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185187773 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149137845 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084240732 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152681583 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15604624 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177534938 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140528791 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158827511 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157293936 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130159184 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170249505 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097674891 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21032218 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092163471 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174147141 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210343019 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100855295 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161868594 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154608783 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15068578 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178664189 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198194822 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14008136 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134171412 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210131857 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179706582 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141599986 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176822476 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229026262 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117515127 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149532917 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227405774 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244174763 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113633951 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228068802 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153246557 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108350712 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133221068 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181497893 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156675619 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161680009 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132977306 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183511507 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23319512 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098872492 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138701699 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19514111 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135357087 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132685047 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15398746 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146930044 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111698852 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143726636 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14517905 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177252935 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179374645 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155945663 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165483893 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148985276 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248582405 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139702602 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150931377 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148417149 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095071012 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192283324 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226197545 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103184067 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232014554 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172282632 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223194225 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169988582 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107468296 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176919037 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130322256 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120098811 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19429089 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16749169 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161651784 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197327205 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22637014 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180403146 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.210557873 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165672544 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174733678 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164929833 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156545719 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110639578 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161146537 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15845391 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123961118 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.13974465 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108202935 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149408697 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142063485 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13296545 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198224932 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170206004 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215310432 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158706935 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148300665 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180887181 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102567976 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203705595 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178296986 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145604639 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.198558843 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193575523 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212511713 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116601507 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227469616 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120049177 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099021007 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142646984 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170172064 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133730951 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108798277 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187820378 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180946869 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182824159 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173759182 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231071504 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175994782 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191106389 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121238232 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.14191774 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209186411 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176417747 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154961756 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138176984 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151433215 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177820711 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154592417 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255721509 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168715223 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175632993 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23462743 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123029103 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131856561 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150628596 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1784646 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154075129 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17668869 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147926597 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13907944 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160326664 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.12920026 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160961633 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186135257 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164724647 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214144569 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.123378583 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212376476 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101834201 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162134646 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161020146 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165146438 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108565606 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176195048 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202768197 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146623548 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16691639 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215927979 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104150219 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309233557 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234665698 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195054743 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138205043 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154960086 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161009226 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162890891 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170751542 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179746142 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158685116 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187776299 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159204729 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136765714 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138564968 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149685043 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12425232 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133303316 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149091822 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177802617 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139331672 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187620403 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155934568 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159691065 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171098343 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150328284 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145205187 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150161035 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216751695 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182924403 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239240118 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152229895 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178830754 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231929663 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099553212 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131871277 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106466924 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205464775 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10924046 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219281101 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.187697635 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19853924 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20831942 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178029058 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139305623 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.09310428 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15768781 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170051207 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228759777 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149819673 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.14784138 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203141963 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.136400086 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104796915 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166230801 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287024426 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143091681 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223595531 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080974829 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279537999 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124780631 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105316722 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162594183 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235637008 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135689115 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153482751 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193644674 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161093993 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161864063 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123407628 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220232518 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210031794 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227482917 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18440737 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132428719 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129760674 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201947795 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193120874 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155835032 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138720249 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206749604 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193514806 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223272589 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141839618 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16917084 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168520723 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157358876 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188127384 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135246069 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207385614 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13485824 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188977288 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153309541 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137993274 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177611708 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.213510285 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139784147 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188716402 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183165336 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135335862 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132312481 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166601682 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178422263 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153986121 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100339411 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208581063 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098058465 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21996035 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233601316 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133759938 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155281774 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146853004 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134823471 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154254912 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157352955 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112561901 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163536681 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202229013 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135375802 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18973048 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23119311 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171790207 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173236917 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145397148 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692741046 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131030474 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195432297 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147547789 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20529392 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15109346 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172124071 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15836289 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169753209 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223920792 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16072702 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230770977 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192225419 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178334507 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132776604 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158389573 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154708654 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145025822 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15376071 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16858631 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16071018 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145056662 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180561787 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164030595 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134179901 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112955613 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227340506 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147769482 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1879748 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180304658 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138246393 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17360053 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187292596 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133806778 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179356591 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237590369 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140718629 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12166898 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134754722 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15090125 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261806777 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096706849 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217964802 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184526443 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159481454 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169254226 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146830982 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190979939 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157247892 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213209316 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142637266 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158412908 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129817292 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137928815 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130627998 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156828993 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169752916 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149073387 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160599012 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138339192 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21864774 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.09727956 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144838622 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282225982 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176395031 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244101517 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134270774 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108747326 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162941384 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150364931 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176978966 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178139872 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135229833 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134671455 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137605635 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129525451 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137678515 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13005896 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21806885 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165111587 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208245577 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136568183 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278513842 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112485213 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155663762 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115546714 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104533125 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150398911 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145141087 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155712258 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218454916 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234507093 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148149206 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133214166 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148274605 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098782176 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135917554 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164249482 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166187334 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180047916 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143910034 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080935603 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156140802 seconds)
  done (took 82.403091561 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170592411 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13323783 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146087256 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201019855 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175760833 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268718346 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209883772 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253626561 seconds)
  done (took 2.631577776 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095675945 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14552019 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156698927 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132507542 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092320728 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119536773 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.341212383 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132586806 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116208208 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121602504 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172887541 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093608109 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.545198062 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090833356 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.11943903 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107296795 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092528864 seconds)
  done (took 3.739982075 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.097118695 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.488209554 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.842886459 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.192114336 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158132377 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.11663187 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.687659991 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094997309 seconds)
  done (took 11.755357517 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.121350079 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.13576583 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123543381 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152754126 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141682458 seconds)
  done (took 1.763552687 seconds)
done (took 123.436050564 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.103491615 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12732857 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098166576 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130039179 seconds)
  done (took 1.529178089 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100591 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070973088 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100145855 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074910562 seconds)
  done (took 1.425931682 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.188711842 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167677263 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.390792318 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072402504 seconds)
  done (took 1.574917187 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.120749867 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132037204 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104961566 seconds)
  done (took 1.446017625 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.112427352 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128605152 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102669429 seconds)
  done (took 1.426787438 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.112214037 seconds)
  done (took 1.196380999 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.113870389 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.13702186 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109328582 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136197521 seconds)
  done (took 1.580403849 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.104333825 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126833012 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.10964402 seconds)
  done (took 1.423468891 seconds)
done (took 13.037649909 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109314044 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.418315693 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411326972 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110620538 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72265634 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380694923 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.070039948 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144927189 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165317009 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093582715 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138273192 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673652192 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.028745733 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.373087498 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981831008 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371024007 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.682659663 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120415266 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092305584 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121783814 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.054582432 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092503643 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121633718 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092929626 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70836018 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.397801781 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121961527 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.370053072 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092631381 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124865372 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383115727 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122148102 seconds)
  done (took 16.966792555 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100857406 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17279226 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099051267 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123058155 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122598856 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094558549 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123664663 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093612515 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17815875 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122664864 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110609228 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121240446 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124594394 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094814832 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142668056 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092099684 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125302051 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093340619 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120831621 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093541033 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139026247 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11929208 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09429842 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121075417 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093806762 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134809579 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094913081 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120880889 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118995521 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098967535 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126142233 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095714944 seconds)
  done (took 4.792267345 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144319377 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182563137 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127482411 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126225976 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167735066 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122901705 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19813919 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117677238 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182645002 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123029311 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138916072 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093265286 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155890577 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121258935 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113973896 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120743633 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096452121 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121640872 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092488801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122253823 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138588748 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093102289 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120716188 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093545989 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122169308 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108301039 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122412765 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119437189 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093603493 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125646628 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100087273 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123056127 seconds)
  done (took 5.122560498 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.103561855 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124894794 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109077542 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137609713 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095056411 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124185528 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09726638 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123547915 seconds)
  done (took 2.00316065 seconds)
done (took 29.97359186 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116602947 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126378408 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106766269 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134503903 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102964088 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13152511 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092180596 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132861077 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13310422 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102487744 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136828323 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092463978 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122254513 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09221479 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135041991 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097990586 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131606556 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10206678 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132871022 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131306794 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095402478 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132473325 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103098916 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132118945 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103923551 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132119893 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136845258 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099978899 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122258314 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095440435 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123009389 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104132929 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123260637 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105761537 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127436222 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097002425 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.12294344 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094572267 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131954518 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132462388 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100089714 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132898745 seconds)
  done (took 5.983512263 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113196848 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138162794 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105221485 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081199036 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116190098 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080278603 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137211183 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079316761 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.108762404 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107917932 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074061741 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105345801 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078028175 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100813244 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077115085 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075076446 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.106918984 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076565746 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075975278 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105037465 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079956119 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072570862 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107816514 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078677563 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074962775 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.10898794 seconds)
  done (took 3.562887311 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.104658035 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134107569 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113194583 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182663225 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160227904 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099723617 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131494727 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138904886 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108844175 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119769187 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097165369 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149426395 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110350479 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129309357 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09216878 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136472091 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135020484 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094332394 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128203977 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112720476 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138962473 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103134155 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141119466 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13159477 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092717219 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121769031 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096724217 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134650494 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097476633 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130288704 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097837066 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124278838 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12222076 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104918458 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125349884 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093931869 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141132135 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102937007 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130102349 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120373068 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100873074 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121720807 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114537521 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160349937 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092064074 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128434214 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123750431 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.10407428 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120599997 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111150047 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130332978 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091616382 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125043907 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091752171 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121134592 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106751771 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124110852 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095127742 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131387772 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12604796 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106176139 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124087384 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109287084 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122007423 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100652244 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121231614 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093540828 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120933871 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14338304 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094642207 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161125776 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093231627 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123180223 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101430593 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129735649 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127458698 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093484442 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136709176 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101994797 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125135131 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102755578 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.1253803 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095149001 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139560546 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.12282347 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096050015 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121704547 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100036634 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124137488 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094212503 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136908379 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092073633 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125181134 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110269236 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12158184 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122138556 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100142824 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126528437 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092242844 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135028823 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098926438 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12268261 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131510182 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093712009 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12459724 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104044667 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12576636 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092152624 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128064009 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099380792 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123458999 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093741067 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126656478 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094657014 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131479843 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128581359 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098878656 seconds)
  done (took 14.789694026 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.231580742 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214690542 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.233612381 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.263147986 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134832563 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114540242 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210917412 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15573114 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123434912 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159940054 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171609887 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181162595 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140029605 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.21126431 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171294346 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093608756 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142521582 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135011713 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.243099315 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258813516 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143834843 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103509948 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162519395 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159459225 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136689179 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131595389 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.119255193 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133577287 seconds)
  done (took 5.799086363 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.11462168 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15567839 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098328856 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144695085 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14917017 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092811496 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12826695 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095757956 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13554085 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135512452 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093543932 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129440396 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100500024 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132848652 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12306877 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104482453 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131614679 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094945714 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12592671 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098388916 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133737005 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101522781 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127201336 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121710874 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103802785 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121174205 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087273571 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143148799 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121841274 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115973461 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120577429 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102364505 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136284449 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093173804 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122603796 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095893438 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124990783 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095550437 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125112799 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092144455 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121698502 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076994482 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122525229 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135774022 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100577347 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080327213 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128741844 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127412389 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095198093 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120539199 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096960787 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125763851 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09726932 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130524395 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095537581 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123599673 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096329108 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115500849 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099516455 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124787991 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084659982 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120841271 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099452507 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117378279 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101850347 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128519504 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092563196 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124945953 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09819661 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129005187 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095524675 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129854354 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092076885 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126272359 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096227908 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129081902 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125289227 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093595673 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12279593 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094658066 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074902093 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123564506 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074065011 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126154388 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091512819 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122344785 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096004906 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129592893 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137366803 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094870921 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13203951 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094346324 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121890868 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096347709 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.11246031 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096032952 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140044958 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141397435 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093174614 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120891012 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107401337 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125797463 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092792693 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106231631 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102587224 seconds)
  done (took 12.963628605 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.134277958 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153849455 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124006178 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112125032 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155960328 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157205369 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101096076 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129934798 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096165141 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141181804 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094114027 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131328933 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093702249 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137678 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155558164 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104629829 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125043604 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107697759 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127536656 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169028713 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111680524 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142263591 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111157114 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123546256 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.127964621 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111495408 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160457724 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107590466 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.13686898 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142318851 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108567612 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160172781 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143042547 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098713811 seconds)
  done (took 5.466982223 seconds)
done (took 49.655304547 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.215652611 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.424541198 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.187643508 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.070191339 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.215576817 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.210445748 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.201107641 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.192466283 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.750950395 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.187998138 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.422970424 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.68071743 seconds)
done (took 59.875043802 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.290436763 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.361356413 seconds)
    (2/2) benchmarking "String"...
    done (took 1.501487977 seconds)
  done (took 3.974242785 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.819311239 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.103366792 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.444171796 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.18732346 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.184859723 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.487123555 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.833524881 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.514412056 seconds)
  done (took 27.865519234 seconds)
done (took 42.064730126 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.190223814 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.208549916 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.217371407 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.169900633 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.292761548 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.217416267 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.497390114 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.222986898 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.199416983 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.166564411 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.204462752 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.202413775 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.187980902 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.513975958 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.188573672 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.185890995 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.190468636 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.715594718 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.570828989 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.194969231 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.208874154 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.250637133 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.185058171 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.197714563 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.196321499 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.182657147 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.185036311 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.191077308 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.458249926 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.188434841 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.294665035 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.674737621 seconds)
  done (took 189.861461297 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.182190876 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.296098453 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.383830311 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.219649408 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.702996328 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.383325819 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.333033845 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.786661295 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.200016646 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.198576739 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.444571863 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.186113368 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.521011455 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.152281 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.213536505 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.218190102 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.389642034 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.5117291 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.21999048 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.33734519 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.187866366 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.457435685 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.359790498 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.393756533 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.208781855 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.270181052 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.226324854 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.195001433 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.373055037 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.333447245 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.184667736 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.222905795 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.751965113 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.033630397 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.203592485 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.216390857 seconds)
  done (took 149.605074631 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.184326757 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.179896957 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.18056088 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.211205154 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.184093191 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.689337046 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.685378548 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.679358249 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.59318905 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.342199629 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.373519076 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.178719777 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.271955761 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.193620768 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.179057682 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.196465493 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.221778808 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.176638203 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.180753506 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.67485665 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.189868734 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.265586803 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.34540718 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.191651631 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.209308726 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.567746985 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.177375036 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.207257281 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.498788298 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.219960312 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.177227893 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.483919114 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.366256374 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286577596 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.177485133 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.179003264 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.206947852 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.179274998 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.451978526 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.177891566 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.178418591 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.181575646 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.786410923 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.181094443 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.673787965 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.17887321 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.065794927 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.178309526 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.181786034 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.346380335 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.70476225 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.197152518 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.181725446 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.181042986 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.179360264 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.178593603 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.206705883 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.387117782 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.268419638 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.194950584 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.183631573 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.209196097 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.180834244 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.285140848 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.179237277 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.463048027 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.23641215 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.297241154 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.673567774 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.179619606 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.275893877 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296757381 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.180101526 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.181803277 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.182516942 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.181531137 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.288139693 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.179497463 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.179225275 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.543233557 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.343598988 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.195285689 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.32069771 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.278455436 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.180415988 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.51454079 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.181514497 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.183894668 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.8659248 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.274331952 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.180652851 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.181819776 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.183085608 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.546950896 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.181481723 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.678724119 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.364159419 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.185480696 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.408292564 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.180647846 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.566980987 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.180392709 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.67168613 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.811925684 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.188132053 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294721284 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.344911127 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.19795199 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.184047064 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.336036183 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.185882955 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.244891666 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.181919988 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.579637576 seconds)
  done (took 360.655115091 seconds)
done (took 701.233998781 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.780520368 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.768464931 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.86769933 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.761248661 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.730543855 seconds)
  done (took 10.013886081 seconds)
done (took 11.122125333 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.355234451 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.35253248 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.235513523 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.356997851 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.212415269 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.372318865 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.332124746 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.202250125 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.278916728 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.256631634 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.279175297 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231390941 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217502979 seconds)
  done (took 17.790491751 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.484219936 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.477837706 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.24628921 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.493859215 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.223775525 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.483305734 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.381293757 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.385423894 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.417048399 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21433042 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.198083554 seconds)
  done (took 16.114905287 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.524607592 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.485241851 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25188123 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.491448993 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.225122226 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.474526672 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.379009263 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.389700522 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.388110061 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215525045 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.199499684 seconds)
  done (took 16.133556644 seconds)
done (took 51.148628303 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.198073692 seconds)
  done (took 2.306482172 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.229715406 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.384835647 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.211488175 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.205784918 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.195047181 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.196813714 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.203037648 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.195547214 seconds)
  done (took 10.932197794 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.197639818 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.192525445 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.194068269 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.193295227 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.191538855 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.194386726 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.190975118 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.196141947 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.1960216 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.193916418 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.193751156 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.195137168 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.19456277 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.192719703 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.195107524 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.197094022 seconds)
  done (took 20.219921008 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.195593793 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.193010412 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.194312176 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.195058647 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.194894575 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.194401214 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.195603205 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.193885247 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.195061628 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.194085836 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.194676468 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.192544552 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.193675824 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.193470801 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.195011244 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.196135656 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.195527924 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.195854018 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.199646337 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.194265956 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.196140044 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.194929179 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.19401997 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.19366625 seconds)
  done (took 29.788919015 seconds)
done (took 64.358199414 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.781841993 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.666863968 seconds)
  done (took 6.560244662 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.198604805 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.194667756 seconds)
  done (took 3.507755662 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.19913615 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.195551734 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.197162576 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.195554935 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.196687569 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.197837241 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.19668288 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.195675515 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.196920973 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.197006608 seconds)
  done (took 13.081247795 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.199751023 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.196510115 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.196527744 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.199766153 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.198039415 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.197306832 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.196396642 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.19816657 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.198551848 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.195944568 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.199697205 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.197830362 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.198621334 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.19836048 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.199508868 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.195175043 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.194931331 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.196212265 seconds)
  done (took 22.671095756 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.200171544 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.197485617 seconds)
  done (took 3.511813515 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.198159582 seconds)
    (2/7) benchmarking "second"...
    done (took 1.198018202 seconds)
    (3/7) benchmarking "month"...
    done (took 1.196844075 seconds)
    (4/7) benchmarking "year"...
    done (took 1.196261327 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.198723802 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.198718121 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.198296682 seconds)
  done (took 9.498890204 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.20329668 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.369647497 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.465388801 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.779047515 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.201343949 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.203737365 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.055709681 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.20378128 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.20688491 seconds)
  done (took 13.802892698 seconds)
done (took 73.747729183 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.191312902 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.205150112 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.334406624 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.192766988 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.206786329 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.538562751 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.212869566 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.320266183 seconds)
done (took 37.319106113 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.21247451 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.177923013 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.85678104 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.189414395 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.192563138 seconds)
  done (took 18.531582275 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.161468308 seconds)
    (2/2) benchmarking "read"...
    done (took 1.525537311 seconds)
  done (took 4.802013335 seconds)
done (took 30.662946922 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203651967 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.20174038 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.199598872 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.20208392 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.200005841 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.199266961 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.198717767 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.203119577 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.203162766 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.200119588 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.203458952 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.201825825 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202694061 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20045153 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198949609 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20022533 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.201007145 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198939747 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.200797421 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.198434967 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.203387798 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.200383022 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.200190092 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.198889163 seconds)
  done (took 29.937791464 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.202961886 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.203732034 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.202187257 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.20090504 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.201744598 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.199889941 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.200639547 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.198256902 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.201514487 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.202919535 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201252281 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.200799788 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.202955908 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.198989681 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202947507 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.20102228 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.203903876 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201701912 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201458572 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.199777858 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.200618726 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200021795 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.201033496 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.204378007 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.20093653 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.202360502 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.203808342 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.203198284 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.206066105 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.201311335 seconds)
  done (took 37.171138205 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.210351566 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.211481268 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.204815949 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.202572251 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.205697674 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.205234777 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.205832891 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.204457841 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.206340474 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.204748249 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.204057385 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.203519638 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.20397809 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.203187918 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.202796615 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.203132931 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.204254697 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.203087104 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.205013443 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.205481692 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.205237347 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.20448956 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.205808899 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.204940432 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.203320161 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.204268152 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.207206687 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.206323199 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.206069845 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.205803091 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.203979276 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.202931667 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.204813656 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.204086791 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.204940017 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.204292366 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.208759412 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.214352249 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.20520483 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.206324771 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.203955374 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.206345942 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.205592644 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.206118622 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.207276613 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.207354838 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.207131422 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.207802541 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.208360273 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.206844072 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.207186364 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.205620131 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.203560392 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.205027236 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.20797198 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.20397266 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.204299641 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.208234478 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.207086092 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.207636492 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.206821247 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.206075246 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.205728807 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.208567809 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.206268661 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.206139197 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.206306004 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.207720502 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.208034406 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.207791625 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.207983695 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.20688461 seconds)
  done (took 87.945645393 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.207879845 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.202931485 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.205904442 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.20551001 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206374701 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.208347929 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.203849384 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208432426 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207028034 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.208095319 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205831696 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.206184148 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204943774 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.208515699 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206498327 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.205567666 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.209254534 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206882828 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.208865632 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.207407838 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.206908439 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.204237069 seconds)
  done (took 27.667729416 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210087301 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.211547439 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.207229871 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.20978413 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.207355512 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.214922124 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.208371539 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.212429573 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214859759 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209675404 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208878901 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210775306 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.207468181 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208364818 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208849837 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.209499234 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210118807 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.208351055 seconds)
  done (took 22.901417122 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.209073241 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.209685013 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.209354127 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.207128438 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.208915499 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.213377036 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209125467 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.212100704 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.212396126 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.209622729 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.21175569 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211466364 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.211245958 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209096204 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211128739 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.209737215 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.211033015 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209857773 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211335424 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207841263 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.209203493 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210319192 seconds)
  done (took 27.748890633 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212077361 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.211914752 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.206897696 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.209251255 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.207433688 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.210798922 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.212657853 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.207004761 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.210170541 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.210455704 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208412444 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.210972682 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.212219803 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.209766998 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.208859053 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211818435 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.213119343 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.21165147 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210279918 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.21025553 seconds)
  done (took 25.331059718 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.214799823 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214053523 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.214463456 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214097995 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21542821 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.214805617 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.213737583 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.214505623 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.215163343 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.214056381 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.214564355 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.213648807 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.214433485 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.214112778 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.210838075 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212181116 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.215153401 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216963823 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.213584847 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.21653554 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.215148065 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.215276561 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.21601489 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.216487147 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.215380111 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215349931 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216421703 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.214384016 seconds)
  done (took 35.138125403 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217529184 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.212944633 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.213113437 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.214443371 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.214529649 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.213813115 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.214117614 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.211896205 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.214582734 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213757052 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.213561135 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.213813058 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.216618767 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.216246516 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.21605692 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.215272872 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213647858 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.212574086 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212658959 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213103738 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.215420444 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21525357 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.218160317 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.214153299 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211888762 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.216695992 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21063228 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.211054876 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217564324 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.212396113 seconds)
  done (took 37.555973727 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.236399953 seconds)
    (2/2) benchmarking "in"...
    done (took 1.234074684 seconds)
  done (took 3.600369037 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.216181076 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216927047 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.215662306 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.215716723 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.216403096 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.218618906 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.217642361 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214765744 seconds)
  done (took 10.861843289 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.21799685 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.216235387 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.217094031 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.217457695 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.22015206 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.219938734 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.222785114 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.234518037 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.220667502 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.2174384 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.223597958 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.225572624 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.219736274 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.217246514 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.216169461 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.217510552 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.217576707 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.217173549 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.219848893 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.219984639 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.22016114 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.221286648 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.219011551 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.214315523 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.21930583 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.227937805 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.2364355 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.217367612 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.217564922 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.223185087 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.217779381 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.215866635 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.220689027 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.219493677 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.217780322 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.220922426 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.227321257 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234738254 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.223919385 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23645067 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.219987006 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.220089525 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.221385643 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.220078262 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220511235 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.220306405 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.223183936 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.220479164 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.221815296 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.223992411 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.226809899 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.22156079 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.219451432 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.224657765 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.222236445 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.226368103 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.236059541 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.22478185 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.232466501 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.232454994 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.248147684 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.243025944 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.223893592 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.219636622 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.228629921 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.244544321 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228044553 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.234548216 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.219884343 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.222618265 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.227752429 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248425173 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.243003441 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.223644009 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.220669735 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.221532944 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.222911515 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.222538891 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23178071 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.240948868 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.222072685 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.223675741 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.231058761 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246543621 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.221114969 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.2217815 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.222274183 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.222919786 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.222741717 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.232764686 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.238220254 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.222258123 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.221794974 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.222835645 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.222178826 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.222402431 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.221592216 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.221901166 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.219965952 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.223407516 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.223574476 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.225563593 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.23258934 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.223277729 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.224532426 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.231708368 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.240030693 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.225234658 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.230845014 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.225554688 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.226239957 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.225300783 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.229038274 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.22104771 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229010481 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.231757069 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.223307997 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.225624963 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.22566174 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.225355575 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236217222 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.249427078 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.227625275 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.227556673 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.231921083 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.236562247 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225003317 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.227867219 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.225725763 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.225017463 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.224807551 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.228332251 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.226293116 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.229190512 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.228790347 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22889156 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.225885672 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.228437609 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.227158474 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.228269791 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.225394145 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.227362271 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.230284267 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.227987125 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.226606318 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.229567487 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.231535883 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.242505972 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.228593025 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.226295652 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.225755003 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229501957 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.229142003 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.226363454 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.228723771 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.228564635 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.228899949 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.23018571 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.227993786 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.230461089 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.228102118 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.23087091 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234940452 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.229320363 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.232413212 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.225979362 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.224486753 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.229675986 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.231249884 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.228837649 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.231056483 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.229727664 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.232686968 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.237860087 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.227576132 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.22918273 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.229490956 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.227016564 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.229444011 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230394505 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.23322171 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.240089188 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.228577423 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.234164469 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.24573149 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.230986768 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.229614326 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.23187594 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.230672605 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229838585 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.231823814 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.238662107 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.242532277 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250256315 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.229292106 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.235749821 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.231713797 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.235756486 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.232615191 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.22915361 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.232862608 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.232747141 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229132059 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.230163538 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.233393819 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.231930157 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.229854941 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.23020782 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.230486861 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.233130033 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229879584 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.230469953 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.232355532 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.227678675 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.229712255 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.229244736 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.229917483 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.226897398 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.228623054 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.232876634 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.230967667 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.234029135 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.238612073 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.228296415 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234172724 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233247606 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.229941576 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.23247307 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.23189917 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23424938 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.234294104 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.241602301 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.247576912 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.235499284 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240173691 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.248530704 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.23341924 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.237346861 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.231980632 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.23157564 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.233411141 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.243497105 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.234688342 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.23423676 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.234810209 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234270765 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234155618 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.238961367 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.24822203 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.234855295 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.231511143 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.235415911 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.232260319 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.236113713 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.234837006 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.23351636 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234317602 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236681339 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.236271641 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.235545215 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.236694309 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.235813219 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.235991934 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2398574 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.244509586 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.239960602 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.232991094 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.238727543 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.237650338 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.241157119 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.237086441 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.236440879 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.236698997 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247927529 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.256763039 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24262275 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.255992766 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.236600481 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244480724 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.250590779 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.238287884 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237605597 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235994615 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.237679004 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.23807331 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.235870886 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.238829763 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.238417444 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23969523 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.237821488 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.24243486 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.235158183 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.234818009 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.239067025 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.239523721 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.238840266 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.23793056 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.239788331 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.240470244 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241441419 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.236983876 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.239158901 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246578466 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254308465 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.240575612 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.239419902 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.238361145 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.239812828 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.240447151 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.238499716 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.243495356 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.249028301 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.242238072 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.249200143 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.241617067 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249844362 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.240556435 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.242885465 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.250120494 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.237809533 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.239201346 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.240993682 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.241939087 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247957735 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.253379957 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.240593423 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.244767957 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240046598 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.241515242 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.236895563 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.237269304 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24079122 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.240872941 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24617176 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.254282084 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.245347947 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242623306 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.235538607 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.241845846 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.241091574 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.23942056 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243513922 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.238771959 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.241829975 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.240248467 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.239626206 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.243082102 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.242191109 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.242609171 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.239913631 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.240470739 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250791326 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.257948872 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24632947 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.240182874 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.24613143 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25731246 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251015168 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.257933988 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.242386158 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.241629216 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.241148931 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.24562824 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.24204615 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.243981894 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.243959073 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.239925017 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.246961022 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.243893196 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.244943398 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.244657385 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.244544275 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.244460391 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254136448 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266869753 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.245737959 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249507632 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.241699 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.242340326 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.248805576 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.24520788 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.243236057 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.245483358 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25478756 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252798542 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.244206294 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.244972464 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.241582432 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244076634 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.244963804 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.243755807 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.242681262 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.247216359 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.246394401 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.244982111 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247025102 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.242669092 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.244904091 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243239373 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.245249273 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.254797888 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.261160732 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.244784137 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242022716 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.243548863 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.245724555 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.24522716 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.24341557 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245919155 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246049464 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.247057683 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2529292 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.252710229 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.246174726 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.244336743 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.246141179 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.24592287 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.246381962 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247036678 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.24506995 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246310444 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.24612417 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.246975721 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.246936661 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.246129834 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.247176309 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.247250005 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247025067 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248600485 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.254400907 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248184874 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.245728216 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.248019653 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247832732 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.245698539 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.247263079 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.254978284 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265045066 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.259194833 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.256106873 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.252876416 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.247255 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251132255 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.256156993 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.245678906 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.246571439 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.248071615 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.249016161 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.249372629 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.252848913 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247687442 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.255235011 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.26214927 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.248126047 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257140648 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.262544641 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249517817 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.249489197 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.251783963 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.247866228 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.247127419 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.247023431 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.247617329 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252720893 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.264356743 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246471855 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.247486936 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.245876756 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.250621977 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253699138 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250250489 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.248758008 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.246816966 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.248071702 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245626665 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24892443 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.248291122 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.250280194 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.246396099 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.253857638 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.258158006 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.249949401 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.251862282 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.250965835 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.249307555 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250617525 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.248980519 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.249351857 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.246645595 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.250912493 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25338926 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.249967698 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.253218972 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.250846929 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.252559243 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.254058118 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250744831 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251998586 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.258773329 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.257686141 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.245209146 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.247998132 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.25113767 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.251810929 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249593236 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.251015095 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.250231696 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.248096832 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.247790379 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249906429 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.251894012 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.25090703 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268608466 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.264598322 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250175057 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.250935837 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253744514 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.250632955 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.250649831 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.251508857 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.250600404 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.250804835 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.257033209 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.251057554 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258062696 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266714563 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.250253221 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.257468694 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.252532038 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.259175424 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.254758169 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25184793 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.251906347 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.256082363 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.265027507 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250782538 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259710984 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.279648572 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.266957712 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.250805438 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.251272955 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249456658 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.251513383 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.25237594 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.250773229 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.24959438 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251144823 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.251610293 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.251482249 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259506187 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.251713052 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.252192573 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.249666669 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.249694849 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.251936869 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.2498834 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.251861579 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.254204097 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.250019291 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.251003793 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.251620206 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.252782856 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266928654 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.275227404 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.252509957 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.253939979 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.253172682 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.25529833 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.255074446 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262192098 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.260756168 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.252776188 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.25295402 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.254454119 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252054534 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.252327496 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.252312244 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.251607255 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251384054 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.24987485 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.267535588 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274934886 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.257192685 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.25224614 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257645165 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.253080625 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253097706 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254388801 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255009617 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.255881155 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.25546708 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262209087 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.253330763 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.25478033 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.25695246 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.265250596 seconds)
  done (took 740.134343836 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.252599874 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251430713 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.252417584 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.251828258 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250980646 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25273493 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253821205 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.251909924 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.252107514 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.251517883 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.25148182 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252234321 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.251723682 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.252916953 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252869355 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.252844442 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251092619 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.252330369 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253500147 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252727025 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.252476803 seconds)
  done (took 27.462327202 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.260200506 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.252654307 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.254072134 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254939757 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252817811 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.256663791 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.254048082 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25604923 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.255314077 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25227538 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.255380934 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254910058 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.253485506 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.253791365 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253744264 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.257035918 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.254799428 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253351976 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.256795611 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.255044888 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256593124 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.255557873 seconds)
  done (took 28.77478994 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.259610261 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.257094126 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.259174599 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.253638394 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.257955202 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.255556643 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.258070356 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.256314531 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.256698102 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.258293497 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.255029727 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.257839393 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.265545801 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.262563663 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.25871043 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.257270394 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.399859885 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.256726042 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.256172085 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.256992742 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.25565298 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.264161407 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.270511411 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.255550752 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.25523227 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.258425331 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.257082928 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.257000461 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.258432409 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.257849096 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.261615553 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.257760631 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.257541796 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.258898692 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.256558093 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.25714416 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.265192479 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.260287161 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.25515966 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.260047758 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.269315167 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.281899892 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.259168956 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.265641437 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.277494641 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.258312284 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.261001616 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.266013396 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.255074585 seconds)
  done (took 63.04231613 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.260600366 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.258702373 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.256470223 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.257921278 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.262281545 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.259609847 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.259211882 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.259063154 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.258164666 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.257018919 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.258857197 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.257969875 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.255652008 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.261161721 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.260907547 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.257467509 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.257635752 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.25969535 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.257690639 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.256531287 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.257206002 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.25984109 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.258712889 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.258830268 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.260788998 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.257107374 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.258478582 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.259857666 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.258507689 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.25828343 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.259766426 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.260518434 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.260632008 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.257204717 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.25843087 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.26185647 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.262890538 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.26052529 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.261346813 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.257864701 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.26389376 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.260865774 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.262079849 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.262438225 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.258803959 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.25883088 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.260676976 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.260106039 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.259211176 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.261886373 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.26175655 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.260773621 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.262194938 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.260532262 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.262911706 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.261588247 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.258299463 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.260351285 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.262908946 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.259099986 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.260180748 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.259614732 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.262019771 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.262891962 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.264048934 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.260734475 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.260799941 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.262327201 seconds)
  done (took 86.845960089 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265997317 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.263798392 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264359819 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263938053 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.262873818 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.263386052 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.263165432 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.263367236 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.263867639 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262706001 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263142118 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.262874649 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.262256071 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.263969458 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.263756441 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.263363164 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.265226597 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264510173 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.264698496 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264041591 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.263073193 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.261944087 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.264071896 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.2638118 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.265514233 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.265376364 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.264757464 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.262087891 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263502139 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.264168509 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263898009 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.263593431 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.263385204 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.264524304 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.263512453 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.261873853 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.264302173 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264108949 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.264552175 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.264658932 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.263872031 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.261937265 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.265602582 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.26418473 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.263639626 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.264013661 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.267081493 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.265452576 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.266194515 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.262912389 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.26523984 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264551275 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265261273 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263819924 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.265739434 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.265306773 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264852067 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265627768 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266029232 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.266840065 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.264375271 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.263754246 seconds)
  done (took 79.553299863 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.269669474 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.264065197 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.264138542 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.263597689 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.266581576 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.264754916 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.266441802 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.266871483 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.26585599 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.265684852 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26641944 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264305964 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263646712 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267465442 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.263612114 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263774404 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265376769 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.265369899 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267702141 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.265524837 seconds)
  done (took 26.486643928 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.26555334 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.268298143 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.26408948 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.264774156 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.265143848 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.265678247 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.266349077 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267154111 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264987071 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266440084 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.267329942 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.265526218 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264887994 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266175799 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.267605329 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.265575011 seconds)
  done (took 21.433887569 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.267111821 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.269836652 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.267785076 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.26425264 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.266000166 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.266089449 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.26697083 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.266693729 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.263674035 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.269276644 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.26693535 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.269346936 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.267895049 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.26867429 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.266562376 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.26643485 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.264080732 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.26690277 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.26981157 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.269515211 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.266977869 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.268675324 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.267475148 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.270012256 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.26822396 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.266659991 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.267540462 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.266948169 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.266701782 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.26717695 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.266864167 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.267828667 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.267791361 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.268390297 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.271499693 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.267613668 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.270530009 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.270754013 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.272210915 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.270317979 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.270784155 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.267393328 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.271254244 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.271787642 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.267848802 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.269613505 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.266595608 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.270221836 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.269802984 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.268109478 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.271731461 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.269407241 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.271184296 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.269743465 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.272568397 seconds)
  done (took 70.942168195 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273638149 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.271765483 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.267247181 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.271378673 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.270939364 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.270364296 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.271576881 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.272013607 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268476713 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.271572656 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.270589635 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.274517187 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266919269 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.274572473 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.271845299 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.272378968 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.269913976 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.267864896 seconds)
  done (took 24.059748695 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.271178463 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273438082 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.27406861 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.269654876 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.271076573 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273292617 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2712854 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.273505783 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273326782 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.27311221 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270134115 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.2789199 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27449139 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.273273583 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.272861163 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271053935 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.272599598 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273706519 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.273424249 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27055329 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.274365089 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274049082 seconds)
  done (took 29.186851515 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.278468947 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.272477311 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.271545413 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.293191508 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.290526047 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.294027794 seconds)
  done (took 8.883720406 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284892925 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27405164 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.272446181 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275649286 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274574482 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272976176 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272350257 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272309611 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275112596 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272731128 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272582798 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274688121 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274257762 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273165971 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275599961 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275635932 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274134729 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272260769 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272911411 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276860523 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27349585 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275262311 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272522498 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274394292 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272429381 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275024884 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275066847 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273961447 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27292985 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276038003 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276966995 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275730392 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27673931 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273012432 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278374057 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277621017 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27207387 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277650688 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278620398 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274828749 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278055976 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275148459 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277948469 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275715913 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277203365 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27548161 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276544356 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274714153 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274166296 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276621955 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279447002 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276230897 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279255073 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278018774 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278809467 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276346469 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272996401 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275323764 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278095387 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27608501 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275603647 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27895706 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277028139 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27567132 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279609067 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275880234 seconds)
  done (took 85.396343144 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275324905 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276028751 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276681951 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276224823 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273627157 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276305606 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276696416 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275480878 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275764925 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276949851 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280016734 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275947024 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277752467 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27687695 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278341409 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27769642 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27650361 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27744895 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27688341 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280956015 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277502694 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277848274 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277531731 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277111769 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275755562 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280664714 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276551373 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278722392 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279175406 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279223995 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278223267 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278897718 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277259824 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278629642 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278448529 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279234393 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278483375 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278037632 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280107743 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279538364 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278535189 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281022099 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27886677 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277988427 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27961344 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278419564 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277962861 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280638696 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281320429 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289718731 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285330018 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286651511 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28652785 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285015342 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285742013 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283853617 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291080382 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286067235 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282767267 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289136368 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287385843 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287391427 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291490037 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28768662 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291066448 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286438498 seconds)
  done (took 85.69257362 seconds)
done (took 1724.872853775 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.449833653 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.40235612 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.28176614 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.284717717 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.279599392 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.297249227 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.290912816 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.278287563 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.281064249 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.278317386 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.27822845 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.464983618 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.282289374 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.279314445 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.276334995 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.371819365 seconds)
  done (took 42.271957727 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.306609395 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.286344768 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.388798129 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.30133503 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.302814331 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.460969525 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.339682263 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.28422016 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.444406205 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.324169604 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.749245614 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.305435428 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.284988165 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.328908755 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.302089038 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.463914548 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.516796287 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.75510852 seconds)
  done (took 29.338084043 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.701987433 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.295764473 seconds)
  done (took 9.191194595 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.302853279 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.28219026 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.284519537 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.281858657 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.273741746 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.27472803 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.281154651 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.278551197 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.749239013 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.402307859 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.288182574 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.294534562 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.30076273 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.284460465 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.282990221 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.322801495 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.492370224 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.287370937 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.282210974 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.287659018 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.284710524 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.364888937 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.324588564 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.287060178 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.402626793 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.74251467 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.28868686 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.295838043 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.462396922 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.283122134 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.282926623 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.285816374 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.287120893 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.191186121 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.716348361 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.297566942 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.309752581 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.292949313 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.281993589 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.433054322 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.28491927 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.292085698 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.284221182 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.710665419 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.425256278 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.405406982 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.419122144 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.303083322 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.290653451 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.3521786 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.293223575 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.290440989 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.331810699 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.038299183 seconds)
  done (took 108.567607778 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.295174774 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.671272973 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.444858024 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.301046864 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.998818093 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.872998741 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.294912097 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.546944282 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.328199629 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.277414074 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.562955077 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.763651996 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.302839225 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.299355516 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.941873423 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.341738382 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.280916349 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.991377649 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.290438011 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.289107412 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.767712743 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.285500004 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.278424365 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.529175899 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.327958161 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.718330031 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.613030435 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.703399495 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.30187461 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.283529489 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.725124369 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.299155424 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.296922113 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.287553666 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.537855728 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.616539541 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.613184671 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.295668066 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.297776135 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.288203548 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.307590735 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.711904117 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.616817208 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.29683275 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.284842566 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.719029206 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.299225227 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.288303419 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.284169152 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.48810958 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.924051854 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.287261589 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.614071131 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.282323836 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.560469515 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.345631664 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.335238067 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.747230982 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297863226 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.330237676 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.320593724 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.287121551 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.292558903 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.2874317 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.287490661 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.609414788 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.60168928 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.286981581 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.612857052 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.737722565 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.300650634 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.802575717 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.173878507 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.312246723 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.341173035 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.286093114 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.818915481 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.754939487 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.304541023 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.286894185 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.598410071 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.305228538 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.558395549 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.303468166 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.303161069 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.797526651 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.293650851 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.335273396 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.287072697 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.292368288 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.901666357 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.294316157 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.55792186 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.326174883 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.288516542 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.287263948 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.308636961 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.300633772 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.28788502 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.287397263 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.7927389 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.312515299 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.455758685 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.310273658 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288257881 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.289516227 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.289858388 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.289551193 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.502406866 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.801987128 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.313751347 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.288636326 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.295139814 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.291978323 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.58287194 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.289155385 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.576845261 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.306192472 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.28932465 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.287876661 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.911118429 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.318258516 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.289261538 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.294713127 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.15610332 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.498355027 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.307771021 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.289571149 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.290226249 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.306380045 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.449422459 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.309575207 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.34526449 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.293903699 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.97144419 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.34207933 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.314788345 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.578621708 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.30253256 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.141768779 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.314616428 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.291574097 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.583236987 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.548628906 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.481572729 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.29346561 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.307722602 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.966757988 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.324993312 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.425315502 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.307578055 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.384441463 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.483293566 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.455129922 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.288835434 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.876396777 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.288753127 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.501017481 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.289640743 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.591395179 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.754388827 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.304978016 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.294472717 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.966300793 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.011020538 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.086607387 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.280121683 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.547430785 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.219907485 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.753107488 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.274540146 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.278382112 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.68557816 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.272373684 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.279298061 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.269338335 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.270696577 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.417460105 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.442317971 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.915193376 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.270469215 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.69980476 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.295044783 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.265617211 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.276900405 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.265290298 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.61159418 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.335426352 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.265684467 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.290501174 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.264940964 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.266797537 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.715172887 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.187989385 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.270262177 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.413788829 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.871434802 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.28231331 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.263594657 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.919062964 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.450394277 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.748962766 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.315430974 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.547281995 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.270129964 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.291423132 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.803658145 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.273260436 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.707892175 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.270277339 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.257965032 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.824883095 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.2712203 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.37367649 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.253186964 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.258851898 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.757809727 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.267834504 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.254610118 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.404103542 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.26853865 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.507529284 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.246517455 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.26649672 seconds)
  done (took 1097.822207094 seconds)
done (took 1288.385725895 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.245101277 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.249869807 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.228773215 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.248911942 seconds)
  done (took 26.136930184 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.261421441 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.254168141 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.252937123 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.251252207 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.255231422 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.251894128 seconds)
  done (took 8.691575171 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.312594419 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.251250003 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.250964019 seconds)
  done (took 18.980115655 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.445326032 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.475127942 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.573216857 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.320944939 seconds)
  done (took 9.980605364 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.253713069 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.252819843 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.252213617 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.256330871 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.263782854 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.263612994 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.254880038 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.255026649 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.263932355 seconds)
  done (took 12.480243187 seconds)
done (took 77.437117149 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.259132755 seconds)
    (2/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.425516823 seconds)
    (3/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.347685295 seconds)
    (4/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.353221899 seconds)
    (5/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.052360049 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.501438927 seconds)
    (7/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.257494692 seconds)
    (8/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.362559621 seconds)
    (9/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.273517051 seconds)
    (10/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.274712958 seconds)
    (11/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.609980304 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.309180671 seconds)
    (13/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.229170916 seconds)
    (14/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.346943108 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.279057208 seconds)
    (16/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.013503307 seconds)
    (17/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.680008595 seconds)
    (18/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.827195952 seconds)
    (19/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.237143309 seconds)
    (20/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.328054947 seconds)
    (21/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.332246556 seconds)
    (22/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.229236855 seconds)
    (23/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.233818282 seconds)
    (24/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.504992574 seconds)
    (25/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.234710595 seconds)
    (26/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.251175472 seconds)
    (27/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.96480845 seconds)
    (28/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.275064205 seconds)
    (29/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.229166126 seconds)
    (30/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.968347909 seconds)
    (31/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.291062983 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 6.249489938 seconds)
    (33/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.229514224 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.432700378 seconds)
    (35/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.241167289 seconds)
    (36/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.273974608 seconds)
    (37/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.229723626 seconds)
    (38/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.276970805 seconds)
    (39/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.335442841 seconds)
    (40/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.365688205 seconds)
    (41/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.849054801 seconds)
    (42/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.684276906 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.362126573 seconds)
    (44/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.248123907 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.534874237 seconds)
    (46/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.266305157 seconds)
    (47/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.055139828 seconds)
    (48/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.263391909 seconds)
    (49/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.364044031 seconds)
    (50/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.379560051 seconds)
    (51/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.649654168 seconds)
    (52/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.353546947 seconds)
    (53/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.635459714 seconds)
    (54/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.505775062 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.308759501 seconds)
    (56/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.366984585 seconds)
    (57/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.230647065 seconds)
    (58/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.630341613 seconds)
    (59/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.269406274 seconds)
    (60/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.43582484 seconds)
    (61/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.723251063 seconds)
    (62/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.831389927 seconds)
    (63/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.359180297 seconds)
    (64/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.17156187 seconds)
    (65/286) benchmarking ("sort", Float32, false)...
    done (took 5.255074294 seconds)
    (66/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.831335776 seconds)
    (67/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.242997095 seconds)
    (68/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.978435184 seconds)
    (69/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.000664739 seconds)
    (70/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.335678372 seconds)
    (71/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.249796322 seconds)
    (72/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.604998627 seconds)
    (73/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.273422855 seconds)
    (74/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.048758234 seconds)
    (75/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.274358776 seconds)
    (76/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.237357954 seconds)
    (77/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.290250083 seconds)
    (78/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.274318802 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 5.394119726 seconds)
    (80/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.312282404 seconds)
    (81/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.939661134 seconds)
    (82/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.264693829 seconds)
    (83/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.043960765 seconds)
    (84/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.256331868 seconds)
    (85/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.589575561 seconds)
    (86/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.092382505 seconds)
    (87/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.300312657 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.595192681 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.664798948 seconds)
    (90/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.440851973 seconds)
    (91/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.298578905 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.268389828 seconds)
    (93/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.520105647 seconds)
    (94/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.684957162 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.635597113 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.850160324 seconds)
    (97/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.982179643 seconds)
    (98/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.952343358 seconds)
    (99/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.733240868 seconds)
    (100/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.336737987 seconds)
    (101/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.22038713 seconds)
    (102/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.635726306 seconds)
    (103/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.277310609 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.450124601 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.863655249 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.132198189 seconds)
    (107/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.221636814 seconds)
    (108/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.524295559 seconds)
    (109/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.900485315 seconds)
    (110/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.337350041 seconds)
    (111/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.221277494 seconds)
    (112/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.989184133 seconds)
    (113/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.221031375 seconds)
    (114/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.446585788 seconds)
    (115/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.64898799 seconds)
    (116/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.02146623 seconds)
    (117/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.470367028 seconds)
    (118/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.222358176 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.858074718 seconds)
    (120/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.245211309 seconds)
    (121/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.275020125 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 1.757849439 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.284487409 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.494991916 seconds)
    (125/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.010316284 seconds)
    (126/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.607262016 seconds)
    (127/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.247572916 seconds)
    (128/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.255073192 seconds)
    (129/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.223005506 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.639804855 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.981659293 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.524027582 seconds)
    (133/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.956193101 seconds)
    (134/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.242685895 seconds)
    (135/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.730700208 seconds)
    (136/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.263138077 seconds)
    (137/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.490129018 seconds)
    (138/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.465552392 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.344334589 seconds)
    (140/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.598266866 seconds)
    (141/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.463215499 seconds)
    (142/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.056086503 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.984278713 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.268772494 seconds)
    (145/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.411835025 seconds)
    (146/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.239331459 seconds)
    (147/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.648560637 seconds)
    (148/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.530206752 seconds)
    (149/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.200910125 seconds)
    (150/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.407750842 seconds)
    (151/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.274913146 seconds)
    (152/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.444887151 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.281725169 seconds)
    (154/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.964059188 seconds)
    (155/286) benchmarking ("sort", BigInt, true)...
    done (took 6.244894015 seconds)
    (156/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.309252927 seconds)
    (157/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.558328412 seconds)
    (158/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.585442641 seconds)
    (159/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.245980676 seconds)
    (160/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.234053895 seconds)
    (161/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.245625002 seconds)
    (162/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.265001515 seconds)
    (163/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.22347496 seconds)
    (164/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.264574335 seconds)
    (165/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.281099571 seconds)
    (166/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.262123123 seconds)
    (167/286) benchmarking ("sort", Int8, true)...
    done (took 6.248469218 seconds)
    (168/286) benchmarking ("sort", Int8, false)...
    done (took 4.313833308 seconds)
    (169/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.27385911 seconds)
    (170/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.225922173 seconds)
    (171/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.753547742 seconds)
    (172/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.369112287 seconds)
    (173/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.234672533 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.286670609 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.807169781 seconds)
    (176/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.245926233 seconds)
    (177/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.718110192 seconds)
    (178/286) benchmarking ("sort", Float64, true)...
    done (took 6.245309028 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.128571319 seconds)
    (180/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.225676403 seconds)
    (181/286) benchmarking ("sort", Bool, true)...
    done (took 5.339141316 seconds)
    (182/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.317759008 seconds)
    (183/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.752829219 seconds)
    (184/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.256366341 seconds)
    (185/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.33175625 seconds)
    (186/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.295781554 seconds)
    (187/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.309293823 seconds)
    (188/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.018719974 seconds)
    (189/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.344371117 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.80996564 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.87584056 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.478329657 seconds)
    (193/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.396132539 seconds)
    (194/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.227484768 seconds)
    (195/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.350991824 seconds)
    (196/286) benchmarking ("sort", Float32, true)...
    done (took 6.247277974 seconds)
    (197/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.330802722 seconds)
    (198/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.340395566 seconds)
    (199/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.950424171 seconds)
    (200/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.27048861 seconds)
    (201/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.378364853 seconds)
    (202/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.255459588 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.08016918 seconds)
    (204/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.490338757 seconds)
    (205/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.335342187 seconds)
    (206/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.22878225 seconds)
    (207/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.265590847 seconds)
    (208/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.295017085 seconds)
    (209/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.582567813 seconds)
    (210/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.415209612 seconds)
    (211/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.761482683 seconds)
    (212/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.232542695 seconds)
    (213/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.285648848 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.655879432 seconds)
    (215/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.458058312 seconds)
    (216/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.262274793 seconds)
    (217/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.247499162 seconds)
    (218/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.26761453 seconds)
    (219/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.437969872 seconds)
    (220/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.262592467 seconds)
    (221/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.5878134 seconds)
    (222/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.747538918 seconds)
    (223/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.309916833 seconds)
    (224/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.228720137 seconds)
    (225/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.425303492 seconds)
    (226/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.501899978 seconds)
    (227/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.244305175 seconds)
    (228/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.232574849 seconds)
    (229/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.566785608 seconds)
    (230/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.10561504 seconds)
    (231/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.235096958 seconds)
    (232/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.790928597 seconds)
    (233/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.46660355 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.607859284 seconds)
    (235/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.363282802 seconds)
    (236/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.231096503 seconds)
    (237/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.100132667 seconds)
    (238/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.367494423 seconds)
    (239/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.234842896 seconds)
    (240/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.229203145 seconds)
    (241/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.23625978 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.277800463 seconds)
    (243/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.229418684 seconds)
    (244/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.25854487 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.636726008 seconds)
    (246/286) benchmarking ("sort", Float64, false)...
    done (took 5.533801381 seconds)
    (247/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.237918621 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.144186605 seconds)
    (249/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.328700256 seconds)
    (250/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.629978482 seconds)
    (251/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.334799282 seconds)
    (252/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.276096164 seconds)
    (253/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.230550059 seconds)
    (254/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.234852034 seconds)
    (255/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.232136827 seconds)
    (256/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.276173232 seconds)
    (257/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.246312388 seconds)
    (258/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.620798029 seconds)
    (259/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.07880821 seconds)
    (260/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.069087938 seconds)
    (261/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.467298359 seconds)
    (262/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.765629566 seconds)
    (263/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.242979249 seconds)
    (264/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.236820812 seconds)
    (265/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.377603728 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.331772856 seconds)
    (267/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.232225976 seconds)
    (268/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.295994929 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.333237507 seconds)
    (270/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.29458917 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.382030794 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.10332935 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.045952102 seconds)
    (274/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.232850142 seconds)
    (275/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.5997993 seconds)
    (276/286) benchmarking ("sort", BigInt, false)...
    done (took 6.252032123 seconds)
    (277/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.261744434 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.293098758 seconds)
    (279/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.249904371 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.280013695 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.86660722 seconds)
    (282/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.254095454 seconds)
    (283/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.235243614 seconds)
    (284/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.377480218 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.135483337 seconds)
    (286/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.3814087 seconds)
  done (took 909.770398076 seconds)
done (took 910.936513372 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.284371122 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.287926909 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.260379736 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.282232676 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.38191237 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.286011477 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.271845317 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.264381991 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.310838691 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.311506803 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.270021663 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.284033636 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.271418008 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.269852128 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.262068534 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.285452416 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.279553231 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.276807316 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.287028004 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.27234918 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.287289146 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.271250879 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.313052958 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.281975348 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.267325042 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.266392505 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.27145971 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.291319706 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.382491571 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.274959227 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.267519432 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.284144782 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.281995834 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.265546352 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.259293493 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.290744446 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.28350644 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.274443444 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.266282992 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.304169478 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.666946405 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.292749743 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.273622425 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.265929519 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.266450713 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.269182689 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.274020125 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.267942383 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.286244182 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.288448578 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.672651073 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.306361154 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.27549372 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.265809843 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.276341812 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.272710451 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.26910838 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.29096838 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.292789593 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.290647586 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.271334286 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.274509027 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.267759 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.289393385 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.280839229 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.716328893 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.281815455 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.269975854 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.669766726 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.289456542 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.716278045 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.302016607 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.268309894 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.286504841 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.305321928 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.284005787 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.266116288 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.265302023 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.28314571 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.273619569 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.273203681 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.288165912 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.271903887 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.268123362 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.28842168 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.290056982 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.277201946 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.277057994 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.277123231 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.292700594 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.282423927 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.286357343 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.27114616 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.2607262 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.274636467 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.267517585 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.278869922 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.278930962 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.272319981 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.27850263 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.669038895 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.314514848 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.26500996 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.265733875 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.266974278 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.289640659 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.670825982 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.296626843 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.289722082 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.316544985 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.269983013 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.276651942 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.284574262 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.294803509 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.276149177 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.27283606 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.262042263 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.273777334 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.685289265 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.311336283 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.270186255 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.274794303 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.295297056 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.269258218 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.262929162 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.287514 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.276452743 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.289921986 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.398541253 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.28019273 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.305873636 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.275933634 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.272298946 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.297305841 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.295093253 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.309189034 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.27275562 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.296251182 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.294130334 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.263706405 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.287073968 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.280961437 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.269346282 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.277214884 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.263288115 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.299064842 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.292822294 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.288554929 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.288788012 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.399759106 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.268887592 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.256900077 seconds)
done (took 215.454165411 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.329513145 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.270375981 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.358733009 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.267151838 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.366432105 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.365493608 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.26567865 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.266329348 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.266512814 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.644566419 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.266850738 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.266071967 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.258547131 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.266999772 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.351548752 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.268901749 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.26215315 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.610874372 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.268222418 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.335757583 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.268992789 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.263630727 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.268204171 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.649214378 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.264689583 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.264423722 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.34033827 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.26913183 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.611781063 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.264004347 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.266524889 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.616199762 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.358029497 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.287088246 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.279454579 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.273661257 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.369160126 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.284092517 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.349278342 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.345435882 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.356068246 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.305766071 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.264903057 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.270644411 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.271818835 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.270918113 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.266292263 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.298186238 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.268686447 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.266189412 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.613776152 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.28051355 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.26612568 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.26640936 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.266645383 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.29797651 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.26931264 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.272225263 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.35631524 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.272493903 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.334900959 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.649266168 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.647244879 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.272435858 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.263561882 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.267674943 seconds)
  done (took 144.060025223 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.338036926 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.344053523 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.381886765 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.287637833 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.324869132 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.385673469 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.288079293 seconds)
  done (took 10.530547416 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.272263412 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.273603834 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.32090383 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.321849669 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.272627669 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.450988185 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.273122725 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.280193433 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.280015273 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.32521162 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.275581951 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.274727978 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.279618447 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.266648853 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.321140559 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.284657209 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.389465659 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.273112564 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.274174083 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.43323502 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.270669048 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.281080557 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.32584701 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.284318211 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.276257105 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.278989158 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.093957563 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.274470837 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.271499709 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.274372342 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.272186017 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.351997712 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.276183259 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.268918698 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.271927631 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392054037 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.275590262 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.272066271 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.274521283 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.270326983 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.275109199 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.276020821 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.276660778 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.273079617 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.277408578 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.298413186 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.275179697 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.275817157 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.272917214 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.276582906 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.325313619 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.276036766 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.273304021 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.273769552 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.331823911 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.281068154 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.27662811 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.272718527 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.277926149 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.2747448 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.436671918 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.324538914 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.277542188 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.324001513 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.278074037 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.274275471 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.277851753 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.27767912 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.330197884 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.277374998 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.323926288 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.275417393 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.463285866 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.296536418 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.279282176 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.27992667 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.279898196 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.277009059 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.272573903 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.283042815 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.27538402 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.279223687 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.283228987 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.27589579 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.276451547 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.452096992 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387816373 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.275869965 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.289918424 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.285327984 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.275719948 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.330909662 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.278488633 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.275599739 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.328910035 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.393186737 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.33173175 seconds)
  done (took 147.926945542 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.282577229 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.286475094 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.281509438 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.301981796 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.297006887 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.27871208 seconds)
  done (took 8.915982004 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.28145212 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.280199053 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.279600128 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.280715922 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.279649806 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.281810534 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.27749796 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.27981148 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.284422176 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.280043115 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.280857175 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.284501222 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.283465144 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.280017803 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.281360466 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.279978102 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.280602499 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.278889749 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.280776424 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.280916406 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.383542536 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.282025351 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.281131396 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.281023507 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.285355055 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.281043192 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.289810848 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.280740357 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.281337043 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.285840789 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.299109853 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.28293108 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.281831547 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.287371384 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.285884663 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.282351754 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.285443155 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.286604674 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.280203185 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.283286148 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.286106197 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.28140488 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.283130755 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.285581196 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.283479177 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.288598939 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.290581276 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.291353712 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.282992761 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.286200493 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.285814117 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.281714642 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.284927131 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.286303086 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.284293105 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302160661 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.290859115 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.28243048 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.282953381 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.28352051 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.285041334 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.285109977 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.284529634 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.28800424 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.281427645 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.287904613 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.285089806 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.288996918 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.284407967 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.280442653 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.288947773 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.279238414 seconds)
  done (took 94.737437353 seconds)
done (took 407.347722461 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.601768149 seconds)
  done (took 7.792710131 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.329990102 seconds)
  done (took 7.521176892 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.05161071 seconds)
  done (took 21.251197773 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.383513324 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.367177844 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.30157287 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.290514492 seconds)
  done (took 26.539103614 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.603532347 seconds)
  done (took 7.795860321 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.287588943 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.275475149 seconds)
  done (took 13.756294153 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.742291096 seconds)
  done (took 7.933059663 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.568760327 seconds)
  done (took 7.768838307 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.294913837 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.295297282 seconds)
  done (took 14.039055285 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.261902071 seconds)
  done (took 7.455977261 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.096657775 seconds)
  done (took 11.294626308 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.2881559 seconds)
  done (took 7.487146836 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.2949923 seconds)
  done (took 7.490516784 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.160598584 seconds)
  done (took 9.357394507 seconds)
done (took 158.672386721 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.282896287 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.287142399 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.286057843 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.285725021 seconds)
  done (took 26.328729923 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.323795654 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.324261236 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.324291429 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.333726859 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.325809221 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.325248859 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.315419603 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.312755419 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.33399082 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.326468985 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.326416717 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.326828625 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.325198233 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.314271908 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.326235301 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.326131382 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.335240139 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.326311813 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.317017937 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.327670249 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.291236416 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.335980038 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.325602645 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.290990097 seconds)
  done (took 32.933860454 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.808642486 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.361926705 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.444877889 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.342679332 seconds)
  done (took 7.150569048 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.343263053 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.345060996 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.356507013 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.394439204 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.41993361 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.354233165 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.315894079 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.311345296 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.299425881 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.345295639 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.41992814 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.360824561 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.429522313 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.291757438 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.474859197 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.291822001 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.291441429 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.345465776 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.395557036 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.409559341 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.2894674 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.343261528 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.349249622 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.358805156 seconds)
  done (took 33.735910239 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.2931601 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.309897359 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.29215731 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.29132127 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.301064583 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.292904447 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.291906326 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.293481056 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.292403281 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.298397067 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.291343395 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.30527501 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.292002259 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.292944122 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.298657174 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.293287135 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.300005607 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.292380771 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.292850351 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.299094036 seconds)
  done (took 27.116330825 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.287578478 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.140521881 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.635488219 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.539151351 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.287297014 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.285892728 seconds)
  done (took 27.374377612 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.360211627 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.510072913 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.297480359 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.638052977 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.7282188 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.310216403 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.293233076 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.53036339 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.839637527 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.825119615 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.355356192 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.362445127 seconds)
  done (took 19.247618013 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.292497829 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.290751707 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.294481998 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.306041808 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.343703784 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.319189394 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.301678181 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.287281207 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.354387595 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.372157928 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.320476705 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.348365954 seconds)
  done (took 37.031649011 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37614034 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332164844 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.204325604 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350933978 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.00827302 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498057398 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.361117612 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.976228069 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.309472061 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562608887 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288079163 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380627832 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.545276751 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300251256 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.291975763 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.240645295 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537349019 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.75852074 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292675119 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.234878395 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320409595 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.289334776 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.317780464 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.517623669 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.52226084 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.26403717 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.553244728 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.068719552 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570769707 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311478331 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29925847 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291517693 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563145594 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929712513 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40074196 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498500849 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322422919 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.838166751 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.273383534 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.247572265 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305594604 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.293035172 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301372829 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291747944 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.225043471 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28757273 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995569583 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.315802892 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.004780589 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.290886144 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.541280019 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393712994 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.297384726 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.862726331 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31372817 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.29771281 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.295363637 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382171203 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88610249 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.459139634 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.297556053 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.233870659 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.290040881 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.241873699 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9128619 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.322898883 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.295473607 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.295545444 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22579001 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.2401374 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.317855061 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440945351 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.314670245 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.941384235 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974831872 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.318729415 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.243435362 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853981913 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.296239732 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.249609487 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.52328262 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.070138303 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227086501 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.236082527 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.227726354 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966063951 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303938237 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.806628249 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.316118069 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.003212732 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.522560153 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335218997 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320779909 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.515869372 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.1694059 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294188522 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.293119919 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431387474 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316175139 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.982000808 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241394538 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.301880204 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549865511 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.503141139 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.291063683 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.271320935 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779245741 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321388878 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.316935116 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.306224688 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.514079911 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.882122119 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331373202 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.476958965 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322399792 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.072455794 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009236042 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293514316 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.307695032 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.292386522 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562142998 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.024476329 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.182743894 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366641067 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.304927243 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.293938892 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.397807489 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.155960488 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.176791488 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.491983289 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325896913 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.309007977 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.297906859 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241963045 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.29497104 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317698903 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.078457216 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.522896258 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307338179 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581080646 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230456944 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447358202 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.304985678 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.521048105 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.500154246 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.323171057 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559634106 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300528148 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.307679258 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.333582585 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316625195 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400061939 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322236989 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.315099024 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.562200013 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.304899057 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.304912432 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.277758542 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.082485037 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302221348 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.306711422 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304003928 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868579441 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299133521 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.310175189 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192872236 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.316788188 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369843631 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.307621857 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.510279347 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.507916773 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317601946 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.303919934 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.296507995 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541885573 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.31175667 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.258854622 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385861835 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.762305907 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.884203926 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.32954442 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.233041515 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.013414549 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.994834834 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303695495 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.496753373 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.302654786 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507877272 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.329595501 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.317841912 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.869616726 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32512256 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.260882601 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.313106517 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.314845568 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.308811744 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30244681 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.502361694 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.497131235 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316178832 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.315905873 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444722983 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.314837269 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.238525611 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.815319309 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.309741791 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.30058701 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.078867275 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336216278 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.260789121 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094179543 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581220889 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305467801 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.557145897 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.360622793 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.336951459 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.30728742 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.30586252 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303697503 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.345061801 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316768935 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.312916835 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.267165602 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.745502213 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875594148 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017452133 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847772132 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.580665808 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.321667724 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.212773047 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.005635187 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25408274 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.962438066 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.53916228 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.022355816 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264207004 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.768776215 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.509525974 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078546932 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556638909 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.535417264 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.548126251 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.318725573 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57504975 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.520012456 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337915267 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.303024837 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.241853362 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.587880201 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850504144 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330865246 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382237181 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012935831 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321952223 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.087995348 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.382431552 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.97302823 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697648226 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.950854295 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.691085794 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.307162732 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.314496486 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099324367 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.326332622 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.830806493 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932356256 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.330264196 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.775595299 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257683649 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.516646293 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.342608232 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.300493217 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.848065863 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.318126708 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.567104381 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560617133 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248522332 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.30226097 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849019671 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.171386432 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.312244239 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308725542 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01871636 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.322628858 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594444662 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.318629523 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.51796627 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334746379 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.240685086 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240949325 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.999709098 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.312135829 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283789573 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780928391 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.308878953 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331842796 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332866289 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159027223 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.5660468 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.325116361 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.881051819 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.551629726 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309371762 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331929243 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.312063089 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.310481397 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.294054973 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.196649877 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.541261534 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399694622 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.534286197 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.241712362 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.206459692 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.334999685 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.956368477 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.19399535 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.315091129 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547451499 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.035603348 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.323071947 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998184428 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350267293 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.3112198 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.337265211 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.313939426 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.331231913 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400298933 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.518710326 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.341298405 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.320426904 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.705207559 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328929691 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311800653 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.322343778 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401849101 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.535862852 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.53262872 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.091327631 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882352169 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038870326 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.912733263 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578953359 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.321843536 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314238886 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245742345 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457766709 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.836611204 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580959037 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440470908 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.323040303 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330460834 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.314825661 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323653333 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.528936345 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588860364 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.18360909 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32030723 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.977869398 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.194656458 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.325143245 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.521823718 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78826324 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848899303 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432790896 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.310311703 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.014885809 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597468597 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.403422051 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312135328 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.897934815 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.31266854 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.00680735 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.318070023 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322002154 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459917482 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.564487049 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97176245 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.34343503 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.46894779 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.085203394 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.277130343 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.570417886 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.756363861 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.526087438 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90637656 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.019708595 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.574766436 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386769968 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527521685 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.438425467 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464840409 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.311129872 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.197922137 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313339671 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158260703 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.026769828 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.322547221 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.896186612 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597441323 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.320895673 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.312011424 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333444071 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.323745724 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.535172537 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00024235 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.541314021 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.321441174 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.316634555 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.305781192 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90133195 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590643498 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254337728 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.320644462 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555606204 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.57401939 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340011037 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.770713397 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.027008832 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86664268 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.287105383 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337392477 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.319127099 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.020889701 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906759132 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.556321436 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813620443 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.984819204 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315562208 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596739585 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.320475178 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.329273833 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600801194 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.321308391 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.330680307 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533701965 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.918947514 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.095988 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.322060141 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.335357284 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.261973851 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.544902656 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408003824 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254903085 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31352688 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.728449574 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.334800552 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447416548 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.325584709 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.314434806 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32446941 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.083915866 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.604175503 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.323501986 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.310831572 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.314864244 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.328732038 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417410839 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872099228 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339188453 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.000524206 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.669318609 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.573901925 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.316192767 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.302882688 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.32576013 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31845178 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.036250174 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.289051849 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.320474908 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855920519 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.322253734 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.335969011 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.319920064 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.535062767 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527930684 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.323661414 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.549786372 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353443594 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339031907 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.2192035 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.088646526 seconds)
  done (took 1641.422677618 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.35756378 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.343427649 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.334409331 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.371755735 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.335499786 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.402754804 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.426129752 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.439117684 seconds)
  done (took 52.236526193 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.325016989 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.475905989 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.347602055 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.328280938 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.328487776 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.331759067 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.776714335 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.338813803 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.332553215 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.329825757 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.330633916 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.331154806 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.968644047 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.327496017 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.318589336 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.308114877 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.33148545 seconds)
  done (took 65.065232141 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.363193341 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.702049453 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.040709059 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.360042962 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.323647379 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.323066023 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.874453819 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.34030808 seconds)
  done (took 58.558011524 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.335509985 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.338866915 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.339555553 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.337722162 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.33991198 seconds)
  done (took 7.924669652 seconds)
done (took 2037.318978354 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.32197538 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.327468869 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.326072672 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.325034693 seconds)
  done (took 6.526746238 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.305137913 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.034512287 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.306209388 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.320876053 seconds)
  done (took 18.198813655 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.332096454 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.337361455 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.013864595 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.941729115 seconds)
  done (took 5.189179724 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.073710705 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.085804569 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.069484731 seconds)
  done (took 7.459716675 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.321527561 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.330963731 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.326453029 seconds)
  done (took 20.210679618 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.609506818 seconds)
  done (took 2.84055603 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.472852588 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.519989995 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.639360661 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.641116102 seconds)
  done (took 7.504668747 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.71258041 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.708208413 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.515273993 seconds)
  done (took 6.170833019 seconds)
done (took 87.998131793 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.095903519 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.323036362 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.52823772 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.062889618 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.551848327 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.526156127 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.751778063 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.031161202 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.56979094 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.558641984 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.067151794 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.550036381 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.477422852 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.323857427 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.480432444 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.572584283 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.613842455 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.134263074 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.783632559 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.942870641 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.747626497 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.698960919 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.897774396 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.71875702 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.594858248 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.476480364 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.297294646 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.572776395 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.95490549 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.313215233 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.474637187 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.116073997 seconds)
  done (took 191.040133861 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.322681027 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.338459029 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.32514639 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.326646852 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.337118478 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.32827457 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.320929471 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.339519273 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.347592526 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.344513518 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.326254463 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.347319881 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.328180821 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.340728826 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.326833258 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.342980571 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.325930325 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.323115795 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.336541821 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.325547387 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.322238937 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.335790639 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.322641368 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.32860853 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.334884803 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.330076256 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.335406489 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.325147313 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.324157199 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.326147556 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.341009861 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.333211194 seconds)
  done (took 203.853953635 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.330957771 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.331599186 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.326628635 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.338644447 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.327336189 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.327401612 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.328933466 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.32463096 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.326963297 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.32568844 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.341352081 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.342284821 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.328012289 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.330616293 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.330143666 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.330100104 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.325377755 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.330881495 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.340099322 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.33291127 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.328798362 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.328496976 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.3391351 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.32423634 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.329584954 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.329206205 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.330516516 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.346593349 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.326362503 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.326628068 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.326625945 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.329127641 seconds)
  done (took 203.819306205 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.520295815 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.334547543 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.338206986 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.27039084 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.339318892 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.334736717 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.334239737 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.531740961 seconds)
  done (took 14.24006963 seconds)
done (took 614.183300728 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.53621085 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.260782679 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.534188323 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.357429392 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.101629485 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.37521977 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.355131007 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.524594651 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.254125537 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.531304818 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.552249084 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.373475726 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.686412826 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.356979945 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.606030863 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.459150159 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.196695124 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.310042427 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.680451177 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.870747853 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.629239072 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.790179186 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.543897005 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.248738689 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.701668156 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.77576049 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.033428265 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.188833059 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.375048993 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.683705558 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.912718425 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.281538856 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.415157396 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.418427536 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.473154437 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.452093234 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.263388646 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.415510707 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.559401713 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.556973417 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.877282036 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.075794086 seconds)
  done (took 90.832934151 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.321088438 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.323485602 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.321069845 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.324626505 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.323629222 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.320524077 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.324549304 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.32111119 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.324970112 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.320492691 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.323926379 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.326153762 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.318311212 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.326329502 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.324107084 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.324124567 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.324785891 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.326595453 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.323297165 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.321798779 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.325528519 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.322556283 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.320524945 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.319097996 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.322165565 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.322304773 seconds)
  done (took 35.640278965 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.343465563 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.594395271 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.763048149 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.354574414 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.342301821 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.347706834 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.420838389 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.349030457 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.346006126 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.346478167 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.495756478 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.348673368 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.37797974 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.793727495 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.354539484 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.344591836 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.344589631 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.344841831 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.60172048 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.361549003 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.442821018 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.34600639 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.421456532 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.356848669 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.367294124 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.345795344 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.348843772 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.913558803 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.363186637 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.49516657 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.11888068 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.424203952 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.886038423 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.776969112 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.114317847 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.353587295 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.345299632 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.498249148 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.348114466 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.345979827 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.422205854 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.346193391 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.760135065 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.007713821 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.366716472 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.347892036 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.943542119 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.518162819 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.587105938 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.360549035 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.782372571 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.349918848 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.348415841 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.34792499 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.587756102 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.358549412 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.346738012 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.950870652 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.369929848 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.424049655 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.348718738 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.346916678 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.615471371 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.345908143 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.594660292 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.350905461 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.356572055 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.366537743 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.760851091 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.350723089 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.033894457 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.366193909 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.347693211 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.497803532 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.602065903 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.965122129 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.370019372 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.626006097 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.910668967 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.443056996 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.353355589 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.90480453 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.446977657 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.353100599 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.348254478 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.350305518 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.349295595 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.399310402 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.422763817 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.981080073 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.058464469 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.978997042 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.446949794 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.368660049 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.349421342 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.952882316 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.373142196 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.350792921 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.775728853 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.038394586 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.364285636 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.357282276 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.037109804 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.372415836 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.423691429 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.360543876 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.774635422 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.356864216 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.402170392 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.350708447 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.357644669 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.368164402 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.428588969 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.356044935 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.351128603 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.002623899 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.523559542 seconds)
  done (took 178.354523993 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.348821631 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.344424018 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.346076766 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.343831336 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.343806205 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.353801845 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.344529625 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.345663278 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.350687812 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.344330972 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.346026744 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.346964046 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.347724159 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.344825192 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.356853471 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.352528303 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.999168188 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.344083067 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.343685266 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.345002416 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.137327944 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.352813675 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.345466419 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.346118844 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.347616697 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.344202106 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.368814834 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.34922819 seconds)
  done (took 152.441809897 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.352795206 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.902423493 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.370668884 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.482090095 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.379220616 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.350596772 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.480122815 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.412247912 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.371499478 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.349761834 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.351316754 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.650981794 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.358221572 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.860479769 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.54509121 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.500992961 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.856331307 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.370574824 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.350545047 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.352484165 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.48527756 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.360094339 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.656531339 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.925606596 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.376291906 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.917089003 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.342922594 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.356774777 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.355302614 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.920999654 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.374970346 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.658201405 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.43716707 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.41665365 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.937155133 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.885583981 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.883019018 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.503458924 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.356911017 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.354976577 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.354126451 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.34069503 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.922677747 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.377579618 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.356926054 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.911724115 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.37928713 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.357931704 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.361093943 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.354996727 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.414081545 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.4292389 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.678966064 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.935432011 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.453980492 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.370382378 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.486291795 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.727309885 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.362674816 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.868832677 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.344741599 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.926167873 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.374564545 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.341463008 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.357314394 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.359259715 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.50641785 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.493939067 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.871843226 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.378520495 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.871500271 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.527737717 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.362075199 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.356596693 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.360150621 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.925294239 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.88270843 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.521690178 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.494994321 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.551734692 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.347302396 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.356737716 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.339743495 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.435119003 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.361594253 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.917349305 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.89069109 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.383038849 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.359936183 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.360208114 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.362766428 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.530705595 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.949654915 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.453350604 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.868190832 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.687906078 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.665002752 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.361242382 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.416240739 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.375759685 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.66069544 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.362143148 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.416468205 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.791124091 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.663526217 seconds)
  done (took 161.978482111 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.598568911 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.520694431 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.446790704 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.509794477 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.951613067 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.92505791 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.58846411 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.497393686 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.469353659 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.619257907 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.486790362 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.451965572 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.57590885 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.437765726 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.087735137 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.450055494 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.471617231 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.506170118 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.5143948 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.338704915 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.031034716 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.656808031 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.549672311 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.19997518 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.451908232 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.144563335 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.910192419 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.905723253 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.539280888 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.638021247 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.884404431 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.452005831 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.305815616 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.05222236 seconds)
  done (took 65.434542158 seconds)
done (took 685.918850253 seconds)
SAVING RESULT...
DONE!
