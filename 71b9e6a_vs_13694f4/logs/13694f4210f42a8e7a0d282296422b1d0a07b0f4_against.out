cset: moving following pidspec: 32064
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.25699609 seconds)
loading group "string"... done (took 0.465366074 seconds)
loading group "linalg"... done (took 7.574678812 seconds)
loading group "parallel"... done (took 0.172130834 seconds)
loading group "find"... done (took 1.1806593 seconds)
loading group "tuple"... done (took 2.11306156 seconds)
loading group "dates"... done (took 1.336012067 seconds)
loading group "micro"... done (took 0.246449331 seconds)
loading group "io"... done (took 0.740807338 seconds)
loading group "scalar"... done (took 41.77641481 seconds)
loading group "sparse"... done (took 12.916313428 seconds)
loading group "broadcast"... done (took 1.166286744 seconds)
loading group "union"... done (took 14.128100111 seconds)
loading group "simd"... done (took 5.072890799 seconds)
loading group "random"... done (took 10.060877248 seconds)
loading group "problem"... done (took 1.987835713 seconds)
loading group "array"... done (took 22.298080454 seconds)
loading group "misc"... done (took 1.416896197 seconds)
loading group "sort"... done (took 3.562412277 seconds)
loading group "collection"... done (took 19.40056306 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.535839509 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139542407 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131990886 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.149185888 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204760551 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.140989737 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154595834 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.112458296 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.912108995 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.177015769 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151776666 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.506801014 seconds)
done (took 5.046633492 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.222316642 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094447817 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103184146 seconds)
  done (took 0.860621136 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077927575 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145328939 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09455902 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078823017 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095872626 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078176311 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095748589 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077865645 seconds)
  done (took 1.342534187 seconds)
done (took 3.185774503 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.731348058 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.277818088 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.200909322 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.455847824 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.197052381 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216860431 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674671885 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.343565641 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.249305276 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098222915 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.141705782 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38383351 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137652951 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682477782 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08922265 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124548441 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178256148 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.458144353 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081675616 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110945409 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11675562 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142995898 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.125407872 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090943556 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184003933 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083919337 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.197097839 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109325639 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080240537 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.291744371 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20102319 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690814019 seconds)
  done (took 10.858012848 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112303047 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134939557 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098585415 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139429976 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135465312 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100335955 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087648804 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096378373 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122845946 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177671965 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.131228792 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.122871441 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094875904 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083360754 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115346316 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246129985 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120815638 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104501363 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101092339 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103982559 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12321743 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114441478 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108461326 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094577845 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167431706 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221852188 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112532679 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12639122 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097184917 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111440185 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143101081 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144119051 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095300385 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081231884 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173775599 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126141331 seconds)
  done (took 5.162427004 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.184777498 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121069667 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165987415 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162458341 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138433295 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158202847 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110782566 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.251399179 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.182324619 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163958943 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141868887 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114306266 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080491854 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098950647 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.128175104 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079092072 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.690546798 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.124507902 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.156680103 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.1247772 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116433851 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088698464 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101703513 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104907047 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08134699 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100181413 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.108872015 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.322261657 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161930425 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100324522 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.143150071 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122246564 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083642352 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136239312 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.212257536 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10980768 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137352158 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097006428 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.07814034 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096518623 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174826574 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088872049 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097941484 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103401351 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13748308 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135330651 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098946683 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097382037 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.206274959 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080034557 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114391937 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.9418554 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181753861 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091016011 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096430949 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.324436275 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099527397 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098994216 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078327749 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.270349198 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.183153115 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099056871 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080233047 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097266322 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082076016 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.40753887 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086148779 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.706061615 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083682 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108852946 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083329826 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097311214 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105372498 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088608845 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115898813 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081793235 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099724638 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079953366 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098084757 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082248283 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110456605 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104107029 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081522553 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164395687 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080173017 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114860934 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127469439 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085586811 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095128513 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131239136 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083776338 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097678309 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13479051 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081527213 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110850195 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099985722 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142339293 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082476036 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.177404852 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080115613 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093458932 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.1126515 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101794241 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131835553 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115914092 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099267657 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086977651 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095757102 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078609668 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163419418 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081199089 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097669706 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082047305 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112003945 seconds)
  done (took 22.725674231 seconds)
done (took 39.423254531 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.33097911 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104404156 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104360266 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104620758 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100734556 seconds)
  done (took 1.496485916 seconds)
done (took 2.223322431 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.286612343 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.21227666 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077465275 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.170592208 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09445087 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.175579793 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162929253 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113153381 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.222705272 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077882709 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183939029 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078078408 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094655112 seconds)
  done (took 2.698270604 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096586096 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114966799 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08359386 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111972046 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07723423 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111909224 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092670153 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117717917 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109655212 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085088101 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094048312 seconds)
  done (took 1.813325822 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094238113 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113602799 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082720334 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111300812 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076956779 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111243262 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093869526 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116196239 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110491539 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086435029 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094469664 seconds)
  done (took 1.810983667 seconds)
done (took 7.036520192 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091909057 seconds)
  done (took 0.807833804 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.938322208 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.936946395 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111444245 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148816318 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.321090961 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.176388899 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.476731404 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123834295 seconds)
  done (took 11.154381069 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.115638756 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.115270153 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104917096 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086363771 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102613324 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086989477 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.10094587 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102944762 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085583122 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099099473 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083305211 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10246439 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100606346 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084104981 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101161521 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085755873 seconds)
  done (took 2.342695629 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120757634 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118817743 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108283611 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109050912 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087770831 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106068327 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107229089 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089536542 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102479232 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104301446 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091787587 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105966289 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104352362 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079940191 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106169832 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10768428 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086009515 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107644151 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106902567 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.0912782 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107139465 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095982602 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088328853 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106044822 seconds)
  done (took 3.271683287 seconds)
done (took 18.297408239 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160239114 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109960187 seconds)
  done (took 0.996231527 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096359653 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114683551 seconds)
  done (took 0.940865483 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098535753 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097141007 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12253563 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111019247 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081280233 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097943343 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121766244 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081538182 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097837427 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081217673 seconds)
  done (took 1.723136253 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082988498 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111263218 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103018884 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096594826 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106009738 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095334971 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089285067 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099243975 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111782876 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.0781054 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10247066 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114850611 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087080021 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116126463 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105752713 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084366824 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102618975 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099052224 seconds)
  done (took 2.518401545 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080006254 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098279199 seconds)
  done (took 0.909186705 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082350194 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094875073 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082047529 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097497129 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094593223 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078081101 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09507364 seconds)
  done (took 1.355700099 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.519312567 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138885117 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.258067365 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.0854418 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120437916 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302304577 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.09948781 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085660662 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105069362 seconds)
  done (took 2.503745449 seconds)
done (took 11.677601312 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094354082 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119318932 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113772323 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.465284952 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10887319 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098928776 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.16142174 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.253373021 seconds)
done (took 2.152942972 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.152370547 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324533684 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.115083332 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067679771 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096689317 seconds)
  done (took 1.343758077 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081231311 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100718166 seconds)
  done (took 0.919175609 seconds)
done (took 3.157767127 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081410369 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098548137 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.07950314 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.130789297 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080393432 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098888468 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.078828566 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097164681 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.0784969 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.099244965 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097121165 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.08104246 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.097400543 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.08108204 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097608721 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079844575 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096327943 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08100573 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095516611 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079304078 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09493628 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080934887 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095981844 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078332564 seconds)
  done (took 2.935649536 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100601476 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098172314 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103006133 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08609786 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101638335 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086974151 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102309268 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098306674 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08726172 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099911484 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101258817 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084682147 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100516378 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085355379 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100087751 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102194371 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087270828 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097921615 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083919264 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101823282 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103155385 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081924838 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101980568 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086332443 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.101138248 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101858156 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083889649 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099020307 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103339956 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085405974 seconds)
  done (took 3.59767171 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085540451 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095049574 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079436795 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102752431 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079480041 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097798996 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078356906 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096164074 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079672779 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096181842 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081012427 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09589725 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078513367 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097385581 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080183194 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10031089 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108497845 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078830525 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09592282 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079812764 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099763427 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079359743 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096446314 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078888322 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095505729 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079086955 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096219341 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078580863 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097466755 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078934163 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099441611 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082388245 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096640641 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085870572 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098881641 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078696569 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100174514 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079017181 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096759177 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095344086 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079497309 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096137759 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079001304 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102756041 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07922756 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09869159 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079315806 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098078797 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079878723 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099889398 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078691223 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09586104 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080437448 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096820209 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100811358 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078732356 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096719095 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078416359 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09735261 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079956131 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09561674 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078752378 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098468807 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079898946 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111840293 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085434967 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096344957 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08155992 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097827091 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081607822 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097926034 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110436623 seconds)
  done (took 7.217984186 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084164183 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107042354 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081384543 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098262264 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078132566 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098937574 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100239172 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080023737 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098216422 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086079271 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09710541 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080789426 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097945122 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108747541 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079739186 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098703742 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086351365 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094241017 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079301308 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100140398 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080160099 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100347855 seconds)
  done (took 2.76492498 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210845239 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106331962 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143770425 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108679148 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083794788 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107044489 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103124999 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087200288 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103537082 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084569478 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101084316 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102951395 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084393303 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101164235 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101910311 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08614301 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102508552 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086719907 seconds)
  done (took 2.65727797 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09433312 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099517083 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104499527 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098855546 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099575051 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084720843 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105172651 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109274344 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085465723 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099843132 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091663163 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102033748 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101411348 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082257765 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101480031 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082978979 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101825243 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08243455 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109035587 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105216505 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105673405 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092223723 seconds)
  done (took 2.893019935 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098390642 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100828482 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120152717 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084675013 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096315202 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080429515 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107578736 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08213015 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107936535 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101953117 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082474042 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098143828 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089541098 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099604992 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104810887 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083898607 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101792626 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082963132 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101920475 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078626462 seconds)
  done (took 2.658726824 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103978758 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101709605 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100667219 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093946618 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101383579 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084092808 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111196487 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101514791 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083993703 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126132651 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100453328 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084066392 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111130813 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107425456 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101494032 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093528968 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110530618 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110809015 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084756591 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101625127 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12752595 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084380164 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110287235 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.209688984 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084196368 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100988803 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101148315 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090252318 seconds)
  done (took 3.679856944 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082994467 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099920754 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079775323 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098029648 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080265204 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098012206 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079726836 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098149064 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082908831 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097987631 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082765459 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099601541 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083046029 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102583738 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082850987 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100551893 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082315526 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09803404 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079961846 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097641653 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082570199 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100677626 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08276363 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097695987 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080967717 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100582011 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079816664 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097561991 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082788111 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097252402 seconds)
  done (took 3.469420664 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09279663 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10749828 seconds)
  done (took 0.960744936 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080362964 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116751121 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079477496 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10491264 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104938377 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084290775 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109499746 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088812353 seconds)
  done (took 1.527714161 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098510371 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112146209 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084395835 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115024819 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111280047 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096834705 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16765722 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102097519 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088945734 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099387293 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113929765 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081633335 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106363614 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082977564 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106855069 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089209119 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098720845 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089504407 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103778024 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099403392 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085406545 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111410367 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084913879 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098018523 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084700836 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112132868 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110681181 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084074816 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104081396 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111108622 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08940861 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095028334 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082779874 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101678874 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081892911 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110458415 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114154722 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086278102 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110005594 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084676459 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113006868 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096365006 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088789473 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107609904 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093858725 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102576765 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08483881 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.096656441 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098581849 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085947265 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09709753 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083223462 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095493676 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091228551 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105523642 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114837621 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083008297 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102716679 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086712581 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103903236 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089870584 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104115553 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086005402 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100452191 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109317 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088574991 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10916736 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078742677 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095115414 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081476493 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109894275 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125102858 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091646302 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102949698 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085004658 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099038276 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105053664 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08497458 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109404069 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092303774 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101416066 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109030578 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091370842 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101765414 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08701281 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109836833 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099889176 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08672037 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098919452 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098484055 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100357275 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081335881 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099123847 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110552199 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087727029 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101441086 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081840529 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109441797 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078240673 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103043602 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084720695 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102369044 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113476495 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090328725 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107833061 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109539641 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091091769 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101928532 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087270435 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098217911 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085995915 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104487646 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091358319 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095922504 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104589168 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085417616 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102946648 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091617153 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09950256 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084113696 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109350851 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108358969 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081793155 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098304722 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087148465 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101769344 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088312385 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.109197814 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100943281 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079370447 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096974185 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088102684 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10297307 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088678999 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107616092 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104042335 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078549779 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100747306 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089356636 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109597122 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101838602 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084473024 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105944376 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084601864 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101668759 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090266385 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104159865 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083448383 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105845973 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103751249 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079124649 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106063967 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08664893 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.100665964 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087694116 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.1057064 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103720576 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085571664 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100500435 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090039858 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103626831 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08326666 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10213028 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082558042 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112208773 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103670766 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079962065 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09983944 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091549413 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100072862 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08392829 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100667351 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104908226 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085085311 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100077489 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084281424 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103266238 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09620273 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107880655 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103723763 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090565436 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112717089 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085032732 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104121961 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101508387 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085926847 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103194212 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091001004 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107849977 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107599474 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087070322 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099222441 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089938713 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110808371 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083634422 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101229079 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08298218 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10594052 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108725284 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088659239 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103451366 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082671288 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10381484 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106618698 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087099158 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102666701 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083093104 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107617376 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082862803 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110286104 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103480461 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094140303 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106187109 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079605537 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106319729 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099963677 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091509641 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097570488 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082419356 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101707341 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085593316 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102307782 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088027825 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096825665 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091910815 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110806742 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103143835 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084325097 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103168833 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094459911 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104619197 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088656125 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106266029 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109014405 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097174461 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102386884 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087361562 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112966723 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103197789 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07814922 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108415382 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083042397 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102521312 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083577421 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100416192 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087620948 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112924774 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106983395 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078060314 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105283071 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083731138 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102017567 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079760788 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109912058 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106579037 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086851649 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112062259 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086302322 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10450443 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087957673 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103309346 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10412256 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086194059 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106080713 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085871929 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105126084 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084609471 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.104799338 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083469516 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.101098915 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.107062661 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08521026 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102726415 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090386892 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102794469 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084579678 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105596268 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103705634 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086388564 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103189176 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084443962 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106727927 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085572752 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103085333 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087069976 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098983682 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09173404 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103366474 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111127863 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085419058 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100816671 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091865474 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105777708 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108237759 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086053489 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105384913 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085922476 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104074781 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.0873423 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111294936 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100927404 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093537823 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10899229 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086348149 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106871353 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08445934 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104502387 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083589946 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105948263 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104103783 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085143479 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103516791 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089554108 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106457967 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.0851645 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105133902 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104286831 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085187336 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104581774 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079710626 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10268747 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084044152 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104069861 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092871355 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103988465 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105853176 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084099539 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104764858 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084134016 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099955392 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093965008 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113361194 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.105050852 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093274093 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102790937 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086679535 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113600217 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097545396 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083610513 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.101770319 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082908739 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111559895 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08654759 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112017103 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084957069 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103103948 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.08212981 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.105514288 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102675004 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079946875 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101395041 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088713949 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106699084 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084112947 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103731904 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088166565 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106053679 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110727932 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084648738 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105819837 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086324644 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100793172 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084093085 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102634712 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088211653 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104957443 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101066401 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082819669 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103018762 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086799421 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112706987 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085136036 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105525053 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092227783 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103736809 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106388633 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089279167 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098575354 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.088080263 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103788719 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085543522 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.102609788 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089181692 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10781401 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105196918 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092841721 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103615758 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086600425 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104638337 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082719417 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103845134 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104199455 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086311259 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103826701 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087372077 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112321616 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08417713 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106888342 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085421099 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.105718648 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108533343 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086732446 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107358232 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093560716 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106064425 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086069077 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110572472 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.107769474 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088498721 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105064294 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087330937 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110135804 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.10275485 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093359904 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103733426 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087102172 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.106117749 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082468798 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103466517 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084861973 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102748972 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108399494 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087492184 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103156688 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084526268 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.101856777 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087059333 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109044717 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111938857 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088592148 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106834924 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081288054 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.101244194 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087508929 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102078603 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086946224 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106681247 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110011324 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088603465 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104350504 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084845668 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111667371 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09193208 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109740972 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083296243 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109431851 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105067468 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088109704 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105672998 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085961878 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106872621 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091071258 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106448862 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102908619 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093765994 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.108789889 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086730647 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105729223 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085766132 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105837711 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099544984 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087010448 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106603284 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093338542 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106486277 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085809676 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114194223 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103140347 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086183235 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107866148 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085674586 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111597752 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081592078 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105323865 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105377843 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087437267 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100166397 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085171776 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102043449 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088534682 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.103616118 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081460936 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114959514 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.11265428 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088815053 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103174576 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084508597 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100352827 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081127492 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.1038767 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086889669 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10633214 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114006923 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084597427 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103794753 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081214049 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104785501 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089337754 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108379364 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08297483 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100562535 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084987167 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107168549 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111506032 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084985945 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104154746 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092780559 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105694974 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084074416 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109313483 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082759625 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109096303 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115960682 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087228962 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106104616 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092052723 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113634342 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105745706 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081778251 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105212352 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088702531 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.104871538 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087281505 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106302965 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119142608 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089161691 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104102818 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084954 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107866242 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085106606 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111590382 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106621766 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08690027 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109434842 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088080081 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114009857 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107288131 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092643114 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107073559 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089308303 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10447281 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086197747 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103728753 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084642643 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106995247 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106190127 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091142567 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113883713 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085561559 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114519015 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11250436 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.091991996 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101824414 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086695305 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.105068214 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081806363 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106342736 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084553888 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103777136 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083582625 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104558667 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105825282 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092274896 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106965476 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088045188 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105140969 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080339448 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107528164 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091033408 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106514071 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.10195372 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086921624 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106468657 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092616899 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109784642 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087053606 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107672553 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087410101 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107314065 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100442584 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092580248 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104585919 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089442789 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104521626 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086565818 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107154638 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089743803 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111186515 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104241609 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087689328 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116454231 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088157459 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.1032724 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102394116 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091617312 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10290927 seconds)
  done (took 58.882727233 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148601277 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082801973 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101646047 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081612936 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115028204 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101156355 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081317911 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101675024 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083519011 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104323539 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081764178 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100984837 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111839124 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126874598 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095525329 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107295844 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100055481 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083663041 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100317302 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083387577 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112010313 seconds)
  done (took 2.912389096 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107034986 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119589447 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117042993 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121267067 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092818396 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118216608 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116723326 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117974374 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102070239 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11366238 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121131834 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119057525 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.094325995 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.113892953 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113582526 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096113856 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122221513 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111992055 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118382698 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098509565 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114994376 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116356804 seconds)
  done (took 3.272112657 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085746475 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102402737 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086989664 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09932576 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086032672 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101075155 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.090914757 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10298239 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090150506 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.105162795 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085359143 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.104869868 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.107226599 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081494955 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.104540113 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084408153 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154343106 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110118467 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085826596 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107189308 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.100729429 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088471997 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.10053496 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082470306 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.104184185 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090839912 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107370105 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084454445 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105225928 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084248018 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105766097 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082972832 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107732267 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104939317 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085337044 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.104872741 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085893349 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105776543 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.081616092 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.103490124 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087010058 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.101918478 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087270871 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106484026 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084381564 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103263132 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087855351 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106226483 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.099901747 seconds)
  done (took 5.565680624 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106913805 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164529358 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088130642 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145823099 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123187494 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115783026 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.09066999 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.145024591 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105641926 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084854703 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125855986 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122521287 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106937704 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092887731 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.113560466 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106968286 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087931845 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105418257 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.110521977 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086057669 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111523836 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093041968 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.123348878 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120376229 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110408987 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085455464 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106200247 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110596367 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099185045 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.112331345 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111112249 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092372434 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122877823 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110867549 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104425928 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089377436 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124218445 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106222234 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.0894287 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103360292 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089449022 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112007165 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112602793 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.125488558 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086977394 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111308389 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087141178 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103789334 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119931895 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089213157 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115240771 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122125289 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110323105 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.088753042 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111246558 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123050442 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087174759 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105213971 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090312427 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120443955 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10409212 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091029087 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.122553981 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109587685 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114509443 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101638533 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111544283 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110778966 seconds)
  done (took 8.289880081 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095518172 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.114532854 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125951176 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123835821 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094029065 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114042164 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112920208 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.093660597 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113716607 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119313913 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11314475 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.136837363 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089195587 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117228617 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113544919 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094585329 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114397445 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113930654 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093115953 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114312926 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114163607 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122935762 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094027898 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122273329 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.145118647 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10909753 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09440974 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114511578 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124210558 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113638274 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12715138 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093862233 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114035504 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123986619 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126121341 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093714214 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105321829 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11270267 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094243861 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114064983 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107672718 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104297011 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114050115 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107913164 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093198417 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114394648 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.124224923 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126239089 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117648863 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09962014 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114185606 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123794427 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112687896 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093996751 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122994351 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149070971 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123721666 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124104988 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113819104 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103461422 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124232522 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13096913 seconds)
  done (took 7.830898426 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109560281 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116394475 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.120540852 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.102313179 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085645213 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11158446 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085925504 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104884087 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.117282908 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09853226 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119807685 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112047909 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094673473 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120562444 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112252153 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114450867 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092649081 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111977947 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118123443 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112247769 seconds)
  done (took 2.981185434 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096394145 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127079384 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088051766 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114699491 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110920595 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094255612 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109975216 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109957584 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088510346 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111390654 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100210394 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.120241745 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108136677 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094939936 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118993206 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114891415 seconds)
  done (took 2.530467789 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099498319 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121563877 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.124194201 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087545473 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106561816 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.104912087 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088771455 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.104087603 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08494359 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12458139 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088356975 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111427007 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104852585 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082433732 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10048268 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08880684 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101005782 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081600378 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106212485 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.12052543 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.099717259 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10701617 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108499986 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090290899 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108363795 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093777387 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109136698 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.105731759 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085990964 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108078362 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088791148 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115501999 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104756234 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087249276 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10570066 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085373424 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.108383698 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087930519 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111759244 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.108458606 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087317875 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107889317 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088925258 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.109439127 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083770306 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10898712 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.104387504 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095431213 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106553203 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088744207 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.108875196 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109931317 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.089654894 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118826284 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092383374 seconds)
  done (took 6.377391016 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103123173 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112708764 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083112109 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106640001 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092298828 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111912979 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.11144204 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091460832 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109672317 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085830283 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11122692 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092595816 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109882781 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112374711 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090619634 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112577659 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084222866 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110218506 seconds)
  done (took 2.661656547 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092572248 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106952623 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096041992 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108555798 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087557484 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112267861 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083344428 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10740945 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10572095 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089462627 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107914668 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091718699 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107664814 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091058958 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108902243 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087934334 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.111362174 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107488373 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088550135 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104229126 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090717778 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106709528 seconds)
  done (took 3.022615215 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.121469885 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.128616293 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.095764125 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.233343953 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.107524174 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.136157967 seconds)
  done (took 1.652493206 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112409845 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124255895 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109032798 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110292409 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118449423 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109636969 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090828287 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110893563 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121674606 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105250252 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111850679 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122339811 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120597288 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100642277 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118116727 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11741374 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109235745 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091232377 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109430869 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130356325 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089805535 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119051423 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108192449 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086962136 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10779384 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116125037 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116185779 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120274705 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08786919 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117469291 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112236732 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087111581 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117486597 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12385009 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110245857 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101139862 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111437178 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131845928 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118414551 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101083715 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112906326 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118444505 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100877011 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117831887 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121625887 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11176847 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096600323 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111504524 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110714003 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138085924 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097422317 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12140299 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117244877 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120099192 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119951528 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138929849 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106200661 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120941401 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118926921 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126522318 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120759993 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097446226 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120772232 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126746138 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118363119 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119949462 seconds)
  done (took 8.293849064 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105336628 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127276237 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110499115 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124039633 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099588642 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109169239 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10693675 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087454356 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10725413 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104849244 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15133783 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088039544 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117298046 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11625623 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106942145 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089056474 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107646334 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115435105 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087438898 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136689091 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110925631 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121295307 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120857251 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101419857 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126291721 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117760015 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111486235 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092347569 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111430765 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111507083 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09778347 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112351266 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121901343 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091018007 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122724099 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112636307 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090630258 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118055811 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111907727 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118842504 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101544919 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131912751 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112065234 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111463638 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106576777 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110761881 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108597746 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086224243 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108922509 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109071356 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105141598 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126618203 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12593454 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121026045 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112028541 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091665859 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11286362 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111346989 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091684428 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118717977 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119004867 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108973954 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136419556 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087315333 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107015175 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117451077 seconds)
  done (took 8.139092891 seconds)
done (took 157.512083079 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100656039 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136849942 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099370632 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.17151269 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105221741 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120465308 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13700301 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097270958 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105233288 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085017887 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105231078 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086416213 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170271144 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084654524 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107941405 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106232295 seconds)
  done (took 2.655417281 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201280973 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.260161368 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106190525 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108522124 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089054005 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110734208 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.103956537 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09265098 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109983937 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085919854 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108732708 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086783168 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105009326 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085333686 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110083099 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087264439 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106442794 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.0872892 seconds)
  done (took 2.886861501 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116260671 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148319542 seconds)
  done (took 1.110884128 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122870556 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182581424 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315796899 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.153417192 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107305997 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126573098 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156260545 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129658688 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195637106 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12144786 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121542958 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098820073 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138840848 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11487986 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093558981 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116906505 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140618023 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092336341 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114841511 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11573638 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115299232 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105045669 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114844531 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094668177 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18038054 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.117948195 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084855071 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105652574 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11549653 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09550827 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113563112 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.122834063 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098435089 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173778446 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101954532 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175868159 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100700505 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111750447 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114518492 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094204824 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118070648 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118115383 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10656259 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118435015 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08544629 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120017561 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105167369 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.088070577 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11783792 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.100716791 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117517324 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114794394 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157433644 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11843464 seconds)
  done (took 7.525847991 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.801342195 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.160797642 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094864465 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.883093338 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13756274 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10353717 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.776444574 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133613691 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236754897 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.756677974 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132229623 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12054109 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225613674 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23618906 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.927570583 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311428132 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.668701578 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102035893 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149624781 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.150749669 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117657994 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137027898 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129177326 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43031263 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094106009 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110339522 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116352249 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10028162 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157610007 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124517952 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113314002 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17959139 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.243680508 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20466154 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114458335 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089612594 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111943528 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168863065 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265871371 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212177314 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179938655 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086695284 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111246918 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121360586 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111024481 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107385286 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162624654 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172724382 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.19289082 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091722702 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119774017 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119120813 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119125829 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163377568 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.119067054 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291226492 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.32154187 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111406008 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119037454 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104298043 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261602234 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121884859 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22152496 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116300935 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212749776 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110587536 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781484811 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18819928 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089362224 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.116995172 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120041326 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095269261 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121302158 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167187571 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.408150284 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124163351 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094928275 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113705407 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207763829 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126159054 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109341232 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161401535 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11454724 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100130886 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124804436 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12134358 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170027935 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.225410058 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123948188 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119370358 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093455068 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123815325 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.114934811 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21358091 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218014854 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160508911 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209002193 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122336683 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.160974311 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187672931 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099068423 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192341002 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097507122 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124615371 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121989664 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214445337 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144418481 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100943504 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116032899 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117194787 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147348615 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125040675 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097710453 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.167012891 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478010196 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166154034 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107680185 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126668816 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098977598 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159563806 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116657086 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258818646 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1207574 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168737417 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118523902 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086702328 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119039195 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164595084 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122824001 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098687968 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122002775 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117206503 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233221284 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215745747 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121499573 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221009261 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183163481 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117590447 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170545907 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120282545 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16622592 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118878947 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12075638 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095255708 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79460757 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122721486 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097462329 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114765371 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186162323 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109517975 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102778383 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123687148 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107143428 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779943792 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127382368 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120473267 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102004259 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118568902 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119963711 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096866919 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117475284 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16690746 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235125342 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121500144 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118245533 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103657083 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179766792 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096514319 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.12569817 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123872382 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123708383 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10039131 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114180776 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122257486 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170035487 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16146123 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.217940482 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.595068161 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090945916 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123797814 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226515434 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090009074 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287200228 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118699639 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.222769905 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164248524 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.118409548 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.315782928 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165733445 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185519169 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126286757 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172766243 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086584196 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117582296 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16292336 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111413877 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115909026 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161418007 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124096149 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102371113 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.961138694 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110742334 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227680535 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086073473 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190295918 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094130124 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120698471 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285984412 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109965578 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107458492 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18386935 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093874855 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124109854 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.847808941 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125898093 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120777476 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117380566 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.200486273 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183337944 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096920482 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119043574 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119433246 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162725974 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208166221 seconds)
  done (took 43.994484536 seconds)
done (took 59.014744979 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275432412 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213792469 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.254264498 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.166891923 seconds)
  done (took 1.854859893 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171752265 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149064317 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121594823 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109155137 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.153114955 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086572071 seconds)
  done (took 1.660447296 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.351005027 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266059999 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.234714406 seconds)
  done (took 1.726005454 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.283894107 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.24677582 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.353379062 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.392606539 seconds)
  done (took 2.266992071 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211526985 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13321326 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110366575 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104932213 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.194024701 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.244814089 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.138315308 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.198569079 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.120930529 seconds)
  done (took 2.376347034 seconds)
done (took 10.759540859 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.240434218 seconds)
    (2/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.163019918 seconds)
    (3/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.21671053 seconds)
    (4/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.102870903 seconds)
    (5/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.286031471 seconds)
    (6/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.136265541 seconds)
    (7/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.092622835 seconds)
    (8/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.128500434 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.103640275 seconds)
    (10/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.117104618 seconds)
    (11/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.194712773 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101201 seconds)
    (13/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.122420741 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.092379508 seconds)
    (15/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.154257746 seconds)
    (16/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.123965462 seconds)
    (17/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.189603449 seconds)
    (18/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.182015381 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.204324766 seconds)
    (20/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.138609825 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.136371844 seconds)
    (22/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.213532293 seconds)
    (23/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.191711274 seconds)
    (24/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.092765928 seconds)
    (25/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.21056329 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 0.225151608 seconds)
    (27/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.115368355 seconds)
    (28/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.179240352 seconds)
    (29/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.121005646 seconds)
    (30/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.126770504 seconds)
    (31/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.180663407 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.141089576 seconds)
    (33/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.174414992 seconds)
    (34/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.197429166 seconds)
    (35/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.070896291 seconds)
    (36/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.12529091 seconds)
    (37/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.188741016 seconds)
    (38/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.123085537 seconds)
    (39/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.172738819 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087801885 seconds)
    (41/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.18138365 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086978547 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.140612253 seconds)
    (44/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.113433424 seconds)
    (45/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.13587459 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.092346578 seconds)
    (47/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.108847978 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095554633 seconds)
    (49/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.115569927 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.087702845 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110112081 seconds)
    (52/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.148822981 seconds)
    (53/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117639597 seconds)
    (54/286) benchmarking ("sort", Float64, false)...
    done (took 0.17257367 seconds)
    (55/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.101037588 seconds)
    (56/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.223060353 seconds)
    (57/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174872336 seconds)
    (58/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.193594231 seconds)
    (59/286) benchmarking ("sort", Int8, true)...
    done (took 0.22113602 seconds)
    (60/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.206867348 seconds)
    (61/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.079753427 seconds)
    (62/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087508926 seconds)
    (63/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.168803357 seconds)
    (64/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.120387509 seconds)
    (65/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.18660454 seconds)
    (66/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.17201582 seconds)
    (67/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.150296936 seconds)
    (68/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.183515377 seconds)
    (69/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.150522112 seconds)
    (70/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11840695 seconds)
    (71/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.100059997 seconds)
    (72/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.187849012 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 0.090827632 seconds)
    (74/286) benchmarking ("sort", Float64, true)...
    done (took 0.226651966 seconds)
    (75/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.110049975 seconds)
    (76/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.128377064 seconds)
    (77/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099370875 seconds)
    (78/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122526918 seconds)
    (79/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067782198 seconds)
    (80/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135911312 seconds)
    (81/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.136154211 seconds)
    (82/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.119248048 seconds)
    (83/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.118618859 seconds)
    (84/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.095077718 seconds)
    (85/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.109930993 seconds)
    (86/286) benchmarking ("sort", Int8, false)...
    done (took 0.188697988 seconds)
    (87/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097053847 seconds)
    (88/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.11650659 seconds)
    (89/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.17739083 seconds)
    (90/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.071173139 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.141037642 seconds)
    (92/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.102898967 seconds)
    (93/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119971661 seconds)
    (94/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.124366198 seconds)
    (95/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.11481593 seconds)
    (96/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.176195453 seconds)
    (97/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.108557968 seconds)
    (98/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.121369743 seconds)
    (99/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090228073 seconds)
    (100/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.125757913 seconds)
    (101/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138897324 seconds)
    (102/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067949317 seconds)
    (103/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112997287 seconds)
    (104/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.174184723 seconds)
    (105/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.23136771 seconds)
    (106/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.118665661 seconds)
    (107/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.0660969 seconds)
    (108/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.090915796 seconds)
    (109/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.146254858 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.1373205 seconds)
    (111/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113654163 seconds)
    (112/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.080332743 seconds)
    (113/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.168643069 seconds)
    (114/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09087469 seconds)
    (115/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.13223187 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.181218826 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.101080784 seconds)
    (118/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.094186947 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095392965 seconds)
    (120/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.114505612 seconds)
    (121/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.191658159 seconds)
    (122/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.070917709 seconds)
    (123/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.117825052 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114596268 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.131329012 seconds)
    (126/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.076889416 seconds)
    (127/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.116122484 seconds)
    (128/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.196733176 seconds)
    (129/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.169978156 seconds)
    (130/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.191745699 seconds)
    (131/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.108742158 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093477979 seconds)
    (133/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.105426394 seconds)
    (134/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.160398088 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.114754639 seconds)
    (136/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.090568969 seconds)
    (137/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120402384 seconds)
    (138/286) benchmarking ("sort", BigInt, false)...
    done (took 0.223135768 seconds)
    (139/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.09502584 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.091512558 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.121668523 seconds)
    (142/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.070340028 seconds)
    (143/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.171498667 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.100806412 seconds)
    (145/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.14106845 seconds)
    (146/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092254167 seconds)
    (147/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.186916932 seconds)
    (148/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.107494947 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095562323 seconds)
    (150/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.118351336 seconds)
    (151/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094075004 seconds)
    (152/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.104432244 seconds)
    (153/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.096075719 seconds)
    (154/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137535089 seconds)
    (155/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.124914986 seconds)
    (156/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.090462892 seconds)
    (157/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117282362 seconds)
    (158/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.094700144 seconds)
    (159/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.1759387 seconds)
    (160/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.070916889 seconds)
    (161/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.114283929 seconds)
    (162/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.092557144 seconds)
    (163/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.095849044 seconds)
    (164/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.091963194 seconds)
    (165/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.093800482 seconds)
    (166/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.079935395 seconds)
    (167/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.188212615 seconds)
    (168/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.118408884 seconds)
    (169/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.092359903 seconds)
    (170/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067791569 seconds)
    (171/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.113578413 seconds)
    (172/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.090339886 seconds)
    (173/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.108537761 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.098442061 seconds)
    (175/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.082669967 seconds)
    (176/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.093942352 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.101515134 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.114314917 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090510241 seconds)
    (180/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.10372631 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091290255 seconds)
    (182/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.094663276 seconds)
    (183/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.107509537 seconds)
    (184/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.109222966 seconds)
    (185/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.072180426 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 0.225855711 seconds)
    (187/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.09750831 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111118466 seconds)
    (189/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.11844417 seconds)
    (190/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098899088 seconds)
    (191/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.114500186 seconds)
    (192/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115097188 seconds)
    (193/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.09501304 seconds)
    (194/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.17733411 seconds)
    (195/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.096904534 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.101148685 seconds)
    (197/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.148580937 seconds)
    (198/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.185580875 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.102121018 seconds)
    (200/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.132760322 seconds)
    (201/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.100113711 seconds)
    (202/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.095527625 seconds)
    (203/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.094420418 seconds)
    (204/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.189656725 seconds)
    (205/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.146880204 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.08936195 seconds)
    (207/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.143481914 seconds)
    (208/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.106444127 seconds)
    (209/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133693659 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.094083984 seconds)
    (211/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119772682 seconds)
    (212/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069663012 seconds)
    (213/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.114047703 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086972683 seconds)
    (215/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.107088394 seconds)
    (216/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.13606111 seconds)
    (217/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.315421106 seconds)
    (218/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066210441 seconds)
    (219/286) benchmarking ("sort", BigInt, true)...
    done (took 0.229706054 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.070180349 seconds)
    (221/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.174656688 seconds)
    (222/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.071565458 seconds)
    (223/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120152922 seconds)
    (224/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066880432 seconds)
    (225/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.091690525 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090905491 seconds)
    (227/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.120632956 seconds)
    (228/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.071168661 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.119511221 seconds)
    (230/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.091262544 seconds)
    (231/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.1258392 seconds)
    (232/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.166862335 seconds)
    (233/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.119193663 seconds)
    (234/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.093645817 seconds)
    (235/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.069219654 seconds)
    (236/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.162272708 seconds)
    (237/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.07238585 seconds)
    (238/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.155554813 seconds)
    (239/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.072132298 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.113864099 seconds)
    (241/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.092689938 seconds)
    (242/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.122556201 seconds)
    (243/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.0928275 seconds)
    (244/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.070134882 seconds)
    (245/286) benchmarking ("sort", Float32, false)...
    done (took 0.173588075 seconds)
    (246/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.11036237 seconds)
    (247/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.068166166 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.114817706 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099737479 seconds)
    (250/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.070432361 seconds)
    (251/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115989453 seconds)
    (252/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.071716782 seconds)
    (253/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.118502251 seconds)
    (254/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.115459702 seconds)
    (255/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109199402 seconds)
    (256/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092424519 seconds)
    (257/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.091519894 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093752206 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.107753431 seconds)
    (260/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.081665525 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.112375995 seconds)
    (262/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.071652777 seconds)
    (263/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122404684 seconds)
    (264/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.071316849 seconds)
    (265/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.070055701 seconds)
    (266/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.102420863 seconds)
    (267/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.080767244 seconds)
    (268/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.165288764 seconds)
    (269/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.071413875 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.118822388 seconds)
    (271/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092843421 seconds)
    (272/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069626101 seconds)
    (273/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.089866748 seconds)
    (274/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.109445489 seconds)
    (275/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.107548912 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.085865878 seconds)
    (277/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.091828112 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.085487758 seconds)
    (279/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.090088557 seconds)
    (280/286) benchmarking ("sort", Float32, true)...
    done (took 0.231840196 seconds)
    (281/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113067574 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.11479691 seconds)
    (283/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.070946171 seconds)
    (284/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136948684 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086904041 seconds)
    (286/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.092596392 seconds)
  done (took 36.505563785 seconds)
done (took 37.382103802 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104232772 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.151961184 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098925959 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.13768747 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125090595 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095471547 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119421149 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.101026002 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.127662285 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.129401298 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102283246 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092870868 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101230529 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122931152 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098265869 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138147713 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124907993 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.097605521 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119659773 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087139213 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118742389 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085537313 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111614075 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069214893 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120805975 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095567166 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116453224 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120539058 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.090681801 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110914263 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093756683 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118581903 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090590548 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122346788 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097446093 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.12167539 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098640557 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.11960882 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111272407 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088686892 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116886741 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.09025617 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117227178 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.097942108 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114130447 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093872985 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119060599 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099424229 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.137454807 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116450069 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.097415213 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119700325 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.098925346 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116635778 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09628421 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121107009 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092842782 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137513914 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.123983701 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096210193 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119662741 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096762181 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114600948 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09726471 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119085408 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.12271874 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.101796503 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114233659 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.100420059 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115304167 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085204999 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118225129 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.092507205 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.114020624 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098203668 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123045144 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086487239 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117385218 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11642057 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095607545 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111964291 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093964048 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11340795 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.097207139 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113971033 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073777167 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.118443687 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097532502 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108434217 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.099368054 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116039732 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09522382 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.110479653 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.09988571 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.108581547 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094147629 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.115267652 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.090115865 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.116617944 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095513955 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.114007703 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0909329 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120436453 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089942733 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117038369 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.1216054 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091181063 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118785694 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.090238793 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110624847 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.105955973 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.124652593 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088680911 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114610731 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088817423 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119883621 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08591431 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.108739665 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087774342 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.108921925 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092444694 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111972298 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088729424 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.11788043 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124004722 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.090257196 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114723941 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093214407 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109047959 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09324157 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.109474786 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087697804 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111160602 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077990652 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112440264 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088909762 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.115932847 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089452822 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118064801 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088664618 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.117932611 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09126281 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116002686 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092418115 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109095985 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073869789 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114573359 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090153454 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.111110972 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086729896 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111982855 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087232471 seconds)
done (took 17.064895883 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.091567816 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186972556 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15126369 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142307001 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108326171 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110063446 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121128888 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.122043569 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112354759 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.139994763 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110004629 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130310207 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.145775542 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086053118 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.110093212 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090951568 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.111017456 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101850667 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.143463691 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132270845 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.161224391 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086463317 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.143867895 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.132979765 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.12007394 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.107261473 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.109750105 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090760255 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.113358548 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.111375161 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.129825911 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.113240376 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087400125 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131990414 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103802043 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117153972 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087100722 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117142174 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086406792 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.109769384 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139819456 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131565724 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.095154204 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.115254286 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092204102 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.112281593 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089505131 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118860618 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097618797 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114288334 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124357057 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.153948428 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090286577 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.118906366 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088302071 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125017302 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119097101 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.092624409 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.109892527 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089779821 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.10983425 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090749488 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124360592 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.139224349 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091605102 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118931245 seconds)
  done (took 8.524141322 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10772893 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138950362 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.1044618 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.128686368 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109790061 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088274043 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.110766859 seconds)
  done (took 1.720697936 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092547912 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13302485 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112701976 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134333898 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130254963 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112991996 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121792815 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088058315 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.129397639 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088362968 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132466489 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150266825 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091581289 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120565043 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137502456 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.093900571 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138125185 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091231474 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114407552 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.1137372 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115568412 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134257128 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.095298202 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115673721 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108850759 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.119342411 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165727886 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097943423 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11731383 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.095971816 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115856656 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150971497 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10805878 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127922016 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089774157 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130360814 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.133182065 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091621417 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131541135 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099395286 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.132058996 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.095251206 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118109152 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08875671 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118327953 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098682731 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.11671701 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.088860416 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.114626888 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132254683 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.109507073 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127957823 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088810122 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11516767 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091376182 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117655244 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097552415 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.112057533 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131653635 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094231251 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129896178 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106371102 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.125128046 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129302448 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09561473 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.125185393 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103408153 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116728224 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090954743 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.114655603 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104692713 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.109581877 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.091140633 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.122628091 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116449039 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.115732171 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137138962 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094882794 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124710003 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088303963 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112170782 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.112295144 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113762887 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116155366 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088672664 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114999777 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09168904 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.109797557 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088937113 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11600537 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086773399 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115237441 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091462977 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113141033 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091397892 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129049743 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113084265 seconds)
  done (took 11.845320188 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094048911 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114410144 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092538155 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.112430936 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089280249 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.112698336 seconds)
  done (took 1.559453249 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119094395 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114727754 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103597955 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118068617 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.153163689 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104025118 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.126932338 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120955634 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10897599 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.124999848 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127108965 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106344076 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134172433 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121101021 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10807152 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.11871427 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.102919526 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122610472 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125382495 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098640914 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135072973 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.11839033 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098727873 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.129381936 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119207824 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098489609 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123831583 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10498586 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125568225 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.120870252 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098161564 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.115875343 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09779839 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121402464 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.127487394 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094887289 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118045246 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.116511554 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100845706 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116102813 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103593509 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119218201 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125358611 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093039933 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.1210285 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.118339061 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095845543 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122307584 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102225392 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.117117105 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.11628987 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094641787 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.114907436 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092913218 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.118623988 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121585824 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095181404 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129600642 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121557183 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097896089 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118120576 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094367559 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122046601 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116637916 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.1079128 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.11627629 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120468734 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.099107732 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120486022 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097953678 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.117918877 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093514407 seconds)
  done (took 9.133862693 seconds)
done (took 33.715708119 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.682707118 seconds)
  done (took 1.625448702 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.813034978 seconds)
  done (took 1.757620065 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.44786683 seconds)
  done (took 16.422544956 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.481291364 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 3.305893876 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.982086302 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.176204135 seconds)
  done (took 5.890370769 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.922286833 seconds)
  done (took 1.889435821 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.285461657 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234138965 seconds)
  done (took 1.470392788 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.759178891 seconds)
  done (took 1.720944077 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.363433165 seconds)
  done (took 2.314544857 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327025021 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.188099519 seconds)
  done (took 1.473952976 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.557856612 seconds)
  done (took 1.517748445 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.893300362 seconds)
  done (took 10.859340355 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267501222 seconds)
  done (took 1.243137922 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303001938 seconds)
  done (took 1.267090988 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.233235214 seconds)
  done (took 4.197155808 seconds)
done (took 54.605496076 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103337824 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126512395 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101553026 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122103031 seconds)
  done (took 1.411410504 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.105737917 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119361326 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099819512 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117651177 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123810496 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096454832 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.120980133 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100129302 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119065936 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095670087 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118871826 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118331081 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100483451 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120245038 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095010418 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12074878 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.097941811 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117950023 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12151325 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097825061 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116349168 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099109557 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122531535 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093742652 seconds)
  done (took 3.606518643 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104868174 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117666037 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099677476 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.115615777 seconds)
  done (took 1.411654035 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.104531926 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128464947 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105037779 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.122819152 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129251341 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.104793516 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114512341 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092550311 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.117223621 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.098200629 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.113734811 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.136008136 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.109941092 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.122506553 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102448079 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111799463 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092168028 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.128397507 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122067606 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10000684 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.115612881 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103612036 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.112756863 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.107864026 seconds)
  done (took 3.664390722 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.175207944 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.124552626 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.136702436 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096700445 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.157781824 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.138694939 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.092763847 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140532752 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087358355 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129653527 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116086426 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.138669561 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128876385 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088085925 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112255309 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087211558 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.125559081 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127145732 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092754217 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126078036 seconds)
  done (took 3.398539791 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.102517566 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117763713 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092886356 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115070617 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.10077167 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119726582 seconds)
  done (took 1.623104952 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095731799 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113798942 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092600427 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115383647 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.099664773 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116467904 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091457192 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113906095 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.0923979 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.112783703 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091982608 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.111055619 seconds)
  done (took 2.220204799 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.501479462 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.117336389 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118454744 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090024268 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121484856 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091632962 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128075614 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091338873 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139005509 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088581501 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114080133 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09013364 seconds)
  done (took 2.665049789 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236794712 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123274193 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276517142 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366823851 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152240347 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16331645 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276058862 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156420368 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.219164731 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151252176 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203077966 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193990972 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149446795 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212109036 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117074434 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144047214 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185562078 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242156684 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151540315 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233787936 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180563723 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165582499 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178793146 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148788737 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136287251 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171729498 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120116674 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109448083 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23067673 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175368903 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21461232 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164093473 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144765561 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206507005 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249141673 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217206471 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278580307 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132527655 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.137496333 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168085241 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255579952 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135355076 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200528884 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15228858 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128215905 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213007329 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162730949 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173933036 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.143922013 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110976264 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21649068 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233238571 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.189009011 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135665672 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296634039 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146006958 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.154034498 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191375807 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248041508 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22138164 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184564159 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.11836046 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185170556 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211826611 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181770861 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.150127697 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.178744482 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145971225 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178421117 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18454863 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184654557 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175846617 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180757518 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138222145 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167136567 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16726756 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168353059 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252205533 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205927829 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.094566493 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16639607 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146551034 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130918076 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191979484 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09700833 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235770164 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141836244 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.160349587 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212284488 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155885796 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158863357 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189889086 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208363367 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120915382 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.108933263 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152439496 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.151144615 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174266852 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137522808 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155945207 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15396495 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104223133 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166494911 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122128532 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18039183 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.116236424 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169156767 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179225342 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.124432894 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157848751 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148233691 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.122834875 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196427003 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197938336 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140125469 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13105269 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207369776 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176288022 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.138915859 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174499629 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223459674 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118619125 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147160172 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22236164 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214402746 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138348592 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224284161 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158091674 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109088239 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.129061341 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178828636 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151862229 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159854527 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131456268 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.180353636 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226040754 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100544849 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13643926 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190972841 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132371661 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130851086 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152928815 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145439887 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110131665 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.140491578 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.1430324 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174132323 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175593323 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152276133 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16191494 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149975124 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250028051 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140477684 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.148425733 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145640891 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095022617 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.214434363 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199023486 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128214169 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202765586 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.166954612 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225606323 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168045563 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131943343 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17462568 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101498651 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117784992 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190212131 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164250986 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15776731 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.219712599 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198301427 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.202109885 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182095911 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163529211 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170205608 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162304359 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153559637 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.135191507 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156801011 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155831699 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096352915 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.137113059 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132026963 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146285891 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11494069 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131557628 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218149247 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169704134 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187075421 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156958403 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148515122 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179536375 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.126638974 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17175086 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175759401 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147106316 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.219103695 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195476822 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181425853 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141269083 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224328833 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.092845305 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122958055 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141230496 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166843459 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106923142 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133365882 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161236429 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177631708 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175535185 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19257312 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211565318 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193648961 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190581111 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095277739 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.165483747 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181679633 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175323277 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.17527479 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138526839 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.147331282 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173823246 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15621011 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248980947 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165996041 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172823642 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228407811 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.122765504 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1300356 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147123143 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175255725 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151383315 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172490267 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14400165 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138876715 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158082253 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102679358 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183910848 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186354412 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161534849 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184290438 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.146999628 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207496971 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103704561 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160145761 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158104659 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162127185 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10607764 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171156594 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199360417 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146161217 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163619951 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211946503 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103083746 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.302786686 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232284264 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190005635 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134964075 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153812143 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158130211 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160576704 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167818976 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176090943 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156441706 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211104435 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130714209 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.133420261 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138789333 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146755564 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147346392 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.10334437 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145480816 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174697566 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.136197715 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182123327 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153209605 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157663614 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195535949 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.121855221 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143118857 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14892793 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210743384 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207174299 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208061288 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.148725915 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.174774716 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230811988 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097680185 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12964394 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131793712 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175902114 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133523229 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191396862 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.18491958 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227039611 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179137391 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175147464 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137071051 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.116964158 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153739379 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167849928 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204923767 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148869947 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.144962146 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224458499 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110551631 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12931588 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163439292 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286473727 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142959446 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193384861 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104719536 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275421756 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098897275 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129338718 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162133631 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23024282 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108929148 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.173740299 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167306336 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159162834 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160306734 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146946594 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188485153 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237817799 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197159014 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205652519 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104022882 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154590704 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172116626 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216580277 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156139384 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.109058035 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228310544 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193428168 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.217444533 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.112383715 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166116189 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190769591 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129499457 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2108481 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132393808 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20522526 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132603744 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190661258 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150901577 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136811322 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173511686 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.210769106 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112982965 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209807105 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182361193 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132475234 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10479379 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192466874 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177069427 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154653228 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098679438 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205184686 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099060027 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21849475 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226943177 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133004431 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153022088 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14522678 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133145164 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153864206 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155211417 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112080836 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.161620138 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197693852 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.132764257 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186725016 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227129049 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167833521 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173013038 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143547933 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.689281617 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128514082 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19113718 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145611134 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230290715 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122900037 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196943092 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158347353 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171322854 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197928985 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158700227 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.228603294 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190219915 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.202350357 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103149352 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15655594 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15353692 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.141801124 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149205197 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166052917 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157599981 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.143189043 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177091889 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161486112 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.132914695 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13660414 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197576379 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145205433 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182108804 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176792973 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136333503 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171729582 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183133168 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13144045 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.175769686 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233286595 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139483572 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149575524 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.105641594 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.145940767 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258737393 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.122855847 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187336918 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18215082 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155561451 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165732352 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144380115 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218768787 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155937615 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183757764 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139041698 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.156251345 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154169468 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135106385 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101368004 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154186597 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166593569 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.14756832 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1563561 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.160943651 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192453761 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121187218 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115986727 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307282103 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174250559 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212052859 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.131672949 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132594089 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160159613 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145988922 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17441815 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177915842 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134106543 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107321806 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.134288479 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.149640059 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109909647 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154322693 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194626143 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162949151 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232085806 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.108102325 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276331397 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138470584 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153108075 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087721115 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130234273 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147877562 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143322713 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157416262 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189294986 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259407743 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147114805 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.104724354 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147754389 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12440838 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133333791 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134988302 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187205713 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176271098 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142098652 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081109872 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154414822 seconds)
  done (took 81.31428456 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166182061 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129207448 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14417857 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.198491301 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172953596 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267203482 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.20749252 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250420706 seconds)
  done (took 2.597616106 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.098518891 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.142937179 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156922838 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.129396525 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091033619 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.116547476 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.336652098 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.130707012 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.112938271 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120029673 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.167507789 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093513947 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.541422536 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.096991615 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118405986 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.104345488 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091712176 seconds)
  done (took 3.702803772 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 43.533413552 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.015256718 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.504997614 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.186691283 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.756110681 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.09365702 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.650105482 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.162341422 seconds)
  done (took 55.965200331 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.121489941 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.14107051 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.130786249 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.159057728 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.145849552 seconds)
  done (took 1.754746123 seconds)
done (took 166.29388297 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.10328492 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131606704 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100601022 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.127374261 seconds)
  done (took 1.510969748 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100576753 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.077127874 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104201078 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076309659 seconds)
  done (took 1.418035751 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.185442035 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.173314449 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.409576742 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.077403689 seconds)
  done (took 1.579884044 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.119013731 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.129902432 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104948394 seconds)
  done (took 1.426294445 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.111056524 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128752799 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106901802 seconds)
  done (took 1.413496498 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.11080286 seconds)
  done (took 1.177688113 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.114160122 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.140274065 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109942397 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134682652 seconds)
  done (took 1.565552355 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.103352695 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126475851 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.112934833 seconds)
  done (took 1.40869506 seconds)
done (took 12.920973845 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108556177 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.505860843 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.389916124 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144390149 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.718397916 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385437315 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.055372753 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.1472837 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16606063 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098611392 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138253517 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672468681 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.007441135 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.466812428 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970842781 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.363739449 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676472449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122999724 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116124915 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094912005 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.036056631 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095271178 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118821498 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090620308 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.699452632 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423955579 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095062117 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.363225978 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094464626 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123018978 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382059511 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119516529 seconds)
  done (took 17.045481793 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100366499 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173404884 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.104126754 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134136808 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122059801 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09701262 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121298988 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094422586 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174980228 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126274985 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111137843 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120213976 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124458602 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.099102042 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138637794 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098231715 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.129075478 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092807387 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118096026 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117462599 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112918293 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116395931 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093318526 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118333091 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.091677981 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131536928 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118224739 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093397827 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11669563 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098615516 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.123977178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.092669415 seconds)
  done (took 4.771472198 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145310998 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180180404 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129262626 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124230998 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.164383408 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.120201784 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.193812867 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122771953 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177976364 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124692413 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1350761 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094193268 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152777397 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093463593 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138702561 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116626942 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095118623 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118235935 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090455851 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119172975 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135738022 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097161196 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118579856 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092520676 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.119668498 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105999123 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120474327 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.11658351 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092548545 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122718091 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097816146 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119695857 seconds)
  done (took 5.050406028 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.102751963 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123364266 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108909126 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.141343212 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100065818 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125272185 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096078228 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121328114 seconds)
  done (took 1.989529822 seconds)
done (took 29.926216747 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117568653 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.130029228 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.111893893 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136997341 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100617677 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130740478 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.089259485 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.129506106 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135682745 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.106420835 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139243379 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.097758591 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125260622 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093793568 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.131490431 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.102416933 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.135562206 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.106685695 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136776532 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133672745 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.099270528 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134266244 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.108409505 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13764389 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107796557 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135734623 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139576785 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10552001 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12554213 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094941567 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.127021094 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110475761 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.127522538 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.112040801 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.129970123 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.103194156 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.127374796 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.097846186 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.129644035 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.130936867 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.105447046 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135124372 seconds)
  done (took 6.078815723 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113042455 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.144518094 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109741471 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.086612956 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118538003 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079011581 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.133687935 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.08495489 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.113042231 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108102621 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.080288693 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.109243668 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.076773723 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.099509279 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078958172 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074010985 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.106313311 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07495181 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.074735552 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.102137281 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.078210147 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071328187 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.103979432 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077749775 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073700971 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.106027244 seconds)
  done (took 3.554095887 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.105785179 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136420734 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111526947 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.179147043 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158052196 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098014441 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.127789438 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135692363 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110437716 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115812851 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095586002 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.145439463 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107350508 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125443944 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090350879 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132972383 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130985984 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.092593192 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12431305 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111231544 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.134594392 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.100708708 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137530769 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.128965348 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.090423241 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119191992 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095093298 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.131338724 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096427864 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.12744805 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.0955398 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.121074448 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.118759107 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.102736309 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124240629 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.092892642 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.137884529 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100950529 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126116513 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.09138287 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.125579607 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.117641384 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.112437409 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.163348003 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096650209 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126378548 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094004792 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.128881754 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.116702863 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109361983 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126695336 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.090238975 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.120928111 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090168363 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.117934837 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105035865 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.122614393 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093092181 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127167775 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123295747 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105162363 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121238557 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.106904034 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121897418 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.098312744 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.117601395 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092266864 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117689174 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139122811 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100917314 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.15750007 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099597806 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126101123 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10042219 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126766845 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.124124303 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092723311 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133041795 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107194877 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124217092 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100727131 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.1223521 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094118916 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.13694448 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.120177049 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096980036 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.118349772 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101504475 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120748301 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.092603844 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1329905 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091388955 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122035421 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108742071 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117649859 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092125736 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125019514 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123018968 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09168693 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13174059 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097142694 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.119503126 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101411157 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.117935481 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120496067 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.10268857 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12263008 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090572952 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.122219395 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098023511 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118372312 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09261177 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.121893864 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.092355921 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.127998122 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.09748099 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123161178 seconds)
  done (took 14.521204714 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229653593 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.20976635 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.200883607 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.28367517 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.131138943 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114155121 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.206047186 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.150260579 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.119879778 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.155404179 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171851782 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.175792692 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167690556 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.182392235 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.164590352 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093466741 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.137763804 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.132043144 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.236781341 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.25200809 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.139406846 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.098551124 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.156050196 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.155704083 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.133049351 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.126706715 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.11206318 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.131159955 seconds)
  done (took 5.661206232 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114039337 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153183502 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097327433 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.141471908 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144748567 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091741117 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.123438669 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.092300503 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.131562711 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.131483016 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091776765 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125349482 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099721315 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.127883669 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.119634687 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.101583635 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.127697849 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.093673203 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.122680401 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096223459 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129566765 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100170009 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125177226 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.117570056 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.101436709 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117756051 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.084612763 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139289052 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.117464476 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114457639 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.116834236 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100029857 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.1327352 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092121085 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.11967619 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.093827163 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.121023273 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.093659231 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120546944 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090768387 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.118476318 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075865549 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.1175994 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105716841 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.124725074 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.078816038 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126170406 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.124340728 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.093609742 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.11660014 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095462315 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121282799 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095541529 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.125788625 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.094730197 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120023567 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.094718333 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.111586351 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098540342 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.120799437 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.082864505 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.119593709 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097443114 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.113808359 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100320252 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.123786238 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.090589555 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.120859353 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.095825201 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.124985912 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.093974331 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125953384 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.089139744 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.121971267 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.093859717 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.123539001 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.09497308 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.117648964 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118367627 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.092164928 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.073538277 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.119778702 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.072207948 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.121837467 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.090329847 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.117901414 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.093762321 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125460634 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134143572 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.093844207 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.127493949 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.092619521 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118372064 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095197604 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.109312922 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.094735893 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.135674572 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.136838414 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.091951252 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.116663715 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106886517 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.121180018 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.091112526 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.102452951 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101047053 seconds)
  done (took 12.638698051 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132259853 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155551273 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09364508 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.136981503 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.153833429 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159219257 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105848807 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.125741472 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.100079103 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.138367587 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.098851299 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.127743858 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092237218 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13250236 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156955258 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.108341957 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127592641 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106836183 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130273527 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.165320852 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.116633313 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141729855 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.10859069 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.119851187 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.097573162 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.135558613 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.156892604 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.105386271 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.132483937 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.137688756 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.112861632 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.156459187 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.110926421 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.123832051 seconds)
  done (took 5.412429381 seconds)
done (took 48.937209825 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.177780484 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.392424243 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.17118319 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.018920864 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.198110812 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.184665909 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.180950846 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.1717859 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.227844925 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.167152552 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.438928322 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.626699473 seconds)
done (took 59.053444843 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.265214265 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.312743258 seconds)
    (2/2) benchmarking "String"...
    done (took 1.444298942 seconds)
  done (took 3.852958553 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.528182677 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.058531479 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.428144266 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.170889163 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.172058349 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.476850884 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.67653347 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.372380968 seconds)
  done (took 27.450339954 seconds)
done (took 41.195873145 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.160914865 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.234318678 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.213597165 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.151003976 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.271663134 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.198962047 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.475592583 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.197661273 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.186822696 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.153581924 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.19098554 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.170466631 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.178277373 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.498036699 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.173836946 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.176353762 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.174839017 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.670070527 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.52889051 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.190079336 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.173383596 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.18081078 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.181390595 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.185452515 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.202566022 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.174250859 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.173617526 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.185696707 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.121908077 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.176549504 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.268240686 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.651215511 seconds)
  done (took 188.966844818 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.174430234 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.118557715 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.203458595 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.20532904 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.5809677 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.382057075 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.350618796 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.649017459 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.189324549 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.203804453 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.4170949 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.169208797 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.455932376 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.134929914 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.188036464 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.26228318 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.417289295 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.432873079 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.184757639 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.342699923 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.168563361 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.353557113 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.280661756 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.323889195 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.175758424 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.239619024 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.179084187 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.175935472 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.348150733 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.353746283 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.190940556 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.18835103 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.667147803 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.999059448 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.154771457 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.160270192 seconds)
  done (took 148.120640779 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.141571751 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.140965703 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.142874982 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.170651812 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.142026155 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.623748226 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.623921008 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.629647912 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.541525454 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.236726486 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.322190357 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.135667627 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229766055 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.149389176 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.133520013 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.137688198 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.153945392 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.178689734 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.139611038 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.138376608 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.139546215 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.623577308 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.148630332 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.292402781 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.144665922 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.162010191 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.52254783 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.259970045 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.132352291 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.159750993 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.446423933 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.17088069 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.12797774 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.435229209 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.299797799 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241931276 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.131847712 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.158553723 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.132173226 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.132722483 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.403865697 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.129841661 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.133590225 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.135341776 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.715737418 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.132598574 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.615287763 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.133487503 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.002943637 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.129151662 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.133322191 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.479650643 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.644003635 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.147239889 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.132926003 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.135449712 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.133030951 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.133959724 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.161305083 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.457016289 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.223034903 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.149189962 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.138005172 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.161838057 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.132530945 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.328865866 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.132940736 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.263066042 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.191499385 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.347373693 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.617392731 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.134853681 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228159311 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249753599 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.130024609 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.134450763 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.133914443 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.132520298 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.240988891 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.133078081 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.500548097 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.292246624 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.145074358 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.239013798 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.229181068 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.130683671 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.447307105 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.135511946 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.136068923 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.854009761 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231052873 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.135343037 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.136281148 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.134637362 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.503095661 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.615533853 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.294352708 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.133235672 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.427758428 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.124313738 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.125858416 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.492595281 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.586951402 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.697289467 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.109686205 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.21535284 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.270848124 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.123434938 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.108477871 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.210415468 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.118695228 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.167869002 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.109009732 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.502253627 seconds)
  done (took 355.025194519 seconds)
done (took 693.210496551 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.678940395 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.684638642 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.779311971 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.688256777 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.643938162 seconds)
  done (took 9.51327292 seconds)
done (took 10.553448142 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.279514742 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.279170489 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.169253795 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.283959085 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.140645361 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.294015473 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.258683015 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.137009364 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.204155469 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.183364275 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.206709611 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.160126414 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.14206612 seconds)
  done (took 16.780127889 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.39956664 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.410141943 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.179180252 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.417677598 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.154857683 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.40338842 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.306004338 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.316776099 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.318818243 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.148512539 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.128174221 seconds)
  done (took 15.225271307 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.447291614 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.406707154 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.180635858 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.415847125 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.154974221 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.488445783 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.316656738 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.321380911 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.318962471 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.146892698 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.127846511 seconds)
  done (took 15.370184904 seconds)
done (took 48.418436199 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.123751989 seconds)
  done (took 2.168203629 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.157587948 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.316985881 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.149209966 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.1429907 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.129648598 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.125367546 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.129765799 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.124729096 seconds)
  done (took 10.324801478 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.122253289 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.12273769 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.124180902 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.123411608 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.120431689 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.125178743 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.122053221 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.122924755 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.123433227 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.120372695 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.121175913 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.123671409 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.121996875 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.120645772 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.122012535 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.124042444 seconds)
  done (took 19.00595599 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.124465715 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.12129358 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.121583527 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.122120199 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.122727356 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.122023841 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.124434701 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.121225446 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.122232183 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.121942708 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.123791417 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.121400502 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.123220276 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.122254358 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.122122702 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.122686183 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.123318308 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.12373502 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.127143087 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.122772396 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.122966041 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.122610127 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.123242989 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.123477101 seconds)
  done (took 27.996111522 seconds)
done (took 60.540649326 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.687098093 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.545695095 seconds)
  done (took 6.279924238 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.127055427 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.124749561 seconds)
  done (took 3.301608664 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.125726389 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.125164074 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.125676153 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.125407445 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.125548551 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.125394548 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.124575199 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.125801641 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.125008621 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.125207177 seconds)
  done (took 12.301681413 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.125816916 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.125062949 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.12291001 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.125095336 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.126020504 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.124007854 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.126199928 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.126037939 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.125771104 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.123228895 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.126984963 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.124033318 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.126138609 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.124431115 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.126907104 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.124142181 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.124122168 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.124919673 seconds)
  done (took 21.300091331 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.12748179 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.126429584 seconds)
  done (took 3.302377074 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.124335692 seconds)
    (2/7) benchmarking "second"...
    done (took 1.124277329 seconds)
    (3/7) benchmarking "month"...
    done (took 1.125440298 seconds)
    (4/7) benchmarking "year"...
    done (took 1.125005797 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.124285614 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.124619651 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.124946237 seconds)
  done (took 8.9210853 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.128518734 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.303212762 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.37265385 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.722018978 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.128965275 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.132207606 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.97297811 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.134462395 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.134318838 seconds)
  done (took 13.078458532 seconds)
done (took 69.533257606 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.109591798 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.137364083 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.239131657 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.126782528 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.137100582 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.42265426 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.155742994 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.247946463 seconds)
done (took 36.628099463 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.122716194 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.112725613 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.770321052 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.104638751 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.073083883 seconds)
  done (took 18.112865996 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.054787226 seconds)
    (2/2) benchmarking "read"...
    done (took 1.455410229 seconds)
  done (took 4.565948125 seconds)
done (took 29.854426585 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.129563653 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.128480273 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.126558402 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.126137271 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.130705917 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.129525463 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.127174695 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.12639185 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.126312706 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.129699713 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.130086125 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.129877006 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.130254414 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.128739863 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.131468657 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.129418192 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.127088348 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.129925325 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.12904387 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.128216328 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.127408281 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.13050955 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.127060819 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.127648811 seconds)
  done (took 28.139535344 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.13109606 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.127985652 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.131426203 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.130455508 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.12742132 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.130677193 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.131285217 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.133903648 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.132116757 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.131084494 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.127487494 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.128598316 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.131145462 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.128684297 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.13175727 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.12861243 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.131708044 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.128707966 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.131180393 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.128094004 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.131627079 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.129161976 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.128905827 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.131986038 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.129172107 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.130474704 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.131716373 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.12898359 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.132154581 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.129803071 seconds)
  done (took 34.959417823 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.136345865 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.138975538 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.132653788 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.132980792 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.131058328 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.131986533 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.133502721 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.133583393 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.133414871 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.132526043 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.132692944 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.132774792 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.132836759 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.132338858 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.132646437 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.133936543 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.135684919 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.132472881 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.133773967 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.133702415 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.132972843 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.133725114 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.132953976 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.133305434 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.133309834 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.132389559 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.133049257 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.134082025 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.133716747 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.13548871 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.133733856 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.134177069 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.134557977 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.133964067 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.133537807 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.136295108 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.137551213 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.139698044 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.134251859 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.134324235 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.133634941 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.134031529 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.13456572 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.135353324 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.134199766 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.134436913 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.13417472 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.135058056 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.13445122 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.134672395 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.134463377 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.134720963 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.135080182 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.134517288 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.134882392 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.134944316 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.13509561 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.135340367 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.13570189 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.137196066 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.134883791 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.136673248 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.135619465 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.13477027 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.136547051 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.134920416 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.135317926 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.136306489 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.135222043 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.137314194 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.137577798 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.136497885 seconds)
  done (took 82.741965906 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.136474768 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.134209724 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.132708532 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.134400321 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.133591997 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.137935261 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.133564496 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.136755159 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.134669035 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.136653571 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.136927976 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.135811984 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.135199874 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.139652427 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.138009147 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.134669274 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.136803776 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.135272923 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.138028757 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.137523947 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.136994628 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.135624122 seconds)
  done (took 26.050289257 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.138597258 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.139483094 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.134236348 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.137805924 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.133901097 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.13746587 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.1375208 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.139858085 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.137827609 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.136458522 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.135863261 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.138649076 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.135467459 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.135438617 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.135709942 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.13749654 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.13990059 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.137007051 seconds)
  done (took 21.527431842 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.136722812 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.135411693 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.139580266 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.135806133 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.136376994 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.139573219 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.136045455 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.13879774 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.138576681 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.136886304 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.139210661 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.139110569 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.138623862 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.137016488 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.138839195 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.136483074 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.138577974 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.137164318 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.138992935 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.136283665 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.137012363 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.139810136 seconds)
  done (took 26.090721786 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.141257772 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.139909504 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.137470843 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.137365012 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.137548028 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.140225046 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.139660792 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.138272923 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.141925677 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.139965993 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.13739841 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.141345124 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.139587185 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.138737244 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.138853091 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.137342235 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.141223254 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.137689138 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.140660472 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.137624738 seconds)
  done (took 23.845105957 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.140940028 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.141592809 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.142902436 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.142488218 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.142793156 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.142444884 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.142539517 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.141529615 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.14118762 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.142353284 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.14183717 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.142272555 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.142209636 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.143323281 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.142841101 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.142464255 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.143190666 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.142879121 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.143462592 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.142739224 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.143685953 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.143590545 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.143256155 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.144015262 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.142966216 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.144884858 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.143051072 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.142998859 seconds)
  done (took 33.058999943 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.144044101 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.1424411 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.140476255 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.140780659 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.141008155 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.140606144 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.140368114 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.140310734 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.143358604 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.141104302 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.144425971 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.143532027 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.143617479 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.143597418 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.144749367 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.1440529 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.144343221 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.141978618 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.142258902 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.142118357 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.144484357 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.144535689 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.143479495 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.142174712 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.140772786 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.144463692 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.141455924 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.1415177 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.144987345 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.140832602 seconds)
  done (took 35.342686873 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.162882721 seconds)
    (2/2) benchmarking "in"...
    done (took 1.163198279 seconds)
  done (took 3.391067861 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.141045394 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.144987471 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.145359971 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.142676575 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.142525939 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.144749388 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.144507957 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.142626295 seconds)
  done (took 10.213413827 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.144755287 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.144441588 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.145633105 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.144172819 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.144856971 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.146357249 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.153389865 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.162346069 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.146289933 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.146110063 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.151448854 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.151606014 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.148285174 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.146592864 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.145241795 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.147564719 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.146555114 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.146874199 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.146778215 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.147768018 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.145561715 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.148623503 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.14886963 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.144672146 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.147760403 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.158192342 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.169303784 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.146842583 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.146593075 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.15056234 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.147481539 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.144831366 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.147792481 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.14771603 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.148069764 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.148080546 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.158108905 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.165659391 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.156069233 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.16562809 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.148461676 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.145795538 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.149118121 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.150265359 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.150718142 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.148970385 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.149073282 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.145942662 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.148456653 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.150959855 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.15279745 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.14848064 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.146737942 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.153361147 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.149567068 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.15598818 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.166337816 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.151333147 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.156827124 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.159547781 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.179131527 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.170743001 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.151737742 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.148792595 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.158488632 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.168519268 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.157516952 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.164736471 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.147595135 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.149401329 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.157140976 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.179277641 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.171699229 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.149813439 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.15074657 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.150840814 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.150543801 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.149645515 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.157993745 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.171065147 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.150386743 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.151441584 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.160127943 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.169539514 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.150297315 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.150910549 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.151247217 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.151654734 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.151827072 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.161159619 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.168469452 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.150953889 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.150978908 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.151703616 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.153202734 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.152269326 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.151067329 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.152173093 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.14860294 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.151986097 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.152082908 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.154819835 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.158897348 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.151959572 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.151768336 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.159475483 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.169099169 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.151636283 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.159532875 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.152189041 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.15316768 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.153801041 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.157984488 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.150536276 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.154629235 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.159536365 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.152421298 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.153616117 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.15318416 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.15243918 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.161680537 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.173123112 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.153525824 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.153041959 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.156786327 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.162102269 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.153235353 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.156912114 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.153263064 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.152101076 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.152227559 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.155660414 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.153990512 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.153807694 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.153754071 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.155882764 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.152635739 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.154603742 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.154144014 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.155315584 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.154227655 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.15455289 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.156129826 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.156557091 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.154669999 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.156083386 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.161250942 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.171026703 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.154885624 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.15552587 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.151889439 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.154574111 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.155611775 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.15578944 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.15409704 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.155017462 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.154695042 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.154453719 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.155075817 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.155460354 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.155847172 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.15571972 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.159525372 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.154995252 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.158602903 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.155300671 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.153104049 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.156080813 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.156236876 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.157194291 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.156342033 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.155289457 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.15829311 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.162977641 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.157557664 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.157019705 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.160137598 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.156055274 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.156792575 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.157434836 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.158701177 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.162868263 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.156362825 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.164264387 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.174218848 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.157142208 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.157260643 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.158148681 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.15632961 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.156647673 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.159485054 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.163183262 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.168197171 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.179870829 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.15845263 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.161072586 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.157852834 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.160579321 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.162137262 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.157156596 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.158746033 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.156816576 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.159013378 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.157301901 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.159284865 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.158767227 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.158046561 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.159230546 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.160158675 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.158665963 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.15983861 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.159497171 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.159716177 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.156181229 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.159989387 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.160000641 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.159325683 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.15729578 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.15861291 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.159861668 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.160295516 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.159233793 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.166967549 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.156722315 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.160464934 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.160472773 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.159027091 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.159370495 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.159464902 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.16187077 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.160100054 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.167946959 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.176752277 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.160992178 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.167221286 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.17781801 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.16056264 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.163481237 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.161630687 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.159059949 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.162690821 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.167696466 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.161035093 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.161381416 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.16083784 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.161236325 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.162096691 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.167310237 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.176431462 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.161646016 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.161600587 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.163634505 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.159202852 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.162302104 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.161417562 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.161087032 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.162687935 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.161359469 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.162350146 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.162997353 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.162140221 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.162067581 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.161795754 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.163606434 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.167405717 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.168410325 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.161574259 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.163492168 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.163810289 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.165454547 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.163274284 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.162169314 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.162709916 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.173837127 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.183454262 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.169042629 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.180953208 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.163404992 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.168094052 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.181325138 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.165970438 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.16329894 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.164520679 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.163649337 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.163301793 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.161716752 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.163041326 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.163663584 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.16504274 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.164187927 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.167629939 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.164648738 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.163281279 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.1636249 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.164625575 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.164318415 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.16414322 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.165071897 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.16660253 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.166874624 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.163926195 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.164064315 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.171262204 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.182920288 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.165405028 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.163658755 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.165873051 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.164505197 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.166615149 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.165410017 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.168095394 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.171249267 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.167602986 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.171585484 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.166463539 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.175251258 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.165002625 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.167690152 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.171836315 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.16322986 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.164049494 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.167015889 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.165395085 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.173301646 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.183105404 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.167565292 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.168846377 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.165794614 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.166098689 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.167275119 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.165416273 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.165964529 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.16603656 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.174450707 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.184295399 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.169571823 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.168412039 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.163583575 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.166043805 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.16633007 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.166484032 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.169068451 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.166747495 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.16753605 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.167832839 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.167625359 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.168060782 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.167751213 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.168045902 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.16569652 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.167872424 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.174836631 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.187625674 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.17049226 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.168163235 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.175810586 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.185375708 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.174853741 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.185732651 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.168731484 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.167918087 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.168653889 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.170354388 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.168657377 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.169919399 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.168364837 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.169547217 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.171632463 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.168600107 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.170378445 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.168852612 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.169485006 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.16852212 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.178411335 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.188097285 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.17014101 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.173120643 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.167892829 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.169896122 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.171784102 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.169421432 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.167554391 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.171812068 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.17788681 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.176378791 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.171260757 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.170079992 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.1711772 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.170062699 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.170541824 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.170379858 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.169640869 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.170060394 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.171424995 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.169823896 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.172971808 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.169301259 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.171458609 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.171726474 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.171637496 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.180892448 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.188640974 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.171549314 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.171731691 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.171772266 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.171261687 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.171642742 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.171194512 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.171066901 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.171740916 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.172924295 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.176672206 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.176249369 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.173298505 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.171180607 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.171112846 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.171600053 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.173026257 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.171646457 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.171451707 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.172441145 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.172586054 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.171576366 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.172129505 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.170553206 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.17239542 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.173140658 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.172863848 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.174607067 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.177699248 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.17317041 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.17054848 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.172658136 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.172196147 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.171871951 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.172233169 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.179832343 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.193230408 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.17990257 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.178293294 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.176271803 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.173199338 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.174513513 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.178858189 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.172430338 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.175092642 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.172933769 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.174275112 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.173326297 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.176081214 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.173866105 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.180460814 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.192124076 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.180306893 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.182182437 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.191965435 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.173589617 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.174145128 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.176960385 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.174668869 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.17175472 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.174824277 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.174076248 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.181006218 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.19375301 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.175018146 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.17624804 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.174253109 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.176075564 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.177948921 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.175298304 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.176396182 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.172382452 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.176482265 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.175192018 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.175987607 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.172593896 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.175474955 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.176642365 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.177577035 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.179729653 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.174777397 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.177018626 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.176015113 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.177360516 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.176856349 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.175964294 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.174378009 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.17319014 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.175984877 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.176342313 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.176560263 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.17929173 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.176978588 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.17798238 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.176432421 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.177498513 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.178956008 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.184400342 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.182759714 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.173832346 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.176104124 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.177636604 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.179216199 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.177042006 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.176848276 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.17778021 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.178243741 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.178069724 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.177562687 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.177431802 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.180253896 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.191944742 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.195132671 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.177521094 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.1787696 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.180930469 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.178538374 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.175870815 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.17817918 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.17960672 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.180707173 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.183851575 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.179047756 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.184215173 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.195511774 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.178727828 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.18203359 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.182182663 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.184198389 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.180834086 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.178758891 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.178819283 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.182122298 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.193024997 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.17891452 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.187429825 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.205109887 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.19780557 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.179918982 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.179448772 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.179742794 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.179571996 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.181551328 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.178973923 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.180019693 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.180649888 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.178788665 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.179784803 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.184843856 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.180650109 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.181448493 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.180667456 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.179907313 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.181788909 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.177949847 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.180284112 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.180232511 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.180270096 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.181218057 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.180838124 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.18135768 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.192124117 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.204733041 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.180784036 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.181940279 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.178361649 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.18359176 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.183215687 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.189753498 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.18857325 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.182586236 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.180682374 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.183200449 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.181688673 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.181042363 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.181000075 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.182709928 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.182692113 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.179033791 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.193778411 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.20521732 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.188257667 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.182162381 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.182405011 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.182144074 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.182959349 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.182623461 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.181510598 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.182502264 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.183603912 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.185199961 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.182639911 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.181920595 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.184397264 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.18848446 seconds)
  done (took 696.565769504 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.180863636 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.180013273 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.180479409 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.180618009 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.180265505 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.181032999 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.180808273 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.180624694 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.180769899 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.180272156 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.181409582 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.180390844 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.180684771 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.181285368 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.182015212 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.18108299 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.181600587 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.181030655 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.181325731 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.181752174 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.180914257 seconds)
  done (took 25.899790782 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.184044575 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.181766734 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.182231702 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.184472271 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.181356934 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.184523425 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.18254607 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.184174964 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.184531602 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183115513 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.186289204 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.185783374 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.18270547 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.182386136 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.182218702 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.185627377 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.185580119 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.182494402 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.185034571 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.182681132 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.185370841 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.183381369 seconds)
  done (took 27.143626003 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.18612546 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.185148398 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.185066232 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.184221075 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.186312629 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.183004659 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.185172539 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.185155078 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.185786507 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.186815427 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.185018327 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.188371671 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.19238647 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.190177474 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.187181212 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.186609725 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.331209248 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.186343852 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.18602064 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.186760568 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.184346155 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.192822759 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.202741315 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.184583744 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.189892928 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.187756863 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.187952649 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.186059425 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.185911775 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.187398609 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.189429123 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.18663427 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.185963253 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.18922683 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.186251958 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.18746593 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.189800797 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.186735675 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.185178056 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.187504562 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.196248887 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.204747351 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.188355662 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.194322967 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.207491897 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.187275214 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.190556692 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.193404312 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.185410425 seconds)
  done (took 59.488619588 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.188439974 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.188369927 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.186089451 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.188200078 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.188186781 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.18827012 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.189705645 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.188936743 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.186311057 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.18613383 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.188686392 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.186951216 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.18669064 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.189673003 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.190496826 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.186653296 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.187280324 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.186422012 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.18765868 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.188012361 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.18724158 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.1888423 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.189625479 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.188180917 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.190169107 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.187287394 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.187830892 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.190367392 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.187527497 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.188076178 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.190438701 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.19011417 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.190637845 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.188356165 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.187794069 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.190148988 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.191694872 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.188024368 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.191946902 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.188590667 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.192177459 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.190655542 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.191407023 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.191360842 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.18804286 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.189153467 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.187994658 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.188439039 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.189771043 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.190849906 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.192232399 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.188841774 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.190700129 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.190777839 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.193532744 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.192659461 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.188655976 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.189523083 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.191807001 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.189718604 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.189827956 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.192229339 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.189836258 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.19266794 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.192383607 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.189840039 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.190256375 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.192520297 seconds)
  done (took 81.985466724 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.191469834 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.191441309 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.192058043 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.191575026 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.191690486 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.191975845 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.192093325 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.19176552 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.192480442 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.191631628 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.191901798 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.192091921 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.192742092 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.192477375 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.192025649 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.192104069 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.192595193 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.191307059 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.192596797 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.19337226 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.192722449 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.193448362 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.193101934 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.19398371 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.194930687 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.193554878 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.194254075 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.193479299 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.193350644 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.193296908 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.193836955 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.194516734 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.193551522 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.193639892 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.193930387 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.19354247 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.194391542 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.193170014 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.194179294 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.194062555 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.194114257 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.194069554 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.194281063 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.193276616 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.193709575 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.194594133 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.194541253 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.194724938 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.195572168 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.194511929 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.19433351 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.194864852 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.194564538 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.194684008 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.195263212 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.195265052 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.195390262 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.194697714 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.195489029 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.194677275 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.195754937 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.195534094 seconds)
  done (took 75.110957879 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.195712332 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.195431712 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.193176621 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.193679261 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.197376951 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.194228736 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.196946276 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.19698476 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.195995817 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.196257435 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197726475 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.194257523 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194469059 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.195575733 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.194051948 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194128991 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.19383632 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.195618235 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.196769738 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.195810057 seconds)
  done (took 25.021407958 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.195323392 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.196726835 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.194851931 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.194753449 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.197575091 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.194594904 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.197344444 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197283581 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194796089 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.19814876 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.19866839 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.198176078 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196245038 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.195642938 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.198516941 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.196429786 seconds)
  done (took 20.25984302 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.19572119 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.199871786 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.198021471 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.197383892 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.19596904 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.195936981 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.199820242 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.196606903 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.195897357 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.19859204 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.197643503 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.199676942 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.199424706 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.19838124 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.196145389 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.199615942 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.199082975 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.196701468 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.198698545 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.198471424 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.196678717 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.196672415 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.199149413 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.199273095 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.198514976 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.196266101 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.198203513 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.19754779 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.196263755 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.199796442 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.197474528 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.198175943 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.198023931 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.198088615 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.200636013 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.197841621 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.201607698 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.200637776 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.200328193 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.200325883 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.200088692 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.198853698 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.200260546 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.201199294 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.198160541 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.201286553 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.199140138 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.199060798 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.198396714 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.199356189 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.201309887 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.201888933 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.20060217 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.201428249 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.201157442 seconds)
  done (took 67.047027773 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202465943 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.201630491 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.198804009 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.200529151 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.203181461 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.200054045 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.201598531 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.201434244 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199382042 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.201676808 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.199825285 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.202829664 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.198687167 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.202432488 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.201040315 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202313529 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.199301804 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.199849551 seconds)
  done (took 22.734685342 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.200399619 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.200212455 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.2026491 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.200010052 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.200034577 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.203433488 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20118214 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.202460109 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203595182 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.202128015 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200333371 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.205253549 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201812789 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.203170762 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.201833427 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202941925 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.203622822 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205259463 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.202725838 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.20135571 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.20419859 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.20490937 seconds)
  done (took 27.573427055 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.205758764 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.203635361 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.201830031 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.219953777 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.221779044 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.225554487 seconds)
  done (took 8.405677612 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210054135 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208158521 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.204420174 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206586861 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205596723 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204355803 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203156766 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203639132 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20547107 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2045541 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20446293 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206642839 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207059484 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202591498 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206187587 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20591048 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202573511 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205409093 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205336809 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206000628 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202568078 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208205142 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20440166 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203959718 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20486807 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204982488 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211381805 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208384049 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20452887 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208270803 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21064547 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206877853 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209669802 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207558289 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211515905 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211862153 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208836377 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206647186 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211141017 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208060302 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.210895861 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212158151 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210664944 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207322022 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207558822 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204660457 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204983238 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206898011 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209183915 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212995613 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208676371 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207630185 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209516301 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210226548 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209726996 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208949555 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210985668 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208367822 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208177932 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20810593 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20600186 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211229286 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207302622 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20736099 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209463419 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206540169 seconds)
  done (took 80.831041983 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209485939 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.205997437 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206971337 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20737746 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205475122 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206920894 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20722574 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207969841 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211315422 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207658893 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210752254 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208655193 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206153108 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207686932 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206956694 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207888031 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208605668 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212634562 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20853408 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209818559 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207431118 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206408955 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208429147 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20766052 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208678217 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213189031 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205932562 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208247154 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206357725 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207343394 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207166166 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208050299 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207644693 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.207775798 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209503448 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208280462 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209885831 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211573821 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208269707 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213473282 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208060304 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213384171 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212227416 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210238577 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209578035 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208819904 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209787681 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209584284 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207745478 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209235912 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210238901 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209600294 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211683511 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209899687 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211030796 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209998407 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210200524 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210488284 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209592976 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213032834 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210302255 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211624645 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213269859 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209801737 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209298696 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2107142 seconds)
  done (took 80.937992345 seconds)
done (took 1625.418166921 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.380921104 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.330367644 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.21473059 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.209110678 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.212060641 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.233536952 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.218972019 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.21067414 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.210384523 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.211202103 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.210597985 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.396904085 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.205636063 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.213369364 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.212919803 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.305907383 seconds)
  done (took 41.115537493 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.236320828 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.225942485 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.321964446 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.2370095 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.243048835 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.396893583 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.270581711 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.220913875 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.377668622 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.258804278 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.667563229 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.243453097 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.225504946 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.248146664 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.237089676 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.399093585 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.446185638 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.66481381 seconds)
  done (took 28.053032278 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.636730897 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.210214444 seconds)
  done (took 8.980948326 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.23778344 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.222417062 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.219934561 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.218286465 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.211156649 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.225171494 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.217844443 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.21043914 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.551161036 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.341818651 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.222563632 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.227648821 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.236784735 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.221264249 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.217184188 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.254724898 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.393576161 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.222546585 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.217356967 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.224712371 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.21887277 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.303826636 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.258640963 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.217939818 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.336445871 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.557656312 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.22848823 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.227673784 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.373951841 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.219363498 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.220156219 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.220978995 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.220886664 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.809837694 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.636521509 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.227833576 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.242310607 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.228186818 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.218266103 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.357223345 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.22443832 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.228363625 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.214442401 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.637529705 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.358155073 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.331777004 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.384226205 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.245647177 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.22386149 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.28049859 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.223156331 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.223301864 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.250505923 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.973739917 seconds)
  done (took 104.355958456 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.250445973 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.604408688 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.379942387 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.231263755 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.857742622 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.805611044 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.236662387 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.480727218 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.282407435 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.21791526 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.505229566 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.703971905 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.243152763 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.236068429 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.879279953 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.303987053 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.221924801 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.93544046 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.242117094 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.219200727 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.701952352 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.21611235 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.226636425 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.383360721 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.254716803 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.655811896 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.530781759 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.47922963 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.239893535 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.21699547 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.666915549 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.245841899 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.290675819 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.223612916 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.474863388 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.559507344 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.56106562 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.243865428 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.267255373 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.22879248 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.25432154 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.657582409 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.569678577 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.245166457 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.224820413 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.679312523 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.24839178 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.236853496 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.229461212 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.418057255 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.907730208 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.226819844 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.515179455 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.229276614 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.585043613 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.273505811 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.291574432 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.69373359 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.246273787 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.168311975 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.285058457 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.226661112 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.231422341 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.233313966 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.22714995 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.552279099 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.582456667 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.230006648 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.553121075 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.679961861 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.244629044 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.734915241 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.100136699 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.237854027 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.324312357 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.228689801 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.755037687 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.695338406 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.256632039 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.223174493 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.54194516 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.243471573 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.500750243 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.237638434 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.226473849 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.750284968 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.229665691 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.279292514 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.233864984 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.233488631 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.838337872 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.227537422 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.48455336 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.289707299 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.227569729 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.228413937 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.232760027 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.227193823 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.24664977 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.224489351 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.719579245 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.244783973 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.326977115 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.238950437 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.227528117 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.227443813 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.223090012 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.222067378 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.436422538 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.679356431 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.241898187 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.222712988 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.229511051 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.233300365 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.384974899 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.228779661 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.50984364 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.246086805 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.220958609 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.226717573 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.86986537 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.272827698 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.223102319 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.233422795 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.093186525 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.425064342 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.238644394 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.22953076 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.222564574 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.237094435 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.366586744 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.242138393 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.300034498 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.225100887 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.903129984 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.275046939 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.246221556 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.549560991 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.236108692 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.05160424 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.245778272 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.223467939 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.518532497 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.479387537 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.486892756 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.22622371 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.246202714 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.896019976 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.264545195 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.359795626 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.24259266 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.273343615 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.421651544 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.657075885 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.222844165 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.85180425 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.225764523 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.434508579 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.229823435 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.522525756 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.697394018 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.247728722 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.231626815 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.909029706 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.947156183 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.920752615 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.228321422 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.490158911 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.171925232 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.71837587 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.225500161 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.230081839 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.64782647 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.230226723 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.22954963 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.227645636 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.225852789 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.369967259 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.398425422 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.394008004 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.227723919 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.656845563 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.254494174 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.224769906 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.255956907 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.227699218 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.570950868 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.301434923 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.225666573 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.255225148 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.233383262 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.235042882 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.679480575 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.13912548 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.233539551 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.376960253 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.832955797 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.245943564 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.233739425 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.83427717 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.501075012 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.717195422 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.299677043 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.513486355 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.25277834 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.263936893 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.780673481 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.283815206 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.677308811 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.244683516 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.233144057 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.79243397 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.252894851 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.582009179 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.227006387 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.233387042 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.740290981 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.250992625 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.2270282 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.376445699 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.245193158 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.496485613 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.234370454 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.274524022 seconds)
  done (took 1085.317143155 seconds)
done (took 1268.956297453 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.23011076 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.229910928 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.216352267 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.235444703 seconds)
  done (took 26.062763877 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.244335491 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.234885053 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.236467941 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.235225814 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.24079558 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.236421175 seconds)
  done (took 8.58724763 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.331433936 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.229405889 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.234869211 seconds)
  done (took 18.949159044 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.428761711 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.475163772 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.56934499 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.263678922 seconds)
  done (took 9.898279773 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.240124659 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.236943451 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.23642675 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.239221741 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.241616557 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.243159313 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.242443236 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.238405456 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.242384207 seconds)
  done (took 12.319975181 seconds)
done (took 76.968174783 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.191117394 seconds)
    (2/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.592467132 seconds)
    (3/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.221472596 seconds)
    (4/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.402136765 seconds)
    (5/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.695501961 seconds)
    (6/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.299267775 seconds)
    (7/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.216395724 seconds)
    (8/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.476277326 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.492146172 seconds)
    (10/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.307242406 seconds)
    (11/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.214500431 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.281121732 seconds)
    (13/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.359501877 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.258997721 seconds)
    (15/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.95129829 seconds)
    (16/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.250965909 seconds)
    (17/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.439201074 seconds)
    (18/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.320999418 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.118592094 seconds)
    (20/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.998702467 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.814209114 seconds)
    (22/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.213024597 seconds)
    (23/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.24618449 seconds)
    (24/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.3777671 seconds)
    (25/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.999797257 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 6.259525196 seconds)
    (27/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.298611839 seconds)
    (28/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.214325103 seconds)
    (29/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.379441652 seconds)
    (30/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.276760724 seconds)
    (31/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.418625436 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.654976683 seconds)
    (33/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.599513122 seconds)
    (34/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.224439787 seconds)
    (35/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.303017026 seconds)
    (36/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.263702662 seconds)
    (37/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.226291151 seconds)
    (38/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.277320857 seconds)
    (39/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.464802019 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.085179055 seconds)
    (41/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.571323786 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.640658995 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.250439821 seconds)
    (44/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.049706657 seconds)
    (45/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.236317532 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.385154562 seconds)
    (47/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.271701351 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.49976513 seconds)
    (49/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.322491848 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.852221597 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.292216072 seconds)
    (52/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.986793547 seconds)
    (53/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.254929576 seconds)
    (54/286) benchmarking ("sort", Float64, false)...
    done (took 5.562481065 seconds)
    (55/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.261766072 seconds)
    (56/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.05001299 seconds)
    (57/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.450121541 seconds)
    (58/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.651109608 seconds)
    (59/286) benchmarking ("sort", Int8, true)...
    done (took 6.235753853 seconds)
    (60/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.043025403 seconds)
    (61/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.233207501 seconds)
    (62/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.580559721 seconds)
    (63/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.250903866 seconds)
    (64/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.250150298 seconds)
    (65/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.236509582 seconds)
    (66/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.504348029 seconds)
    (67/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.230992573 seconds)
    (68/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.441033195 seconds)
    (69/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.282767172 seconds)
    (70/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.267100407 seconds)
    (71/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.320792011 seconds)
    (72/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.722191355 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 5.398819926 seconds)
    (74/286) benchmarking ("sort", Float64, true)...
    done (took 6.247068992 seconds)
    (75/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.221135933 seconds)
    (76/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.942669869 seconds)
    (77/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.354341855 seconds)
    (78/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.37144737 seconds)
    (79/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.420067126 seconds)
    (80/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.333624129 seconds)
    (81/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.609990482 seconds)
    (82/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.011523291 seconds)
    (83/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.239853475 seconds)
    (84/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.699674173 seconds)
    (85/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.252727776 seconds)
    (86/286) benchmarking ("sort", Int8, false)...
    done (took 4.260669738 seconds)
    (87/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.281045204 seconds)
    (88/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.368384962 seconds)
    (89/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.220980137 seconds)
    (90/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.237345842 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.086701531 seconds)
    (92/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.248593653 seconds)
    (93/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.268806526 seconds)
    (94/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.596140264 seconds)
    (95/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.272984744 seconds)
    (96/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.238520886 seconds)
    (97/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.545581375 seconds)
    (98/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.440417014 seconds)
    (99/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.446364623 seconds)
    (100/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.28117279 seconds)
    (101/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.67448672 seconds)
    (102/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.236850193 seconds)
    (103/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.305713314 seconds)
    (104/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.240366002 seconds)
    (105/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.241900065 seconds)
    (106/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.250533207 seconds)
    (107/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.420216622 seconds)
    (108/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.063821802 seconds)
    (109/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.187449792 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.779156423 seconds)
    (111/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.322097401 seconds)
    (112/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.998239552 seconds)
    (113/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.243485239 seconds)
    (114/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.667044645 seconds)
    (115/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.516829292 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.76535161 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.291131489 seconds)
    (118/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.232777066 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.510808058 seconds)
    (120/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.269749685 seconds)
    (121/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.234796184 seconds)
    (122/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.23458989 seconds)
    (123/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.447074417 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.981504559 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.504312275 seconds)
    (126/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.969703444 seconds)
    (127/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.265928812 seconds)
    (128/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.237807131 seconds)
    (129/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.355797767 seconds)
    (130/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.250337661 seconds)
    (131/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.259314475 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.364560058 seconds)
    (133/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.2369469 seconds)
    (134/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.357853757 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.595428739 seconds)
    (136/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.258954227 seconds)
    (137/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.288710985 seconds)
    (138/286) benchmarking ("sort", BigInt, false)...
    done (took 6.25473938 seconds)
    (139/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.255734747 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.960001156 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.269649891 seconds)
    (142/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.488838503 seconds)
    (143/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.378455103 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.645088451 seconds)
    (145/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.146655134 seconds)
    (146/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.270086073 seconds)
    (147/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.232059806 seconds)
    (148/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.983918091 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.266948094 seconds)
    (150/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.335744766 seconds)
    (151/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.266605631 seconds)
    (152/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.59024001 seconds)
    (153/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.349855116 seconds)
    (154/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.263640714 seconds)
    (155/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.338802665 seconds)
    (156/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.3296957 seconds)
    (157/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.313125915 seconds)
    (158/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.316143663 seconds)
    (159/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.412599262 seconds)
    (160/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.322974172 seconds)
    (161/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.291341482 seconds)
    (162/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.279035592 seconds)
    (163/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.228014114 seconds)
    (164/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.27836294 seconds)
    (165/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.243576376 seconds)
    (166/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.599894862 seconds)
    (167/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.346710196 seconds)
    (168/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.29194222 seconds)
    (169/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.229335073 seconds)
    (170/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.238915291 seconds)
    (171/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.254501125 seconds)
    (172/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.252444469 seconds)
    (173/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.719014159 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.270826582 seconds)
    (175/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.229741763 seconds)
    (176/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.241083316 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.315810797 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.652915329 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.615711566 seconds)
    (180/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.636338628 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.1411303 seconds)
    (182/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.044007108 seconds)
    (183/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.559045637 seconds)
    (184/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.253092001 seconds)
    (185/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.240976142 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 5.336852379 seconds)
    (187/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.07761877 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.304215828 seconds)
    (189/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.26140101 seconds)
    (190/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.260450725 seconds)
    (191/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.25733671 seconds)
    (192/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.264430267 seconds)
    (193/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.263838796 seconds)
    (194/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.886878728 seconds)
    (195/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.910161072 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.923712148 seconds)
    (197/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.818919004 seconds)
    (198/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.281308773 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.464511428 seconds)
    (200/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.032735589 seconds)
    (201/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.387074658 seconds)
    (202/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.25714055 seconds)
    (203/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.373954325 seconds)
    (204/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.244712088 seconds)
    (205/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.082580314 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.134363303 seconds)
    (207/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.83870515 seconds)
    (208/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.953974124 seconds)
    (209/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.29733242 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.279527283 seconds)
    (211/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.28154213 seconds)
    (212/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.751367067 seconds)
    (213/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.357271548 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.298794059 seconds)
    (215/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.765065786 seconds)
    (216/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.524747912 seconds)
    (217/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.513012763 seconds)
    (218/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.63799427 seconds)
    (219/286) benchmarking ("sort", BigInt, true)...
    done (took 6.260950739 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.230081356 seconds)
    (221/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.245382226 seconds)
    (222/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.248768891 seconds)
    (223/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.358247913 seconds)
    (224/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.416872406 seconds)
    (225/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.245922536 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.140095735 seconds)
    (227/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.344705969 seconds)
    (228/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.247265729 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.993989436 seconds)
    (230/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.287395474 seconds)
    (231/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.392192484 seconds)
    (232/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.246005186 seconds)
    (233/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.126871357 seconds)
    (234/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.511688574 seconds)
    (235/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.840667226 seconds)
    (236/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.246286273 seconds)
    (237/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.736159713 seconds)
    (238/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.629614552 seconds)
    (239/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.251581737 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.466712852 seconds)
    (241/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.40991702 seconds)
    (242/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.291256045 seconds)
    (243/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.359127493 seconds)
    (244/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.607590371 seconds)
    (245/286) benchmarking ("sort", Float32, false)...
    done (took 5.277058494 seconds)
    (246/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.038351346 seconds)
    (247/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.841028111 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.290824177 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.647414567 seconds)
    (250/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.930774895 seconds)
    (251/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.408204628 seconds)
    (252/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.670444552 seconds)
    (253/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.353741175 seconds)
    (254/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.099202298 seconds)
    (255/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.007228272 seconds)
    (256/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.294021068 seconds)
    (257/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.249311963 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.350082538 seconds)
    (259/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.347145554 seconds)
    (260/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.479995586 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.385478779 seconds)
    (262/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.474066225 seconds)
    (263/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.085060919 seconds)
    (264/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.722824022 seconds)
    (265/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.833118079 seconds)
    (266/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.638805871 seconds)
    (267/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.665059712 seconds)
    (268/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.305363096 seconds)
    (269/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.69730923 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.322498315 seconds)
    (271/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.283191545 seconds)
    (272/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.250465119 seconds)
    (273/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.237766328 seconds)
    (274/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.650126945 seconds)
    (275/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.375414596 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.884979495 seconds)
    (277/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.737125714 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.865365472 seconds)
    (279/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.240766052 seconds)
    (280/286) benchmarking ("sort", Float32, true)...
    done (took 6.272496679 seconds)
    (281/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.291322469 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.286917125 seconds)
    (283/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.24813132 seconds)
    (284/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.535224461 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.893644787 seconds)
    (286/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.261073375 seconds)
  done (took 909.638868343 seconds)
done (took 910.791317456 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.297206449 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.292228894 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.2741451 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.299380331 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.386267477 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.302662462 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.284853478 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.282201846 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.328362966 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.32520299 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.274848929 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.303707067 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.275331546 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.2764397 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.276231189 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.296872911 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.282863378 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.27884269 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.298681029 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.290709891 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.294943431 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.279805623 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.329727759 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.302853174 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.281748532 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.282788644 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.282140406 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.297080471 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.3927114 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.2822336 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.280616718 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.286516592 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.275126904 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.277102155 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.270355475 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.295934899 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.287881653 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.285076923 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.280732816 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.304899952 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.660095915 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.294228661 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.276781277 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.275330181 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.278436502 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.279185555 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.277327231 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.282633612 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.290213035 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.292701409 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.657336872 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.310328519 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.280849076 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.279744371 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.288839055 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.282901508 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.284909891 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.299659396 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.298134408 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.300537845 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.264969092 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.290707848 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.285089619 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.298449699 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.285768839 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.70451303 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.287587159 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.281510004 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.658709024 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.301959602 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.702779294 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.302113887 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.285325313 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.293658354 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.312893568 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.279757536 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.276348779 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.279162921 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.285521366 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.278255944 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.290108843 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.293032233 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.283523754 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.280506915 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.298454553 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.310311549 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.293533928 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.27916124 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.293648356 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.304851755 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.289239571 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.289902003 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.289941504 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.281371136 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.294404433 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.29023443 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.29015965 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.285970627 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.292015079 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.292753028 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.667310728 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.313224679 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.278924197 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.284294031 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.280146645 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.300149671 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.668094351 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.29613377 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.307474045 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.332167432 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.286696305 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.273746437 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.28749319 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.305230733 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.297166283 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.289518634 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.28357259 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.278786716 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.679001764 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.314986982 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.290544189 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.287088592 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.305099599 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.283650442 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.284368927 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.291109179 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.291265786 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.299559832 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.405000407 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.293077424 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.313492767 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.28328051 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.292513077 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.311846307 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.303831208 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.314804814 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.287638425 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.306189389 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.302102465 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.283690051 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.295717851 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.295806789 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.286016403 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.296395672 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.28396128 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.312632198 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.303879696 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.29809986 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.308974356 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.406345602 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.284206584 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.282352115 seconds)
done (took 216.961824525 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.342275839 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.271939787 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.371199651 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.280799786 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.381585932 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.389279332 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.281131409 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.278700149 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.276731203 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.664385297 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.278803609 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.282606291 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.274926344 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.277558632 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.366519894 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.279673509 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.27737347 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.6241208 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.281138219 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.353492226 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.272191643 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.282349186 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.286527033 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.667262432 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.286277056 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.285260324 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.359232276 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.287059588 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.631289246 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.281303396 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.285285935 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.630265473 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.377958144 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.306111004 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.299473367 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.29488039 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.389335899 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.307150311 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.370816352 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.370262043 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.368008306 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.329442887 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.280451052 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.279623779 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.291449948 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.29078954 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.287694919 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.324800803 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.281484784 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.297759831 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.626711061 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.288501008 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.298131787 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.287963035 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.289693864 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.320628445 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.288444479 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.290617761 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.38206973 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.29010801 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.352016617 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.669593048 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.670830558 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.290777953 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.288855659 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.287927963 seconds)
  done (took 145.248084731 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.354182163 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.359513899 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.397369225 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.301842355 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.342253657 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.404075935 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.30191987 seconds)
  done (took 10.653473242 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.297654942 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.29169717 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.339704806 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.340328185 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.29095882 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.470063507 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.289400935 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.299006416 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.289172744 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.342026432 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.283599369 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.29033792 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.298639856 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.285745299 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.339299183 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.296484675 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.405070041 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.286000476 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.292291851 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.444132137 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.288933939 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.29487686 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.342287996 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.299206722 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.290814797 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.298614522 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.096925186 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.287046882 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.290862553 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.283291803 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.289443406 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.361988441 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.28795977 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.290636181 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.291405907 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.407472758 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.290124854 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.291062359 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.28952767 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.278878099 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.285718851 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.286929418 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.290864277 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.293296367 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.293244442 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.310068588 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.285141121 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.291723176 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.286872074 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.294130322 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.343881469 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.285978635 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.291055768 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.282283873 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.34140265 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.2971755 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.285128092 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.292777178 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.292834487 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.292773706 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.440570618 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.337127823 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.295129557 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.336081757 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.289516409 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.294036712 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.288390707 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.288439837 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.341171249 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.289891695 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.342726014 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.291386013 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.480878191 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.312388914 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.289341095 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.291691479 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.288656928 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.294359979 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.287319873 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.300600541 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.292148532 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.296755474 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.299267007 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.293288459 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.293483548 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.46308788 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.404053386 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.294121726 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.303416851 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.300057127 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.295172757 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.347184619 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.295046694 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.294680304 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.346782117 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.403793336 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.341249762 seconds)
  done (took 149.385308366 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.298692853 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.301071871 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.295034782 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.310436501 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.290679678 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.295750861 seconds)
  done (took 8.98757016 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.299298415 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.288954816 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.296175153 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.292514142 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.291307675 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.293022579 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.29247773 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.295419711 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.292440743 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.292607245 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.295478465 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.297595715 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.29209055 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.295383236 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.3000038 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.298468001 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.295910127 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.293493996 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.297622173 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.298120486 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.40372183 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.290793253 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.298972139 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.300413815 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.296391193 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.293150087 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.303455308 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.297255376 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.296257526 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.303229998 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.313774334 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.294866808 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.296333857 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.298065014 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.29543516 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.295681814 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.297019183 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.293781595 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.291955489 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.29576885 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.301405826 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.29248888 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.298184377 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.292208855 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.294566377 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.296047702 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.295713961 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.30058102 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.294925152 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.298954678 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.29227599 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.293329126 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.294697856 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.295481932 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.293569668 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316147753 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.297154281 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.296284854 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.292361924 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.299832056 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.294038047 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.291334023 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.293516059 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.29650845 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.291390747 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.295530116 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.292982345 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.298893358 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.296671855 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.296990083 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.295150798 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.294460097 seconds)
  done (took 95.630578922 seconds)
done (took 411.094701078 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.588248559 seconds)
  done (took 7.790898697 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.468143146 seconds)
  done (took 7.67349106 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.966820635 seconds)
  done (took 21.17111739 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.352344483 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.525176819 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.310907078 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.291002428 seconds)
  done (took 27.675270314 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.447661962 seconds)
  done (took 7.651678145 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.284366932 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.281699206 seconds)
  done (took 13.766709565 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.648303826 seconds)
  done (took 7.850856303 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.572984534 seconds)
  done (took 7.769511694 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.282917501 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.304280243 seconds)
  done (took 14.034182553 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.264180726 seconds)
  done (took 7.461891891 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.397501915 seconds)
  done (took 11.595683123 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.286403153 seconds)
  done (took 7.484218669 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.339384797 seconds)
  done (took 7.536382167 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.047911918 seconds)
  done (took 9.244817172 seconds)
done (took 159.912410907 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.286735159 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.2772498 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.282144779 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.279457022 seconds)
  done (took 26.330478466 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.320563089 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.319424705 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.324816431 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.330610086 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.322677228 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.325517141 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.315542029 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.315594529 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.33344825 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.323287959 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.324535853 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.325539061 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.321991223 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.315766657 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.325031012 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.320988931 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.330926449 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.324796815 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.31602596 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.326908983 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.291704796 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.337008408 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.323559674 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.290339052 seconds)
  done (took 32.904332419 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.814920628 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.358662642 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.443173763 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.339518676 seconds)
  done (took 7.155238618 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.342456968 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.343758977 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.353327216 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.394319887 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.420499647 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.350120685 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.314567615 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.312995548 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.300136411 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.343568446 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.416489745 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.358905831 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.427580489 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.288744984 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.476602777 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.293056209 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.29216854 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.340153718 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.395070069 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.418032538 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.293281306 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.343774531 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.348703168 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.360947149 seconds)
  done (took 33.729168518 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.299492887 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.310973949 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.290934446 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.291250319 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.299787908 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.291391754 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.292628381 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.293871439 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.292575702 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.294702971 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.290677713 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.304205987 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.288717728 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.289446398 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.297439091 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.291783183 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.29863937 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.290761903 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.292615411 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.299463835 seconds)
  done (took 27.101183894 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.285729192 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.38581546 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.637187955 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.540328904 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.288501097 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.291997253 seconds)
  done (took 28.631407424 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.364228124 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.510266343 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.298920397 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.6339515 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.725271908 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.307840352 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.291781003 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.522155815 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.831194331 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.81990089 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.34759884 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.365789987 seconds)
  done (took 19.229571085 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.290361941 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.293560313 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.297503548 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.309583312 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.343727156 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.310026596 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.30078553 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.288765719 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.353726176 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.363211376 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.310199392 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.344200876 seconds)
  done (took 37.010127337 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375409316 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.334712668 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.166538968 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347904255 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.022412212 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.497237034 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.354202828 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.723968121 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.292251433 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564158634 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289650846 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399623019 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.549810699 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290741012 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.298281494 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.272319812 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528357229 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741962076 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288579514 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.194274084 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320768408 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.29787776 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.281593462 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.324008443 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.501696977 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.426914001 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.549994769 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.063620885 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575561487 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307131267 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300200673 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291003105 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566707837 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937242209 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403588296 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301680103 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29437968 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.834300198 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.276087256 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.131121856 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.022731411 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.291682663 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30542113 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297215197 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.22864786 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.293390736 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.721408908 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.294966076 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.008918028 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.290178527 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298607365 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384994827 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.293678235 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.860988209 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360947764 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.293506169 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.294387582 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381981632 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877453321 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.585900127 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305666525 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.230936272 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.301950841 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.18749054 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915295377 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.311415333 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.29536765 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.293238975 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.226617 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.503423869 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.316247105 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4385232 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.311515531 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944280924 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975613844 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.325506811 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.228624827 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812076782 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302978714 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.232865938 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.519047718 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.066370467 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228142036 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.239035304 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.22308795 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957044453 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300734059 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.648518596 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.310408787 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.725484091 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.300772055 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305629878 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317574936 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.520164468 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.172958083 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294232011 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.067761744 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445617614 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312213885 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.715385789 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227823876 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.295279042 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552818378 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.501644351 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290095868 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.275612205 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.500495404 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292657056 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.329867246 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.295438412 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.313459409 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.860089902 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.330036506 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.596297111 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320224856 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.076793571 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000481139 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311169701 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.306336414 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.311092573 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542454775 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.01751281 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.185903606 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362973628 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.306882668 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.300977022 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.21451089 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.89472931 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.178386774 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.295499775 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297359378 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.326390111 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.300000823 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240969772 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.300245801 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30502028 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.081636204 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.523072521 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.300795776 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.5819833 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237989451 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443963075 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.303072974 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.518582893 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.46676403 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.318135532 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56680468 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310799269 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.306122808 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.318082903 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322077121 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398992162 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321248464 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.307296927 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.560541343 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.299427001 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.302931604 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.223764748 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.086406318 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306283842 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.306854705 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308276149 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860698937 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315707038 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.298403464 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385277159 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.317208442 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362390884 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.301057813 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.304717953 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.031260492 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33558812 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.302358657 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.30237591 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527117762 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.305342188 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.140524837 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384622237 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.481665895 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.853955412 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335709824 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.231205677 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.007428315 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.98955445 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297658116 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.48473783 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.298506523 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307767631 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.30827159 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.309863808 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.861425517 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323357953 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.139289078 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.313554958 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.309155552 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.302268556 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304559739 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.015518334 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.626124415 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314995426 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.317660248 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440576164 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.310654945 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.231138288 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.814173375 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.303153686 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.297041216 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.074753678 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332470859 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.13338064 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.772122345 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557212146 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.304141426 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311143891 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.304972657 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.338414055 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.298323483 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.091088456 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326661119 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.319644069 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307308733 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.307984307 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.232064222 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.670130375 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865510789 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008030733 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846837859 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.207314983 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.302280643 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.209308922 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.721628929 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233783267 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.955667249 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.480711284 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.744914421 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246799286 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487630675 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.470048194 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.052372403 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.320162865 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.526844634 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.187782859 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.097077059 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.33974955 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.51069348 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333679363 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.301997667 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.238052124 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.597674657 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523858114 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.037744455 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388503606 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.72254879 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.102121923 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.106326587 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.361074035 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.581599204 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480648357 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.839679646 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.744725186 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.308773239 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321205182 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.777582368 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.304586821 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.826616817 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906765981 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.32380401 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.501147466 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239641787 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.312018053 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.312642753 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.298594933 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.529822327 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.315325646 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.567355524 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.313037537 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.23615446 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.302276768 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840940614 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.183533439 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.307951603 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302688499 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013574744 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312154016 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613099868 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.318000856 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.0137876 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330113372 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.237576563 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238050309 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.996698323 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.311954197 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279161743 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777178269 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.317637439 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319093428 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322755364 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157019764 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.556775842 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.316530408 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.862667927 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55517554 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308238052 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32684027 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.3068743 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.141792209 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.313967308 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.1893763 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.539804727 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383070897 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.528114196 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.640932438 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.210003669 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.365438692 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.51607181 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.186979557 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.30589603 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559359451 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.034912483 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.328348298 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989983935 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354467863 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.308876986 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.325539168 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.307666769 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.325498331 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393238914 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314835462 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.317068941 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.316795955 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467290403 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316361578 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318285628 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.319932243 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398989922 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.627745547 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.023346928 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.087965417 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871640518 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044623251 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.901613922 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34341718 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.306426465 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307775014 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241215179 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460071895 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.832918234 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580847627 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436341897 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.308331204 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330369914 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.148719978 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340658318 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527807893 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581946151 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.278082846 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307665732 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.143149987 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.211078488 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.318955421 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.519027739 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783320653 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855643512 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432296465 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.313032153 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.738782544 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581996318 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.399038293 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30851963 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.899082365 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.316817154 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.608416094 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.333850018 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31579237 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466557929 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.31883633 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955065865 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.33666184 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.464347122 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.085030841 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.177445401 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.572952812 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.744549793 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.320699462 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876188499 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.014023673 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571479869 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379925953 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.320631599 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.414865148 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456692234 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.315414183 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.217928789 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309471926 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156296848 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.019365198 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.318905684 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886349871 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589484544 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.31362083 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.311225413 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333409523 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.321280295 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.533528326 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982532064 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.534800923 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.322108876 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.320734574 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.880571321 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884140661 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340162406 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244933164 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.31426115 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55286169 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.565205307 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333273612 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.764300236 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.022428713 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846324898 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.282886187 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332689377 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.319451167 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.006870614 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885033413 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.042995437 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798099028 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.970770683 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.314304077 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59553154 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.31673992 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.31779907 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596422631 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.316829913 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.313475878 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348996982 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.878633128 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.071618233 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.329626614 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.302335209 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.258670483 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.538296362 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349156701 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249237036 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314861844 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.48055349 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.314648081 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442909054 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.324502079 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.319783993 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31363716 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.088232419 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620546571 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.319474361 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.30119732 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.208236861 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.335756097 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413538245 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540840742 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319060372 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.985776106 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.661698462 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.568604093 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.316750003 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.305340199 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.317051126 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315411838 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.032963231 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.32349436 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.331864073 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867445441 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.329497466 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.333649934 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.318852475 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.530955386 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.526872306 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.32656698 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336447648 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319470552 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339091894 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.21543429 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.085543518 seconds)
  done (took 1605.002406327 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.366342551 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.34773237 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.374105438 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.363522358 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.337063249 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.334388163 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.386574172 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.466641647 seconds)
  done (took 52.206784896 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.320504942 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.467101364 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.345512212 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.320054084 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.324918551 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.319614759 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.764188654 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.341371495 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.324991475 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.326515739 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.319728691 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.320270165 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.941569934 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.334953527 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.323579706 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.318117423 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.324786203 seconds)
  done (took 64.979701648 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 47.29161076 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.622046047 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.89386561 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.359555969 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.8468393 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.324575818 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.76808016 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.344822125 seconds)
  done (took 98.684089942 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.334230129 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.334283191 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.334714897 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.334261581 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.333296 seconds)
  done (took 7.903654913 seconds)
done (took 2042.077994888 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.322148297 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.324607131 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.32108148 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.324463165 seconds)
  done (took 6.525478739 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.298845351 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.001728418 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.301367166 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.316380348 seconds)
  done (took 18.15057023 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.320597062 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.337654838 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.993342655 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.931086782 seconds)
  done (took 5.159845552 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.06797276 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.082345879 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.066078668 seconds)
  done (took 7.448862492 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.316835302 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.327554865 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.330338119 seconds)
  done (took 20.208017416 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.603119637 seconds)
  done (took 2.838829484 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.465992271 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.514527142 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.634033516 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.639376675 seconds)
  done (took 7.488473442 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.705347825 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.689174453 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.504388602 seconds)
  done (took 6.132900654 seconds)
done (took 87.845786259 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.022689944 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.702562297 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.525621539 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.987018599 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.548835846 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.526010722 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.73446244 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.954285328 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.500997574 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.491890856 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.036228529 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.550249401 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.468213894 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.699599569 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.469015332 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.319550059 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.549659756 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.07767001 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.71042007 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.875431134 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.728564707 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.633121142 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.864757814 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.657953216 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.552431488 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.480182181 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.21444209 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.327503052 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.893856353 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.23576577 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.479141549 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.047819609 seconds)
  done (took 188.100943765 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.332429286 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.321322461 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.320147139 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.318688 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.324986979 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.320505058 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.323241846 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.335926649 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.336740018 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.335188831 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.329252418 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.333252941 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.321947966 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.337262093 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.339541083 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.336896229 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.327299793 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.32820572 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.320479824 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.332844453 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.323003875 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.337355882 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.323079739 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.34630435 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.320830954 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.322054664 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.321008701 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.338703268 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.321507834 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.336376521 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.321892664 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.32222437 seconds)
  done (took 203.746119281 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.32056722 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.321747453 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.321846418 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.321637703 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.3409885 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.324825737 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.331080166 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.32292223 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.322910861 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.322777208 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.323449302 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.323668462 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.32420061 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.336317592 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.322788964 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.334436248 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.328090605 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.324133535 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.323274301 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.323464162 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.325814637 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.340339999 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.323550969 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.337568086 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.325794236 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.336312435 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.323497292 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.323656731 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.323258283 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.345661805 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.339280532 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.323670609 seconds)
  done (took 203.721512755 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.525564715 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.331005469 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.332092389 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.282633268 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.333485669 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.331071248 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.304972861 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.534558748 seconds)
  done (took 14.214421988 seconds)
done (took 611.018957914 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.585804997 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.301449944 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.532131802 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.353034163 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.060311865 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.370100985 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.352327446 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.516562474 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.248472506 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.521452675 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.578124626 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.366127471 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.722526643 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.350097508 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.602937575 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.450486229 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.189435871 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.313635237 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.6597159 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.843680324 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.609471749 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.762091654 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.535052714 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.239685203 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.742452663 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.774220729 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.037660958 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.184443403 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.368515426 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.669646923 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.943160835 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.297462381 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.411630906 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.410080882 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.466112489 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.446296704 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.267961463 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.416703821 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.556625468 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.551957086 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.842920651 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.069367305 seconds)
  done (took 90.762558691 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.318753442 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.317769995 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.31680949 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.318574289 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.319081237 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.317086975 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.31826838 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.317962819 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.318945974 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.316565415 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.317467393 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.318792792 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.317486619 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.318557589 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.31843319 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.318317398 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.319285418 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.320328182 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.318006122 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.318522611 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.319370341 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.319169985 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.319821705 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.318584003 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.319875739 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.318945433 seconds)
  done (took 35.524446726 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.336435233 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.578741464 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.736207796 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.353161126 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.337788257 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.341685963 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.413900101 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.347490971 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.340518146 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.341770591 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.505111604 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.348511989 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.37275934 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.769208958 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.350962263 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.339215596 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.337992404 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.337383702 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.58859736 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.35732561 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.435050831 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.34971442 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.413300546 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.357797654 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.36162443 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.339135211 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.342846954 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.904200194 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.366640321 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.506855659 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.097176207 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.420852009 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.864163329 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.783350644 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.097325898 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.351732463 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.339656522 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.511418164 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.349750051 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.338960943 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.414444888 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.349718889 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.746742633 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.993436109 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.357880184 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.340803074 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.922528959 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.529969349 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.574865718 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.34848009 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.770253553 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.353224902 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.342402532 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.340673716 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.575704456 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.34777872 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.340858913 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.897865974 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.364735292 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.41642668 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.343306192 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.341153496 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.602839887 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.341726075 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.583759527 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.343777264 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.350599088 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.361364815 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.749575909 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.352805891 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.010381147 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.366488598 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.34202499 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.507303148 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.586444657 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.960224371 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.369296503 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.606978835 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.87135448 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.431588685 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.353392032 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.893363597 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.435103196 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.354752894 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.345332806 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.34344915 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.342816088 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.390545456 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.4142996 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.95682722 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.01884128 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.933327266 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.446605444 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.355337166 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.344545055 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.901767754 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.371153707 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.343556172 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.745672332 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.017360456 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.359935106 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.351149071 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.013311017 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.371217373 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.420777027 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.349612687 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.756287755 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.353767206 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.389106645 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.343343382 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.350572968 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.36555834 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.419734102 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.353821258 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.344832568 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.98416504 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.534638935 seconds)
  done (took 177.336546256 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.338989492 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.354148946 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.337615206 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.338895869 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.3382149 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.345732026 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.337367073 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.338759596 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.344146943 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.338177391 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.338119337 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.33915295 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.34164436 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.341874485 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.366860295 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.345456766 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.946412435 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.340419085 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.339032938 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.3547643 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.130090899 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.349392049 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.33992618 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.354933781 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.338891137 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.341656078 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.34779443 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.34164854 seconds)
  done (took 152.26166797 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.34678267 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.886660692 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.363595987 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.473539853 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.375172347 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.344247619 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.470304317 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.402763721 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.363831584 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.344707916 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.345786796 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.635578589 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.348566997 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.840835943 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.538785699 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.497692272 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.853623971 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.373899582 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.34491396 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.344979053 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.474477647 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.359991484 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.639040618 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.900811778 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.373360319 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.892623643 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.343681752 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.348678121 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.346631342 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.893968772 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.371929483 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.641491039 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.43316535 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.413360005 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.905534737 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.85637761 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.856052011 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.490909607 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.35907696 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.347479971 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.347298579 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.33295454 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.895980142 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.375623437 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.349256135 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.88543933 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.37770986 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.350909353 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.354252347 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.347639226 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.405032232 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.422988517 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.660855267 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.909356346 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.448755863 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.363569663 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.474856642 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.751884934 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.351237236 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.842962627 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.332406435 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.89995763 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.377577098 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.334011687 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.349179848 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.35397869 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.493787064 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.487020709 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.852929507 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.366953012 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.845438438 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.517469602 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.360688528 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.348801151 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.350851841 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.897700153 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.869389791 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.508794704 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.490718952 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.543085438 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.346740359 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.349407892 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.334590781 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.424918792 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.354996119 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.901227249 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.867706615 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.368877134 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.353034666 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.352279527 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.353354751 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.518269215 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.925600431 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.453041764 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.846178804 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.662559542 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.65725512 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.363737277 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.40767399 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.366523674 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.64814807 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.364002708 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.407125708 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.80961773 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.648751832 seconds)
  done (took 160.917265302 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.59242791 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.547826759 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.438418749 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.491817613 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.952384135 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.923311207 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.587188594 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.492483525 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.459984341 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.604426193 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.463156034 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.439538298 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.563195795 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.44023999 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.069126529 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.436778774 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.459303972 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.500620927 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.501770463 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.358473951 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.012875768 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.643736117 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.541679223 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.211883681 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.452318146 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.127565573 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.90479064 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.908002229 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.528471439 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.660324169 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.869915226 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.443678685 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.306211878 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.039866179 seconds)
  done (took 65.243789862 seconds)
done (took 683.287890742 seconds)
SAVING RESULT...
DONE!
