cset: moving following pidspec: 11247
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.233222195 seconds)
loading group "string"... done (took 0.463035551 seconds)
loading group "linalg"... done (took 7.561873293 seconds)
loading group "parallel"... done (took 0.171950805 seconds)
loading group "find"... done (took 1.181963784 seconds)
loading group "tuple"... done (took 2.114338292 seconds)
loading group "dates"... done (took 1.338133121 seconds)
loading group "micro"... done (took 0.247188457 seconds)
loading group "io"... done (took 0.747954278 seconds)
loading group "scalar"... done (took 41.896276122 seconds)
loading group "sparse"... done (took 13.104422783 seconds)
loading group "broadcast"... done (took 1.066990734 seconds)
loading group "union"... done (took 14.223196489 seconds)
loading group "simd"... done (took 5.145439939 seconds)
loading group "random"... done (took 10.310948733 seconds)
loading group "problem"... done (took 2.060858064 seconds)
loading group "array"... done (took 23.838464159 seconds)
loading group "misc"... done (took 1.446314049 seconds)
loading group "sort"... done (took 3.582631147 seconds)
loading group "collection"... done (took 19.527288728 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.536260174 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139877932 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131463805 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146972266 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206349066 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143214405 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155594595 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.114532382 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.953332047 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.182327043 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153223779 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.512102724 seconds)
done (took 5.104510491 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.241778524 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094351104 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103681692 seconds)
  done (took 0.866635198 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078038735 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145330415 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093268747 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077987372 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094395915 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077287906 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094248762 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077269415 seconds)
  done (took 1.334785275 seconds)
done (took 3.202228539 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.730137922 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.275104729 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202018231 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461343805 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194019466 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.21414191 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681220742 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.338483238 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.249300748 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09919768 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142738183 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.383640879 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136089164 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685539185 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088753167 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12231129 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177658135 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.452453537 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081731801 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109378722 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116495653 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141962139 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127337811 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089421068 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184464133 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081277387 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19323766 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107339984 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079741452 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.285366684 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200696666 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685011537 seconds)
  done (took 10.82830416 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110547694 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132674789 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096398213 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136880036 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133159009 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098889489 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085793569 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096491953 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120156389 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173793147 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113726136 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.134998559 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094626036 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081525474 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114970317 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24412013 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122259548 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10572539 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102238625 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107881629 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122558391 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116464029 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111637741 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094344384 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168542996 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222995593 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112421472 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128087146 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097824976 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112926457 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14388534 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143685657 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095427799 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080466339 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1732095 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126467349 seconds)
  done (took 5.142401728 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.153821923 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189436637 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121296914 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168862641 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163601617 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.13908606 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159925083 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112297459 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254528447 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.12102248 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175667447 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144190787 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099175241 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097026585 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081449115 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099099077 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.673651956 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166108823 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134454344 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096495078 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103584599 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098236172 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36401705 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088241261 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097625333 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083487292 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083875942 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162767268 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082794328 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.157139854 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.105189449 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100124337 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131608276 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193728971 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128146269 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116241476 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096532255 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077441312 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.188081944 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088205428 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094104879 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.076938519 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096388261 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102622627 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135461802 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133249894 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096583695 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080268235 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220363225 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079356382 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116204958 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.964447799 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181955266 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091579727 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098145871 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.328510023 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100653562 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100342513 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079379407 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.294334739 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.186568277 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100760371 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081025167 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098499403 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082592548 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.402247016 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088171288 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.702490499 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08416575 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108645409 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084740967 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09930305 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106848007 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089010069 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117302742 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081300876 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.10118563 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080469129 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098315066 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082406715 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111624808 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104091338 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08167223 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166790764 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080406274 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11652971 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128503391 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085020381 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096878862 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131922783 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084021605 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099686996 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.139811598 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082572763 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111927359 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101946149 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14357247 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082775558 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.200031826 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079046811 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.130312511 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100026798 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116244689 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095268024 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115646265 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08374488 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103095169 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078989274 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096771218 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149863929 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097162497 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081900466 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10099508 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110354331 seconds)
  done (took 22.745561847 seconds)
done (took 39.391591062 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.332360985 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10501164 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105630441 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103974911 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101725703 seconds)
  done (took 1.492102725 seconds)
done (took 2.209626864 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.28556803 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.210255974 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07666356 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16663401 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092971294 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17586498 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162902817 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112284706 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.223219785 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077423084 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183926907 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078413486 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095513454 seconds)
  done (took 2.688989215 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09438007 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116584924 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082859285 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112578038 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077130453 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112610366 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093609191 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118770006 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110707361 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085317899 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094366566 seconds)
  done (took 1.814836122 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092981276 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114601112 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082445496 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111796066 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077201733 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111775993 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093013803 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11742986 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110933842 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086373996 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095009762 seconds)
  done (took 1.8076033 seconds)
done (took 7.023040618 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090623261 seconds)
  done (took 0.800428691 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.940246954 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.831885826 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111959323 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148809857 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.314441137 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.171518343 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.471973405 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123498734 seconds)
  done (took 11.030440721 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.114425389 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.113179877 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100419483 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084525715 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100265157 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101389775 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083569083 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103141945 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086754958 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100511445 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087527969 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.103257842 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100192786 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.08704361 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100157835 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084605005 seconds)
  done (took 2.333959576 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118902991 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117818075 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104860707 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10686384 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086108047 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103868266 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10593664 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088168831 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101893933 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102468326 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089451171 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103430168 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102006204 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078903879 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104003391 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106783534 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084817662 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105113505 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106091172 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090169314 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104865606 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095314918 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087400649 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106531347 seconds)
  done (took 3.227901152 seconds)
done (took 18.108402933 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157831295 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107426584 seconds)
  done (took 0.98945914 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093886855 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111529002 seconds)
  done (took 0.933257508 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096573488 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095242308 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120366274 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108451811 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080688988 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097501453 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120895464 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081429503 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097630022 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081960258 seconds)
  done (took 1.711812032 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081082122 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108898133 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100181856 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093629433 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10378203 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094479035 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08584453 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098032903 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109640401 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077596647 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102973457 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115862194 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086229161 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118200542 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105895642 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083957787 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103063853 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099789777 seconds)
  done (took 2.501830678 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078650341 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098189573 seconds)
  done (took 0.906653397 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079532525 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093306427 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080989357 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096905459 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095450111 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077323815 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096593523 seconds)
  done (took 1.348521455 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.506595229 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137977619 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.257869741 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085414872 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121148186 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302828672 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.09751811 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084995527 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103608863 seconds)
  done (took 2.487892272 seconds)
done (took 11.608728727 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09189384 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11726775 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113369816 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.465806093 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105390417 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096431053 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159806464 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.249223582 seconds)
done (took 2.132707286 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.147950211 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323505939 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11547631 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067990474 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097580355 seconds)
  done (took 1.340891296 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078827041 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098298484 seconds)
  done (took 0.913964215 seconds)
done (took 3.141294965 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079210308 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.095772532 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.111656231 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.096054128 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079805904 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097312801 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078474504 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096503653 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080807696 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098388994 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097887114 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.08040139 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098910138 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079120794 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096075652 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081009822 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.099001299 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078430999 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095643817 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080903402 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096032385 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080183666 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096138294 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078599653 seconds)
  done (took 2.922720395 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098342799 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096700874 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102221709 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084865593 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101522682 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086263424 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103100697 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098961519 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087129854 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100360529 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102099975 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084944052 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100278028 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085718134 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10026907 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102560992 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087388994 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098844643 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083410104 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101635251 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103821309 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082000991 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102345164 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08731098 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.101703761 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101753448 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083802676 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098781541 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104376563 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084672353 seconds)
  done (took 3.598803247 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084282541 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093383146 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077957522 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103927887 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078294385 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09877664 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078736335 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097363953 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080204727 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096198846 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080082252 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096338632 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078579623 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097930157 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080156068 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100656903 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109568784 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079115055 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096709217 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079622644 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09988988 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078488719 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097068306 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079185913 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096422733 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078436639 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096756044 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078984619 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097005626 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07913368 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100429039 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083235238 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09689109 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086957622 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.1008681 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078671731 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100859315 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078849765 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097121792 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096812331 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078853133 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096584896 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07882922 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103769836 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079482241 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098789823 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078910155 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098822239 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079344086 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099552417 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078855337 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096526981 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080443172 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097043762 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101157959 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078577078 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097357293 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079206117 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098069601 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078330948 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096390669 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078607468 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099585422 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080104744 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113582478 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086258753 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096415878 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081521514 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09773213 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081301988 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098144631 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111327814 seconds)
  done (took 7.234183447 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082109902 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105183624 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0793198 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097382787 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077791212 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097538746 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10161974 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079508862 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099346882 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085298351 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097715952 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081320828 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099180629 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10949426 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079462869 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098679282 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086096787 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095624705 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080291194 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101392503 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079631286 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100867772 seconds)
  done (took 2.759531289 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206306208 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104539093 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140719828 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106621709 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0814743 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105051301 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102021727 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085808257 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102046299 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082546149 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100625836 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103648274 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083870726 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102991608 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102212252 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086008659 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103182231 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086578472 seconds)
  done (took 2.635550764 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090900964 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097100945 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102798156 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09733931 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098670544 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083720118 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106201171 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109469748 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084215781 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100321281 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091734777 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101924236 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103460798 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081817931 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10260833 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082480416 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102982611 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082905364 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110970347 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106113279 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106103738 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092450813 seconds)
  done (took 2.887453971 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097219503 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100723938 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119004831 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083951298 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096183079 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081204097 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107772196 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082495445 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109125431 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102427938 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08236339 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099028397 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089747813 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099971148 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106091084 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082127895 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103054373 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083875084 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103381282 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078832604 seconds)
  done (took 2.661965097 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102203989 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100675546 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101424906 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092522158 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102282085 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084247866 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111365652 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101524024 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084885254 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126734152 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101216232 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084333306 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111880169 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107626595 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10195997 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092837645 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110894922 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110526182 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084595391 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102384026 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127988724 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084735578 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111573005 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101015747 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.196285021 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099815977 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099838475 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087617608 seconds)
  done (took 3.679948657 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080068501 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098640414 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077927302 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096114852 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077197455 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095942087 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078787142 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095406599 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079992351 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095406576 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080483191 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097796776 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080501385 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101268313 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081853082 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100466524 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081598316 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098168094 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079559056 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098042897 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082941026 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101052651 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08328063 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097430293 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080149311 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100567212 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079943987 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098100462 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082287431 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098344773 seconds)
  done (took 3.436080932 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090883515 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104819818 seconds)
  done (took 0.953262253 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078208927 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113047919 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078796687 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103551922 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104096372 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.081214524 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107272926 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085517454 seconds)
  done (took 1.506956173 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095150508 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.108728345 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082378887 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111444106 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108068343 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.093775795 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164282087 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099147231 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086797342 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096802048 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111896977 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079938369 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104679481 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080642873 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104731281 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086808673 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09630139 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087300754 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101877692 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096736855 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082684694 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108821687 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083707471 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096155248 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082653796 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109462975 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109495933 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082833042 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1018148 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108533588 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086496182 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092659406 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081060468 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099859952 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079765194 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109249021 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111037252 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083839893 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107211612 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082780619 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10994092 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.0942379 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085901383 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104332985 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091676329 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099060239 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100417239 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076838899 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096799329 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083128972 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095493942 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080979891 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093279818 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088519341 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103297139 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112102046 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079452548 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100728195 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084500888 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101834054 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087542813 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10046443 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101907642 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.080375354 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106225043 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.084962022 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107244447 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077152252 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093863294 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079104415 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107271735 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122191346 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090354741 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100087659 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100658036 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079219745 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10241322 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08320352 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106933975 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107943491 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081800202 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106954383 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090163884 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101360442 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08601291 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110177713 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100472416 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086550403 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100023396 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117080689 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082165429 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100536429 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080734131 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.11173427 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086693165 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101974414 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081665654 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109575385 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077166462 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106843921 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104538323 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083825028 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110756228 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090373581 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108418103 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110369247 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090820467 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102658159 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087325957 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099165063 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085794215 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105277124 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109714074 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077589553 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105085141 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085617027 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10346228 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090915683 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100066409 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102555233 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091464953 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109164776 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081657374 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098933215 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086586593 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101706415 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107197645 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09105389 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100706009 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077560821 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095215483 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085643603 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099800775 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103291155 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08717298 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102235646 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076267324 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097089368 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085748663 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10709722 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.098729857 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081945161 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103715757 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082204474 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098579006 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.08717818 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101704744 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080593668 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103673501 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100858539 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077337102 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103760911 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084328592 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097708908 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085128287 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103074512 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102187409 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083022449 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098377559 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.086567447 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100067731 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.098328062 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0806018 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099344651 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.090637481 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102013056 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077525443 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097439196 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088960929 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097877548 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099274113 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080220604 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103571951 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08256121 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097844739 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.080351171 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101048878 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112460797 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086412758 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101101779 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088268756 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109487583 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099442918 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083645635 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099182844 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082003104 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101618122 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088102599 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105174832 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105276264 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.083891266 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.0975561 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089270309 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109348112 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083407542 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100867855 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082400461 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107392444 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109703979 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087965504 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103771216 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082311945 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103349808 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107569186 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085999131 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102957618 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083735407 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108527636 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083349918 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110044836 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104747672 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094345022 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106791894 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079760913 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106852539 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101222607 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089965547 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099179007 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081816543 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102949575 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085260029 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10212691 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086992085 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097112467 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110241919 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09194119 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102502784 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084311483 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10302631 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092504925 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104278405 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106771169 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087907259 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108928001 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097261843 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101903326 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087421579 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112401373 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103598686 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077750909 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109973627 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083254738 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102561004 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083312426 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102185853 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087441874 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111725695 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104494337 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.075458514 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102683738 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081298293 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099238745 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077499442 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106114061 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103591486 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083965151 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110681831 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085609939 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103528983 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106133488 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084210732 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103839493 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085496886 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107571478 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086296161 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10619225 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084108521 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105848496 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103308244 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082488979 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.108477914 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085633248 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102947451 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090953579 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103451807 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084794813 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105921611 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105701186 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084573613 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104046909 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084419824 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1067635 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084939237 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104115805 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086832471 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.099279122 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110904677 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084299217 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112387198 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084697883 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100545631 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091411341 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.106130552 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10816614 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08270534 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102484042 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083788944 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101595937 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087135881 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113072201 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101688803 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093427056 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109814582 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084962963 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106853776 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085360791 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.106393286 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103153117 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087340773 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106316619 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084937578 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103720088 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089696538 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.107483454 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084693477 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103908772 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102241525 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083140913 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102417985 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076994793 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100505618 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082322876 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102945436 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090366199 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101194182 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102984628 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.080591543 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103606087 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083851564 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100569895 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.0931415 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114143863 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.10274117 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093065111 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101316858 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085119761 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110165325 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095054717 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080403869 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098363302 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.079582163 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110715366 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085720905 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113172214 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103579368 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08213311 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099446806 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.082859941 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099756122 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076572545 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099227143 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086310752 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104530757 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083169215 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104485501 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107108851 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085869248 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112488688 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.08517459 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105589048 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085974481 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100865505 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084259786 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103160499 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107184278 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085977687 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101151146 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080066026 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102198359 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084037977 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.111285508 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084692446 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103961255 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091291447 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100928214 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105636525 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086477793 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097854169 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086970296 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104813251 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085119927 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103795707 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108044717 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087648271 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104978324 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090638244 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10372092 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085415978 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10495138 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102154658 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085837276 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.1044766 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085802105 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102825527 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087183679 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113018781 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083362041 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.1076991 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103883127 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085530158 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108438184 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085700809 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.10571193 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109143419 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085916343 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102625131 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089044403 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105488409 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085859956 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102623237 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084009772 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107029451 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100308359 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090758953 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.10092917 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083382658 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103604337 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081389621 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103999264 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103473187 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083220536 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108160185 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085734446 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102230162 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083490673 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.10303531 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086859881 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109330286 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112059381 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087143708 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105796774 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080398308 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100291669 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085907639 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099419793 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.083791261 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105434169 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106425888 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.084523089 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101362639 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081875644 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.107861768 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088016065 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106323683 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099439024 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087453683 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103618828 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085327541 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102411612 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082621287 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103757923 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106392309 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084248444 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100727611 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090777042 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105271203 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08444922 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103141176 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103545502 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082534067 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097316462 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.083241975 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104883123 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089559577 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104230725 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08434195 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110593221 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101507133 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084811507 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109062207 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084748639 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111508986 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080898448 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105498424 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106684737 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087131821 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100018469 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085034073 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.103256188 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088129355 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104357477 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081433405 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115175233 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.11284991 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088338937 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103988124 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084555446 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100772721 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081609674 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.105368361 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087461477 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10809687 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114693564 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085533095 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.105470742 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081629918 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105862635 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08911869 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.109504087 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082989029 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101764503 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083517806 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108394872 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.112607817 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084981949 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105026942 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089640801 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107982518 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084137245 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110096238 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.102515725 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089779559 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116417914 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087451894 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106596074 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111001508 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091888207 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104090873 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080013787 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106610621 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08887019 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105611319 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.086230631 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104257117 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116569116 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08601525 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100809958 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081966463 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105430822 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082534875 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109578236 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103754985 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084338514 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108321208 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085415853 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115075155 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108394595 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091416762 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106006949 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088889681 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104575236 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086068073 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103914972 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084208679 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105466551 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103683859 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088273921 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110466123 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.100547609 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091992799 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110351842 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088318191 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099204205 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082350618 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102928584 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079652454 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104219915 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099880239 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.083041673 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101855023 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083480695 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.106921506 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092757848 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107896993 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08800712 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105372152 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079564637 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106944712 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.110410078 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086354064 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.102857613 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08715543 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.107073059 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091859784 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110637809 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086201553 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.108008732 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107343224 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08535505 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.10239076 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093370593 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104787534 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089358052 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105249615 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08729787 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107731101 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108546261 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089673546 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105145927 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085872872 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115710455 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108044758 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082992821 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101177166 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088589608 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102204114 seconds)
  done (took 58.198932036 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144525506 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079664613 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098405932 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078750744 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113010961 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098921501 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078546959 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09839593 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079346671 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101278718 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0785638 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098444065 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108808465 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124204303 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092031588 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102396845 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097979369 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080604644 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100208273 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080221594 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110726417 seconds)
  done (took 2.849622976 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103864376 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115963432 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113302506 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11836395 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088120675 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113680603 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112975055 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113739828 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098588883 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109701341 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11813737 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115188409 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090522936 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110561607 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109761856 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092778753 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117411899 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107726568 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115268398 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094122117 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114230189 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113679624 seconds)
  done (took 3.193510861 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083260306 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101589033 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084223971 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09763766 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082386611 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097146041 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087250551 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100917156 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085794416 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101524044 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082000216 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101067487 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103451821 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078249883 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101630787 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080162923 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15077971 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105631126 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082957434 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103572007 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098048358 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085438959 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098515207 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079089952 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100344369 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.086726692 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103025603 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080997997 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103139275 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081606485 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102991375 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080675105 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104369679 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.1036391 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08244337 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101126809 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08254369 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100957975 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078085845 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100009345 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083630326 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.097786505 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083591338 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104116391 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081655868 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100169552 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084079409 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101811619 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097563004 seconds)
  done (took 5.407244827 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103562698 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160213574 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085272071 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142750503 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120175346 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112968294 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087629942 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142535024 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102691888 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082793443 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122062544 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119808273 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102823254 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088923038 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109222873 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103181382 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084457191 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10249053 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107693725 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084011056 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109777582 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090722061 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118797966 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116916486 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107522854 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082064829 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103172339 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10726822 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097010267 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109150744 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108172118 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089892701 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119457007 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107633789 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101936205 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087005766 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121104619 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103792523 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086078017 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100505266 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085551781 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108455345 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109257602 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12117889 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08445746 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107352504 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083373174 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101008621 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116919647 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08676789 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113132578 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118909706 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108501761 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084455063 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108385063 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120229664 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08369176 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101906215 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087875604 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116591305 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100759012 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090028272 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119069075 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105617201 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111335699 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099062884 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10911727 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10700316 seconds)
  done (took 8.076842629 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092573523 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11033488 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120160351 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120674173 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091578055 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111185208 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10958507 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090117457 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110285168 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116391707 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110570583 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131747692 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085453105 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113645297 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111633401 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090879445 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110184595 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110485839 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091338151 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112050269 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110645671 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119164804 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090023461 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120397976 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139745141 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10497342 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090153466 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110124753 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120196619 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109422625 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121894916 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090651772 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110863278 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119928427 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122732054 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091346251 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102767175 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110757229 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090903132 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111258778 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104702848 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100479769 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11116505 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104833343 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090239564 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110114921 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120153108 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123812527 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113721619 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09705351 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110711694 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119683234 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110653513 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091589732 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119539457 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146481025 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119907822 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12002091 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110588059 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099980478 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119955928 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128042735 seconds)
  done (took 7.621944943 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106691022 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115693814 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117952552 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099482293 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082410868 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108815033 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082736549 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103246779 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113193916 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093900577 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116438826 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108593518 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092129435 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116290815 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108313792 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110335994 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088367243 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109125084 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113742797 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108253619 seconds)
  done (took 2.918696025 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092514028 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12306146 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084480435 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111652718 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10754654 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090914181 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106678806 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107168514 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086215563 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107218842 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096155084 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117115255 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105303451 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091340901 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115875192 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111777643 seconds)
  done (took 2.477358406 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.094749255 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116985918 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119590744 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084131384 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103692092 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080197908 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10546895 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100273595 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080585866 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120250735 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084812919 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107663731 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10653488 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082756148 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100537859 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086653014 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100509169 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081885998 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105122081 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118988398 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09551279 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103297383 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105225241 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086505274 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104509918 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090028106 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105843948 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102559068 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084369983 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105085407 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084307492 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112422624 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100809361 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083896941 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103120919 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081544563 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104166279 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084931505 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107647414 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104813327 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082426146 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104284363 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085750377 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105610897 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080290551 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105161038 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100053049 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090551524 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102267246 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085665161 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10508893 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106142562 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085454005 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115297552 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088133541 seconds)
  done (took 6.20117734 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097657946 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108281448 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079799646 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102356778 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087698898 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108108632 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108313008 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087240902 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106230476 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083019101 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106623742 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089089553 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106803132 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107810187 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086373211 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109061292 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07979852 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105735895 seconds)
  done (took 2.593354116 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090418749 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104291508 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091900307 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105077181 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083852123 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108235782 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079179309 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103632409 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102875113 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084975429 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104159319 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086483132 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102841919 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087118115 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106152188 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084432846 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107281326 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103197088 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085179596 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100519273 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086873187 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10328949 seconds)
  done (took 2.943850275 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117169444 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124420616 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092756364 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228515494 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103581289 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.135192027 seconds)
  done (took 1.634004976 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108762779 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120862606 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105888611 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106415427 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114723742 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10634581 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087626632 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107263373 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117972097 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100145287 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106920232 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117550471 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117566972 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096189875 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114872532 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114003841 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107235684 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087742128 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105838409 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128634043 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087514162 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118688342 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107581152 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086154086 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107555126 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117638148 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117726456 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121685748 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086719807 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117989454 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113721054 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087098729 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117713083 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121725542 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108623311 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097457107 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107749664 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127135034 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113820685 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096629489 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108324112 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113692614 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097545144 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113536524 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11625181 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107304281 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093154027 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106779618 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107316561 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134007009 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093634397 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117092706 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114847615 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118283321 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116773761 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135461232 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101166612 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11595706 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113485976 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12124476 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115153957 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093030524 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116208789 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122447853 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113691927 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11769662 seconds)
  done (took 8.0940159 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101655997 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12591651 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107125298 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121721825 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096456005 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107284223 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106752579 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087066628 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107778047 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106346516 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150827117 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087171043 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117445343 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116841437 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1074221 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087759346 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10714036 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116513069 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08649038 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133856589 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107826045 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116649884 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116722695 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097043515 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122026185 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114910718 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107104628 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087785503 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107164759 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107421539 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092651111 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109053276 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116567311 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086456205 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116511979 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108381368 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087407337 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113241429 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107465885 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114474574 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09612949 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127453349 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10794617 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107414306 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101350211 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107448007 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108267375 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086554406 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108369137 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106627987 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101267846 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123125998 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121955125 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118424125 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108110761 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087269368 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108077369 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107973095 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087012324 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115398291 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116787275 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107661722 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135897673 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087199184 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10818942 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117142146 seconds)
  done (took 7.964960736 seconds)
done (took 155.187420545 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.096955006 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135959899 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095100915 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167937514 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10572699 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.124372328 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137232105 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096515115 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105699607 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085085341 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105753211 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086699634 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170746518 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085162851 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106408406 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107152627 seconds)
  done (took 2.650638652 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199019598 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.252067053 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101483497 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105142507 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088732226 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110160113 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104144538 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090623711 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109540592 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084916873 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108197376 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085988495 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105341034 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086111074 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109876563 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088721842 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106404509 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086812748 seconds)
  done (took 2.866260606 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111215823 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154313608 seconds)
  done (took 1.114269882 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118222485 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178233852 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317602086 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155590516 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105259599 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126690031 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155837462 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130390235 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195367611 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122280005 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122500028 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096530666 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139383811 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115578376 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093731407 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117630942 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141954986 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.0923257 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113893704 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115156525 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115921519 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106136882 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114084094 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092363542 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180478564 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119023463 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084296476 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106140493 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115244975 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094633896 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112762281 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124694528 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096768413 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174160364 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100938466 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17563993 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099206153 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11183045 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114363598 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090217363 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11823477 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118473602 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103453895 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117454684 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084075857 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117812721 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105162264 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084546919 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113434547 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096093179 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114885324 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112036368 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153596873 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117797841 seconds)
  done (took 7.484342439 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794324819 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155126612 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089732956 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.884314073 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138131796 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103368032 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.780165857 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135847726 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.237036063 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760747029 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133271078 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12072907 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225853199 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238314625 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.926226609 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.307518851 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.671075555 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101189847 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151152009 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152641463 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118580933 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137286709 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129774483 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430405129 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094345134 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112757938 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116265338 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.098862655 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15781103 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12580534 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114260377 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178560754 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.244973592 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205883594 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114961249 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088762244 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111343927 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168980868 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265594127 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214482877 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181031447 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086682473 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110488879 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121039528 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110613099 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108153661 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163209061 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172808427 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193547333 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09223314 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120874162 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119063138 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120384265 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164038272 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.11968402 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286421494 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321718287 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112362479 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12053569 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105051899 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263274685 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122793961 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224667454 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116888885 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212937432 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109988584 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777767269 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.190153685 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08942637 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117206794 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119658736 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094288215 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120786485 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167407329 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407203978 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123953989 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09251736 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11212184 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206396632 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125690849 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110244715 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162079751 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114818953 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099125893 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125981087 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122011467 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170604952 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228128243 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123499763 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119008809 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094265603 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125924483 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115607249 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214746344 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219395931 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161332475 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210586448 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123320992 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163342305 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189408224 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097756639 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193051322 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097244156 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125123916 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121924365 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215805854 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145260937 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101144358 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115449943 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117240138 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147989619 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126061018 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097470097 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.167053282 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.481349276 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166888731 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108314439 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126501208 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098277376 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160439834 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117429533 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259863741 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12116306 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168254091 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118789071 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087234876 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120087685 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164020535 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122491332 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09875255 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122625409 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118692204 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235397521 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21757605 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122317809 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22076009 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183616139 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118204539 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172574914 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12128269 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167226152 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119547638 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121571841 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094851118 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794187148 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122875959 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097936166 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116095661 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18795664 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110954981 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102279905 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124677475 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108492925 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784204781 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127641082 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121365469 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101562608 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118169923 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120494152 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095858494 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116065711 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162637394 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230677837 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121623709 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119622433 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101720872 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181717114 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094360724 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125508082 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123706922 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124655194 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10018084 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115182467 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123023354 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170542604 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162449997 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222031214 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.599658982 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089537585 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12519649 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230506874 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090155342 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287973257 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119812922 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224997804 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164325165 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120617622 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318900334 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165784543 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186792533 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127048748 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172926272 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087802729 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119708377 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163649555 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113199492 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118109026 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162499425 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126864075 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101433778 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.967702351 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111309692 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229981646 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.085526497 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192450541 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093896674 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120862465 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286029591 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11062825 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106733065 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.185854012 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093208333 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124172008 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.848565282 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125959514 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121489654 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117690534 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.199753098 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185411669 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097035218 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120550703 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121309413 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164554552 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210869641 seconds)
  done (took 44.107074635 seconds)
done (took 59.066312543 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.272531053 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212308019 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.256576282 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.166995848 seconds)
  done (took 1.85561002 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169204197 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147317588 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119342903 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107372044 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.148192601 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085006318 seconds)
  done (took 1.646237737 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.350824305 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267110145 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236982138 seconds)
  done (took 1.730901269 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.285553405 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.24750115 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.353619363 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.3979067 seconds)
  done (took 2.277707097 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207492957 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130874461 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110951797 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103451207 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.195294014 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248364021 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140351239 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200512497 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121450791 seconds)
  done (took 2.378589465 seconds)
done (took 10.766491397 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.246237374 seconds)
    (2/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.167435194 seconds)
    (3/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098112651 seconds)
    (4/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.184490572 seconds)
    (5/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.234731365 seconds)
    (6/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.239744592 seconds)
    (7/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.102349881 seconds)
    (8/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.201228352 seconds)
    (9/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.13174418 seconds)
    (10/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.1645255 seconds)
    (11/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.2279864 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.130662107 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.134091876 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.097971714 seconds)
    (15/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.137328598 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115944752 seconds)
    (17/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.205484617 seconds)
    (18/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.236145944 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.114279337 seconds)
    (20/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109831071 seconds)
    (21/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.116819042 seconds)
    (22/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.096217465 seconds)
    (23/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.25533436 seconds)
    (24/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.123271298 seconds)
    (25/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.104985876 seconds)
    (26/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.141128625 seconds)
    (27/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.187438705 seconds)
    (28/286) benchmarking ("sort", Float64, false)...
    done (took 0.152714816 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110885758 seconds)
    (30/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.236333506 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.22038319 seconds)
    (32/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.196404075 seconds)
    (33/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097130498 seconds)
    (34/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.11951878 seconds)
    (35/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.22090063 seconds)
    (36/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.167736328 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.092940339 seconds)
    (38/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.147266994 seconds)
    (39/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.154259585 seconds)
    (40/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.098377646 seconds)
    (41/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.109712907 seconds)
    (42/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090478836 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116598883 seconds)
    (44/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.115922843 seconds)
    (45/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.100735712 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.131728392 seconds)
    (47/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.101992461 seconds)
    (48/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.195603859 seconds)
    (49/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110521374 seconds)
    (50/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097504901 seconds)
    (51/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.203832803 seconds)
    (52/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.183863669 seconds)
    (53/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088005746 seconds)
    (54/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115605138 seconds)
    (55/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087194543 seconds)
    (56/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.212873425 seconds)
    (57/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077138538 seconds)
    (58/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.189681805 seconds)
    (59/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.172646764 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095898512 seconds)
    (61/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.1242003 seconds)
    (62/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.150406501 seconds)
    (63/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.213811305 seconds)
    (64/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.172506237 seconds)
    (65/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.199380842 seconds)
    (66/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.149432049 seconds)
    (67/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.07789613 seconds)
    (68/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.092840579 seconds)
    (69/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.188838556 seconds)
    (70/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116034698 seconds)
    (71/286) benchmarking ("sort", Int64, false)...
    done (took 0.086201575 seconds)
    (72/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.118533481 seconds)
    (73/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.087903241 seconds)
    (74/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.148076806 seconds)
    (75/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.119872719 seconds)
    (76/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093716815 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.138766024 seconds)
    (78/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066357493 seconds)
    (79/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.185633702 seconds)
    (80/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129226958 seconds)
    (81/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067383928 seconds)
    (82/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.092816798 seconds)
    (83/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112370667 seconds)
    (84/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.171740075 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108806547 seconds)
    (86/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.129803605 seconds)
    (87/286) benchmarking ("sort", Int8, true)...
    done (took 0.217180188 seconds)
    (88/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.137833546 seconds)
    (89/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.092506042 seconds)
    (90/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.156339214 seconds)
    (91/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.084555413 seconds)
    (92/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126240283 seconds)
    (93/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116210513 seconds)
    (94/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.159099102 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.135771565 seconds)
    (96/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.119562847 seconds)
    (97/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.182884732 seconds)
    (98/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.169775366 seconds)
    (99/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.090924815 seconds)
    (100/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.095517481 seconds)
    (101/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111149691 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.133115345 seconds)
    (103/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066772362 seconds)
    (104/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138894207 seconds)
    (105/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066522767 seconds)
    (106/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.077175667 seconds)
    (107/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.17052775 seconds)
    (108/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.19568529 seconds)
    (109/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136555812 seconds)
    (110/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112196346 seconds)
    (111/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091175257 seconds)
    (112/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084364629 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 0.179931186 seconds)
    (114/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.097987503 seconds)
    (115/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067165893 seconds)
    (116/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.097804477 seconds)
    (117/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.179765053 seconds)
    (118/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066986169 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117140469 seconds)
    (120/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.122459622 seconds)
    (121/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094856235 seconds)
    (122/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.153958797 seconds)
    (123/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066570311 seconds)
    (124/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.066109011 seconds)
    (125/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.115880205 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114317568 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093906976 seconds)
    (128/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.116404488 seconds)
    (129/286) benchmarking ("sort", Int8, false)...
    done (took 0.187274758 seconds)
    (130/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066303805 seconds)
    (131/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114009404 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094115465 seconds)
    (133/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.165722252 seconds)
    (134/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067107918 seconds)
    (135/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.185989032 seconds)
    (136/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06692494 seconds)
    (137/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.089236214 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085744302 seconds)
    (139/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165919671 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118253305 seconds)
    (141/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.162491981 seconds)
    (142/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.141693084 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086095585 seconds)
    (144/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.101180215 seconds)
    (145/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.09054015 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117751093 seconds)
    (147/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092725946 seconds)
    (148/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.088689055 seconds)
    (149/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097534201 seconds)
    (150/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.152287954 seconds)
    (151/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.116303509 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.097788852 seconds)
    (153/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.123417422 seconds)
    (154/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.09705786 seconds)
    (155/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.111145132 seconds)
    (156/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.125782273 seconds)
    (157/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.181139732 seconds)
    (158/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165070102 seconds)
    (159/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.177133413 seconds)
    (160/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.095421952 seconds)
    (161/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.171157974 seconds)
    (162/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.181413637 seconds)
    (163/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099684241 seconds)
    (164/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.150474369 seconds)
    (165/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088881128 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108802492 seconds)
    (167/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.10913134 seconds)
    (168/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.110934467 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086666807 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116051359 seconds)
    (171/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.152201417 seconds)
    (172/286) benchmarking ("sort", BigInt, true)...
    done (took 0.22829045 seconds)
    (173/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08682041 seconds)
    (174/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172668126 seconds)
    (175/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.091674683 seconds)
    (176/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171005787 seconds)
    (177/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.06764519 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118328909 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086308342 seconds)
    (180/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123113079 seconds)
    (181/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115480351 seconds)
    (182/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066835766 seconds)
    (183/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066697495 seconds)
    (184/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.123012099 seconds)
    (185/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067088142 seconds)
    (186/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065910009 seconds)
    (187/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.089982603 seconds)
    (188/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083750433 seconds)
    (189/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110585024 seconds)
    (190/286) benchmarking ("sort", BigInt, false)...
    done (took 0.218552979 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 0.219593807 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.139784923 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08494945 seconds)
    (194/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099845662 seconds)
    (195/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066636568 seconds)
    (196/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085809654 seconds)
    (197/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.113081469 seconds)
    (198/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086825106 seconds)
    (199/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119969224 seconds)
    (200/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.087808746 seconds)
    (201/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116307538 seconds)
    (202/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.10953622 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095997027 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118930187 seconds)
    (205/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.0678222 seconds)
    (206/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133125988 seconds)
    (207/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067701096 seconds)
    (208/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.11064968 seconds)
    (209/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067786047 seconds)
    (210/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092428502 seconds)
    (211/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112022528 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092435936 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108778465 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086239612 seconds)
    (215/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.108830168 seconds)
    (216/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.06651066 seconds)
    (217/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.312481728 seconds)
    (218/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.145575254 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108215809 seconds)
    (220/286) benchmarking ("sort", Float64, true)...
    done (took 0.228906035 seconds)
    (221/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.067433756 seconds)
    (222/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109252324 seconds)
    (223/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.07685257 seconds)
    (224/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.17394376 seconds)
    (225/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.068546592 seconds)
    (226/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.066699908 seconds)
    (227/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.163415575 seconds)
    (228/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066482269 seconds)
    (229/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134139434 seconds)
    (230/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.164378571 seconds)
    (231/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.066804325 seconds)
    (232/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.090219562 seconds)
    (233/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068476228 seconds)
    (234/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136559561 seconds)
    (235/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.091852064 seconds)
    (236/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.108251972 seconds)
    (237/286) benchmarking ("sort", Float32, true)...
    done (took 0.22779638 seconds)
    (238/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.093725744 seconds)
    (239/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066053608 seconds)
    (240/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.110915559 seconds)
    (241/286) benchmarking ("sort", Float32, false)...
    done (took 0.172559603 seconds)
    (242/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13241367 seconds)
    (243/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065914782 seconds)
    (244/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067928469 seconds)
    (245/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.091919406 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086232923 seconds)
    (247/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115907156 seconds)
    (248/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.148429989 seconds)
    (249/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090716232 seconds)
    (250/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.067403971 seconds)
    (251/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065721803 seconds)
    (252/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.089498101 seconds)
    (253/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085704036 seconds)
    (254/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.089598667 seconds)
    (255/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067938311 seconds)
    (256/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.0660238 seconds)
    (257/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116172319 seconds)
    (258/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094161061 seconds)
    (259/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.109146721 seconds)
    (260/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085432221 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109027203 seconds)
    (262/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.094633567 seconds)
    (263/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090304643 seconds)
    (264/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091866374 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109459367 seconds)
    (266/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.088268219 seconds)
    (267/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112781595 seconds)
    (268/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066857488 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.11691435 seconds)
    (270/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066999972 seconds)
    (271/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108020881 seconds)
    (272/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.066775003 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085125358 seconds)
    (274/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121092431 seconds)
    (275/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.090642788 seconds)
    (276/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.093556276 seconds)
    (277/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117001767 seconds)
    (278/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087152658 seconds)
    (279/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.109748069 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09175334 seconds)
    (281/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065226069 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.108757426 seconds)
    (283/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066757827 seconds)
    (284/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.090388922 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092400843 seconds)
    (286/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.109862305 seconds)
  done (took 35.846842757 seconds)
done (took 36.725651187 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099104986 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146846781 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095864081 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134527123 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123005961 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090777142 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117025439 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097760492 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122136333 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124393776 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09683928 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092270164 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096194629 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119178244 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09624606 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137818113 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123111499 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093093205 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117802136 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084889755 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120242967 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08521969 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111370634 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069671615 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.119929125 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093412569 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116187846 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.11916486 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085728089 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.11001199 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089185891 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117214913 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08586747 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123242929 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09265713 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118205871 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096341854 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118820518 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111380122 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086127455 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117193188 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085436434 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116252351 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093549565 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115343242 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091532506 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117388567 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099753632 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138661137 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121352781 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.098592677 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124553423 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097411296 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118610909 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091245096 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11872604 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09131233 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.13948738 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118414643 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09165532 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117855256 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093898699 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114712952 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094136642 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118587009 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.11990277 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.096651775 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114798954 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096486691 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115183582 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085895215 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118603832 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.088949458 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109042238 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095659018 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120355475 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085255405 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115878012 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11657504 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091554851 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109371117 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088813369 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111498282 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092228223 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111504262 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069306913 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113797026 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092119613 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109451629 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095332964 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116069327 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09303062 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112029856 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097995081 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110015806 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091742963 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111011124 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087365992 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112196543 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090680248 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110117993 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089156935 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118969046 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088142473 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117293848 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122857371 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086695762 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11692864 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085680454 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110030974 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101324948 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120834741 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086279812 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115380927 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085547573 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118335755 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086205141 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109318622 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086038105 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.109514942 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092343595 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.109896516 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087722171 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.117358741 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123908046 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086071373 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11406042 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088220041 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109439818 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091194426 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.109850102 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087311969 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112030483 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077773157 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113380214 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086359362 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117633517 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08895721 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118053677 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088032148 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120134146 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09151843 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116593782 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092354736 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109603896 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07435316 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115862032 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088717307 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112762896 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087292675 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112928565 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08684642 seconds)
done (took 16.813935379 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086310196 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183045498 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15064761 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14119535 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106301301 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110792494 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121480409 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.116971852 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112898636 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141350501 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110216459 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130553802 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147347737 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08723631 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.110998647 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090989269 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113209145 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102193086 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144962622 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132632606 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163374713 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086867372 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146384595 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134216087 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119955826 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104765491 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111623441 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091073795 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114674167 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.11159517 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131445227 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114627699 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087846502 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13232079 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103524838 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118659111 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086725726 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117941648 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087780452 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111351549 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139420644 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133177912 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.091970531 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117212539 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090474406 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114107568 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088322884 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119792104 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098451368 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116098782 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125390886 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154943195 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090131227 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120765853 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086550525 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121829768 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120788699 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090451058 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111344487 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.08953784 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111155036 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091046634 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126247372 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140767892 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092012143 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120796082 seconds)
  done (took 8.549504694 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103808202 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13905931 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105002283 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130740331 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11133466 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088059602 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113018375 seconds)
  done (took 1.729145003 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087669174 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135388272 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110216952 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134784359 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132349038 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110911505 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123741925 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088376913 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130060673 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114067904 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107752658 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150028233 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089450646 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120289013 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137146511 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088305008 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136872487 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088348851 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116095647 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136786956 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091522217 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133922321 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090241505 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112868344 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101359866 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112717806 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161214866 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093851894 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11433891 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091636305 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110874414 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150196881 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101878204 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124839917 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087908997 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128262713 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127704856 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086281754 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126041609 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092914976 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.12661515 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089452434 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114016059 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087441151 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117857651 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123585424 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.092278951 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114339098 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091674389 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133183328 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.106873349 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126647662 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088643823 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117496871 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.09004246 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11940078 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122114504 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.088615703 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132991358 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090007824 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129941766 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.1049413 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127652062 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130128021 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09139444 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126515163 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102826382 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116589814 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091139738 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11689494 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130761159 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.085908488 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115404554 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.098744465 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115218822 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111695796 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136705413 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.08967211 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123201853 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113975862 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088431025 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113836173 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111244153 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117403103 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088885858 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117062106 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09212342 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112870442 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08759001 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116585864 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086249346 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116669026 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091766556 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113228363 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116513851 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105222728 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114508655 seconds)
  done (took 11.744347543 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089458767 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114226162 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090561687 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113748645 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089911506 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115601944 seconds)
  done (took 1.563758694 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113083562 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11689992 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103413738 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119589728 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154126568 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102943804 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129533958 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123975379 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106931954 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126483059 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127954109 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104621332 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134732843 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120191995 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103264762 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119945735 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10302822 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124357052 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126353271 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096531166 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135474102 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121421405 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09600424 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130704392 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116984752 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095630768 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125387161 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102131969 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127025289 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123173952 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09785646 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116964859 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095942204 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123235014 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128793446 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094518091 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12058042 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.11860425 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099808962 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11708957 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103943459 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120816605 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12990825 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093210764 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125104738 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121700418 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09353403 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124629028 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.128488945 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093130559 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119125151 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094925481 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.116935226 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093962447 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120799859 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122866138 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093270375 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.12823875 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121113923 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095014889 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116748015 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092478291 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122508965 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117703857 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103500366 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118249637 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.12116439 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096113871 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121638159 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095574729 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118929957 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.091835635 seconds)
  done (took 9.153289559 seconds)
done (took 33.677508054 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.68859691 seconds)
  done (took 1.637579568 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.827476525 seconds)
  done (took 1.779257993 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.035607143 seconds)
  done (took 18.015737984 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.487191319 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 3.509005213 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.992486281 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.177283972 seconds)
  done (took 6.116675358 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.940627495 seconds)
  done (took 1.909654765 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.280129216 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234044078 seconds)
  done (took 1.469528958 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769428997 seconds)
  done (took 1.734729028 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.358963457 seconds)
  done (took 2.314275686 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322009892 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182821557 seconds)
  done (took 1.467999412 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.545507169 seconds)
  done (took 1.508879542 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.408450146 seconds)
  done (took 11.377621136 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.263600831 seconds)
  done (took 1.241022045 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299693758 seconds)
  done (took 1.26713791 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.510628737 seconds)
  done (took 4.481880867 seconds)
done (took 57.283479787 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098042634 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126238229 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10133836 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123889268 seconds)
  done (took 1.415251618 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.099516187 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120738621 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101048006 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.11991176 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12627952 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095257338 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122786619 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100614682 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120218283 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096855266 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120251293 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119815104 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098302156 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121926312 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092535077 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123827858 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099418333 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119855082 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12297604 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095871063 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118134923 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097369826 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123503972 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093292342 seconds)
  done (took 3.624797132 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099028163 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118152014 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095619363 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117308668 seconds)
  done (took 1.409859362 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099097339 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130587499 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104601667 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124445202 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130074624 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105509512 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117661009 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.090820545 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119447394 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099279315 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.114801418 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138224211 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105719694 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123962612 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101306914 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113373356 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090308792 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130496879 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123811341 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100363999 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118316483 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.098821739 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.11499812 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.107299716 seconds)
  done (took 3.678331082 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.16863633 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126213049 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137657422 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094301256 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158583405 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139936759 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087147134 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139515498 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087488733 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130339985 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117228506 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132147115 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128088161 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088060075 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113445927 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087153012 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.1275804 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128346579 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090319864 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126943557 seconds)
  done (took 3.391647248 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097149009 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117138063 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087728299 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11567733 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098595345 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120310106 seconds)
  done (took 1.615769233 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090658839 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114371472 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089109281 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114044358 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093643123 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114621527 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087510027 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113979288 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090096344 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113916256 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08833394 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112669168 seconds)
  done (took 2.202367991 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.499904254 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119672652 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119894644 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090819065 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121653405 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088683723 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128758939 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091702279 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141250767 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087735177 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115364442 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089979744 seconds)
  done (took 2.674302528 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231241532 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12519519 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278853372 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368549844 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154807694 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164819906 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278008792 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158118372 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.221872315 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148825323 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200467442 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193342525 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150815765 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212925652 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110707012 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144340883 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184905276 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243042557 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151557915 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233829806 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180546808 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166681593 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177812138 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149566085 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13742245 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170637986 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119984739 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103362456 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231429495 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173229009 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214669079 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16082452 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146354197 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205837269 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250904055 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218419113 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279694368 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133497538 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.139709685 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165351838 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257669567 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137656328 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201680804 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153777869 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131485752 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215452775 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163857417 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174127904 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145706941 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111727756 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219616449 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23720357 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190731478 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137645782 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300790876 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146968248 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.155253394 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192438543 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251817722 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225024767 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185855029 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120437493 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186839232 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214325019 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184182793 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151606748 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180801969 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148079289 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179898255 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188427292 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188530044 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17664747 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183721586 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1388854 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168564394 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170375289 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169792997 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257062311 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210409821 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095000701 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16841249 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14780172 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133531664 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195213797 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097468669 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239078304 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143484776 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162334933 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213472515 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157897427 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160983782 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191816698 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212053026 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12042953 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110973421 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154135421 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153304675 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176072148 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139485134 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15607121 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155227824 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.101954716 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168058334 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124378917 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183256647 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.11782045 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172252728 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181422515 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126712247 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159883363 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149536235 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.122446411 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201121702 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200899861 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142156057 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132346692 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208016289 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176361907 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140697525 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17574411 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227250581 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116589107 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149266089 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226188792 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214797978 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139829848 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227825239 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154837856 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106594086 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131719061 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180905277 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154160246 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16075332 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134163129 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.18232181 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229131158 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097961818 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138054133 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19287304 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133471368 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131506309 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154389099 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146951565 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110059023 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142840059 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14461817 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174158308 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177167134 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154446605 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162498424 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151847398 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252378493 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141716265 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150511092 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148306962 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093294407 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.217148666 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198015328 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129774773 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204767734 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.167948552 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228795842 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168854163 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132982338 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176342841 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101935641 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119852805 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192129347 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166316148 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160358244 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.222572471 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199140419 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.205149888 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182752836 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164775832 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17128717 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164597038 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156999854 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.136665108 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159858524 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15753538 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095782079 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.139215808 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133106754 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146848169 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114731035 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133281008 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22118176 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169578202 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188704141 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157250673 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149234815 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181030279 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127878091 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173169571 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176898602 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146793403 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224022334 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193413196 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184333842 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142990195 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225095871 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093260791 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124278297 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140720157 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166400561 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10630728 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135074402 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162370289 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18038626 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177536939 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197259026 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210223213 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197644807 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188545081 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094689973 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166822543 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183608643 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175698809 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182820347 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139418547 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.148936991 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176147809 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157013632 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253248332 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168664588 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174256277 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231119165 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.122553094 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131769682 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149488562 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177277528 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15369516 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17331758 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146179035 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140937057 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159305886 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.101818192 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186411468 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184408352 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161842048 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185439396 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.14863101 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211182705 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100412403 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162108958 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159194494 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163451942 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108340054 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173215351 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200345562 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147825462 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165409291 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215682913 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103484435 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.304786057 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232360153 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218705558 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11021891 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154654453 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160981436 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16248713 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168123818 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177312522 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158163323 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215414709 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130023273 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135810132 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140486435 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149564745 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149134269 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103257304 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146626928 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175227613 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137999246 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182938896 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154831014 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159194366 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199188579 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.122777429 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143491783 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150123361 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21359487 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211044728 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20935655 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151547702 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.175996124 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234044114 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098169898 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132594338 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132907207 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179246881 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107228653 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221334623 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186959976 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229848109 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18206199 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176546655 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139787241 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119347409 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128027673 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193636455 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207231686 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150413505 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.146359549 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227031431 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110170015 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130958209 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165243927 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290320387 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145023381 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194525899 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106965272 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277319794 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100030137 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13054409 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162135545 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234517175 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108224167 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.17974391 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169215277 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160822365 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162550628 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149631003 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19025961 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241846176 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199958903 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206921918 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10381318 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155323695 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172769359 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218960739 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158094484 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.109485684 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231605175 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194777402 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.22051799 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.112767352 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167878679 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194935938 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129430558 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214439105 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133866265 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206132563 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134323883 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193146679 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152160104 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138158615 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17580102 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.214542677 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11353874 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21450748 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182549621 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134610381 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10522945 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195094261 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179052094 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157146542 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098497085 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207163655 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.096808405 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223040283 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23024202 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135388948 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155034619 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146041971 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135242025 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15363749 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158160451 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112070064 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167122833 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199833676 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133969471 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188677559 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230457102 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169336726 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172432195 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144456879 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691498051 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131302132 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193565477 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148245396 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232842265 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121457067 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200426564 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129590781 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195005811 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195325409 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161072403 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230550305 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191160013 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.204480611 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103836845 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158145094 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155239548 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144441408 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151657372 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167575869 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159043185 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145323172 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177418953 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164410678 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135297727 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139398639 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198860942 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147465113 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18364438 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178749735 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138780406 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172757664 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18630994 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133150999 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178377488 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2363374 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141766797 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150827374 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.10561436 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.148093094 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261497301 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124760221 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189243613 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182779831 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158211769 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167740633 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146135993 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221897018 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157130952 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185752584 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141713982 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157487185 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15703011 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137001953 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101569 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156511305 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16628912 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149882617 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159077008 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168339999 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192955877 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122238009 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115198187 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313513969 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176189769 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213705285 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.133704457 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135486485 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162429404 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148889596 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176703816 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178593649 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135232985 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108220114 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136596707 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.153413932 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110172841 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156036598 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195281135 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164897403 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235155667 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.107410125 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278842919 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140328341 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155575939 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.08742259 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132239408 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150903112 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146161637 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159107159 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191557354 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262505657 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149134583 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.104939036 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149721291 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126220799 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135125043 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135168643 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191006722 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178186437 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145096252 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081103011 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156246483 seconds)
  done (took 82.067594024 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162270176 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13333852 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146106202 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200605103 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175664472 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268239288 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209253216 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253092541 seconds)
  done (took 2.615981129 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092606346 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145234713 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156837284 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131441339 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090566915 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119535527 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.340075206 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13269514 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114722345 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120216616 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172452082 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092439929 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.544869182 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.089871248 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118658624 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106454081 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091182324 seconds)
  done (took 3.720977591 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 45.443333697 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.388904665 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.125435313 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.19577702 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.789018374 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.100044194 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.718119883 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.165983408 seconds)
  done (took 58.998382439 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.113849623 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135984629 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122372227 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.150727324 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.139596651 seconds)
  done (took 1.731260109 seconds)
done (took 170.11306758 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096007042 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12682668 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097253659 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129143953 seconds)
  done (took 1.511614356 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09358592 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070385325 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099868383 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073835732 seconds)
  done (took 1.409008854 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.187665304 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.16698088 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.402308728 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070662795 seconds)
  done (took 1.576386906 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113215563 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131009584 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103772056 seconds)
  done (took 1.431460101 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105472514 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128743456 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102664882 seconds)
  done (took 1.416743038 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104687263 seconds)
  done (took 1.184651723 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107083523 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.13627571 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108145886 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135470473 seconds)
  done (took 1.567622481 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.0968637 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125769575 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108157961 seconds)
  done (took 1.409877772 seconds)
done (took 12.935319109 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101989786 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.510607457 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383897765 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142927862 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.720306536 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.378982319 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.037338998 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144401336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163329668 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092561244 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137503556 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671103557 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.066583595 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.46685949 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.020539983 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371069451 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675434145 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119916629 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118334929 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092813876 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.02100908 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09109235 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120689733 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092053133 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701314269 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425037396 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094662741 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369239083 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.090935288 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124919628 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38250468 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121753301 seconds)
  done (took 17.119943216 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093861948 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172076593 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09688075 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136784297 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121979674 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0964761 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122507145 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092947336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177178886 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122004809 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110509729 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120271107 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124234038 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093443441 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140487179 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091382178 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124747269 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092024305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120284773 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120605631 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110886729 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119241436 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.092748971 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120359297 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092541046 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133852708 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121177203 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.09204719 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119363362 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097439103 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125459649 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093523201 seconds)
  done (took 4.768041467 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139722452 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181922841 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127035048 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125731419 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167570429 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123222944 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197867043 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116711844 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181592716 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121606906 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138194088 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09176144 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155068794 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093074563 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141083258 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11954132 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095553527 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121863465 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091322689 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122377969 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138062406 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092054587 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120630253 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092264107 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121861082 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107779136 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122850589 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119762751 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092655685 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125615452 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099389866 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123205648 seconds)
  done (took 5.095895288 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096059731 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125428216 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108397807 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137010962 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094542756 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125191381 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096176273 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124094412 seconds)
  done (took 1.990923372 seconds)
done (took 30.055937451 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.10985861 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126620295 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106260417 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133334086 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101593815 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131571853 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090985573 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.13242956 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132407254 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10149358 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135911844 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091048395 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122327761 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09083609 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134464348 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096711082 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132187412 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10041914 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132669916 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130555966 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.093321722 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132144746 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102013366 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132079224 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.102757841 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132018137 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136538439 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098113186 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12137442 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094002755 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123777197 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10227838 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122837228 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104652147 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125826763 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09631282 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.12308822 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092512864 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132563741 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13159383 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.098440193 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132995088 seconds)
  done (took 5.941535578 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106320045 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138312403 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10394059 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080055802 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115797344 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079638653 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137287142 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078919683 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.10889187 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106504809 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073226892 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105031511 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077099 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101122882 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07604317 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074209823 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107595176 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074443111 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075065321 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105246185 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.078873392 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071684698 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.10706529 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078561492 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07423167 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109419748 seconds)
  done (took 3.533817863 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099514547 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132964219 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112287462 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182184493 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158756913 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.09839318 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131576884 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139161546 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108615535 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119113539 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095818075 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14814556 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10922021 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128588566 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091153121 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136381606 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134942241 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093344721 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127291409 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111622905 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137527337 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102280814 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140383957 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132079437 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091670104 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122381869 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096405065 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13427204 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096305136 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130414322 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096825642 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124652275 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122213076 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103523784 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124836559 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094221052 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140330974 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10162809 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129021424 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.09212456 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.12908649 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121808269 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.112542282 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160315015 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091374983 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128705843 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.0939339 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132000879 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120595972 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110250945 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13018619 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091260934 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124439485 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091414127 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120972317 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105958396 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123333306 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093528222 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130902462 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126016461 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104812951 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124239494 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107489597 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12082292 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099684937 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12127074 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092486391 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120673809 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143408143 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094307216 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160099064 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09336441 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122540457 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100815918 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129354921 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127525953 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093247712 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136410279 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102151932 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125276282 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101869882 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125073083 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094802063 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139678443 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123186511 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094864839 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121671761 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099038688 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123884803 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093116801 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135004705 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.090963856 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125080231 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110770859 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121043246 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092981498 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128251334 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126148027 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092718341 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134331498 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097570369 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122160729 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102145769 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121952874 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124143991 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.10273998 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125640132 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091415107 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125471413 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098901208 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.121485221 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092038115 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124877715 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093173602 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132284723 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.097983957 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126598785 seconds)
  done (took 14.703563609 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.225688767 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.21363236 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203571726 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.29134427 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.133757912 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116042973 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209851571 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15411741 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122722836 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159471051 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172538844 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.17911807 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168345695 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181423699 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168993876 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092336226 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.140942544 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163037177 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21395445 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.25569341 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142884156 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099643694 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159384838 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158770075 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.135994532 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131536464 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109541709 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133837054 seconds)
  done (took 5.748815989 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107945315 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155271404 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097574289 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143716152 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147355663 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09152757 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126865728 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093010125 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134039451 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135452427 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09328236 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127950562 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100252804 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130888041 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122200868 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102138873 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130835185 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094503155 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125421761 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096405857 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132623687 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.1009154 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126477873 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120833382 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102242075 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120013414 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08561266 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140871559 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120936075 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.113853543 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120086858 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100823477 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135885753 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093314943 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121965163 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094907917 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12443069 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094720313 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123810337 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090811929 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121755281 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077202427 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120866168 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106635647 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128076716 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079774664 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128319345 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127233876 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.093608279 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119353225 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095364961 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125778691 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095739646 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130076009 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095949192 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123119428 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096000339 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114030025 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099768872 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123929208 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.083992657 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.119578493 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.09702112 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117090721 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100229133 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126530109 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091177778 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124259331 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096082708 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128517646 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094677041 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128430408 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090147191 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12455713 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094705759 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.1279285 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095826004 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.120742557 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121484245 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.092650081 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074544261 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122491661 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073243733 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124855899 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092009749 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121956773 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095091874 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129183814 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13676359 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094755353 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131117995 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.092939055 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121542077 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096146869 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.111962231 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.0959698 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139237944 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140375072 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093294243 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120509841 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107636573 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124314755 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.091912039 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105541751 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101796806 seconds)
  done (took 12.851312563 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126675142 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152270638 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.093573215 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139816315 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155861535 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155900957 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099975078 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129620819 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094112425 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.14037697 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092726081 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130269362 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093591261 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137271297 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155765095 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102399284 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123978724 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106305303 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126965682 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.167609017 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110718017 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.140713004 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109958903 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123769895 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.097595031 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.138439539 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159173106 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106484885 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135645856 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14071101 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.106983899 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159493177 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112151408 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.126825705 seconds)
  done (took 5.420374994 seconds)
done (took 49.284746449 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.200118382 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.428885384 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.183063222 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.1364595 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.203574758 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.198694584 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.219035701 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.182724961 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.753812124 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.188146129 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.439452226 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.786858003 seconds)
done (took 60.038088176 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.301130092 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.324264128 seconds)
    (2/2) benchmarking "String"...
    done (took 1.451638803 seconds)
  done (took 3.889093941 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.558683835 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.144179013 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.447716364 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.184969046 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.189339319 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.474708779 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.973188814 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.548795579 seconds)
  done (took 28.075435256 seconds)
done (took 41.939765443 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.207695835 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.25300644 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.193634584 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.165583869 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.297570659 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.217470323 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.564968423 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.197698437 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.215324471 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.170152199 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.207683686 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.186054646 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.213507668 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.559570262 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.197946914 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.186334498 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.215528496 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.718825224 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.582655844 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.186266547 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.194589469 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.190241027 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.183422024 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.194338212 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.182877816 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.18051131 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.181403933 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.220252741 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.644092802 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.186395055 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.184873974 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.746646988 seconds)
  done (took 190.141512704 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.179455976 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.194668589 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.288667901 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.2100363 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.644198861 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.381248705 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.32893999 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.708435087 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.200768016 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.187471308 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.451138701 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.185704519 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.522977538 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.217931631 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.209314508 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.251983243 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.494104616 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.516691007 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.218894273 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.342815291 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.201944449 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.446381177 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.373534833 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.396426787 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.203463046 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.216256478 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.208595573 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.20647586 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.37668465 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.423612722 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.229622613 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.213328385 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.788462349 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.038357596 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.185793406 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.186752594 seconds)
  done (took 149.540226156 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.181347583 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.180816614 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.18207925 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.182200079 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.213349118 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.183171377 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.733324628 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.748835211 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.688707593 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.799360921 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.527287332 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.464036195 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.186409899 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.275487267 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.197796747 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.183212785 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.197948821 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.225577614 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.182527628 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.182960584 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.750305767 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.199408464 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.412826362 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.35434904 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.197085867 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.213937204 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.571360836 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.181985319 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.212992111 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.508619547 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.22863032 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.181288071 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.558160079 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.561197779 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295732766 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.182934719 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.212588597 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.181064452 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.458169521 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.182068087 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.181884995 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.181503443 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.18186757 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.18446111 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.839418263 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.184195714 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.7196565 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.181050899 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.100606236 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.181590955 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.182068795 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.535473625 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.815219406 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.200488607 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.18116214 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.183256864 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.18053002 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.180069047 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.213496912 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.481268923 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.274959656 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.198052528 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.184443655 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.212355665 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.18159977 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.38323922 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.182585472 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.429442695 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.249199156 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.292929587 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.72602012 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.184382112 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.277143755 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300852037 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.180217005 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.179786447 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.179086378 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.180349821 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.289909198 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.18021576 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.576182918 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.35022585 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.196848115 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.43660059 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.277571111 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.179560169 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.543664009 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.183265699 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.17875281 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.886811855 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.273495593 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.179977873 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.178875396 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.180352275 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.570472594 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.713168425 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.390378082 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.183026117 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.4376256 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.182572802 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.586948288 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.693075356 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.82710654 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.182976061 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.180715419 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.289826633 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.348443643 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.195050761 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.179412035 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.426480545 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.182631824 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.240006475 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.180678 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.575567027 seconds)
  done (took 363.021368651 seconds)
done (took 703.820587568 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.79435912 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.779710853 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.888754168 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.775805366 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.742599696 seconds)
  done (took 10.089246952 seconds)
done (took 11.198949875 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.359037151 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.361870286 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.240703072 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.359709586 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.21554469 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.374002632 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.337813043 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.204105551 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.279483511 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.257569328 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.276604045 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231432487 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214827659 seconds)
  done (took 17.820474909 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.494444093 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.484623061 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.246161075 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.485734976 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.220986464 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.486422468 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.379626443 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.385002275 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.396767318 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.214022308 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.194698882 seconds)
  done (took 16.098558478 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.486289655 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.494976303 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.249925883 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.490808437 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.223773197 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.491372188 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.386548067 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.392075686 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.405656283 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215008344 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.195162121 seconds)
  done (took 16.141266976 seconds)
done (took 51.170532141 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.191296693 seconds)
  done (took 2.3017542 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.226461017 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.384918281 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.205648645 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.198846415 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.192116038 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.192432323 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.198253822 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.193371916 seconds)
  done (took 10.903823957 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.188475166 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.191362114 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.187953951 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.191873742 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.189079881 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.191382651 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.188706826 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.191569604 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.191520855 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.188212589 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.191909209 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.192296821 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.189553503 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.192804496 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.190470613 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.189626889 seconds)
  done (took 20.157645688 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.192020783 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.188761862 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.189156155 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.189570802 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.190074694 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.190364512 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.190244002 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.190263952 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.18914694 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.190097179 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.19095242 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.190209035 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.190331464 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.189531814 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.189753943 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.191409314 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.190255219 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.19137113 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.195778719 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.1901503 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.191863174 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.189681659 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.191653472 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.191774626 seconds)
  done (took 29.688495058 seconds)
done (took 64.161556458 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.793411369 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.852091187 seconds)
  done (took 6.758817595 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.194300652 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.19297609 seconds)
  done (took 3.502536681 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.193314876 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.192938617 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.193532625 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.192701935 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.192971299 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.193721705 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.192620145 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.193637243 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.193074302 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.193720857 seconds)
  done (took 13.045755042 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.194879147 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.194288804 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.190719703 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.193774754 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.193676378 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.192544259 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.194938747 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.193364822 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.194625357 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.192433863 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.193697614 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.192456997 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.193861323 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.19287156 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.194327025 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.192701386 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.191986274 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.191603173 seconds)
  done (took 22.593346893 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.194810553 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.195301335 seconds)
  done (took 3.505122077 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.192987913 seconds)
    (2/7) benchmarking "second"...
    done (took 1.192999989 seconds)
    (3/7) benchmarking "month"...
    done (took 1.192006712 seconds)
    (4/7) benchmarking "year"...
    done (took 1.193056532 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.192045263 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.193429345 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.193686032 seconds)
  done (took 9.466217574 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.197503084 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.370914713 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.453014622 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.798135877 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.197659973 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.198482572 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.032190995 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.199260524 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.202481752 seconds)
  done (took 13.765808119 seconds)
done (took 73.751954294 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.196560979 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.209171755 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.414893674 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.202524621 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.225957828 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.491631621 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.245543281 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.312798088 seconds)
done (took 37.416870152 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.19118565 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.175159274 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.915880939 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.182038461 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.168030739 seconds)
  done (took 18.557750244 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.175770093 seconds)
    (2/2) benchmarking "read"...
    done (took 1.528682125 seconds)
  done (took 4.821164423 seconds)
done (took 30.688462606 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.199028125 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.198129307 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.194523777 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.19492535 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.199153549 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.195419593 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.195581124 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.194542595 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.197217347 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.198548096 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.197126253 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.198828383 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197327696 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.194301538 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196499679 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198456816 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.199452391 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.195866415 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195856355 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.199281437 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195432822 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.19877814 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.19682041 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.196090902 seconds)
  done (took 29.84476151 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.198886431 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.197189563 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.199473123 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.199097609 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.196217483 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.199595638 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.198959317 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.195897286 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.200356584 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.199247281 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.196395133 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.196700567 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.198501618 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.197203349 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200113468 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.195887243 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.199072222 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195815721 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197976063 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.197323152 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.199391066 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196679187 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.196286559 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198436974 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.1966643 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197064105 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.199282839 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.196830301 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200103639 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.197900761 seconds)
  done (took 37.05836164 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.204820867 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.207142499 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.199455494 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.200671167 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.200086473 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.200160549 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.200267513 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.200235005 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.20040998 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.201651083 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.200573811 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.200502968 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.201427737 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.201354196 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.201522103 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.201569415 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.200928184 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.201771195 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.200841794 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.20157392 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.201769426 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.203025131 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.201893799 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.201489122 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.20150558 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.202469677 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.201176715 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.202164925 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.203052586 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.201967145 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.203089611 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.202319338 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.203219562 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.203199459 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.202498114 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.202554814 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.207926332 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.2100535 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.205161192 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.202043287 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.202637708 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.202837646 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.202464816 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.203536126 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.20288112 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.203933467 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.202082258 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.202835915 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.203919261 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.202920538 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.202790599 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.203553568 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.20304096 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.203544436 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.203275166 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.202328658 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.203892237 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.20449328 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.20387718 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.20460442 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.202861666 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.204733035 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.204470502 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.203410901 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.204828384 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.203705381 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.204224597 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.203564339 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.204553992 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.203437937 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.204329236 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.204561636 seconds)
  done (took 87.726259502 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.204802005 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.202444397 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.200846831 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.202293112 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202518812 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.204713375 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.202570533 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204549224 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203043321 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.204875794 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205312036 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.20288137 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202942676 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.204690121 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205875271 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.203140944 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.205356467 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203266175 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.205034187 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.205466935 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205733733 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.20338937 seconds)
  done (took 27.609713768 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.205143367 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.208244124 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.2037055 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.206729636 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.203207197 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.206291247 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.207524477 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.208035716 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206050994 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20456362 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204489121 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206250737 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.203237298 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20366399 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.203613531 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.206839286 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206845704 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.206059017 seconds)
  done (took 22.826185706 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.205752799 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.204363645 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.207144621 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.205800156 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.206384298 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.20666016 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204290619 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.20856829 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.20856483 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.205033744 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.207783255 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206791745 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.208285145 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205891196 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208364439 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.205494441 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.208181937 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206215382 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209410172 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2067656 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.205511843 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209719322 seconds)
  done (took 27.678075546 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209896939 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.209125786 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.206319617 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.207083352 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.205728303 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.209031479 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.209242563 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.206728633 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.21102837 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.209663226 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20664029 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.21009192 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.208776518 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.207814054 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.206635752 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207012435 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.209458055 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.207722344 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209690071 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.206167963 seconds)
  done (took 25.292023068 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.210945138 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.211033717 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.210701947 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.211958218 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.211280698 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.211261678 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.210920999 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.21107974 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.211997891 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.212127804 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.210513413 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.211111966 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211132277 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.210514955 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.211788677 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.211866871 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.211956829 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.211783041 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.21224653 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.212822116 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.212385083 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.212129124 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.212505052 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.212179109 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.21205939 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.21230112 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.212039469 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.212585784 seconds)
  done (took 35.056220412 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211220524 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.211765988 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.208734657 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.21029892 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.209914546 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.209774286 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.21013127 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.209863888 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.21296868 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.21031075 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.212794931 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.213519005 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.212586693 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.213114618 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.212539009 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.213274702 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213301761 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.209657019 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210960258 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210836553 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.214268794 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213094813 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.213527444 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.210527666 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211431081 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.213406777 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210843305 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.210855816 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214127866 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.210879839 seconds)
  done (took 37.48248507 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.232127913 seconds)
    (2/2) benchmarking "in"...
    done (took 1.233316003 seconds)
  done (took 3.597862524 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.211022971 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214566023 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.213572353 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.211261696 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.21228593 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.214505048 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.21382915 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211381447 seconds)
  done (took 10.834993714 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.21308152 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.215011004 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.214062423 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.214953441 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.214582027 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.214642331 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22320985 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.232675783 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.215221443 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.216375251 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.223578442 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.223360561 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.217746065 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.214928955 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.21447858 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.21712338 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.215598118 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.21541875 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.21557053 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.215758085 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.215805362 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.218580873 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.218982492 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.213177144 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.21763538 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.226155932 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.239191461 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.216260561 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.215818157 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.218740526 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.216456993 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.213419319 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.217054511 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.216939133 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.216537507 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.216894358 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.225397515 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.235713297 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.222625157 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.236598567 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.218153721 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.215385319 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.218006224 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.218213614 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.218890114 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.21690402 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.219311296 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.215497616 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.218117115 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.221646032 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.222911791 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.217386225 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.21606873 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.220935172 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.21852047 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.225218352 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.235894001 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.222225634 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.228507001 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.227917142 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.250842294 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.242708343 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.220793033 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.218186551 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.228999913 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.242779938 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.226484861 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.235466831 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.215918177 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.219318014 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.226837407 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251614964 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.24471834 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.220159078 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.220321489 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.220544713 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.219784792 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.220384513 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226601596 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.239853544 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.220693888 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.221074081 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.230028802 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.242839736 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.219598355 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.220541756 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.220768045 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.220610303 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.221854644 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.231916651 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.23970032 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.221064535 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.219234713 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.220683451 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.222089678 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.220767995 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.221002869 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22206229 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.217784328 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.221342706 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.220292404 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.224405293 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.228854738 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.220270527 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.221617952 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.225585201 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.239639227 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.219746347 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.226044853 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.221651501 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.221803311 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.223074676 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.226896889 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.218162763 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22447985 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.228836572 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.221642262 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.222890022 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.220995191 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.221884864 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.231967382 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.246258623 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.22185032 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.221306154 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.226259262 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.233079392 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225039881 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.225251122 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.222439122 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.219476376 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.220104811 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.223641339 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.222209301 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.223212533 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.22173178 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222776979 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.22088795 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.222881888 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.223064092 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.223059466 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.223867798 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.222867254 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.223109395 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.225412277 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.224050409 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.223691361 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.229251451 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.242228572 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.225151028 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.224307736 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.220794036 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2229428 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.223638798 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.223451615 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.223277612 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.224245419 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.223895892 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.223211635 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.224697369 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.225309124 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.224702462 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.225820885 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227563619 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.223686068 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.22675094 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.222877948 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.221711019 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.224525082 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.225305994 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.226174624 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.223328877 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.222368024 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.225600268 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.23011668 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.224061373 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.224174358 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.22707042 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.223655589 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.224569314 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.222790156 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.226710817 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.231627422 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.223893117 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.229109767 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.242783872 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.224417183 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.224629013 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.224837003 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.225114462 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.223668802 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.22761554 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.232745897 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23712831 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248865994 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.226582286 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.23011391 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.226470077 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.227586318 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.228145349 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.224992291 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.224753071 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224708478 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.225096064 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.225157118 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.227465953 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.225302407 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.224684086 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.225905582 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.225845176 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.225059659 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.225639772 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.226299749 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.226498301 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.223741616 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.226272787 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227187481 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.22492234 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.223891838 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.227685252 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.22765865 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.227148911 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.22921123 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.235294634 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.225435591 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.22872072 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.227844697 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.226873327 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.226414096 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.227878198 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.227765454 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.229028952 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235116217 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.244167924 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.228768227 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234311233 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.246268694 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.227253419 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.229158977 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.226906476 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.2248436 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.230645086 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.235596337 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.228417536 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.228706575 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.226403301 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.226818498 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227541 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.233026565 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.242307107 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.22716552 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.22777236 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.231195911 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.225777608 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.228413209 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.228598766 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.22804916 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230427653 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226919116 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.228427568 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.228622751 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.226398601 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.227013712 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.225416642 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.229124004 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.234096161 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.231998438 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.226593564 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.229320153 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.227853278 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.231144383 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.22722499 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.227606369 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.228698992 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.241372338 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.250807548 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.235750095 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.24634004 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.228413442 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234103537 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.24667664 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.23108825 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228453695 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228135159 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.228392685 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.229372439 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.226560681 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.229417852 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.228523283 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230298151 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.230001826 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.233223279 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.230070517 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.228911619 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.229201383 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.228393348 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.228973195 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.229439429 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.23029224 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.231998702 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.231666503 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.229876817 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.230120892 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.236998086 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24832413 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.231895321 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.229871334 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.230481135 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.230831878 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.232411119 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.230915296 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.233074628 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.237294522 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.234032374 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.239416288 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.232582161 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239753969 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.231890491 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.23383208 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.237856222 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.229819992 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.230299174 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.232043308 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.232434452 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237878883 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.249731463 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.233470033 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.235964433 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231694719 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.231994857 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.231153869 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.231815881 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23100155 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.231219434 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239541498 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.251214163 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.236358052 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233854565 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.229611232 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.232792206 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.2322373 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.231602509 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.235463901 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.231459472 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.232917092 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.232655095 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.230934987 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.233778375 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.233216378 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.232433629 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.230280259 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.233470786 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239549925 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.253917317 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.237107163 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.233733742 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.240123309 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.251931394 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239490204 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.252784949 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.233602562 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.233640647 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.233867999 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.234602246 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.233069154 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.234738003 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.232832284 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.235484713 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.23796515 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.234145315 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.235151849 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.23530708 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.234829663 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.23310548 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.244734227 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256242645 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.235194051 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238849108 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.232678964 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.235615007 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.237963789 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.236217111 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.234365618 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.238364781 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244687411 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242893101 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.23639812 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.235578804 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237828449 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.236359532 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.235915836 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.237326817 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.235903078 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.236715525 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.23669783 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.236729624 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239041985 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.235934029 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.237222746 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237052837 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.23775472 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.24602729 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.254784549 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.236693453 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.236888833 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.237397373 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.237458036 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.238521315 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.236429691 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237720811 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237470718 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.238323931 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243437612 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.242248571 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.238667786 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.236163342 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.23669634 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.238143317 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.236622496 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238559028 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.237947149 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.236745834 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.238619754 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.237584159 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.238002846 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.236983175 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.237421263 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.238488018 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238612167 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241551646 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.246353764 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238933364 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.235587331 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.23814884 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238353042 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.23667524 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.237560102 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.244548955 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261813132 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.24804744 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.245590084 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.242420993 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.238959278 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.242538797 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.245214399 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.238179667 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.239722893 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.239090392 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.240711147 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.240940796 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.2416824 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239745039 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.245386758 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.259350133 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.239367197 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247567697 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.258012555 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240635533 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.240573171 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.243852958 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.239949481 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.237132357 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.240527038 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.239640557 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24796043 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.259215557 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241849887 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.242191144 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.240793416 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.242331158 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245187691 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.240717336 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.241808506 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.238417798 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.241169195 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242276994 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241097841 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.23877757 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.240461529 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.241261327 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.244670868 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.247531374 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.23874743 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.242020786 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.241175052 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.242846652 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241794308 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241428712 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.239121647 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.238843968 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.241949763 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24214697 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.241803727 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.244069003 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.241561411 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.242485723 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.243345399 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242236958 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246079963 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.251368879 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.248819442 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.239737041 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.242492428 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.243040975 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.244693765 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.241248396 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.242718179 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243121346 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.243949071 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.242744625 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241787219 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.242372554 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.246517683 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257275688 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.26133354 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24390357 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.24394349 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245600031 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.243612531 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.240862662 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.243137485 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.245153632 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.246639515 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.249718909 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.243295105 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250413436 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261695811 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.245334371 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.247982528 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.247403378 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.250558029 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.245996119 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243258013 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.243623768 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.248064417 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.259094139 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243973138 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254123145 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273268962 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.262776665 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.244962805 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.245209005 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243564536 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.244533122 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.246765885 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.245695396 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.245178966 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24611641 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.244862032 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.246571963 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250303766 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.247359369 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.247369493 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.24563923 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.245977814 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.246854034 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.243084851 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.245073962 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.245940554 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.246579808 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.24563917 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.246387912 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.245251053 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260514506 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.271529849 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.247315271 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.247867555 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.244976484 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.249626832 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.24884166 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256451331 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.254369333 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.246802985 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.246895683 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.247252047 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245543283 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.246383873 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.246963257 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.247037701 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247949716 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.244947297 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.259844197 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272728465 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.251904877 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.246548163 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247283823 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.248001475 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247242345 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248231136 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247189657 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.247832483 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.251518675 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251881634 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.247820313 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.248949653 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.250988665 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.253691408 seconds)
  done (took 736.526573849 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.245151024 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245549922 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.245584644 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.244851932 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245582014 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245703365 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245983875 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.246068315 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.245951266 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.247529491 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.246129193 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245410772 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.246331069 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.246814682 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245034993 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.246083698 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246569749 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.247104116 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.246461147 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24705628 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.246301504 seconds)
  done (took 27.331083866 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.249033342 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.246766639 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.246750459 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.250856683 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248028053 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.249894478 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.24745156 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248213113 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.249917333 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247070992 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.250556877 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249664686 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.246331998 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.247112268 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248677299 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250586764 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.251156085 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247813919 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.249785627 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.248909682 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250655866 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.247641481 seconds)
  done (took 28.638396195 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.250641011 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.251053438 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.25003843 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.248376563 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.251642919 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.249450286 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.250622099 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.249935774 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.250870136 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.251696971 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.250206456 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.252087235 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.256838521 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.253726798 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.252992553 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.251363955 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.394280161 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.250393384 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.2519698 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.250702621 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.249618901 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.255771256 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.268430454 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.249264902 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.250764788 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.251531954 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.25169395 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.251808927 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.253297907 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.252927603 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.255616135 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.251676908 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.251822983 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.253578119 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.25105247 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.252795214 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.256019605 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.251840643 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.250468017 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.25185886 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.260881768 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.269810622 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.253438581 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.258384879 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.271940672 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.252305713 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.256549348 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.259297727 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.249796741 seconds)
  done (took 62.730776998 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.253654515 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.2534854 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.250202239 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.25312442 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.252937759 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.25344984 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.253471218 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.254537058 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.250877006 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.250525332 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.253948945 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.250965667 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.251343925 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.255592269 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.254548112 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.250994431 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.251492393 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.250553297 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.25176055 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.251744634 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.251720166 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.254419474 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.254541505 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.252262568 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.254204663 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.252492768 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.252344311 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.255068721 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.252602182 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.252234903 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.255735244 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.255304764 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.256395889 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.253269207 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.25192509 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.25537722 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.255991436 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.252396315 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.255127134 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.254082112 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.255098012 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.255113858 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.255706755 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.256190487 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.252316841 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.253595385 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.252964362 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.253603314 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.254047605 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.255775794 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.255286562 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.252942209 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.255115248 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.253673039 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.256291165 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.257432665 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.253360539 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.254668192 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.255953615 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.254095706 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.253349468 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.256023303 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.253422538 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.256489928 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.255890104 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.253857323 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.254311861 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.255947176 seconds)
  done (took 86.430685429 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.255859052 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.255603438 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255848563 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256403221 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.255571336 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.256174639 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.256010367 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.256852453 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.257196415 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.256776652 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.255825563 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.256850871 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.25730249 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.258157494 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.256639076 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.255999863 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.257607717 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257538714 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257984385 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256624578 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.256965906 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.256494871 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.257051274 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.258471812 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.257358914 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.256939749 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.256480736 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.258369588 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257814245 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.258411005 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.258895386 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.25844396 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.258147467 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.258684048 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.258624796 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.259244936 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.26009868 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257793014 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.257686495 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.25865432 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.258491757 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.258760666 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258846679 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.258234781 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.258196623 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.258155345 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.259112746 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.260300125 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.260539782 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.259535055 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.259750846 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.258704332 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260271554 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.2588144 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.260976226 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.26043575 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259950564 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260838073 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259878189 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.258486992 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.260347692 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.260896721 seconds)
  done (took 79.17663493 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260759301 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.261193105 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.258242678 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.257648383 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.261552369 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.258190387 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.2602201 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.261751004 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.262773095 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.260919654 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261361212 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258550937 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259070499 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261404696 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.25883837 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259687171 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258738548 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.258793097 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261285533 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.25908634 seconds)
  done (took 26.375783123 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.259208072 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.26123107 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.259442422 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.259681009 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.261407166 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.259836951 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.262894908 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262852151 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261028748 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262450062 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.261428211 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.262332974 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26071694 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.262086484 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.263171114 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.259879979 seconds)
  done (took 21.354905697 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.260266361 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.262611664 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.263888264 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.262006866 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.26117128 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.261726231 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.262272158 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.261281334 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.261147292 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.263667329 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.264012057 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.264490695 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.263479149 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.263478595 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.260624251 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.263958937 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.262219452 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.261322991 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.26420276 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.263779774 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.261972333 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.261876848 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.264580493 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.264003856 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.261229632 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.261734327 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.261354915 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.261580089 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.260950097 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.26304997 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.261975479 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.262956638 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.262412339 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.26100694 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.265251597 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.262037698 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.265776737 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.264332622 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.264583753 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.26538226 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.266779608 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.262749097 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.265137026 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.266041039 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.262511583 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.265445472 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.263390192 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.263344417 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.262812784 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.263029915 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.264288643 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.264507296 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.265253152 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.266226742 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.266530909 seconds)
  done (took 70.65703255 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265920606 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.266772637 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.263657226 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.26529578 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.266401328 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.263962207 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.266113516 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.265521021 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263314725 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.267039821 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.264918099 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.267420575 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.263700865 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.266505381 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.264349454 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266449813 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.264175882 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.263825519 seconds)
  done (took 23.955897514 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.264629483 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.265734039 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.267490444 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.265379482 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.264217014 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26889194 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26399513 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.267700177 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26828099 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.266362944 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265777283 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.26850886 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267806975 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.268149098 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.267152619 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265723383 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.26875772 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268054167 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.265126386 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265972275 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.26904049 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.268487161 seconds)
  done (took 29.052375881 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.267088338 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.26620359 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.26761261 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.283172929 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.286456162 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.28970028 seconds)
  done (took 8.843229992 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274313864 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268616917 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.267320819 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26925279 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268751725 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267055004 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265624614 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266342868 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268903883 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266007738 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2659661 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268276674 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268599819 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267356188 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269336256 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269219264 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266952058 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266942382 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266826129 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268697647 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267843238 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269640004 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266177139 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266949724 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267498239 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26703079 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270167313 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267459289 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267439879 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270229999 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269601569 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267458639 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270550481 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268270862 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270294009 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2715081 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268865619 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271169548 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270624773 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26827411 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.270206035 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270793358 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272236694 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267566017 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272551982 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267094397 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267771976 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2689533 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269289785 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271725794 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272211883 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268892604 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271589746 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271039446 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271560167 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271909852 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270963595 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268335831 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27241273 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269877165 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269438028 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272041964 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268628804 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271061201 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271737824 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269772868 seconds)
  done (took 84.97451687 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270426715 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271265487 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270729463 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271371411 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26983135 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269681044 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270936989 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27080881 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271087001 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271007942 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274248113 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270567676 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27064435 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270660871 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271058109 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270478755 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269720157 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271033242 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270374342 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273852372 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269623771 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271407347 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271107875 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271298314 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271013079 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274087181 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271536431 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270989037 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270664277 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271322144 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271271102 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271494107 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271934591 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.271455394 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272687476 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272162913 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272744574 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271340988 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271684655 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27423651 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2720732 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27499912 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27189326 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272211942 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27188175 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272354686 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272378634 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271761554 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272836248 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272692468 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272838921 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27221315 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273668214 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27353018 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273060645 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272601603 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273145175 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273639505 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27405636 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277349743 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274569641 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274026501 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27700924 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273255053 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273497586 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273792002 seconds)
  done (took 85.14924724 seconds)
done (took 1717.322373981 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.43900485 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.391642093 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.275064131 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.271831099 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.275322208 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.270233091 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.276453776 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.274843405 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.275198478 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.274991831 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.276313726 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.460686978 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.270285173 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.276030521 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.275146458 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.368912971 seconds)
  done (took 42.143306452 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.303353259 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.281413722 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.387416646 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.299049031 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.302846649 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.457779287 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.336163066 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.281133277 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.442664292 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.320055822 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.753689644 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.301504229 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.28209923 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.33083014 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.298224863 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.456232427 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.516402019 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.75702428 seconds)
  done (took 29.298545007 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.705046869 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.279718579 seconds)
  done (took 9.176819772 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.298683663 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.28114762 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.282156682 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.279766355 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.272550438 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.271533072 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.279017578 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.279476856 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.747787454 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.398324009 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.282304827 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.290215494 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.298645128 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.282344828 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.277890053 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.317104859 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.451116846 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.279411458 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.277684852 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.286855521 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.281488822 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.373322369 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.320923286 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.280203773 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.401216305 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.748624928 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.283631459 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.288742883 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.432354202 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.279314779 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.280173389 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.281468404 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.282560788 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.87278226 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.699851921 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.289799714 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.322827504 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.290456956 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.280095558 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.417304287 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.283337137 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.287867421 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.27378729 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.713036158 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.416301386 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.393058056 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.4066774 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.298085205 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.283786817 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.342025866 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.283433438 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.283491787 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.310143139 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.02275733 seconds)
  done (took 107.941493889 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.316881025 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.664746621 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.442409205 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.297422748 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.883846739 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.952786398 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.291616652 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.545055413 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.353628492 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.277155547 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.558711644 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.762164512 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.291230582 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.283173827 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.917682254 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.349470647 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.27571436 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.993284162 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.291572129 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.280979757 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.762933788 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.276883579 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.276226936 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.435324258 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.314605704 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.715356247 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.597944814 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.57020852 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.293845259 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.277770611 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.726232191 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.306469591 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.318499504 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.281069847 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.531194033 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.615974347 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.612416248 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.299428192 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.319399458 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.278094114 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.311418586 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.712680859 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.616275672 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.294064697 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.27819161 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.714561643 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.293979123 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.27853779 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.278458583 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.475996188 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.953964485 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.278503823 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.582888957 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.277923497 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.637067447 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.356856658 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.336105469 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.742613814 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294068996 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.284861063 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.334504062 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.278810166 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.279856558 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.279183043 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.286470827 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.605814412 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.624024386 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.283634044 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.604640757 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.731766172 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.308266448 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.781401762 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.165608391 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.301813244 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.372551581 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.280324477 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.781423762 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.753724182 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.317676223 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.278957246 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.596361404 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.299924996 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.551963444 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.293221738 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.280874982 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.786882845 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.285215245 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.315015158 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.29031778 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.280148472 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.912159601 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.284194165 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.537811018 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.307638073 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.280543996 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.280398892 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.283168005 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.27943867 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.295866679 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.286559508 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.78422805 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.300626035 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.380074472 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.302044336 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.289176712 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.285917461 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.282516868 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.281809204 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.494399602 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.742284045 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.306843636 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.281689432 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.28106339 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.282474886 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.458480978 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.288150145 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.568089432 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.296484753 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288007178 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.290969274 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.932727077 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.317490491 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.281795401 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.285600214 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.154725493 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.490598551 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.299148887 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.282143823 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.278032238 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.292644895 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.42557671 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.293162034 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.345611359 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.27983059 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.959816338 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.316686149 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.294198685 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.603361456 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.281605219 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.067263433 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.295250804 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.275693142 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.56221568 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.522775449 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.521866464 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.260653946 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.273836294 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.921442919 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.312483541 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.385518257 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.268736917 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.284874684 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.444282354 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.71421542 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.250465277 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.904101438 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.248275869 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.458557728 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.249331563 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.55429319 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.716516899 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.266274589 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.259750639 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.935500284 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.97066559 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.931982235 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.255316073 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.519234879 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.197222863 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.729711309 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.25174962 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.2529556 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.681255335 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.254527788 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.255278101 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.251502184 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.252159406 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.408412717 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.422175811 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.414777289 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.25919848 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.680334541 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.271415612 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.250442272 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.261293155 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.250152697 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.59839208 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.310149983 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.249962175 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.256779786 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.250338152 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.251109186 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.698424487 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.174651341 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.257775668 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.400973355 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.857714771 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.271601736 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.250722029 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.862111706 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.549545869 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.739665389 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.309588358 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.541920752 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.277427755 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.28561357 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.796300745 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.297598108 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.702738858 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.271408645 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.252251389 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.813554481 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.262127899 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.60301453 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.246609732 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.247872752 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.753778267 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.263251309 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.248560151 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.398966396 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.264687115 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.507825171 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.247660416 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.251471796 seconds)
  done (took 1095.120220685 seconds)
done (took 1284.871643763 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.248562036 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.252343932 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.23017296 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.248114673 seconds)
  done (took 26.148660809 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.251809239 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.248354138 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.249336996 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.248526446 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.248728493 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.246423573 seconds)
  done (took 8.657165276 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.285048707 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.24679355 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.245950427 seconds)
  done (took 18.93979322 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.437481529 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.492122763 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.581154276 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.294286572 seconds)
  done (took 9.966176999 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.247762618 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.245382874 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.246981571 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.248656784 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.251653849 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.253131496 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.249938138 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.249600084 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.250158264 seconds)
  done (took 12.404963723 seconds)
done (took 77.287884121 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.247529059 seconds)
    (2/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.295158035 seconds)
    (3/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.267387727 seconds)
    (4/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.115451014 seconds)
    (5/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.670955459 seconds)
    (6/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.457599934 seconds)
    (7/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.966764126 seconds)
    (8/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.454198227 seconds)
    (9/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.013606363 seconds)
    (10/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.222843191 seconds)
    (11/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.260105583 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.482089659 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.133728346 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.282995777 seconds)
    (15/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.522297643 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.268535194 seconds)
    (17/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.674292063 seconds)
    (18/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.064344436 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.58549945 seconds)
    (20/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.97603083 seconds)
    (21/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.24298764 seconds)
    (22/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.381502393 seconds)
    (23/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.221725265 seconds)
    (24/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.325475643 seconds)
    (25/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.328629298 seconds)
    (26/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.935924801 seconds)
    (27/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.246596689 seconds)
    (28/286) benchmarking ("sort", Float64, false)...
    done (took 5.518714508 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.634823139 seconds)
    (30/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.714673531 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 6.245317804 seconds)
    (32/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.226662902 seconds)
    (33/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.351219532 seconds)
    (34/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.243208514 seconds)
    (35/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.08412229 seconds)
    (36/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.34580921 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.373810716 seconds)
    (38/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.332584059 seconds)
    (39/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.02501796 seconds)
    (40/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.244255253 seconds)
    (41/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.296184446 seconds)
    (42/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.265281909 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.355104724 seconds)
    (44/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.269112003 seconds)
    (45/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.588549977 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.513625905 seconds)
    (47/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.481263828 seconds)
    (48/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.240341446 seconds)
    (49/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.301827668 seconds)
    (50/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.255490247 seconds)
    (51/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.225130239 seconds)
    (52/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.075592296 seconds)
    (53/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.322219961 seconds)
    (54/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.347907772 seconds)
    (55/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.245816767 seconds)
    (56/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.496689782 seconds)
    (57/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.787230524 seconds)
    (58/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.727119882 seconds)
    (59/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.483337072 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.588525949 seconds)
    (61/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.383733874 seconds)
    (62/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.491237529 seconds)
    (63/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.730259826 seconds)
    (64/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.045207105 seconds)
    (65/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.226532987 seconds)
    (66/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.616467322 seconds)
    (67/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.305835328 seconds)
    (68/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.604987224 seconds)
    (69/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.235543381 seconds)
    (70/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.272711171 seconds)
    (71/286) benchmarking ("sort", Int64, false)...
    done (took 5.420411861 seconds)
    (72/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.350836691 seconds)
    (73/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.40889884 seconds)
    (74/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.07764932 seconds)
    (75/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.30966416 seconds)
    (76/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.284022054 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.141761342 seconds)
    (78/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.22843155 seconds)
    (79/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.350018332 seconds)
    (80/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.552594753 seconds)
    (81/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.228395441 seconds)
    (82/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.23843546 seconds)
    (83/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.24789125 seconds)
    (84/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.229483932 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.080953532 seconds)
    (86/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.424583238 seconds)
    (87/286) benchmarking ("sort", Int8, true)...
    done (took 6.264865255 seconds)
    (88/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.093281074 seconds)
    (89/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.383685877 seconds)
    (90/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.98081336 seconds)
    (91/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.450198226 seconds)
    (92/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.564528527 seconds)
    (93/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.280897267 seconds)
    (94/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.228710116 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.870766689 seconds)
    (96/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.257365319 seconds)
    (97/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.22984724 seconds)
    (98/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.263163517 seconds)
    (99/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.235859896 seconds)
    (100/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.296807423 seconds)
    (101/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.265491864 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.467657568 seconds)
    (103/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.229882837 seconds)
    (104/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.70114482 seconds)
    (105/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.262159322 seconds)
    (106/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.253639904 seconds)
    (107/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.28933317 seconds)
    (108/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.257420921 seconds)
    (109/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.277774949 seconds)
    (110/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.264821091 seconds)
    (111/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.230424364 seconds)
    (112/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.913289787 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 1.77939068 seconds)
    (114/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.595197469 seconds)
    (115/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.711023577 seconds)
    (116/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.273053612 seconds)
    (117/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.923462258 seconds)
    (118/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.498589929 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.521726866 seconds)
    (120/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.568367129 seconds)
    (121/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.284043785 seconds)
    (122/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.98157144 seconds)
    (123/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.234501864 seconds)
    (124/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.835175261 seconds)
    (125/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.976191866 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.989060897 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.51733181 seconds)
    (128/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.259324839 seconds)
    (129/286) benchmarking ("sort", Int8, false)...
    done (took 4.251303119 seconds)
    (130/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.236842496 seconds)
    (131/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.317853894 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.381453347 seconds)
    (133/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.348885766 seconds)
    (134/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.231556942 seconds)
    (135/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.244551191 seconds)
    (136/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.232859045 seconds)
    (137/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.216525988 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.015761165 seconds)
    (139/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.267791966 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.279043402 seconds)
    (141/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.348320938 seconds)
    (142/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.605385869 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.18483606 seconds)
    (144/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.511961928 seconds)
    (145/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.330844951 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.273680925 seconds)
    (147/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.267558866 seconds)
    (148/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.33140682 seconds)
    (149/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.280922196 seconds)
    (150/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.61074507 seconds)
    (151/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.334392776 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.879146094 seconds)
    (153/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.949257642 seconds)
    (154/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.353135186 seconds)
    (155/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.362052371 seconds)
    (156/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.590999108 seconds)
    (157/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.355054152 seconds)
    (158/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.240324177 seconds)
    (159/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.234755434 seconds)
    (160/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.252837069 seconds)
    (161/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.422842121 seconds)
    (162/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.269800425 seconds)
    (163/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.441400963 seconds)
    (164/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.597884607 seconds)
    (165/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.316344098 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.86368291 seconds)
    (167/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.652665556 seconds)
    (168/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.343607844 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.816007119 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.278029288 seconds)
    (171/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.494837481 seconds)
    (172/286) benchmarking ("sort", BigInt, true)...
    done (took 6.259695189 seconds)
    (173/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.252486839 seconds)
    (174/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.23506419 seconds)
    (175/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.683179074 seconds)
    (176/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.418289592 seconds)
    (177/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.928352649 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.3054648 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.649573851 seconds)
    (180/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.422918024 seconds)
    (181/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.362547194 seconds)
    (182/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.746424275 seconds)
    (183/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.643502089 seconds)
    (184/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.333467215 seconds)
    (185/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.229229489 seconds)
    (186/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.241636573 seconds)
    (187/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.229596436 seconds)
    (188/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.744031003 seconds)
    (189/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.330207779 seconds)
    (190/286) benchmarking ("sort", BigInt, false)...
    done (took 6.249549612 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 5.334891771 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.263798071 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.307343038 seconds)
    (194/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.642256966 seconds)
    (195/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.791566924 seconds)
    (196/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.347941371 seconds)
    (197/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.354294258 seconds)
    (198/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.251596588 seconds)
    (199/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.27680685 seconds)
    (200/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.369785829 seconds)
    (201/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.275703257 seconds)
    (202/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.249490155 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.902529153 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.481978526 seconds)
    (205/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.240620804 seconds)
    (206/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.674159186 seconds)
    (207/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.434182448 seconds)
    (208/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.266607161 seconds)
    (209/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.044567432 seconds)
    (210/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.276495325 seconds)
    (211/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.313800373 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.273420577 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.080081875 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.137118764 seconds)
    (215/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.599118434 seconds)
    (216/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.245637195 seconds)
    (217/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.839996385 seconds)
    (218/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.024585587 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.308323002 seconds)
    (220/286) benchmarking ("sort", Float64, true)...
    done (took 6.25020928 seconds)
    (221/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.832990388 seconds)
    (222/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.719343377 seconds)
    (223/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.973589117 seconds)
    (224/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.626468168 seconds)
    (225/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.232461536 seconds)
    (226/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.4548565 seconds)
    (227/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.271671523 seconds)
    (228/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.231309215 seconds)
    (229/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.268277603 seconds)
    (230/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.254794846 seconds)
    (231/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.608440635 seconds)
    (232/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.240127135 seconds)
    (233/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.239336626 seconds)
    (234/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.557749223 seconds)
    (235/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.284395073 seconds)
    (236/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.375836659 seconds)
    (237/286) benchmarking ("sort", Float32, true)...
    done (took 6.250868123 seconds)
    (238/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.384425725 seconds)
    (239/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.036558367 seconds)
    (240/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.264080846 seconds)
    (241/286) benchmarking ("sort", Float32, false)...
    done (took 5.249529021 seconds)
    (242/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.289406447 seconds)
    (243/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.605159306 seconds)
    (244/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.236426399 seconds)
    (245/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.247565071 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.795546891 seconds)
    (247/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.015546313 seconds)
    (248/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.24604283 seconds)
    (249/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.236793176 seconds)
    (250/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.432392738 seconds)
    (251/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.450067457 seconds)
    (252/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.246241223 seconds)
    (253/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.454997206 seconds)
    (254/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.257583212 seconds)
    (255/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.235317887 seconds)
    (256/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.197501666 seconds)
    (257/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.301252198 seconds)
    (258/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.262446572 seconds)
    (259/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.256342198 seconds)
    (260/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.069961589 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.664199407 seconds)
    (262/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.651133621 seconds)
    (263/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.7547631 seconds)
    (264/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.284418452 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.878172669 seconds)
    (266/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.366960034 seconds)
    (267/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.337701474 seconds)
    (268/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.234234949 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.352819797 seconds)
    (270/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.235289697 seconds)
    (271/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.352077936 seconds)
    (272/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.862153266 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.376754107 seconds)
    (274/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.254023786 seconds)
    (275/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.236652764 seconds)
    (276/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.077968485 seconds)
    (277/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.281199965 seconds)
    (278/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.258261429 seconds)
    (279/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.069068487 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.296347111 seconds)
    (281/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.028805222 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.676990725 seconds)
    (283/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.466150899 seconds)
    (284/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.242305049 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.279852661 seconds)
    (286/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.260896072 seconds)
  done (took 910.199552863 seconds)
done (took 911.363659751 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.288609468 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.282391345 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.266945813 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.28719754 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.377469584 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.289954075 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.276011286 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.26865471 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.313270654 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.316431792 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.263839256 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.288342472 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.266731941 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.265576816 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.266077922 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.280794739 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.256746327 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.267663984 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.282385488 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.275663793 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.282708547 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.265346945 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.317618182 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.289633592 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.27084728 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.270162925 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.270280702 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.28595553 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.377987899 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.269982999 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.269628308 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.277215198 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.257773081 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.266604838 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.262189766 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.285797606 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.27777141 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.27667823 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.271615872 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.298925936 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.636928574 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.283095335 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.268522478 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.267921333 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.268621458 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.273189251 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.268375846 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.275018906 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.282261922 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.28352889 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.62798611 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.299056041 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.271193698 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.269152254 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.279340601 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.267103888 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.272234565 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.284812143 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.287555393 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.286186678 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.243925481 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.273513618 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.272085375 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.285297857 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.275595809 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.666137379 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.280919543 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.27392344 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.639125316 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.291707794 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.667253807 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.294108628 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.271032382 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.282713361 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.301061708 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.260639093 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.264626242 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.270162712 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.278100019 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.267718385 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.279548197 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.283803927 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.274391355 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.271794319 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.284290494 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.293773485 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.281031418 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.271394541 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.280140631 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.289523899 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.277784794 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.281484296 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.274837341 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.26615394 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.281368604 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.275995175 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.273197429 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.274042435 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.275901453 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.282659418 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.643217308 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.305278802 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.268057233 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.268817149 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.270294584 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.285939294 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.643853375 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.288329359 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.294239427 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.319775892 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.274833909 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.251854334 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.274342317 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.289446898 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.282639641 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.275917816 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.268423428 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.251804249 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.637593504 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.302828227 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.27461528 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.271708494 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.290157103 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.274983275 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.270049607 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.267719249 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.275202718 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.288511786 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.393536827 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.284196655 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.304821402 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.27142362 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.2763263 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.30000888 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.290689492 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.304878982 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.276756186 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.290807098 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.288812789 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.270473718 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.284902993 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.284451503 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.274590714 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.280300562 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.26919292 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.300638818 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.287225157 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.288033811 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.295817426 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.395602958 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.273004851 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.253923237 seconds)
done (took 214.946707901 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.33379648 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.269486542 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.356708711 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.271266263 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.370838364 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.375522285 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.268453354 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.270553765 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.269424414 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.64904029 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.269182021 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.269185189 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.264491151 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.269637089 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.359441033 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.272516647 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.269759601 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.612614993 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.272838582 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.344730832 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.273075777 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.270292813 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.272332679 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.654756788 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.272714281 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.272704977 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.344194131 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.273473909 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.619328105 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.270559783 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.274546272 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.619787625 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.364622301 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.290314082 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.282204606 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.279907492 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.371306417 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.290970237 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.355723455 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.355502734 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.360348397 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.311269558 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.271088664 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.275061387 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.273425395 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.273578399 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.270853553 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.300357993 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.26923568 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.271970763 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.614145967 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.284336291 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.272346799 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.272772688 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.271259241 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.303082433 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.272619036 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.274119427 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.366205228 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.275806687 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.33842864 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.658047894 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.651568006 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.276598957 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.267734878 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.273873791 seconds)
  done (took 144.383624308 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.343987311 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.350107354 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.38313465 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.292157161 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.326098664 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.388377333 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.292993426 seconds)
  done (took 10.564978425 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.282232876 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.276586951 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.325894756 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.325579765 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.276620034 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.454199574 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.276332731 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.286642286 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.274038921 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.332268901 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.277210428 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.277181187 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.283824758 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.277587974 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.325049984 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.288422346 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.391125224 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.278673584 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.276888299 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.428148102 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.273760424 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.282922694 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.328844096 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.28795964 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.277159621 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.282382503 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.092191358 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.277242778 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.273193247 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.277548224 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.274456783 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.351466437 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.27835404 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.274683341 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.275329823 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.393283898 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.278325434 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.275795754 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.277098922 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.26989528 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.278413299 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.27960734 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.278580941 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.276086653 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.277743638 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.300648929 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.278008713 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.278188084 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.278684564 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.279304254 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.336336666 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.27806645 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.276080807 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.276454487 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.333495941 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.285808625 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.278970884 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.277618389 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.279272447 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.27781001 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.430590588 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.327360431 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.280607954 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.3263814 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.280312337 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.279191637 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.278928804 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.279962185 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.333785923 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.279545915 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.327449554 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.277539439 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.467079797 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.302981014 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.281883966 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.283419503 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.282416791 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.28092675 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.277805274 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.286253647 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.277685412 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.281483267 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.286870379 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.276940172 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.277659119 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.447793587 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.389748934 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.277852159 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.293350574 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.286986019 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.278489977 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.333672552 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.280783383 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.279347834 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.332836889 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.3958462 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.334660972 seconds)
  done (took 148.209944616 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.284723339 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.289662602 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.282441594 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.29734992 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.281838789 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.28136876 seconds)
  done (took 8.910566936 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.283420008 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.283965535 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.28229875 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.282277129 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.281601746 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.282658242 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.282305422 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.283282327 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.284683574 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.281998563 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.283536506 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.283827586 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.284757993 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.283320584 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.282711173 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.282984982 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.283179182 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.280028424 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.283160996 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.282946668 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.377898919 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.283361821 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.282652202 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.284216731 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.287460139 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.284168919 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.290437881 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.28359705 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.283766766 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.289784237 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.302290699 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.284671524 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.285216073 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.289565671 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.288399866 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.28492269 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.28836073 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.285665022 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.283236242 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.284957501 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.286214332 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.285652297 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.283551875 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.286386958 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.28679757 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.289643854 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.290352285 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.292110248 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.284860706 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.287505103 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.286362283 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.284959213 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.287326739 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.285711208 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.288930968 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.305913429 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.291203435 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.28634354 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.285507605 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.287266934 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.287016265 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.286071386 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.287673655 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.289212781 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.292879496 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.287150246 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.286762538 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.290000023 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.286268365 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.287115705 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.28795875 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.285125507 seconds)
  done (took 94.895541209 seconds)
done (took 408.150627963 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.59172883 seconds)
  done (took 7.790789129 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.337214655 seconds)
  done (took 7.538937616 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.105724854 seconds)
  done (took 21.312934435 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.289953864 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.543115642 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.311138481 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.296504531 seconds)
  done (took 27.641130737 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.501354889 seconds)
  done (took 7.701089964 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.293651322 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.281216919 seconds)
  done (took 13.778566654 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.709531275 seconds)
  done (took 7.910714309 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.650883953 seconds)
  done (took 7.860018631 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.300224507 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.303500424 seconds)
  done (took 14.057864903 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.272288321 seconds)
  done (took 7.474998698 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.475718295 seconds)
  done (took 11.678032948 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.290853716 seconds)
  done (took 7.495044611 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.338241032 seconds)
  done (took 7.540301344 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.100513939 seconds)
  done (took 9.302495257 seconds)
done (took 160.283943649 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.283064097 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.291248885 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.2908507 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.291044717 seconds)
  done (took 26.359325996 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.324345221 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.323227416 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.324378515 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.335707156 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.328203702 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.324723048 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.315914645 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.31698824 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.335833745 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.326969314 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.326061081 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.327020062 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.324400903 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.316780564 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.327232873 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.32652259 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.335815811 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.3258521 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.317180851 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.327248266 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.291696303 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.335705217 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.329722894 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.292892982 seconds)
  done (took 32.963893433 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.810837057 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.362954717 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.446011494 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.344564656 seconds)
  done (took 7.16874492 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.34422452 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.345074125 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.35803368 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.396583465 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.422229532 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.35551798 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.318866661 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.31455146 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.300857014 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.346934194 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.420689933 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.361497074 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.429409135 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.293568391 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.480490429 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.294152784 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.29235785 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.345647171 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.397482522 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.418873296 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.295302384 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.346054198 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.349790963 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.362560864 seconds)
  done (took 33.795273668 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.292462625 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.313523329 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.293610342 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.292708274 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.301317655 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.293117107 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.294312576 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.294692548 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.292856273 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.299477081 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.293149078 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.306508451 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.292548711 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.293878758 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.300493897 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.295269719 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.299981779 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.29416952 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.294131547 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.300453847 seconds)
  done (took 27.14469735 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.287196346 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.142056533 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.639315326 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.543145572 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.288772285 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.295133965 seconds)
  done (took 27.40244643 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.361979703 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.506647841 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.294344616 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.638890201 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.737016046 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.311736431 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.295932388 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.529819321 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.837031129 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.826954309 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.358449566 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.362614199 seconds)
  done (took 19.267577711 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.289435524 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.311529224 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.307864507 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.312142838 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.349270834 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.314932411 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.30202013 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.288480215 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.355640865 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.368873022 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.3150545 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.350096867 seconds)
  done (took 37.073699325 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377274505 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332819459 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.200054228 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.297354701 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.02978731 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.502250794 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.358719735 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.711643099 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.294999449 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565387545 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291194098 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387633124 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.545374935 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298426683 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.299114489 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.259200661 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534782836 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.75855055 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294690796 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.283752499 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325765377 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.3049606 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.371329214 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.327862691 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.503920063 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.434977015 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.599784995 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.072320579 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582447884 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.310234667 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303006307 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.294465349 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567774032 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941450192 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408092453 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304211545 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294886019 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.839603184 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.284250893 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.236391253 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.107911484 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.3040136 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305824829 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294573481 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.229968575 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.294414061 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.741886051 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.301777589 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.006133001 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.295111389 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.305363734 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389709905 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.297985149 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.865261755 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351665135 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.301790345 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.297637253 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386156875 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88207689 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.678123127 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.308102163 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.236376135 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.312375667 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.297261019 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954457861 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.317672358 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.299463962 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.299883641 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230122712 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.282221698 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.31996636 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442249576 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.318239011 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.945673063 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985414656 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.31997765 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.233420485 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828877388 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.303172491 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.237870095 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.524382894 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.073136297 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.232498869 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.243008824 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.2309637 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987766693 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305013142 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.658202951 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.318460205 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.735904857 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.309031269 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313493733 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32048433 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.520898188 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.176194601 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296586705 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.125116736 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449554453 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319888333 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.723511954 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.232973007 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.301746388 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552440772 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.50963371 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302608389 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.257432646 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.514797242 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298575563 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.319868137 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.296967815 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.31557462 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.889639209 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.326905664 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.695882843 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322395028 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.0761722 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015941319 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303078145 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.30937911 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.306556256 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547584247 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.086028551 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.18328013 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36692534 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30450968 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.299495378 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.315752771 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.891148643 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.224646041 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.296197606 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.300253083 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.316646859 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.300363315 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243973379 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.296932236 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322672428 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.085263589 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.52234683 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.308536766 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582286047 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.234320808 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448279954 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.309811939 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.523603201 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.493025862 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.330345336 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560010127 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313741879 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.307192007 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.31939843 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318584781 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402367402 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322681974 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.300244221 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.563149471 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.304408061 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.30373834 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.315689764 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.0888416 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301609535 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.307407382 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300395593 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905529031 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296510213 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.305155215 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192011361 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.316643036 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37018623 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.307796801 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.311452466 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.089368234 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34306637 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.307976628 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.300359258 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531974808 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.312161525 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.230092824 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388576624 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.493351419 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.885077463 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340443392 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.2369343 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.014741926 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.995263982 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303347105 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.492095064 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.302437408 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313299777 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.314094516 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.316821114 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.900638422 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322213156 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.226243008 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.317237725 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.31323086 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.309604236 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304530714 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.06591255 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.730201722 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322069333 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.322119577 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447547385 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.317747214 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.238391467 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.821920045 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.309257071 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.305131014 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.081820349 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338886057 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.236228666 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78206133 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564423908 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.310948489 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.316676532 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.396788121 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.343561109 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.307594316 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.168261402 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343347676 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.312939578 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320727558 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.316007328 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.325762251 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.676411094 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870908953 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043093134 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871691065 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.226170412 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.31782857 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.215723932 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.734142837 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240507962 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.9632329 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.493146149 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.754440362 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253031273 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.49679171 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.512911231 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085958057 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.323871204 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.535382303 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.210231729 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.17629034 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344143915 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.518464189 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341029502 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.306302403 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.259715727 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.605938504 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534749125 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.169045461 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393474971 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733407903 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.170064835 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.110488266 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.379324898 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.609624415 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491039051 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.853669662 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.695416981 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.3130606 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.328354791 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785082315 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.313278795 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.835032884 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927149752 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.330487179 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.50647832 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244813748 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.319690347 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.31971881 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.304524364 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.587651442 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.324931261 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.569094699 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.320190909 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24286135 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.308996252 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868235626 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.179975381 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.313781636 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308785613 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036350219 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312484202 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.606074953 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.325968808 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.068198716 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337608902 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.243780796 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244307955 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.002752786 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.309915242 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28642879 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798275211 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.315950157 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345205665 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320391696 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16201186 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.565552365 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.324402836 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.894803072 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560681056 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316985004 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333834136 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.31552158 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.20706079 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.319592985 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.192918143 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.546259389 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346607654 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.534038322 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.254086962 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.213671662 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.836152232 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.52316264 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.193151994 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.321722324 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566901643 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.041733123 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.313463293 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03746925 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353690582 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.311615668 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.367230712 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.318600318 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.332902524 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401214804 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.322562445 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.323068357 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.323121738 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477156919 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325961811 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323523543 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.325642446 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405377156 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.749579354 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.074112556 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.093127368 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903324978 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072383863 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.938162222 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342344318 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.313176765 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319050406 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246138862 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466619099 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.838659795 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.586783338 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443089998 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.31197614 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337437158 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.242073372 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345507746 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533843115 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589764923 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.28627934 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315122639 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.124215463 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.207029185 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.324750315 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.526070129 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803292273 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881506239 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437778398 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.323100895 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.748257337 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589597199 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.405611973 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313686347 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.90600578 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.313606272 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.642174147 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.339794522 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329705357 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471447455 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.325027858 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972831454 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.344357979 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.472598186 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.08886047 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.275066825 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.576766159 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.761500689 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.327440457 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907782383 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.036877959 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586402426 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386704515 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.327435343 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.422255815 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464336363 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.320165237 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.221335135 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316693763 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162391737 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.027886303 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.326024523 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920987201 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596610388 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.320077893 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.319505761 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346216082 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.326743859 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.540565623 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020927451 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.541226102 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328442259 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.326627098 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.887382554 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921086417 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347414994 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2528873 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.321535266 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562152445 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.573077455 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340826323 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.796139352 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.029605348 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867452642 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.404003014 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34046381 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31902526 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.061467258 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930681975 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.101512216 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817465151 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.978467815 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.32455621 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600905635 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.324702151 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.320139343 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60270033 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.323514478 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.321430835 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337194496 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.904991383 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.098648851 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.327665726 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.387905005 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.264199798 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.546331905 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392527621 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274135795 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320441714 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.489504351 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.320735077 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44953132 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.331615728 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.32702375 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327655525 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.080294118 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605454235 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.328334437 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.31496346 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.31393583 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.323030044 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420315308 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552882859 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326027402 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.99579534 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.670546745 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.577131563 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.326136623 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.309713022 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.325275263 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322548319 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.038820079 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.314156618 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.324624351 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897718293 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.328105605 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.338804758 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.327285094 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.538953568 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533508395 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.326524042 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.33418438 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333057804 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344664974 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.223862353 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.090014035 seconds)
  done (took 1610.889434852 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.357144032 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.364423396 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.337674191 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.345120935 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.386843987 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.408199312 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.371679195 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.412007345 seconds)
  done (took 52.221913746 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.323620095 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.474301563 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.353133507 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.323037138 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.3319302 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.328841666 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.786332083 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.351499422 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.331903904 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.332464385 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.32556542 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.337081507 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.970314393 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.33999958 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.324093801 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.314284806 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.338421771 seconds)
  done (took 65.129281924 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 47.72918852 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.674778471 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.13471036 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.366187372 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.762191346 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.325492017 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.865191856 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.377487229 seconds)
  done (took 99.475718192 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.341135394 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.341579461 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.341339738 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.340710275 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.341870646 seconds)
  done (took 7.947002896 seconds)
done (took 2048.045344279 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.329247443 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.331489302 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.328320981 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.331348476 seconds)
  done (took 6.559958041 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.305141576 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.018985954 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.306159261 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.328325027 seconds)
  done (took 18.198615124 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.326773971 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.333671333 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.015125625 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.961663872 seconds)
  done (took 5.219106831 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.074288758 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.087757788 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.072302434 seconds)
  done (took 7.473927803 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.325351848 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.330879813 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.330151092 seconds)
  done (took 20.226576406 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.614022333 seconds)
  done (took 2.853984657 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.471038873 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.520529134 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.641707554 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.661601672 seconds)
  done (took 7.535424284 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.710816504 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.69493817 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.508385239 seconds)
  done (took 6.153845979 seconds)
done (took 88.12310668 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.089788785 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.69880282 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.527330581 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.056240584 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.555810467 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.527010049 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.534224541 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.023333429 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.564876795 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.556184848 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.098658301 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.556868373 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.693230211 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.700487358 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.693401844 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.571275722 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.55487198 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.11849578 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.737347129 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.973591706 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.535526943 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.692756986 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.931109987 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.711736773 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.554432662 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.478711786 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.275218565 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.571167398 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.913808621 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.291387907 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.479842487 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.154038276 seconds)
  done (took 191.66183794 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.337274077 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.340555822 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.326473732 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.324651345 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.342020729 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.350908304 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.341594209 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.331760071 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.326309424 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.335553725 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.325771921 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.329999328 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.328999973 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.334060992 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.328125568 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.327576957 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.326438604 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.34478817 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.327300456 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.342968206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.329148513 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.355845942 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.332229206 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.327501879 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.343713713 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.327569901 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.341940119 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.327496473 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.344837869 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.32776564 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.344064547 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.339746635 seconds)
  done (took 203.958556 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.333541191 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.328609001 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.345226689 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.327407898 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.344197104 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.33080114 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.32836844 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.328060098 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.329308511 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.358284103 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.329519146 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.328861152 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.329466853 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.329241778 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.345765786 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.345426901 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.336165439 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.331027066 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.336590282 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.338117585 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.330891786 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.3306582 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.328175757 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.329000655 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.347128142 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.3297873 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.349605731 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.329747558 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.348740266 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.32993701 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.347707775 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.346506518 seconds)
  done (took 203.995949749 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.531636351 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.337558999 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.337739513 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.292452349 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.337698839 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.337272488 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.332018 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.527552563 seconds)
  done (took 14.280651381 seconds)
done (took 615.138034146 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.648722569 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.357934515 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.5346828 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.36056021 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.089760951 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.376025517 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.357833186 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.527041273 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.274741543 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.539975275 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.62591313 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.379439901 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.764289129 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.35775037 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.606159199 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.456906173 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.212279345 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.330562374 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.668436939 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.87405962 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.614964976 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.796046199 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.553825419 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.253542408 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.764020083 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.78154369 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.080835824 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.200918116 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.375205091 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.674878064 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.994060219 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.329985343 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.426428665 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.424270916 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.475206796 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.4525174 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.317030324 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.422271149 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.556746892 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.567340309 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.855598294 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.080075369 seconds)
  done (took 91.587331345 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.323727276 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.322994333 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.321439746 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.323459232 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.324565006 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.322953827 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.322589909 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.323205525 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.323522171 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.322809944 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.322638505 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.323702845 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.323365371 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.325363212 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.322780901 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.32326855 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.324217073 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.325348933 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.324220444 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.323646237 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.325372327 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.323406611 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.324440883 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.32468001 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.325517447 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.324703536 seconds)
  done (took 35.667722139 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.342560306 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.584525617 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.74649211 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.356858945 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.343912651 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.346209842 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.420892925 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.345629198 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.345492808 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.347615746 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.509324527 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.345804228 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.378382503 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.77450906 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.344519596 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.344929756 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.343857743 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.344417745 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.591809628 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.353255804 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.441616428 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.344416227 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.421275678 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.354349938 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.366219836 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.344865474 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.348529986 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.906974694 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.362812542 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.510039254 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.111570536 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.425492173 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.854683647 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.77528882 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.114926039 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.354331583 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.346310312 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.516026587 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.346023491 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.346130571 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.421490027 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.348471946 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.758151785 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.999841472 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.370766636 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.345931802 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.926197244 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.532214265 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.585132539 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.361206734 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.779973503 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.350093631 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.347792959 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.346208767 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.585114323 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.354791114 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.345600708 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.902076742 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.370027145 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.422741891 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.347786184 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.346052571 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.600344088 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.346726367 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.589104417 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.348502355 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.35517282 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.365619413 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.759174055 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.349478631 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.023191567 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.366631733 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.347768859 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.510619891 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.589631907 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.958405672 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.367383327 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.606977241 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.870517996 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.438738886 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.351844276 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.897687474 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.442758443 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.352237877 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.351953628 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.350215487 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.349167659 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.396025556 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.421559994 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.957265416 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.028537506 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.932753622 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.445671683 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.360991344 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.350023114 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.906214486 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.369112742 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.348143266 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.75321003 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.01941688 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.36671229 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.358926114 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.023223142 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.368046954 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.426841493 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.354582787 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.765764313 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.350441489 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.3939716 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.350045099 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.355566034 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.372566882 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.426875492 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.354479357 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.350386252 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.996446829 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.539797918 seconds)
  done (took 177.837936922 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.342882524 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.342000302 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.344989948 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.343669662 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.34416346 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.352141672 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.343292959 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.345388837 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.349976447 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.343683389 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.343194035 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.345339195 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.344441796 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.350572728 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.355365849 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.351481221 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.954877933 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.343166535 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.344645785 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.360490301 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.134973848 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.352896712 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.345780856 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.361106538 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.345537416 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.344434918 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.350507368 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.347541167 seconds)
  done (took 152.386339525 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.353571586 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.901420275 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.370422801 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.481221295 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.371667703 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.349340732 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.478377375 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.40871708 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.37193871 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.35125646 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.349569904 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.645485564 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.354149778 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.854145039 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.539279957 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.504705131 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.854345836 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.371030409 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.349964877 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.350798592 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.482723804 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.356430059 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.647612241 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.91582441 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.379188548 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.914127262 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.346857145 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.353846826 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.351646441 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.916393685 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.377181353 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.654851035 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.437131115 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.411432232 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.933251166 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.88024248 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.872562933 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.498767037 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.35226837 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.351491289 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.351822438 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.338115121 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.913661281 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.380127232 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.354463097 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.905717137 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.381472543 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.354681728 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.360173393 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.352097005 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.413005449 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.429646356 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.673097145 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.924310929 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.454532702 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.3661991 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.483430197 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.735623451 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.357003052 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.85825315 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.338883389 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.924047846 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.383286432 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.339814161 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.355742078 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.360039492 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.503203788 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.485684722 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.85985104 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.372340927 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.858973258 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.518844797 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.352886393 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.354166751 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.357462546 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.924027416 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.886292764 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.520261511 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.486212439 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.54651997 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.34907183 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.355319164 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.340233393 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.431750617 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.355134304 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.92394743 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.885279538 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.37444419 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.35848978 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.358784755 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.359565692 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.529119028 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.94981382 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.458021239 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.84962753 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.679403422 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.671425151 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.366174287 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.414749656 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.373766079 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.664154654 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.36763114 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.412823936 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.801458717 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.664109477 seconds)
  done (took 161.719010136 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.593875106 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.605623995 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.445151014 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.499985368 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.95641554 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.933042671 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.613376182 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.509578438 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.466084222 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.615317269 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.488903395 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.444712386 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.566695064 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.43244697 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.063257334 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.443907732 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.466360776 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.518734316 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.513252284 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.358477922 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.037778509 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.65486521 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.540797415 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.222819562 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.448349329 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.145119706 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.913904 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.912826465 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.527017254 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.72763312 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.889536437 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.469277387 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.338650924 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.065337916 seconds)
  done (took 65.694748252 seconds)
done (took 686.140905765 seconds)
SAVING RESULT...
DONE!
